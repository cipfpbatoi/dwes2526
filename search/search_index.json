{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Desenvolupament Web en Entorn Servidor","text":"<p>Ac\u00ed pots trobar les anotacions del m\u00f2dul de Desenvolupament web en entorn servidor, que s'imparteix en el segon curs del cicle formatiu de grau superior de Desenvolupament d'Aplicacions Web.</p> <p>La duraci\u00f3 del m\u00f2dul \u00e9s de 200 hores lectives, a ra\u00f3 de 6 hores setmanals. S'ha planificat basant-se en 2 sessions de   3 hores lectives per setmana.</p>"},{"location":"index.html#que-aprendre","title":"Qu\u00e8 aprendr\u00e9?","text":"<ul> <li>A desenvolupar aplicacions web din\u00e0miques amb acc\u00e9s segur i estructurat a bases de dades.</li> <li>A dissenyar i implementar serveis web reutilitzables, APIs i aplicacions h\u00edbrides.</li> <li>A separar el codi de presentaci\u00f3 de la l\u00f2gica de negoci seguint el patr\u00f3 MVC.</li> <li>A utilitzar frameworks moderns com Laravel i Node.js.</li> <li>A integrar repositoris externs d'informaci\u00f3 i treballar amb formats de dades com JSON.</li> <li>A desplegar aplicacions web en entorns reals, col\u00b7laborant en equips i seguint bones pr\u00e0ctiques.</li> </ul>"},{"location":"index.html#resultats-daprenentatge","title":"Resultats d'aprenentatge","text":"<ol> <li>Selecciona les arquitectures i tecnologies de programaci\u00f3 Web en entorn servidor, analitzant les seues capacitats i caracter\u00edstiques pr\u00f2pies.</li> <li>Escriu sent\u00e8ncies executables per un servidor Web reconeixent i aplicant procediments d'integraci\u00f3 del codi en llenguatges de marques.</li> <li>Escriu blocs de sent\u00e8ncies embeguts en llenguatges de marques, seleccionant i utilitzant les estructures de programaci\u00f3.</li> <li>Desenvolupa aplicacions Web embegudes en llenguatges de marques analitzant i incorporant funcionalitats segons especificacions.</li> <li>Desenvolupa aplicacions Web identificant i aplicant mecanismes per a separar el codi de presentaci\u00f3 de la l\u00f2gica de negoci.</li> <li>Desenvolupa aplicacions d'acc\u00e9s a magatzems de dades, aplicant mesures per a mantindre la seguretat i la integritat de la informaci\u00f3.</li> <li>Desenvolupa serveis web reutilitzables i accessibles mitjan\u00e7ant protocols web, verificant el seu funcionament</li> <li>Genera p\u00e0gines web din\u00e0miques analitzant i utilitzant tecnologies i frameworks del servidor web que afigen codi al llenguatge de marques.</li> <li>Desenvolupa aplicacions Web h\u00edbrides seleccionant i utilitzant llibreries de codi i repositoris heterogenis d'informaci\u00f3.</li> </ol>"},{"location":"index.html#unitats-didactiques-temporalitzacio","title":"Unitats did\u00e0ctiques / Temporalitzaci\u00f3","text":"<p>A continuaci\u00f3 es mostren les unitats did\u00e0ctiques i una estimaci\u00f3 temporal de cadascuna d'elles, la distribuci\u00f3 en RA i el pes a l'avaluaci\u00f3.</p> Situaci\u00f3 d'aprenentatge Hores R.A. 1 R.A. 2 R.A. 3 R.A. 4 R.A. 5 R.A. 6 R.A. 7 R.A. 8 R.A. 9 Pes 1 - Arquitectures web. Entorn de desenvolupament 6 \u2705 2% 2% 2 - Programaci\u00f3 web amb PHP 36 \u2705 5% \u2705 10% \u2705 12% 27% 3 - Arquitectura MVC amb Laravel 15 \u2705 10% 10% 4 - Acc\u00e9s segur i estructurat a bases de dades amb Laravel 15 \u2705 15% 15% 5 - Aplicacions segures i reactives en Laravel 21 \u2705 15% 15% 6 - Desenvolupament d'APIs amb NodeJS 32 \u2705 15% 15% 7 - Desenvolupament d'Aplicacions Web H\u00edbrides 15 \u2705 8% 8% 8 - Desenvolupa aplicacions web en entorns de treball 60 \u2705 2% \u2705 2% \u2705 2% \u2705 2% 8% Pes de cada R.A. 200 2% 5% 10% 12% 12% 17% 17% 15% 10% 100% <p>L'alumnat ha d'aprovar tots els RA per aprovar el m\u00f2dul.</p> <p>Les notes agrupades, en conjunt ixen de les seg\u00fcents activitats:</p> <ul> <li>Proves Objectives: 54,5 %</li> <li>Projectes de clase: 29,5 %</li> <li>Projecte intermodular: 8 %</li> <li>Practiques empresa: 8 %</li> </ul>"},{"location":"01arquitecturas.html","title":"SA1. Arquitectures Web","text":"Duraci\u00f3 i criteris d'avaluaci\u00f3 <p>Duraci\u00f3 estimada: 6 hores</p> Resultat d'aprenentatge Criteris d'avaluaci\u00f3 1. Selecciona les arquitectures i tecnologies de programaci\u00f3 web en entorn servidor, analitzant les seves capacitats i caracter\u00edstiques pr\u00f2pies. a) S'han caracteritzat i diferenciat els models d'execuci\u00f3 de codi en el servidor i en el client Web.  b) S'han reconegut els avantatges que proporciona la generaci\u00f3 din\u00e0mica de p\u00e0gines Web i les seues difer\u00e8ncies amb la inclusi\u00f3 de sent\u00e8ncies de guions a l'interior de les p\u00e0gines Web.  c) S'han identificat els mecanismes d'execuci\u00f3 de codi en els servidors Web.  d) S'han reconegut les funcionalitats que aporten els servidors d'aplicacions i la seua integraci\u00f3 amb els servidors Web.  e) S'han identificat i caracteritzat els principals llenguatges i tecnologies relacionats amb la programaci\u00f3 Web en entorn servidor.  f) S'han verificat els mecanismes d'integraci\u00f3 dels llenguatges de marques amb els llenguatges de programaci\u00f3 en entorn servidor.  g) S'han reconegut i avaluat les eines i frameworks de programaci\u00f3 en entorn servidor."},{"location":"01arquitecturas.html#introduccio","title":"\ud83d\udcd6 Introducci\u00f3","text":"<p>Una arquitectura web defineix l'estructura i el comportament dels components d'una aplicaci\u00f3 web, incloent com es comuniquen entre ells i amb els usuaris finals. Aquesta arquitectura pot abastar des de la interf\u00edcie d'usuari en el client fins als serveis de backend i bases de dades en el servidor.</p> <p>Les arquitectures web s\u00f3n fonamentals en el desenvolupament d'aplicacions web modernes per diverses raons:</p> <ul> <li>Escalabilitat: Les arquitectures ben dissenyades permeten que les aplicacions web gestionen un nombre creixent d'usuaris i dades sense sacrificar el rendiment. Per exemple, una arquitectura de microserveis facilita l'escalabilitat horitzontal, ja que cada servei es pot escalar independentment.</li> <li>Mantenibilitat: Una bona arquitectura facilita el manteniment i l'actualitzaci\u00f3 de les aplicacions. Mitjan\u00e7ant la separaci\u00f3 de preocupacions (per exemple, en una arquitectura de tres capes), es poden fer canvis en una part del sistema sense afectar altres parts.</li> <li>Seguretat: Les arquitectures web poden incorporar diverses capes de seguretat per protegir les dades i les comunicacions. Aix\u00f2 inclou mesures com l'autenticaci\u00f3, l'autoritzaci\u00f3, la xifratge de dades, i la protecci\u00f3 contra atacs comuns com les injeccions SQL i el cross-site scripting (XSS).</li> <li>Rendiment: L'arquitectura de l'aplicaci\u00f3 web afecta directament el seu rendiment. Una arquitectura ben dissenyada optimitza el temps de resposta i la gesti\u00f3 de recursos, millorant l'experi\u00e8ncia de l'usuari. L'\u00fas de t\u00e8cniques com la cach\u00e9, el balan\u00e7 de c\u00e0rrega, i la compressi\u00f3 de contingut s\u00f3n exemples d'estrat\u00e8gies per millorar el rendiment.</li> <li>Flexibilitat i Adaptabilitat: Les arquitectures modernes permeten l'\u00fas de diverses tecnologies i eines per a diferents parts del sistema, proporcionant flexibilitat i permetent una adaptaci\u00f3 r\u00e0pida als canvis tecnol\u00f2gics. Aix\u00f2 \u00e9s especialment rellevant amb l'adopci\u00f3 de pr\u00e0ctiques DevOps i l'\u00fas de contenidors i orquestradors com Docker i Kubernetes.</li> <li>Col\u00b7laboraci\u00f3 i Desplegament: Un bon disseny arquitect\u00f2nic facilita la col\u00b7laboraci\u00f3 entre equips de desenvolupament, ja que clarifica les responsabilitats i els punts d'integraci\u00f3. Tamb\u00e9 permet un desplegament m\u00e9s eficient i automatitzat, reduint els riscos d'errors i millorant el temps de lliurament.</li> </ul>"},{"location":"01arquitecturas.html#tipus-darquitectures-web","title":"\ud83c\udfd7\ufe0f Tipus d'Arquitectures Web","text":"<p>A continuaci\u00f3, es descriuen alguns dels principals tipus d'arquitectures web, cadascun amb les seves pr\u00f2pies caracter\u00edstiques, avantatges i desavantatges:</p>"},{"location":"01arquitecturas.html#arquitectura-client-servidor","title":"Arquitectura Client-Servidor","text":"<p>En aquest model, el client (generalment un navegador web) envia sol\u00b7licituds al servidor, que processa aquestes sol\u00b7licituds i envia les respostes corresponents.</p> <p>Diagrama:</p> Arquitectura Client Servidor <ul> <li>Client \ud83d\udda5\ufe0f: el navegador o aplicaci\u00f3 que demana recursos o serveis.</li> <li>Servidor \ud83d\udda5\ufe0f: processa les peticions, executa l\u00f2gica i accedeix a la Base de Dades \ud83d\udcbe.</li> <li>La comunicaci\u00f3 \u00e9s bidireccional: el client envia sol\u00b7licituds i el servidor respon amb dades/resultats.</li> </ul> <p>Arquitectura</p> <p>\ud83d\udc49 \u00c9s la arquitectura m\u00e9s b\u00e0sica de les aplicacions web i el punt de partida d\u2019altres models m\u00e9s complexos (3 capes, microserveis, etc.).</p> <p>Caracter\u00edstiques:</p> <ul> <li>El client \u00e9s responsable de la interf\u00edcie d'usuari.</li> <li>El servidor maneja la l\u00f2gica d'aplicaci\u00f3 i l'acc\u00e9s a les dades.</li> </ul> <p>Avantatges:</p> <ul> <li>Separaci\u00f3 de responsabilitats.</li> <li>Facilita el manteniment i la seguretat.</li> </ul> <p>Desavantatges:</p> <ul> <li>Pot tenir problemes de rendiment amb moltes sol\u00b7licituds simult\u00e0nies.</li> </ul>"},{"location":"01arquitecturas.html#arquitectura-de-tres-capes","title":"Arquitectura de Tres Capes","text":"<p>Aquesta arquitectura divideix l'aplicaci\u00f3 en tres nivells: la capa de presentaci\u00f3, la capa de l\u00f2gica d'aplicaci\u00f3, i la capa de dades.</p> <p>Diagrama:</p> Arquitectura 3 capes <ul> <li>Capa de Presentaci\u00f3 \ud83c\udfa8 Interf\u00edcie d\u2019usuari: navegador, app, vistes.</li> <li>Capa de L\u00f2gica de Negoci \u2699\ufe0f Cont\u00e9 les regles de negoci: controladors, serveis, processament.</li> <li>Capa de Dades \ud83d\udcbe Persist\u00e8ncia: bases de dades, repositoris, fitxers.</li> </ul> <p>Caracter\u00edstiques:</p> <ul> <li>La capa de presentaci\u00f3 gestiona la interf\u00edcie d'usuari.</li> <li>La capa de l\u00f2gica d'aplicaci\u00f3 processa les dades i executa la l\u00f2gica de negoci.</li> <li>La capa de dades emmagatzema i recupera la informaci\u00f3.</li> </ul> <p>Avantatges:</p> <ul> <li>Facilita l'escalabilitat.</li> <li>Millora la seguretat, ja que les dades no s\u00f3n directament accessibles des del client.</li> </ul> <p>Desavantatges:</p> <ul> <li>Pot ser m\u00e9s complexa de desenvolupar i mantenir.</li> </ul>"},{"location":"01arquitecturas.html#arquitectura-de-microserveis","title":"Arquitectura de Microserveis","text":"<p>Els microserveis descomponen una aplicaci\u00f3 en una s\u00e8rie de serveis petits i independents, cadascun executant una funci\u00f3 espec\u00edfica.</p> <p>Diagrama:</p> Arquitectura Microserveis <ul> <li>El Client (navegador o app) es connecta a trav\u00e9s d\u2019un API Gateway.</li> <li>El Gateway distribueix les peticions a diversos microserveis independents (usuaris, productes, pagaments\u2026).</li> <li>Cada microservei t\u00e9 la seua base de dades pr\u00f2pia, evitant depend\u00e8ncies fortes.</li> </ul> <p>Caracter\u00edstiques:</p> <ul> <li>Cada microservei es pot desplegar, actualitzar, i escalar independentment.</li> <li>Utilitzen protocols lleugers com HTTP/REST o gRPC per comunicar-se.</li> </ul> <p>Avantatges:</p> <ul> <li>Millora l'escalabilitat i la flexibilitat.</li> <li>Facilita l'\u00fas de diferents tecnologies per a diferents serveis.</li> </ul> <p>Desavantatges:</p> <ul> <li>Pot ser complexa de gestionar i coordinar.</li> <li>Requereix una infraestructura de desplegament i monitoritzaci\u00f3 m\u00e9s robusta.</li> </ul> <p>En resum, les arquitectures web s\u00f3n fonamentals per al desenvolupament d'aplicacions eficients i escalables. La selecci\u00f3 de l'arquitectura adequada dep\u00e8n de les necessitats espec\u00edfiques del projecte, incloent-hi consideracions de rendiment, escalabilitat, seguretat i mantenibilitat.</p>"},{"location":"01arquitecturas.html#pagines-web-estatiques-vs-dinamiques","title":"\ud83c\udf10 P\u00e0gines Web Est\u00e0tiques vs. Din\u00e0miques","text":""},{"location":"01arquitecturas.html#pagines-estatiques","title":"P\u00e0gines est\u00e0tiques","text":"<p>Les p\u00e0gines web est\u00e0tiques s\u00f3n aquelles en qu\u00e8 el contingut no canvia en funci\u00f3 de les accions de l'usuari. Estan constru\u00efdes amb HTML i CSS, i cada p\u00e0gina es carrega de manera independent des del servidor.</p>"},{"location":"01arquitecturas.html#avantatges","title":"Avantatges","text":"<ul> <li>Senzillesa: F\u00e0cils de crear i mantenir.</li> <li>Rendiment: Temps de c\u00e0rrega r\u00e0pid perqu\u00e8 no requereixen processament addicional.</li> <li>Seguretat: Menys vulnerabilitats, ja que no hi ha l\u00f2gica de servidor ni bases de dades.</li> </ul>"},{"location":"01arquitecturas.html#desavantatges","title":"Desavantatges","text":"<ul> <li>Flexibilitat: Dif\u00edcils de modificar a gran escala sense eines automatitzades.</li> <li>Interactivitat: Limitada, ja que no poden respondre a les accions de l'usuari de manera din\u00e0mica.</li> </ul>"},{"location":"01arquitecturas.html#exemple-practic","title":"Exemple Pr\u00e0ctic","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;P\u00e0gina Est\u00e0tica&lt;/title&gt;\n    &lt;style&gt;\n        body { font-family: Arial, sans-serif; }\n        .content { margin: 20px; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=\"content\"&gt;\n    &lt;h1&gt;Benvingut!&lt;/h1&gt;\n    &lt;p&gt;Aquesta \u00e9s una p\u00e0gina web est\u00e0tica.&lt;/p&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"01arquitecturas.html#pagines-dinamiques","title":"P\u00e0gines din\u00e0miques","text":"<p>Les p\u00e0gines web din\u00e0miques s\u00f3n aquelles en qu\u00e8 el contingut pot canviar en funci\u00f3 de les accions de l'usuari o altres factors. Utilitzen llenguatges de guions o d'scripting. Els llenguatges de guions sovint s\u2019utilitzen per ampliar les prestacions que ofereix un altre llenguatge, entorn o aplicacio\u0301. En aquest sentit so\u0301n molt utilitzats en el desenvolupament d\u2019aplicacions web:</p> <ul> <li>Scripts de navegadors web. S\u2019utilitzen per ampliar les capacitats de l\u2019HTML i per inserir accions en pa\u0300gines web. Permeten crear efectes especials i aporten interactivitat. Els scripts so\u0301n interpretats i executats en la ma\u0300quina client pel navegador web, el qual ha d\u2019incorporar l\u2019inte\u0300rpret del llenguatge. Un exemple de llenguatge d\u2019aquest tipus molt utilitzat e\u0301s JavaScript.</li> <li>Scripts de servidor. So\u0301n programes que permeten donar funcionalitats a les pa\u0300gines web que no es poden resoldre nome\u0301s amb els scripts de navegador. Els scripts de servidor permeten dotar de certa \u201cintel\u00b7lige\u0300ncia\u201d els llocs web, la qual cosa fa que generin pa\u0300gines diferents segons les circumsta\u0300ncies. Exemples de llenguatges de servidor s\u00f3n PHP, Python, Node.js, entre altres.</li> </ul>"},{"location":"01arquitecturas.html#avantatges_1","title":"Avantatges","text":"<p>Actualitzaci\u00f3 en Temps Real</p> <ul> <li>Descripci\u00f3: Les p\u00e0gines es poden actualitzar autom\u00e0ticament sense necessitat de recarregar tota la p\u00e0gina.</li> <li>Cas d'\u00das: Un portal de not\u00edcies que mostra articles nous sense necessitat de recarregar la p\u00e0gina.</li> </ul> <p>Personalitzaci\u00f3 del Contingut</p> <ul> <li>Descripci\u00f3: Permet adaptar el contingut a les prefer\u00e8ncies i el comportament de l'usuari.</li> <li>Cas d'\u00das: Una botiga en l\u00ednia que mostra recomanacions de productes basades en l'historial de navegaci\u00f3 i compres de l'usuari.</li> </ul> <p>Interactivitat Avan\u00e7ada</p> <ul> <li>Descripci\u00f3: Facilita la creaci\u00f3 d'aplicacions web interactives que poden respondre a les accions de l'usuari en temps real.</li> <li>Cas d'\u00das: Aplicacions de xarxes socials que mostren actualitzacions i notificacions en temps real.</li> </ul> <p>Gesti\u00f3 Eficient de Contingut</p> <ul> <li>Descripci\u00f3: Permet gestionar grans quantitats de contingut de manera m\u00e9s eficient, mostrant nom\u00e9s el contingut rellevant en funci\u00f3 de la sol\u00b7licitud de l'usuari.</li> <li>Cas d'\u00das: Un sistema de gesti\u00f3 de continguts (CMS) que permet als administradors editar i publicar articles de manera din\u00e0mica.</li> </ul>"},{"location":"01arquitecturas.html#desavantatges_1","title":"Desavantatges","text":"<ul> <li>Complexitat: M\u00e9s dif\u00edcils de crear i mantenir, ja que requereixen programaci\u00f3 tant al client com al servidor.</li> <li>Rendiment: Poden ser m\u00e9s lentes a causa de la necessitat de processament al servidor.</li> <li>Seguretat: Exposades a m\u00e9s vulnerabilitats, com injeccions SQL, si no es prenen les precaucions adequades.</li> </ul>"},{"location":"01arquitecturas.html#impacte-en-aplicacions-modernes","title":"Impacte en Aplicacions Modernes","text":"<p>Millora de l'Experi\u00e8ncia d'Usuari - Les aplicacions modernes utilitzen la generaci\u00f3 din\u00e0mica de p\u00e0gines per oferir una experi\u00e8ncia m\u00e9s fluida i responsiva. Per exemple, aplicacions com Gmail i Google Docs permeten als usuaris interactuar amb el contingut en temps real sense interrupcions.</p> <p>Optimitzaci\u00f3 del Rendiment - La generaci\u00f3 din\u00e0mica de p\u00e0gines permet carregar nom\u00e9s el contingut necessari, reduint la c\u00e0rrega inicial i millorant el rendiment general de l'aplicaci\u00f3. Aix\u00f2 \u00e9s especialment \u00fatil en aplicacions complexes amb molta interactivitat.</p> <p>Capacitat de Resposta a les Sol\u00b7licituds de l'Usuari - Aplicacions com Facebook i Twitter utilitzen la generaci\u00f3 din\u00e0mica per actualitzar el feed en temps real, oferint als usuaris informaci\u00f3 actualitzada immediatament.</p>"},{"location":"01arquitecturas.html#exemple-practic-php","title":"Exemple Pr\u00e0ctic (PHP)","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;P\u00e0gina Din\u00e0mica&lt;/title&gt;\n    &lt;style&gt;\n        body { font-family: Arial, sans-serif; }\n        .content { margin: 20px; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"content\"&gt;\n        &lt;h1&gt;Benvingut!&lt;/h1&gt;\n        &lt;p&gt;Aquesta p\u00e0gina ha estat generada a les &lt;?php echo date('H:i:s'); ?&gt;.&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"01arquitecturas.html#comparativa-entre-pagines-web-estatiques-i-dinamiques","title":"Comparativa entre P\u00e0gines Web Est\u00e0tiques i Din\u00e0miques","text":"Caracter\u00edstica P\u00e0gines Web Est\u00e0tiques P\u00e0gines Web Din\u00e0miques Contingut Fix, no canvia Variable, pot canviar Complexitat Baixa Alta Interactivitat Limitada Alta Rendiment Alt Pot ser baix Seguretat Alta Dep\u00e8n de la implementaci\u00f3 Flexibilitat Baixa Alta SEO Bona Dep\u00e8n de la implementaci\u00f3 Temps de Desenvolupament Curt Llarg Actualitzaci\u00f3 del Contingut Manual Autom\u00e0tica Cost de Manteniment Baix P\u00e0gina web din\u00e0mica <p>En resum, les p\u00e0gines web est\u00e0tiques s\u00f3n adequades per a llocs web senzills amb contingut fix, mentre que les p\u00e0gines web din\u00e0miques s\u00f3n necess\u00e0ries per a aplicacions m\u00e9s complexes que requereixen interactivitat i contingut variable. La decisi\u00f3 entre utilitzar una p\u00e0gina est\u00e0tica o din\u00e0mica dependr\u00e0 de les necessitats espec\u00edfiques del projecte i dels recursos disponibles. Les SPA ofereixen una experi\u00e8ncia d'usuari molt rica per\u00f2 poden tenir desavantatges en termes de SEO i temps de c\u00e0rrega inicial.</p>"},{"location":"01arquitecturas.html#models-dexecucio","title":"\u2699\ufe0f Models d'Execuci\u00f3","text":"<p>Els models d'execuci\u00f3 de codi en el desenvolupament web es poden dividir principalment en dos tipus: execuci\u00f3 al client i execuci\u00f3 al servidor. Cada model t\u00e9 les seves pr\u00f2pies caracter\u00edstiques, avantatges i desavantatges que cal considerar a l'hora de dissenyar una aplicaci\u00f3 web.</p>"},{"location":"01arquitecturas.html#execucio-de-codi-al-client-frontend","title":"Execuci\u00f3 de Codi al Client (FrontEnd)","text":"<p>L'execuci\u00f3 de codi al client es realitza al navegador web de l'usuari. Els llenguatges utilitzats principalment per a l'execuci\u00f3 al client s\u00f3n HTML, CSS i JavaScript.</p>"},{"location":"01arquitecturas.html#avantatges_2","title":"Avantatges","text":"<ul> <li>Interactivitat: Permet la creaci\u00f3 d'experi\u00e8ncies d'usuari riques i interactives.</li> <li>Reducci\u00f3 de la c\u00e0rrega del servidor: El processament es fa al dispositiu de l'usuari, disminuint la c\u00e0rrega del servidor.</li> <li>Actualitzaci\u00f3 instant\u00e0nia: Canvis en l'UI poden ser reflectits immediatament sense necessitat de recarregar la p\u00e0gina.</li> </ul>"},{"location":"01arquitecturas.html#desavantatges_2","title":"Desavantatges","text":"<ul> <li>Seguretat: El codi del client \u00e9s visible i modificable pels usuaris, la qual cosa pot representar un risc de seguretat.</li> <li>Compatibilitat: Pot haver-hi difer\u00e8ncies en la manera com diferents navegadors interpreten el codi.</li> </ul> <p>Exemple de codi</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Exemple Client&lt;/title&gt;\n    &lt;style&gt;\n        body { font-family: Arial, sans-serif; }\n        .content { margin: 20px; }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"content\"&gt;\n        &lt;h1&gt;Hola, m\u00f3n!&lt;/h1&gt;\n        &lt;button onclick=\"mostrarMissatge()\"&gt;Fes clic aqu\u00ed&lt;/button&gt;\n        &lt;p id=\"missatge\"&gt;&lt;/p&gt;\n    &lt;/div&gt;\n\n    &lt;script&gt;\n        function mostrarMissatge() {\n            document.getElementById('missatge').innerText = 'Has fet clic al bot\u00f3!';\n        }\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"01arquitecturas.html#execucio-de-codi-al-servidor-backend","title":"Execuci\u00f3 de Codi al Servidor (BackEnd)","text":"<p>L'execuci\u00f3 de codi al servidor es realitza al servidor web abans que els resultats es retornin al navegador del client. Els llenguatges habituals inclouen PHP, Python, Ruby, Node.js, entre altres.</p>"},{"location":"01arquitecturas.html#avantatges_3","title":"Avantatges","text":"<ul> <li>Seguretat: El codi del servidor no \u00e9s accessible pels usuaris finals, la qual cosa augmenta la seguretat.</li> <li>Pot\u00e8ncia: Els servidors solen ser m\u00e9s potents que els dispositius dels usuaris, permetent processar operacions m\u00e9s complexes.</li> </ul>"},{"location":"01arquitecturas.html#desavantatges_3","title":"Desavantatges","text":"<ul> <li>Lat\u00e8ncia: Les sol\u00b7licituds al servidor poden ser lentes a causa de la dist\u00e0ncia f\u00edsica i la c\u00e0rrega del servidor.</li> <li>Escalabilitat: Pot ser necessari m\u00e9s esfor\u00e7 per escalar una aplicaci\u00f3 a mesura que augmenta el nombre d'usuaris.    </li> </ul> <p>Exemple de codi <pre><code>// server.js\nconst http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 3000;\n\nconst server = http.createServer((req, res) =&gt; {\nres.statusCode = 200;\nres.setHeader('Content-Type', 'text/plain');\nres.end('Hola, m\u00f3n!\\n');\n});\n\nserver.listen(port, hostname, () =&gt; {\nconsole.log(`El servidor s'est\u00e0 executant a http://${hostname}:${port}/`);\n});\n</code></pre></p>"},{"location":"01arquitecturas.html#single-page-application-spa","title":"Single Page Application (SPA)","text":"<p>Una Single Page Application (SPA) \u00e9s un tipus d'aplicaci\u00f3 web que carrega una \u00fanica p\u00e0gina HTML i din\u00e0micament actualitza el contingut a mesura que l'usuari interactua amb l'aplicaci\u00f3, utilitzant JavaScript per a gestionar la l\u00f2gica i les actualitzacions de la interf\u00edcie d'usuari.</p>"},{"location":"01arquitecturas.html#avantatges_4","title":"Avantatges","text":"<ul> <li>Experi\u00e8ncia d'usuari millorada: Les SPA ofereixen una navegaci\u00f3 m\u00e9s r\u00e0pida i fluida, similar a una aplicaci\u00f3 d'escriptori.</li> <li>Menys c\u00e0rrega del servidor: Menys sol\u00b7licituds al servidor ja que nom\u00e9s es carrega una p\u00e0gina inicialment.</li> <li>Desenvolupament modular: Facilita la creaci\u00f3 de components reutilitzables.</li> </ul>"},{"location":"01arquitecturas.html#desavantatges_4","title":"Desavantatges","text":"<ul> <li>SEO: Les SPA poden ser menys amigables amb els motors de cerca.</li> <li>Carregada inicial: Pot requerir una major c\u00e0rrega inicial de recursos, afectant el temps de c\u00e0rrega inicial.</li> <li>Gesti\u00f3 de l'estat complexa: Pot ser m\u00e9s complicat gestionar l'estat de l'aplicaci\u00f3.</li> </ul> <p>Exemple Pr\u00e0ctic (React)</p> <pre><code>// index.html\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Exemple SPA&lt;/title&gt;\n    &lt;script defer src=\"bundle.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"root\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n// index.js\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction App() {\n    const [message, setMessage] = useState('');\n\n    const handleClick = () =&gt; {\n        setMessage('Has fet clic al bot\u00f3!');\n    };\n\n    return (\n        &lt;div&gt;\n            &lt;h1&gt;Hola, m\u00f3n!&lt;/h1&gt;\n            &lt;button onClick={handleClick}&gt;Fes clic aqu\u00ed&lt;/button&gt;\n            &lt;p&gt;{message}&lt;/p&gt;\n        &lt;/div&gt;\n    );\n}\n\nReactDOM.render(&lt;App /&gt;, document.getElementById('root'));\n</code></pre>"},{"location":"01arquitecturas.html#comparativa-entre-execucio-de-codi-al-cliental-servidor-i-el-spa","title":"Comparativa entre Execuci\u00f3 de Codi al Client,al Servidor i el SPA","text":"Caracter\u00edstica Client-Side Server-Side Single Page Application (SPA) Execuci\u00f3 Navegador del client Servidor Navegador del client Llenguatges JavaScript, HTML, CSS PHP, Node.js, Python, Java JavaScript, HTML, CSS Temps de Resposta Immediata (despr\u00e9s de la c\u00e0rrega) Dep\u00e8n de la comunicaci\u00f3 amb el servidor Baixa (despr\u00e9s de la c\u00e0rrega inicial) Seguretat M\u00e9s exposat a vulnerabilitats M\u00e9s controlat Mitjana Recursos Limitats pels recursos del client Recursos del servidor Limitats pels recursos del client Acc\u00e9s a Dades No pot accedir directament a bases de dades Acc\u00e9s directe a bases de dades Generalment via API Interactivitat Elevada, pot respondre r\u00e0pidament a les accions de l'usuari M\u00e9s dif\u00edcil d'aconseguir sense Ajax o websockets Molt Alta Processament Menys capacitat de proc\u00e9s Alta capacitat de proc\u00e9s Processament distribuit Carrega del servidor Baixa Alta Baixa Lat\u00e8ncia Baixa Pot ser alta Baixa (despr\u00e9s de la c\u00e0rrega inicial) Acc\u00e9s a recursos locals Limitat al navegador Complet acc\u00e9s al sistema del servidor Limitat al navegador SEO Mitjana Alta Baixa Temps de c\u00e0rrega inicial R\u00e0pid Dep\u00e8n de la complexitat Pot ser lent"},{"location":"01arquitecturas.html#comparativa-entre-desenvolupadors","title":"Comparativa entre desenvolupadors","text":"Perfil Ferramenta Tecnologia Front-end / client Navegador Web HTML + CSS + JavaScript Back-end / servidor Servidor Web + BBDD PHP, Python, Ruby, Java / JSP, .Net / .asp <p>Perfil Full-stack</p> <p>En les ofertes de treball quan fan refer\u00e8ncia a un Full-stack developer, estan buscant un perfil que domina tant el front-end com el back-end.</p> <p>En resum, la decisi\u00f3 sobre si utilitzar l'execuci\u00f3 de codi al client, al servidor o una SPA dep\u00e8n de les necessitats espec\u00edfiques de l'aplicaci\u00f3 i els recursos disponibles. Comprendre les difer\u00e8ncies clau i els avantatges de cada model ajudar\u00e0 a prendre decisions informades i a desenvolupar aplicacions web eficients i segures.</p>"},{"location":"01arquitecturas.html#servidors-web","title":"\ud83d\udda5\ufe0f Servidors Web","text":"<p>Un servidor web \u00e9s un programa que serveix contingut web est\u00e0tic com HTML, CSS, JavaScript, imatges i altres fitxers als clients a trav\u00e9s del protocol HTTP o HTTPS. El servidor web gestiona les sol\u00b7licituds entrants dels clients (navegadors web) i retorna les respostes adequades.</p>"},{"location":"01arquitecturas.html#funcionalitats-dels-servidors-web","title":"Funcionalitats dels Servidors Web","text":""},{"location":"01arquitecturas.html#servei-de-contingut-estatic","title":"Servei de Contingut Est\u00e0tic","text":"<ul> <li>Descripci\u00f3: Proporciona fitxers est\u00e0tics com HTML, CSS, JavaScript, imatges i altres recursos directament als clients.</li> <li>Exemple: Quan un usuari sol\u00b7licita una p\u00e0gina HTML, el servidor web envia el fitxer HTML corresponent al navegador de l'usuari.</li> </ul>"},{"location":"01arquitecturas.html#gestio-de-peticions-http","title":"Gesti\u00f3 de Peticions HTTP","text":"<ul> <li>Descripci\u00f3: Maneja sol\u00b7licituds HTTP de clients, com GET, POST, PUT, DELETE, i retorna les respostes adequades amb els codis d'estat corresponents.</li> <li>Exemple: Un servidor web processa una sol\u00b7licitud GET per una p\u00e0gina web i retorna el contingut de la p\u00e0gina amb un codi d'estat 200 (OK).</li> </ul>"},{"location":"01arquitecturas.html#redireccio-i-reescriptura-durls","title":"Redirecci\u00f3 i Reescriptura d'URLs","text":"<ul> <li>Descripci\u00f3: Permet la redirecci\u00f3 de peticions a diferents URLs i la reescriptura d'URLs per millorar l'accessibilitat i la SEO.</li> <li>Exemple: Reescriptura d'URLs amigables per als usuaris, com convertir <code>example.com/page?id=123</code> a <code>example.com/page/123</code>.</li> </ul>"},{"location":"01arquitecturas.html#suport-per-a-https","title":"Suport per a HTTPS","text":"<ul> <li>Descripci\u00f3: Proporciona connexions segures utilitzant el protocol HTTPS, que xifra les dades entre el client i el servidor.</li> <li>Exemple: Un servidor web configurat amb un certificat SSL/TLS que permet connexions segures a trav\u00e9s de HTTPS.</li> </ul>"},{"location":"01arquitecturas.html#exemples-de-servidors-web","title":"Exemples de Servidors Web","text":""},{"location":"01arquitecturas.html#apache-http-server","title":"Apache HTTP Server","text":"<ul> <li>Descripci\u00f3: Un servidor web de codi obert molt utilitzat, conegut per la seva flexibilitat i extensibilitat.</li> <li>Funcionalitats: Suport per a m\u00f2duls que afegeixen funcionalitats com l'autenticaci\u00f3, la reescriptura d'URLs i la compressi\u00f3 de contingut.</li> </ul>"},{"location":"01arquitecturas.html#nginx","title":"Nginx","text":"<ul> <li>Descripci\u00f3: Un servidor web i servidor intermediari de codi obert, dissenyat per gestionar moltes connexions simult\u00e0nies amb un \u00fas eficient dels recursos.</li> <li>Funcionalitats: Actua com a servidor proxy invers, equilibrador de c\u00e0rrega i servidor de fitxers est\u00e0tics.</li> </ul>"},{"location":"01arquitecturas.html#microsoft-internet-information-services-iis","title":"Microsoft Internet Information Services (IIS)","text":"<ul> <li>Descripci\u00f3: Un servidor web i d'aplicacions de Microsoft per a plataformes Windows.</li> <li>Funcionalitats: Suport per a aplicacions ASP.NET, autenticaci\u00f3 integrada i eines de gesti\u00f3 robustes.</li> </ul>"},{"location":"01arquitecturas.html#mecanismes-dexecucio-de-codi-en-servidors-web","title":"Mecanismes d'Execuci\u00f3 de Codi en Servidors Web","text":""},{"location":"01arquitecturas.html#llenguatges-interpretats-php-python","title":"Llenguatges interpretats: PHP, Python","text":"<p>El codi es processa l\u00ednia per l\u00ednia en temps real, permetent una major flexibilitat durant el desenvolupament, ja que els canvis poden ser implementats i testats immediatament sense necessitat de recompilar tot el projecte.</p> <pre><code>    &lt;html&gt;\n    &lt;body&gt;\n        &lt;h1&gt;&lt;?php echo \"Hola, m\u00f3n!\"; ?&gt;&lt;/h1&gt;\n    &lt;/body&gt;\n    &lt;/html&gt;\n</code></pre>"},{"location":"01arquitecturas.html#llenguatges-compilats-java","title":"Llenguatges compilats: Java","text":"<p>El codi es compila abans de ser executat, el que significa que \u00e9s transformat en un format executable per la m\u00e0quina abans de la seva execuci\u00f3. Aix\u00f2 sol millorar el rendiment, ja que el codi compilat s'executa m\u00e9s r\u00e0pidament que el codi interpretat.</p> <pre><code>  // Exemple simplificat d'un servlet Java\n  import java.io.*;\n  import javax.servlet.*;\n  import javax.servlet.http.*;\n\n  public class HelloWorldServlet extends HttpServlet {\n  public void doGet(HttpServletRequest request, HttpServletResponse response)\n  throws ServletException, IOException {\n      response.setContentType(\"text/html\");\n      PrintWriter out = response.getWriter();\n      out.println(\"&lt;h1&gt;Hola, m\u00f3n!&lt;/h1&gt;\");\n      }\n  }\n</code></pre>"},{"location":"01arquitecturas.html#intermediari-nodejs","title":"Intermediari: Node.js","text":"<p>Permet la programaci\u00f3 as\u00edncrona i escalable amb JavaScript, oferint la capacitat de gestionar moltes connexions simult\u00e0nies de manera eficient. Aix\u00f2 \u00e9s especialment \u00fatil per a aplicacions que necessiten alta concurr\u00e8ncia, com aplicacions en temps real.</p> <pre><code>    const express = require('express');\n    const app = express();\n\n    app.get('/', (req, res) =&gt; {\n    res.send('Hola, m\u00f3n!');\n    });\n\n    app.listen(3000, () =&gt; {\n    console.log('Servidor escoltant a http://localhost:3000');\n});\n</code></pre>"},{"location":"01arquitecturas.html#llenguatges-i-tecnologies-de-programacio-web-en-entorn-servidor","title":"Llenguatges i Tecnologies de Programaci\u00f3 Web en Entorn Servidor","text":"<p>Els mecanismes d'execuci\u00f3 de codi en els servidors web permeten que les aplicacions generin contingut din\u00e0mic, gestionin dades i interaccions d'usuaris de manera eficient. A continuaci\u00f3 es descriuen diversos llenguatges i com funcionen en el context del servidor.</p>"},{"location":"01arquitecturas.html#php","title":"PHP","text":"<ul> <li>Descripci\u00f3: PHP \u00e9s un llenguatge interpretat popularment utilitzat per a la creaci\u00f3 de p\u00e0gines web din\u00e0miques.</li> <li>Mecanisme: El codi PHP s'incrusta dins dels fitxers HTML i es processa en temps real pel servidor web abans de ser enviat al client.</li> </ul>"},{"location":"01arquitecturas.html#nodejs","title":"Node.js","text":"<ul> <li>Descripci\u00f3: Node.js permet la programaci\u00f3 as\u00edncrona i escalable amb JavaScript.</li> <li>Mecanisme: Utilitza un model basat en esdeveniments que permet la gesti\u00f3 de moltes connexions simult\u00e0nies sense bloquejar-se.</li> </ul>"},{"location":"01arquitecturas.html#java-jspservlets","title":"Java (JSP/Servlets)","text":"<ul> <li>Descripci\u00f3: Java s'utilitza per a aplicacions empresarials amb alta complexitat i escalabilitat.</li> <li>Mecanisme: El codi Java es compila abans d'executar-se, millorant el rendiment. Els servlets i JSP gestionen les sol\u00b7licituds HTTP i generen contingut din\u00e0mic.</li> </ul>"},{"location":"01arquitecturas.html#python-djangoflask","title":"Python (Django/Flask)","text":"<ul> <li>Descripci\u00f3: Python \u00e9s conegut per la seva sintaxi clara i les seves biblioteques extensives. Django i Flask s\u00f3n frameworks populars.</li> <li>Mecanisme: Django utilitza un ORM per interactuar amb bases de dades, mentre que Flask \u00e9s m\u00e9s lleuger i flexible.</li> </ul> <pre><code>from flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef hello_world():\nreturn 'Hola, m\u00f3n!'\n\nif __name__ == '__main__':\napp.run()\n</code></pre>"},{"location":"01arquitecturas.html#ruby-ruby-on-rails","title":"Ruby (Ruby on Rails)","text":"<ul> <li>Descripci\u00f3: Ruby \u00e9s apreciat per la seva eleg\u00e0ncia i facilitat d'\u00fas. Ruby on Rails \u00e9s un framework popular.</li> <li>Mecanisme: Ruby on Rails segueix el patr\u00f3 MVC, facilitant el desenvolupament d'aplicacions web estructurades.</li> </ul> <pre><code>class WelcomeController &lt; ApplicationController\ndef index\nrender plain: \"Hola, m\u00f3n!\"\nend\nend\n</code></pre>"},{"location":"01arquitecturas.html#go","title":"Go","text":"<ul> <li>Descripci\u00f3: Go \u00e9s un llenguatge de programaci\u00f3 desenvolupat per Google, conegut per la seva efici\u00e8ncia i concurr\u00e8ncia.</li> <li>Mecanisme: Go permet la creaci\u00f3 de servidors web r\u00e0pids i escalables, utilitzant goroutines per gestionar m\u00faltiples connexions de manera eficient.</li> </ul> <pre><code>package main\n\nimport (\n\"fmt\"\n\"net/http\"\n)\n\nfunc helloHandler(w http.ResponseWriter, r *http.Request) {\nfmt.Fprintf(w, \"Hola, m\u00f3n!\")\n}\n\nfunc main() {\nhttp.HandleFunc(\"/\", helloHandler)\nhttp.ListenAndServe(\":8080\", nil)\n}\n</code></pre>"},{"location":"01arquitecturas.html#comparativa-entre-llenguatges","title":"Comparativa entre llenguatges","text":"Llenguatge Avantatges Desavantatges Usos Comuns PHP Amplament utilitzat, gran comunitat, f\u00e0cil d'aprendre Seguretat (cal bones pr\u00e0ctiques), rendiment inferior a altres llenguatges Aplicacions web, CMS com WordPress Python Senzillesa i llegibilitat, gran quantitat de biblioteques, potent per a prototips Rendiment inferior en algunes \u00e0rees, gesti\u00f3 de concurr\u00e8ncia Aplicacions web (Django, Flask), an\u00e0lisi de dades Node.js Alta velocitat, no bloqueig (event-driven), gran ecosistema (NPM) Pot ser complicat per a grans aplicacions, gesti\u00f3 de callbacks Aplicacions en temps real, serveis web Java Rendiment elevat, robustesa, seguretat, escalabilitat Verborrea, aprenentatge m\u00e9s complex Aplicacions empresarials, sistemes grans, Android <p>En resum, un servidor web serveix contingut est\u00e0tic com HTML, CSS, JavaScript i imatges als clients a trav\u00e9s de HTTP o HTTPS. Gestiona sol\u00b7licituds entrants i retorna respostes adequades. Exemples de servidors web inclouen Apache, Nginx i Microsoft IIS, cadascun amb funcionalitats \u00faniques com la redirecci\u00f3 d'URLs, suport per a HTTPS i gesti\u00f3 de peticions HTTP. A m\u00e9s, utilitzen llenguatges interpretats (PHP, Python), compilats (Java) i intermediaris (Node.js) per executar codi.</p>"},{"location":"01arquitecturas.html#servidors-daplicacions","title":"\ud83d\uddc4\ufe0f Servidors d'Aplicacions","text":"<p>Un servidor d'aplicacions \u00e9s un tipus de servidor dissenyat per executar aplicacions web din\u00e0miques i gestionar la l\u00f2gica de negoci d'una aplicaci\u00f3. Aquest servidor actua com una capa interm\u00e8dia entre el client (navegador web) i les bases de dades o altres serveis de backend, proporcionant un entorn d'execuci\u00f3 per a aplicacions web.</p>"},{"location":"01arquitecturas.html#principals-funcionalitats-dels-servidors-daplicacions","title":"Principals Funcionalitats dels Servidors d'Aplicacions","text":""},{"location":"01arquitecturas.html#gestio-de-sessions","title":"Gesti\u00f3 de Sessions","text":"<ul> <li>Descripci\u00f3: Manteniment de l'estat de l'usuari durant la seva interacci\u00f3 amb l'aplicaci\u00f3.</li> <li>Exemple: Sessions PHP que emmagatzemen informaci\u00f3 de l'usuari.</li> </ul>"},{"location":"01arquitecturas.html#concurrencia","title":"Concurr\u00e8ncia","text":"<ul> <li>Descripci\u00f3: Capacitat per gestionar m\u00faltiples peticions simult\u00e0nies de manera eficient.</li> <li>Exemple: Node.js gestiona peticions de manera as\u00edncrona.</li> </ul>"},{"location":"01arquitecturas.html#seguretat","title":"Seguretat","text":"<ul> <li>Descripci\u00f3: Autenticaci\u00f3 i autoritzaci\u00f3 dels usuaris per accedir a diferents parts de l'aplicaci\u00f3.</li> <li>Exemple: Utilitzaci\u00f3 de JWT (JSON Web Tokens) per autenticar usuaris en una aplicaci\u00f3 Node.js.</li> </ul>"},{"location":"01arquitecturas.html#relacio-entre-servidors-web-i-servidors-daplicacions","title":"Relaci\u00f3 entre Servidors Web i Servidors d'Aplicacions","text":""},{"location":"01arquitecturas.html#integracio-i-collaboracio","title":"Integraci\u00f3 i Col\u00b7laboraci\u00f3","text":"<p>Els servidors web treballen conjuntament amb els servidors d'aplicacions per gestionar les sol\u00b7licituds de manera eficient. Mentre que el servidor web maneja les sol\u00b7licituds HTTP i serveix contingut est\u00e0tic, el servidor d'aplicacions processa la l\u00f2gica de negoci i genera contingut din\u00e0mic.</p>"},{"location":"01arquitecturas.html#exemple-de-configuracio","title":"Exemple de Configuraci\u00f3","text":"<ul> <li>Servidor Web (Nginx): Actua com a proxy invers, encaminant les sol\u00b7licituds din\u00e0miques al servidor d'aplicacions.</li> <li>Servidor d'Aplicacions (Node.js): Gestiona les sol\u00b7licituds din\u00e0miques, executa la l\u00f2gica de negoci i retorna les respostes al servidor web.</li> </ul> <p>Configuraci\u00f3 de Nginx com a Proxy Invers <pre><code>server {\n   listen 80;\n   server_name example.com;\n\n   location / {\n       proxy_pass http://localhost:3000;\n       proxy_set_header Host $host;\n       proxy_set_header X-Real-IP $remote_addr;\n       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n       proxy_set_header X-Forwarded-Proto $scheme;\n   }\n}\n</code></pre></p> <p>Configuraci\u00f3 servidor d'aplicacions Node.js</p> <pre><code>const express = require('express');\nconst app = express();\n\napp.get('/', (req, res) =&gt; {\n    res.send('Hola, m\u00f3n!');\n});\n\napp.listen(3000, () =&gt; {\n    console.log('Servidor escoltant a http://localhost:3000');\n});  \n</code></pre> <p>Aquesta col\u00b7laboraci\u00f3 permet una gesti\u00f3 eficient de les sol\u00b7licituds i una millor distribuci\u00f3 de la c\u00e0rrega, millorant el rendiment i l'escalabilitat de les aplicacions web.</p>"},{"location":"01arquitecturas.html#exemples-de-servidors-daplicacions","title":"Exemples de Servidors d'Aplicacions","text":""},{"location":"01arquitecturas.html#apache-tomcat","title":"Apache Tomcat","text":"<ul> <li>Descripci\u00f3: Un servidor d'aplicacions de codi obert per a aplicacions web Java.</li> <li>Funcionalitats: Suporta servlets Java i JavaServer Pages (JSP), facilitant l'execuci\u00f3 d'aplicacions Java.</li> </ul>"},{"location":"01arquitecturas.html#microsoft-internet-information-services-iis_1","title":"Microsoft Internet Information Services (IIS)","text":"<ul> <li>Descripci\u00f3: Un servidor web i d'aplicacions de Microsoft per a plataformes Windows.</li> <li>Funcionalitats: Suporta aplicacions ASP.NET, autenticaci\u00f3 integrada, i eines de gesti\u00f3 robustes.</li> </ul>"},{"location":"01arquitecturas.html#jboss-eap-enterprise-application-platform","title":"JBoss EAP (Enterprise Application Platform)","text":"<ul> <li>Descripci\u00f3: Un servidor d'aplicacions Java EE de codi obert desenvolupat per Red Hat.</li> <li>Funcionalitats: Proporciona un entorn robust per a la implementaci\u00f3 d'aplicacions empresarials amb suport per a diversos frameworks Java.</li> </ul>"},{"location":"01arquitecturas.html#nodejs_1","title":"Node.js","text":"<ul> <li>Descripci\u00f3: Una plataforma per a l'execuci\u00f3 de codi JavaScript en el servidor.</li> <li>Funcionalitats: Permet la programaci\u00f3 as\u00edncrona, ideal per a aplicacions en temps real i escalables com xats i jocs multijugador.</li> </ul> <p>Info</p> <p>Tant els servidors web com els servidors d'aplicacions s'estudien en el m\u00f2dul de \"Desplegament d'Aplicacions Web\".</p> <p>En resum, els servidors d'aplicacions executen aplicacions din\u00e0miques i proporcionen serveis empresarials. Es diferencien dels servidors web en qu\u00e8 no nom\u00e9s serveixen contingut est\u00e0tic, sin\u00f3 que tamb\u00e9 processen l\u00f2gica d'aplicaci\u00f3 i interaccions de base de dades. Exemples inclouen Apache Tomcat, JBoss i GlassFish, utilitzats per a aplicacions Java. Tamb\u00e9 donen suport a tecnologies com servlets, JSP, EJB i frameworks com Spring, facilitant la construcci\u00f3 d'aplicacions robustes i escalables.</p>"},{"location":"01arquitecturas.html#frameworks-de-programacio-en-entorn-servidor","title":"\ud83e\udde9 Frameworks de Programaci\u00f3 en Entorn Servidor","text":"<p>Un framework \u00e9s una plataforma de desenvolupament que proporciona una estructura estandarditzada per a la creaci\u00f3 d'aplicacions web. Facilita i accelera el proc\u00e9s de desenvolupament oferint biblioteques de codi preescrit, components reutilitzables i un conjunt de bones pr\u00e0ctiques. Els frameworks ajuden els desenvolupadors a centrar-se en la funcionalitat de l'aplicaci\u00f3 en lloc de preocupar-se pels aspectes b\u00e0sics i repetitius de la programaci\u00f3.</p>"},{"location":"01arquitecturas.html#principals-frameworks-en-entorn-servidor","title":"Principals Frameworks en Entorn Servidor","text":""},{"location":"01arquitecturas.html#expressjs","title":"Express.js","text":"<ul> <li>Descripci\u00f3: Express.js \u00e9s un framework web minimalista per a Node.js. Proporciona eines senzilles i flexibles per a la creaci\u00f3 d'aplicacions web i API.</li> <li>Caracter\u00edstiques:<ul> <li>Middleware per a gestionar peticions HTTP.</li> <li>Sistema d'enrutament senzill i modular.</li> <li>Suport per a motors de plantilles com Pug i EJS.</li> </ul> </li> <li>Avantatges:<ul> <li>Lleuger i flexible.</li> <li>Gran comunitat de suport i moltes extensions disponibles.</li> </ul> </li> <li>Inconvenients:<ul> <li>Requereix m\u00e9s configuraci\u00f3 manual comparat amb altres frameworks.</li> </ul> </li> </ul>"},{"location":"01arquitecturas.html#django","title":"Django","text":"<ul> <li>Descripci\u00f3: Django \u00e9s un framework de programaci\u00f3 web d'alt nivell per a Python que permet un desenvolupament r\u00e0pid i un disseny net i pragm\u00e0tic.</li> <li>Caracter\u00edstiques:<ul> <li>Inclou un ORM (Object-Relational Mapping) potent.</li> <li>Sistema d'administraci\u00f3 autom\u00e0tic.</li> <li>Seguretat integrada.</li> </ul> </li> <li>Avantatges:<ul> <li>Promou les bones pr\u00e0ctiques de desenvolupament.</li> <li>Molt complet, amb moltes funcionalitats \"out-of-the-box\".</li> </ul> </li> <li>Inconvenients:<ul> <li>Pot ser massa gran per a aplicacions petites.</li> </ul> </li> </ul>"},{"location":"01arquitecturas.html#laravel","title":"Laravel","text":"<ul> <li>Descripci\u00f3: Laravel \u00e9s un framework PHP elegant i expressiu que ofereix un conjunt complet d'eines i recursos per a construir aplicacions web.</li> <li>Caracter\u00edstiques:<ul> <li>Sistema d'enrutament senzill i potent.</li> <li>Eloquent ORM per a una interacci\u00f3 f\u00e0cil amb bases de dades.</li> <li>Sistema de templates Blade.</li> </ul> </li> <li>Avantatges:<ul> <li>Gran comunitat i abundant documentaci\u00f3.</li> <li>Facilitat per a desenvolupar aplicacions robustes i escalables.</li> </ul> </li> <li>Inconvenients:<ul> <li>Pot tenir una corba d'aprenentatge per als nous desenvolupadors.</li> </ul> </li> </ul>"},{"location":"01arquitecturas.html#comparativa-dels-frameworks","title":"Comparativa dels Frameworks","text":"Caracter\u00edstica Express.js Django Laravel Idioma de programaci\u00f3 JavaScript Python PHP ORM No integrat, per\u00f2 es pot utilitzar Sequelize o Mongoose S\u00ed (integrat) S\u00ed (integrat, Eloquent ORM) Sistema d'enrutament S\u00ed S\u00ed S\u00ed Motor de plantilles Suport per Pug, EJS, etc. S\u00ed (Django Templates) S\u00ed (Blade) Sistema d'administraci\u00f3 No S\u00ed No Comunitat Gran Gran Gran Facilitat d'aprenentatge Moderada Moderada Moderada Documentaci\u00f3 Excel\u00b7lent Excel\u00b7lent Excel\u00b7lent Seguretat Dep\u00e8n de la configuraci\u00f3 Alta, amb funcions integrades Alta, amb funcions integrades"},{"location":"01arquitecturas.html#com-trieu-un-framework","title":"Com Trieu un Framework?","text":"<p>La selecci\u00f3 del framework adequat per a un projecte dep\u00e8n de diversos factors:</p> <ul> <li>Tipus de Projecte: Aplicacions en temps real, aplicacions CRUD, aplicacions amb necessitats espec\u00edfiques de seguretat, etc.</li> <li>Idioma de Programaci\u00f3: Si el teu equip est\u00e0 m\u00e9s familiaritzat amb JavaScript, Python o PHP, per exemple.</li> <li>Escalabilitat i Rendiment: Alguns frameworks s\u00f3n m\u00e9s adequats per a aplicacions petites, mentre que altres gestionen millor aplicacions de gran escala.</li> <li>Ecosistema i Comunitat: La disponibilitat de biblioteques, plugins i la mida de la comunitat poden influir en la decisi\u00f3.</li> <li>Facilitat d'\u00fas i Documentaci\u00f3: Un bon framework ha de tenir una documentaci\u00f3 clara i f\u00e0cil d'entendre, aix\u00ed com una corba d'aprenentatge adequada per al teu equip.</li> </ul>"},{"location":"01arquitecturas.html#entorn-de-treball","title":"\ud83d\udee0\ufe0f Entorn de treball","text":""},{"location":"01arquitecturas.html#entorn-de-desenvolupament-integrat-ide","title":"Entorn de desenvolupament integrat (IDE)","text":"<p>En este curs utilitzarem Visual Studio Code com a editor  de codi. Existixen altres alternatives, com  PHP Storm.</p>"},{"location":"01arquitecturas.html#github-classroom","title":"GitHub Classroom","text":"<p>Us haureu de registrar ja que l'utilitzarem durant el curs per la c\u00f2pia  de repositoris i entrega de treballs.</p> <p>Metodologia de treball amb el github classroom</p> <ul> <li>Se li proporcionar\u00e0 a l'alumnat un enlla\u00e7 amb la invitaci\u00f3.</li> <li>Accedint a l'enlla\u00e7 a cada alumne se li crear\u00e0 un repositori individual en l'organitzaci\u00f3.</li> <li>L'alumnat treballa en el seu repositori assignat. Se'l pot baixar per treballar en local.</li> <li>Inicialment, l'alumne crea una branca nova sobre la que va a treballar.</li> <li>Quan vullga sol.licitar ajuda o revisi\u00f3 del professor, l'alumne genera una pull request a la branca principal del seu repositori en la que cita al professor per tal que reba una notificaci\u00f3.</li> <li>El profesor proporciona retroalimentaci\u00f3 mitjan\u00e7ant comentaris en la pull request o en un determinat commit individual.</li> <li>Opcionalment es poden utilitzar els issues y les cites d'usuari per sol\u00b7licitar la intervenci\u00f3 del profesor.</li> <li>Quan l'alumne finalitza la tasca, genera una \u00faltim pull request</li> <li>El profesor revisa la pull request i opcionalment fa comentaris.</li> </ul>"},{"location":"01arquitecturas.html#entorns-de-desenvolupament-local","title":"Entorns de desenvolupament local","text":"<p>Pera fer correr les aplicacions de servidor ens cal, com a m\u00ednim, un servidor web, l'interpret de php i un motor de base de dades. Hem de distinguir l'entorn de desenvolupament, on anem a programar i mantindre la nostra aplicaci\u00f3, de l'entorn de producci\u00f3, on anem a executar-la. Normalment el primer dep\u00e9n de nosaltres mentre que el segon pot dependre de l'empresa on s'allotjar\u00e0 la nostra web. Per a preparar el nostre entorn de desenvolupament podem optar per:</p> <ul> <li>Qualsevol soluci\u00f3 LAMP (Linux, Apache, Mysql, PHP). Als que haurem d'afegir, una vegada els projectes es facen grans composer, git i les opcions de la part de client.</li> <li>Una m\u00e0quina virtual ja configurada.</li> <li>Una soluci\u00f3 docker.</li> </ul> <p>La primera soluci\u00f3 \u00e9s senzilla d'implementar per\u00f2 no hauria de ser la nostra primera opci\u00f3 per:</p> <ul> <li>Estem possant en funcionament en la nostra m\u00e0quina una s\u00e8rie de serveis que normalment no fariem, baixant el rendiment de la m\u00e0quina i obrint vulnerabilitats.</li> <li>Si treballem en grup, les instal\u00b7lacions i el funcionament no s\u00f3n iguals, depenen del sistema operatiu que t\u00e9 instal\u00b7lat cadasc\u00fa. All\u00f2 que li funciona a \u00fa  pot ser no li funciona a un altre. Aix\u00f2 \u00e9s inevitable quan el projecte es complica i es perd molt de temps.</li> <li>Passa el mateix quan passem a l'entorn de producci\u00f3.</li> </ul> <p>La segona soluci\u00f3 soluciona els dos primers problemes, doncs tots els desenvolupadors poden tindre virtualitzada, la mateixa m\u00e0quina. Encara que si la m\u00e0quina no la fem nosaltres sin\u00f3 que utilitzem alguna ja configurada (vagrant) o si ens cal instal\u00b7lar alguna cosa m\u00e9s, ho hauria de fer tot l'equip.</p> <p>Aix\u00ed i tot, tindriem les seg\u00fcents desaventatges:</p> <ul> <li>A l'instal\u00b7lar una maquina virtual sencera ocupa recursos del sistema.</li> <li>La m\u00e0quina instal\u00b7la m\u00e9s coses de les necess\u00e0ries habitualment.</li> <li>No reprodueix l'entorn de producci\u00f3.</li> </ul> <p>La tercera opci\u00f3 t\u00e9 les seg\u00fcents caracter\u00edstiques:</p> <ul> <li>Al principi \u00e9s m\u00e9s dif\u00edcil de possar en funcionamet ja que calen coneixements de docker.</li> <li>Tots els desenvolupadors comparteixen entorn encara que utilitzen m\u00e0quines o sistemes operatius diferents.</li> <li>Si hi ha algun canvi de configuraci\u00f3 de l'entorn \u00e9s f\u00e1cilment transladable a tots els desenvolupadors.</li> <li>Es poden crear tants entorns  de desenvolupament com projectes diferents hi hajen.</li> <li>Els contenidors ocupen pocs recursos.</li> <li>Els projectes es poden possar en producci\u00f3 utilitzan una soluci\u00f3 docker de manera inmediata.</li> </ul>"},{"location":"01arquitecturas.html#docker","title":"Docker","text":"<p>Docker (https://www.docker.com) \u00e9s un gestor de contenidors, considerant un contenidor com un m\u00e8tode de virtualitzaci\u00f3 del sistema operatiu. L'\u00fas de contenidors requereix menys recursos que una m\u00e0quina virtual, per tant, el seu llan\u00e7ament i detenci\u00f3 s\u00f3n m\u00e9s r\u00e0pids que les m\u00e0quines virtuals.</p> <p>Aix\u00ed doncs, Docker permet crear, provar i implementar aplicacions r\u00e0pidament, a partir d'una s\u00e8rie de plantilles que es coneixen com a imatges de Docker.</p> <p>Per a aix\u00f2, instal\u00b7larem Docker Desktop (https://www.docker.com/products/docker-desktop) en els nostres entorns de desenvolupament (el qual ja inclou en nucli de Docker i l'eina docker compose).</p> <p>Al llarg del curs anirem creant diferents contenidors amb els serveis necessaris, de manera que cada vegada nom\u00e9s treballem amb el programari m\u00ednim.</p> <p>Docker en windows</p> <p>Per a instal\u00b7lar-ho en Windows, \u00e9s necessari instal\u00b7lar pr\u00e8viament WSL 2, el qual \u00e9s un subsistema de Linux dins de Windows.</p>"},{"location":"01arquitecturas.html#plantilla-inicial-servidor-web-nginx-php-mysql-phpmyadmin","title":"Plantilla Inicial : Servidor Web nginx + PHP + MySQL + phpMyAdmin","text":"<p>Docker es basa en l'\u00fas d'imatges per a crear contenidors. Docker Compose simplifica el treball amb m\u00faltiples contenidors, i per aix\u00f2, per a facilitar l'arranc, ens centrarem en Docker Compose utilitzant una plantilla que \u00fanicament contindr\u00e0 com a serveis Nginx i PHP. Per a facilitar la posada en marxa, us facilite un repositori, disponible per a la seua descarrega mitjan\u00e7ant el git clone.</p> <ul> <li>Grup A: github classroom Nginx/PHP </li> <li>Grup B: github classroom Nginx/PHP</li> </ul> <p>L'haureu de possar en un directori f\u00e0cilment localitzable i amb un nom significatiu, ja que ser\u00e0 el vostre directori de treball. Dins d'este repositori, el fitxer 'docker-compose.yaml' indica quines m\u00e0quines ha de montar i t\u00e9 el seg\u00fcent aspecte</p> Nginx i PHP <pre><code># Services\nservices:\n\n# Nginx Service\nnginx:\nimage: nginx:1.19\nports:\n  - 80:80\nvolumes:\n  - ./src:/var/www/php\n  - ./.docker/nginx/conf.d:/etc/nginx/conf.d\ndepends_on:\n  - php\n\n# PHP Service\nphp: \nbuild: ./.docker/php/\nworking_dir: /var/www/php\nexpose:\n  - 9000\nvolumes:\n  - ./src:/var/www/php\n  - ./.docker/php/conf.d/Xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n  - ./.docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini\n</code></pre> <p>Per arrencar les m\u00e0quines o podem fer des de la consola amb</p> <pre><code>docker compose up -d\n</code></pre> <p>Si volem accedir a un terminal interactiu dins del contenidor:</p> <pre><code>docker exec -it nombreContenedor bash\n</code></pre> <p>Altres comandos que podem arribar a utilitzar s\u00f3n:</p> <ul> <li><code>docker ps</code>: Veure els contenidors que es estan executant</li> <li><code>docker ps -a</code>: Veure tots els contenidors</li> <li><code>docker start nombreContenedor</code>: Arrancar un contenidor</li> <li><code>docker images</code>: Veure les imatges que tenim descarregades</li> </ul> <p>Docker stack</p> <p>Existeixen diverses opcions mitjan\u00e7ant Docker que ofereixen solucions completes i empaquetes per a tot el stack de desenvolupament. Com a exemple tenim  Devilbox (http://devilbox.org) i Laradock (https://laradock.io)</p> <p>Una altra forma m\u00e9s senzilla per a llan\u00e7ar de nou els contenidors i gestionar-los una vegada creats \u00e9s utilitzar la interf\u00edcie gr\u00e0fica que ofereix Docker Desktop:</p> Arranc de contenidor mitjan\u00e7ant Docker Desktop <p>Tot funciona</p> <p>Heu de comprovar que a l'accedir a <code>http://localhost/phpinfo.php</code> en el vostre navegador se us obre una p\u00e0gina amb la configuraci\u00f3 de php. Tamb\u00e9 si accediu a <code>http://localhost:8000</code> veureu la p\u00e0gina d'acc\u00e8s a phpmyadmin.</p> <p>Directoris de php</p> <p>Si us fixeu en les carpetes que us ha creat el repositori veureu que les p\u00e0gines que pot executar (directori arrel de la nostra web) es troba a php/src. Les p\u00e0gines que anem a crear , de moment, les haureu de ficar ah\u00ed.</p>"},{"location":"01arquitecturas.html#exercici","title":"\u270f\ufe0f Exercici","text":""},{"location":"01arquitecturas.html#sa1-comparativa-darquitectures-web-en-entorn-servidor-grups-de-3-persones","title":"SA1 \u2013 Comparativa d\u2019Arquitectures Web en Entorn Servidor (Grups de 3 persones)","text":""},{"location":"01arquitecturas.html#objectiu-ra1","title":"\ud83c\udfaf Objectiu (RA1)","text":"<p>Recon\u00e9ixer les arquitectures web m\u00e9s habituals en entorn servidor, identificant els seus components, caracter\u00edstiques i escenaris d\u2019\u00fas.</p> <pre><code>+---------------------+   +----------------------+   +---------------------------+\n|    Monol\u00edtica       |   |        MVC           |   |       Microserveis        |\n+---------------------+   +----------------------+   +---------------------------+\n| [ Client ]          |   | [ Client ]           |   | [ Client ]                |\n|        |            |   |      |               |   |       |                  |\n|     [Servidor]      |   |   [Servidor]         |   |   [API Gateway]           |\n|  (Tot en un fitxer) |   | \u250c\u2500\u2500Controller\u2500\u2500\u2510     |   |   \u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2510             |\n|                     |   | \u2502  Model        \u2502     |   |   \u2502User\u2502Product\u2502          |\n|                     |   | \u2502  View         \u2502     |   |   \u2502Srv \u2502Srv    \u2502          |\n+---------------------+   +----------------------+   +---------------------------+\n</code></pre>"},{"location":"01arquitecturas.html#1-explora-el-seguents-repositoris","title":"1. Explora el seg\u00fcents repositoris","text":"<ul> <li>Arquitectura monol\u00edtica</li> <li>Arquitectura MCV</li> <li>Arquitectura microserveis</li> </ul>"},{"location":"01arquitecturas.html#2-fes-un-fork-de-cadascu-dells","title":"2. Fes un fork de cadasc\u00fa d'ells","text":""},{"location":"01arquitecturas.html#3-utilitza-codespaces-per-generar-un-entorn-de-prova","title":"3. Utilitza codespaces per generar un entorn de prova","text":""},{"location":"01arquitecturas.html#4-envia-peticions-i-prova-larquitectura","title":"4. Envia peticions i prova l'arquitectura","text":""},{"location":"01arquitecturas.html#5-completa-la-seguent-taula","title":"5. Completa la seg\u00fcent taula","text":"<p>\ud83e\uddfe Fitxa comparativa d'arquitectures web</p> Arquitectura Components visibles Separaci\u00f3 de responsabilitats Avantatges Inconvenients Casos d\u2019\u00fas recomanats Monol\u00edtica MVC ` Microserveis"},{"location":"01arquitecturas.html#6-reflexio-final","title":"6. Reflexi\u00f3 final","text":"<p>Tria un escenari (ex. botiga online, sistema de reserves...) i explica:</p> <ul> <li>Quina arquitectura faries servir?</li> <li>Per qu\u00e8 \u00e9s la m\u00e9s adequada en aquest cas?</li> </ul>"},{"location":"01arquitecturas.html#rubrica-davaluacio-sa1-arquitectures-web","title":"\u2705 R\u00fabrica d\u2019avaluaci\u00f3 \u2013 SA1: Arquitectures web","text":"Criteri Puntuaci\u00f3 m\u00e0xima Obri correctament el repositori a GitHub Codespaces 2 punts Identifica i descriu components b\u00e0sics de l'arquitectura 3 punts Relaciona cada projecte amb els conceptes te\u00f2rics corresponents 3 punts Reflexiona i compara arquitectures segons escenari proposat 2 punts Puntuaci\u00f3 total 10 punts"},{"location":"01arquitecturas.html#autoavaluacio","title":"\u2705 AutoAvaluaci\u00f3","text":""},{"location":"01arquitecturas.html#exercici-1-models-dexecucio-de-codi","title":"Exercici 1: Models d'execuci\u00f3 de codi","text":""},{"location":"01arquitecturas.html#pregunta","title":"Pregunta:","text":"<p>Explica les principals difer\u00e8ncies entre el model d'execuci\u00f3 de codi en client i en servidor.</p>"},{"location":"01arquitecturas.html#opcions","title":"Opcions:","text":"a) El codi en client s'executa al servidor, mentre que el codi en servidor s'executa al navegador del client. b) El codi en client s'executa al navegador del client, mentre que el codi en servidor s'executa al servidor. c) Ambd\u00f3s s'executen al servidor. d) Ambd\u00f3s s'executen al navegador del client."},{"location":"01arquitecturas.html#exercici-2-avantatges-de-la-generacio-dinamica-de-pagines","title":"Exercici 2: Avantatges de la generaci\u00f3 din\u00e0mica de p\u00e0gines","text":""},{"location":"01arquitecturas.html#pregunta_1","title":"Pregunta:","text":"<p>Quins s\u00f3n els avantatges de la generaci\u00f3 din\u00e0mica de p\u00e0gines web? Selecciona totes les que apliquen.</p>"},{"location":"01arquitecturas.html#opcions_1","title":"Opcions:","text":"a) Reducci\u00f3 de la c\u00e0rrega del servidor. b) Personalitzaci\u00f3 del contingut per usuari. c) Major interactivitat amb l'usuari. d) Menor temps de c\u00e0rrega inicial de la p\u00e0gina."},{"location":"01arquitecturas.html#exercici-3-mecanismes-dexecucio-de-codi-en-els-servidors-web","title":"Exercici 3: Mecanismes d'execuci\u00f3 de codi en els servidors web","text":""},{"location":"01arquitecturas.html#pregunta_2","title":"Pregunta:","text":"<p>Quins dels seg\u00fcents s\u00f3n mecanismes d'execuci\u00f3 de codi en els servidors web?</p>"},{"location":"01arquitecturas.html#opcions_2","title":"Opcions:","text":"a) CGI (Common Gateway Interface). b) API Gateway. c) Servlets. d) Totes les anteriors."},{"location":"01arquitecturas.html#exercici-4-funcionalitats-dels-servidors-daplicacions","title":"Exercici 4: Funcionalitats dels servidors d'aplicacions","text":""},{"location":"01arquitecturas.html#pregunta_3","title":"Pregunta:","text":"<p>Quines s\u00f3n algunes de les funcionalitats proporcionades pels servidors d'aplicacions?</p>"},{"location":"01arquitecturas.html#opcions_3","title":"Opcions:","text":"a) Gesti\u00f3 de sessions. b) Autenticaci\u00f3 d'usuaris. c) Generaci\u00f3 de p\u00e0gines est\u00e0tiques. d) Gesti\u00f3 de transaccions."},{"location":"01arquitecturas.html#exercici-5-llenguatges-i-tecnologies-relacionades-amb-la-programacio-web-en-entorn-servidor","title":"Exercici 5: Llenguatges i tecnologies relacionades amb la programaci\u00f3 web en entorn servidor","text":""},{"location":"01arquitecturas.html#pregunta_4","title":"Pregunta:","text":"<p>Quins dels seg\u00fcents llenguatges i tecnologies s\u00f3n utilitzats en la programaci\u00f3 web en entorn servidor?</p>"},{"location":"01arquitecturas.html#opcions_4","title":"Opcions:","text":"a) PHP. b) SQL. c) HTML. d) JavaScript. e) Java."},{"location":"01arquitecturas.html#exercici-6-integracio-dels-llenguatges-de-marques-amb-els-llenguatges-de-programacio","title":"Exercici 6: Integraci\u00f3 dels llenguatges de marques amb els llenguatges de programaci\u00f3","text":""},{"location":"01arquitecturas.html#pregunta_5","title":"Pregunta:","text":"<p>Com s'integren els llenguatges de marques com HTML amb els llenguatges de programaci\u00f3 com PHP?</p>"},{"location":"01arquitecturas.html#opcions_5","title":"Opcions:","text":"a) Utilitzant etiquetes especials de PHP dins del codi HTML. b) Convertint tot el codi HTML a PHP. c) No es poden integrar. d) Utilitzant un altre llenguatge de programaci\u00f3 per connectar-los."},{"location":"01arquitecturas.html#exercici-7-eines-i-frameworks-de-programacio-en-entorn-servidor","title":"Exercici 7: Eines i frameworks de programaci\u00f3 en entorn servidor","text":""},{"location":"01arquitecturas.html#pregunta_6","title":"Pregunta:","text":"<p>Quines s\u00f3n algunes de les eines i frameworks m\u00e9s utilitzats en la programaci\u00f3 web en entorn servidor?</p>"},{"location":"01arquitecturas.html#opcions_6","title":"Opcions:","text":"a) Laravel. b) Django. c) React. d) Node.js. e) Spring Boot."},{"location":"01bisEntornDesenvolupament.html","title":"Entorn de desenvolupament","text":"<p>Pera fer correr les aplicacions de servidor ens cal, com a m\u00ednim, un servidor web, l'interpret de php i un motor de base de dades. Hem de distinguir l'entorn de desenvolupament, on anem a programar i mantindre la nostra aplicaci\u00f3, de l'entorn de producci\u00f3, on anem a executar-la. Normalment el primer dep\u00e9n de nosaltres mentre que el segon pot dependre de l'empresa on s'allotjar\u00e0 la nostra web. Per a preparar el nostre entorn de desenvolupament podem optar per:</p> <ul> <li>Qualsevol soluci\u00f3 LAMP (Linux, Apache, Mysql, PHP). Als que haurem d'afegir, una vegada els projectes es facen grans composer, git i les opcions de la part de client.</li> <li>Una m\u00e0quina virtual ja configurada.</li> <li>Una soluci\u00f3 docker.</li> </ul> <p>La primera soluci\u00f3 \u00e9s senzilla d'implementar per\u00f2 no hauria de ser la nostra primera opci\u00f3 per:</p> <ul> <li>Estem possant en funcionament en la nostra m\u00e0quina una s\u00e8rie de serveis que normalment no fariem, baixant el rendiment de la m\u00e0quina i obrint vulnerabilitats.</li> <li>Si treballem en grup, les instal\u00b7lacions i el funcionament no s\u00f3n iguals, depenen del sistema operatiu que t\u00e9 instal\u00b7lat cadasc\u00fa. All\u00f2 que li funciona a \u00fa  pot ser no li funciona a un altre. Aix\u00f2 \u00e9s inevitable quan el projecte es complica i es perd molt de temps.</li> <li>Passa el mateix quan passem a l'entorn de producci\u00f3.</li> </ul> <p>La segona soluci\u00f3 soluciona els dos primers problemes, doncs tots els desenvolupadors poden tindre virtualitzada, la mateixa m\u00e0quina. Encara que si la m\u00e0quina no la fem nosaltres sin\u00f3 que utilitzem alguna ja configurada (vagrant) o si ens cal instal\u00b7lar alguna cosa m\u00e9s, ho hauria de fer tot l'equip.</p> <p>Aix\u00ed i tot, tindriem les seg\u00fcents desaventatges:</p> <ul> <li>A l'instal\u00b7lar una maquina virtual sencera ocupa recursos del sistema.</li> <li>La m\u00e0quina instal\u00b7la m\u00e9s coses de les necess\u00e0ries habitualment.</li> <li>No reprodueix l'entorn de producci\u00f3.</li> </ul> <p>Pot ser molt \u00fatil, per exemple, quan la fem servir per desenvolupar en un framework, que ja ve configurat per fer-lo funcionar inmediatament i amb totes les caracter\u00edstiques instal\u00b7lades.</p> <p>La tercera opci\u00f3 t\u00e9 les seg\u00fcents caracter\u00edstiques:</p> <ul> <li>Al principi \u00e9s m\u00e9s dif\u00edcil de possar en funcionamet ja que calen coneixements de docker.</li> <li>Tots els desenvolupadors comparteixen entorn encara que utilitzen m\u00e0quines o sistemes operatius diferents.</li> <li>Si hi ha algun canvi de configuraci\u00f3 de l'entorn \u00e9s f\u00e1cilment transladable a tots els desenvolupadors.</li> <li>Es poden crear tants entorns  de desenvolupament com projectes diferents hi hajen.</li> <li>Els contenidors ocupen pocs recursos.</li> <li>Els projectes es poden possar en producci\u00f3 utilitzan una soluci\u00f3 docker de manera inmediata.</li> </ul>"},{"location":"01bisEntornDesenvolupament.html#xampp","title":"XAMPP","text":"<p>XAMPP (https://www.apachefriends.org/es/index.html) \u00e9s una distribuci\u00f3 composta amb el programari necessari per a desenvolupar en entorn servidor. Es compon de les seg\u00fcents eines sobre la base de les seues sigles:</p> <ul> <li>X per al sistema operatiu (d'aqu\u00ed ve que es conega altrament com LAMP o WAMP).</li> <li>A per a Apatxe.</li> <li>M per a MySQL / MariaDB. Tamb\u00e9 inclou phpMyAdmin per a l'administraci\u00f3 de la base de dades des d'una interf\u00edcie web.</li> <li>P per a PHP.</li> <li>l'\u00faltima P per a Perl.</li> </ul> <p>Des de la pr\u00f2pia p\u00e0gina es pot descarregar l'arxiu executable per al sistema operatiu del nostre ordinador. Es recomana llegir la FAQ de cada sistema operatiu amb instruccions per a la seua posada en marxa.</p> <p>XAMPP en Windows</p> <p>Si treballes amb el teu propi ordinador, XAMPP \u00e9s una soluci\u00f3 m\u00e9s senzilla que Docker, sobretot si treballes amb Windows com a sistema operatiu.</p>"},{"location":"01bisEntornDesenvolupament.html#docker","title":"Docker","text":"<p>Docker (https://www.docker.com) \u00e9s un gestor de contenidors, considerant un contenidor com un m\u00e8tode de virtualitzaci\u00f3 del sistema operatiu.</p> <p>L'\u00fas de contenidors requereix menys recursos que una m\u00e0quina virtual, per tant, el seu llan\u00e7ament i detenci\u00f3 s\u00f3n m\u00e9s r\u00e0pids que les m\u00e0quines virtuals.</p> <p>Aix\u00ed doncs, Docker permet crear, provar i implementar aplicacions r\u00e0pidament, a partir d'una s\u00e8rie de plantilles que es coneixen com a imatges de Docker.</p> <p>Per a aix\u00f2 \u00e9s necessari tindre instal\u00b7lat Docker Desktop (https://www.docker.com/products/docker-desktop) en els nostres entorns de desenvolupament (el qual ja inclou en nucli de Docker i l'eina docker compose). Per a instal\u00b7lar-ho en Windows, \u00e9s necessari instal\u00b7lar pr\u00e8viament WSL 2, el qual \u00e9s un subsistema de Linux dins de Windows.</p> <p>Al llarg del curs anirem creant diferents contenidors amb els serveis necessaris, de manera que cada vegada nom\u00e9s treballem amb el programari m\u00ednim.</p> <p>Versions</p> <p>Al llarg del curs usarem PHP <code>8.1</code>. Respecte a Docker, per a escriure les anotacions hem utilitzat la versio <code>20.10</code> i la versio <code>2.19</code> de docker compose. Finalment, la versi\u00f3 de Docker Desktop que hem utilitzat \u00e9s la <code>4.0</code>.</p>"},{"location":"01bisEntornDesenvolupament.html#installacio-de-docker","title":"Instal\u00b7laci\u00f3 de docker","text":"<p>La instal\u00b7laci\u00f3 de docker dependr\u00e0 del sistema operatiu que estem utilitzant. Ac\u00ed anem a vore la que efecturan els que utilitzen linux, amb el sistema operatiu linux-mint o ubuntu , que \u00e9s el que ve instal\u00b7lat en les imatges suministrades. Per a mac o windows s'haur\u00e0 de mirar la p\u00e0gina web de docker</p> <p>Ens donem privilegis</p> <pre><code>sudo su\n</code></pre> <p>Utilitzant els repositoris de docker l'instal\u00b7lem:</p> <pre><code>echo \"deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable\" | tee /etc/apt/sources.list.d/docker.list\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\n\napt update\n\napt install docker-ce docker-ce-cli containerd.io pigz\n</code></pre> <p>Donem permisos a l'usuari afegint-lo al grup de docker</p> <p><pre><code>usermod -aG docker $USER\n</code></pre> On $USER \u00e9s el teu usuari.</p> <p>Tamb\u00e9 haurem d'instal\u00b7lar el docker-compose <pre><code>curl -SL \"https://github.com/docker/compose/releases/download/v2.10.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n\nchmod +x /usr/local/bin/docker-compose\n</code></pre></p> <p>I provem</p> <pre><code>docker --version\n</code></pre> <p>Faltar\u00e0 engegar el servei de docker per a poder executar contenidors</p> <pre><code>sudo systemctl start docker.service\n</code></pre>"},{"location":"01bisEntornDesenvolupament.html#plantilla-servidor-web-php","title":"Plantilla Servidor Web + PHP","text":"<p>Docker es basa en l'\u00fas d'imatges per a crear contenidors. Docker Compose simplifica el treball amb m\u00faltiples contenidors, i per aix\u00f2, per a facilitar l'arranc, ens centrarem en Docker Compose utilitzant una plantilla que \u00fanicament contindr\u00e0 com a serveis Nginx i PHP. Per a facilitar la posada en marxa, us facilite un repositori en github classroom Nginx/PHP disponible per a la seua desc\u00e0rrega. L'haureu de possar en un directori f\u00e0cilment localitzable i amb un nom significatiu, ja que ser\u00e0 el vostre directori de treball.</p> <p>Dins d'este repositori, el fitxer 'docker-compose.yaml' indica quines m\u00e0quines ha de montar i t\u00e9 el seg\u00fcent aspecte</p> Nginx i PHP <pre><code># Services\nservices:\n\n# Nginx Service\nnginx:\nimage: nginx:1.19\nports:\n  - 80:80\nvolumes:\n  - ./src:/var/www/php\n  - ./.docker/nginx/conf.d:/etc/nginx/conf.d\ndepends_on:\n  - php\n\n# PHP Service\nphp: \nbuild: ./.docker/php/\nworking_dir: /var/www/php\nexpose:\n  - 9000\nvolumes:\n  - ./src:/var/www/php\n  - ./.docker/php/conf.d/Xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n  - ./.docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini\n\n# M\u00e1s info en\n# https://tech.osteel.med/posts/docker-for-local-web-development-part-1-a-basic-lemp-stack\n\n# Lanzar con\n# docker-compose up -d\n\n# Ver los logs con\n# docker-compose logs -f\n</code></pre> <p>Per arrencar les m\u00e0quines o podem fer des de la consola amb</p> <pre><code>docker compose up -d\n</code></pre> <p>Si volem accedir a un terminal interactiu dins del contenidor:</p> <pre><code>docker exec -it nombreContenedor bash\n</code></pre> <p>Altres comandos que podem arribar a utilitzar s\u00f3n:</p> <ul> <li><code>docker ps</code>: Veure els contenidors que es estan executant</li> <li><code>docker ps -a</code>: Veure tots els contenidors</li> <li><code>docker start nombreContenedor</code>: Arrancar un contenidor</li> <li><code>docker images</code>: Veure les imatges que tenim descarregades</li> </ul> <p>Una altra forma m\u00e9s senzilla per a llan\u00e7ar de nou els contenidors i gestionar-los una vegada creats \u00e9s utilitzar la interf\u00edcie gr\u00e0fica que ofereix Docker Desktop:</p> Arranc de contenidor mitjan\u00e7ant Docker Desktop <p>Docker stack</p> <p>Existeixen diverses opcions mitjan\u00e7ant Docker que ofereixen solucions completes i empaquetes per a tot el stack de desenvolupament. En posteriors sessions utilitzarem tant Devilbox (http://devilbox.org) com Laradock (https://laradock.io)</p> <p>Per\u00f2 vull saver com funciona...</p> <p>En el m\u00f2dul de Desplegament d'aplicacions estudiareu en profunditat, a m\u00e9s de Docker, Apatxe i altres serveis que ens serviran d'ajuda per al desenvolupament en entorn servidor.</p>"},{"location":"01bisEntornDesenvolupament.html#tot-funciona","title":"Tot funciona","text":"<p>Heu de comprovar que a l'accedir a <code>http://localhost</code> en el vostre navegador se us obre una p\u00e0gina de salutaci\u00f3.</p>"},{"location":"01bisEntornDesenvolupament.html#entorn-de-desenvolupament_1","title":"Entorn de desenvolupament","text":"<p>En este curso utilitzarem PHP Storm com a entorn de desenvolupament. Existixen altres alternatives, com Visual Studio Code.</p>"},{"location":"01bisEntornDesenvolupament.html#installacio","title":"Instal\u00b7laci\u00f3","text":"<p>Podem fer-ho de manera autom\u00e0tica utilitzant snap. Per fer-ho amb linux-mint</p> <p><pre><code>sudo rm /etc/apt/preferences.d/nosnap.pref\nsudo apt update\nsudo apt install snapd\nsudo snap install phpstorm --classic\n</code></pre> Tamb\u00e9 es pot instal\u00b7lar baixant-se el paquet de la p\u00e0gina web.</p>"},{"location":"01bisEntornDesenvolupament.html#llicencia","title":"Llic\u00e8ncia","text":"<p>Podeu sol\u00b7licitar una llic\u00e8ncia a i.gomismullor@edu.gva.es</p>"},{"location":"01bisEntornDesenvolupament.html#entorn-de-proves","title":"Entorn de proves","text":"<p>La m\u00e0quina docker ve configurada amb codeception i una col\u00b7leci\u00f3 de proves per als exercicis que desenvoluparem al llarg de les primeres unitats. S'ha creat un shell per executar totes les proves</p> <pre><code>sh test.sh\n</code></pre>"},{"location":"01bisEntornDesenvolupament.html#github-classroom","title":"GitHub Classroom","text":"<p>Us podeu registrar</p> <p>Metodologia de treball amb el github classroom</p> <ul> <li>Se proporcionar\u00e0 a l'alumnat un enlla\u00e7 amb la invitaci\u00f3.</li> <li>Accedint a l'enlla\u00e7 a cada alumne se li crear\u00e0 un repositori individual en l'organitzaci\u00f3.</li> <li>L'alumnat treballa en el seu repositori assignat. Se'l pot baixar per treballar en local.</li> <li>Inicialment, l'alumne crea una branca nova sobre la que va a treballar.</li> <li>Quan vullga sol.licitar ajuda o revisi\u00f3 del professor, l'alumne genera una pull request a la branca principal del seu repositori en la que cita al professor per tal que reba una notificaci\u00f3.</li> <li>El profesor proporciona retroalimentaci\u00f3 mitjan\u00e7ant comentaris en la pull request o en un determinat commit individual.</li> <li>Opcionalment es poden utilitzar els issues y les cites d'usuari per sol\u00b7licitar la intervenci\u00f3 del profesor.</li> <li>Quan l'alumne finalitza la tasca, genera una \u00faltim pull request</li> <li>El profesor revisa la pull request i opcionalment fa comentaris.</li> </ul>"},{"location":"01bisEntornDesenvolupament.html#referencies","title":"Refer\u00e8ncies","text":"<ul> <li>Curs de introducci\u00f3 a Docker, per Sergi Garc\u00eda Barea : https://sergarb1.github.io/CursoIntroduccionADocker/</li> <li>Article Arquitectures Web i sa evoluci\u00f3</li> </ul>"},{"location":"01bisEntornDesenvolupament.html#videos","title":"Videos","text":"<ul> <li> <p>Triar un llenguatge de programaci\u00f3</p> </li> <li> <p>Instal.Laci\u00f3 entorn de desenvolupament</p> </li> </ul>"},{"location":"01exercicis.html","title":"Exercicis","text":""},{"location":"01exercicis.html#sa1-comparativa-darquitectures-web-en-entorn-servidor-grups-de-3-persones","title":"SA1 \u2013 Comparativa d\u2019Arquitectures Web en Entorn Servidor (Grups de 3 persones)","text":""},{"location":"01exercicis.html#objectiu-ra1","title":"\ud83c\udfaf Objectiu (RA1)","text":"<p>Recon\u00e9ixer les arquitectures web m\u00e9s habituals en entorn servidor, identificant els seus components, caracter\u00edstiques i escenaris d\u2019\u00fas.</p> <p>+---------------------+   +----------------------+   +---------------------------+ |    Monol\u00edtica       |   |        MVC           |   |       Microserveis        | +---------------------+   +----------------------+   +---------------------------+ | [ Client ]          |   | [ Client ]           |   | [ Client ]                | |        |            |   |      |               |   |       |                  | |     [Servidor]      |   |   [Servidor]         |   |   [API Gateway]           | |  (Tot en un fitxer) |   | \u250c\u2500\u2500Controller\u2500\u2500\u2510     |   |   \u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2510             | |                     |   | \u2502  Model        \u2502     |   |   \u2502User\u2502Product\u2502          | |                     |   | \u2502  View         \u2502     |   |   \u2502Srv \u2502Srv    \u2502          | +---------------------+   +----------------------+   +---------------------------+</p>"},{"location":"01exercicis.html#1-explora-el-seguents-repositoris","title":"1. Explora el seg\u00fcents repositoris","text":"<ul> <li>Arquitectura monol\u00edtica</li> <li>Arquitectura MCV</li> <li>Arquitectura microserveis</li> </ul>"},{"location":"01exercicis.html#2-fes-un-fork-de-cadascu-dells","title":"2. Fes un fork de cadasc\u00fa d'ells","text":""},{"location":"01exercicis.html#3-utilitza-codespaces-per-generar-un-entorn-de-prova","title":"3. Utilitza codespaces per generar un entorn de prova","text":""},{"location":"01exercicis.html#4-envia-peticions-i-prova-larquitectura","title":"4. Envia peticions i prova l'arquitectura","text":""},{"location":"01exercicis.html#5-completa-la-seguent-taula","title":"5. Completa la seg\u00fcent taula","text":"<p>\ud83e\uddfe Fitxa comparativa d'arquitectures web</p> Arquitectura Components visibles Separaci\u00f3 de responsabilitats Avantatges Inconvenients Casos d\u2019\u00fas recomanats Monol\u00edtica MVC ` Microserveis"},{"location":"01exercicis.html#6-reflexio-final","title":"6. Reflexi\u00f3 final","text":"<p>Tria un escenari (ex. botiga online, sistema de reserves...) i explica:</p> <ul> <li>Quina arquitectura faries servir?</li> <li>Per qu\u00e8 \u00e9s la m\u00e9s adequada en aquest cas?</li> </ul>"},{"location":"01exercicis.html#rubrica-davaluacio-sa1-arquitectures-web","title":"\u2705 R\u00fabrica d\u2019avaluaci\u00f3 \u2013 SA1: Arquitectures web","text":"Criteri Puntuaci\u00f3 m\u00e0xima Obri correctament el repositori a GitHub Codespaces 2 punts Identifica i descriu components b\u00e0sics de l'arquitectura 3 punts Relaciona cada projecte amb els conceptes te\u00f2rics corresponents 3 punts Reflexiona i compara arquitectures segons escenari proposat 2 punts Puntuaci\u00f3 total 10 punts"},{"location":"02php.html","title":"SA2. Programaci\u00f3 web amb PHP","text":"Duraci\u00f3 i criteris d'avaluaci\u00f3 <p>Duraci\u00f3 estimada: 30 hores</p> <pre><code>&lt;hr /&gt;\n\n| Resultat d'aprenentatge | Criteris d'avaluaci\u00f3|\n| -------                 | -------             |\n| 2. Escriu sent\u00e8ncies executables per un servidor Web reconeixent i aplicant procediments d'integraci\u00f3 del codi en llenguatges de marques. | a) S'han reconegut els mecanismes de generaci\u00f3 de p\u00e0gines Web a partir de llenguatges de marques amb codi embegut. &lt;br/&gt; b) S'han identificat les principals tecnologies associades.  &lt;br/&gt; c) S'han utilitzat etiquetes per a la inclusi\u00f3 de codi en el llenguatge de marques.  &lt;br/&gt; d) S'ha reconegut la sintaxi del llenguatge de programaci\u00f3 que s'ha d'utilitzar.  &lt;br/&gt; e) S'han escrit sent\u00e8ncies simples i s'ha comprovat els seus efectes en el document resultant.  &lt;br/&gt; f) S'han utilitzat directives per a modificar el comportament predeterminat.  &lt;br/&gt; g) S'han utilitzat els diferents tipus de variables i operadors disponibles en el llenguatge.  &lt;br/&gt; h) S'han identificat els \u00e0mbits d'utilitzaci\u00f3 de les variables.  &lt;br/&gt; |\n| 3. Genera p\u00e0gines web de forma din\u00e0mica seguint especificacions rebudes. | a) S'han identificat els mecanismes de separaci\u00f3 de la l\u00f2gica de negoci.&lt;br/&gt;b) S'han utilitzat tecnologies adequades per a la generaci\u00f3 din\u00e0mica de p\u00e0gines web.&lt;br/&gt;c) S'han utilitzat t\u00e8cniques d'acc\u00e9s a dades.&lt;br/&gt;d) S'han generat p\u00e0gines web din\u00e0miques que compleixen amb les especificacions rebudes.&lt;br/&gt;e) S'ha comprovat el funcionament de les p\u00e0gines web generades.&lt;br/&gt;f) S'han seguit les convencions de format i codificaci\u00f3 establertes. |\n| 4. Desenvolupa aplicacions Web embegudes en llenguatges de marques analitzant i incorporant funcionalitats segons especificacions | a) S'han identificat els mecanismes disponibles per al manteniment de la informaci\u00f3 que concerneix un client web concret i s'han assenyalat els seus avantatges.&lt;br /&gt; b) S'han utilitzat mecanismes per a mantindre l'estat de les aplicacions web.&lt;br /&gt; c) S'han utilitzat mecanismes per a emmagatzemar informaci\u00f3 en el client web i per a recuperar el seu contingut.&lt;br /&gt; d) S'han identificat i caracteritzat els mecanismes disponibles per a l'autenticaci\u00f3 d'usuaris.&lt;br /&gt; e) S'han escrit aplicacions que integren mecanismes d'autenticaci\u00f3 d'usuaris.&lt;br /&gt; f) S'han utilitzat eines i entorns per a facilitar la programaci\u00f3, prova i depuraci\u00f3 del codi. |\n</code></pre>"},{"location":"02php.html#sa21introduccio-a-php","title":"SA2.1.Introducci\u00f3 a PHP","text":""},{"location":"02php.html#que-es-php","title":"\ud83d\udc18 Qu\u00e8 \u00e9s PHP?","text":"<p>PHP (Hypertext Preprocessor) \u00e9s un llenguatge de programaci\u00f3 de codi obert, especialment dissenyat per al desenvolupament web del costat del servidor. Es pot incrustar f\u00e0cilment en codi HTML, cosa que el fa una opci\u00f3 popular per crear aplicacions web din\u00e0miques i interactives. PHP s'utilitza per gestionar el contingut din\u00e0mic, les bases de dades, el seguiment de sessions i fins i tot per crear aplicacions completes.</p>"},{"location":"02php.html#importancia-en-el-desenvolupament-web","title":"Import\u00e0ncia en el desenvolupament web","text":"<p>PHP \u00e9s un dels llenguatges m\u00e9s utilitzats en el desenvolupament web per diverses raons:</p> <ul> <li>Facilitat d'aprenentatge: PHP \u00e9s relativament f\u00e0cil d'aprendre per als principiants en programaci\u00f3 web. La seva sintaxi \u00e9s senzilla i similar a altres llenguatges com C i Perl.</li> <li>Gran comunitat i suport: PHP t\u00e9 una gran comunitat de desenvolupadors que proporcionen suport, biblioteques, extensions i eines. A m\u00e9s, hi ha nombrosos recursos en l\u00ednia, tutorials i documentaci\u00f3.</li> <li>Integraci\u00f3 amb bases de dades: PHP es pot integrar f\u00e0cilment amb una \u00e0mplia varietat de bases de dades, cosa que el fa ideal per a aplicacions web basades en dades.</li> <li>Flexibilitat i escalabilitat: PHP \u00e9s altament flexible i es pot utilitzar per desenvolupar tant aplicacions petites com projectes grans i complexos. Tamb\u00e9 \u00e9s escalable, cosa que permet gestionar un gran volum de tr\u00e0nsit.</li> <li>Cost efectiu: Com que \u00e9s de codi obert, PHP \u00e9s gratu\u00eft per utilitzar i distribuir. Aix\u00f2 redueix els costos de desenvolupament per a les empreses i els desenvolupadors.</li> </ul>"},{"location":"02php.html#llenguatges-imbricats-en-html","title":"\ud83c\udf10 Llenguatges imbricats en HTML","text":"<p>PHP permet incrustar codi dins de documents HTML, permetent la generaci\u00f3 de contingut din\u00e0mic. El codi PHP es delimita amb <code>&lt;?php ... ?&gt;</code>. \u00c9s com\u00fa utilitzar codi PHP dins de HTML per generar contingut din\u00e0mic. Tamb\u00e9 es pot incloure HTML dins de fitxers PHP. <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n    &lt;h1&gt;Benvingut a la meva web&lt;/h1&gt;\n    &lt;p&gt;La data d'avui \u00e9s: &lt;?= date('Y-m-d') ?&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> El codi HTML pot ser generat dins d'instruccions PHP. <pre><code>&lt;?php\necho \"&lt;html&gt;&lt;body&gt;\";\necho \"&lt;h1&gt;Benvingut a la meva web&lt;/h1&gt;\";\necho \"&lt;p&gt;La data d'avui \u00e9s: \" . date('Y-m-d') . \"&lt;/p&gt;\";\necho \"&lt;/body&gt;&lt;/html&gt;\";\n?&gt;\n</code></pre></p> <p>Nom\u00e9s etiquetes d'obertura</p> <p>Si el nostre codi nom\u00e9s contindr\u00e0 codi PHP i res d'html, com per exemple, quan codifiquem classes o interf\u00edcies, nom\u00e9s posarem l'etiqueta d'obertura, per a aix\u00ed indicar que \u00e9s una arxiu de php pur.</p>"},{"location":"02php.html#etiquetes-per-a-insercio-de-codi","title":"\ud83c\udff7\ufe0f Etiquetes per a inserci\u00f3 de codi","text":"<p>Per inserir codi PHP dins de HTML, utilitzem les etiquetes: <pre><code>&lt;?php\n// Codi PHP aqu\u00ed\n?&gt;\n</code></pre> Per imprimir directament: <pre><code>&lt;?= $variable ?&gt;\n</code></pre> Exemple: <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n    &lt;h1&gt;Benvingut a la meva web&lt;/h1&gt;\n    &lt;p&gt;La data d'avui \u00e9s: &lt;?= date('Y-m-d') ?&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p>"},{"location":"02php.html#tipus-de-dades-conversions-entre-tipus-de-dades","title":"\ud83d\udd22 Tipus de dades. Conversions entre tipus de dades","text":"<p>PHP t\u00e9 diversos tipus de dades: enter, flotant, cadena, boole\u00e0, matriu, objecte, nul. <pre><code>$enter = 10; // Enter\n$flotant = 3.14; // Flotant\n$cadena = \"Hola, m\u00f3n!\"; // Cadena\n$boolea = true; // Boole\u00e0\n$matriu = array(1, 2, 3); // Matriu\n$objecte = new stdClass(); // Objecte\n$nul = null; // Nul\n</code></pre> Conversions: <pre><code>$integer = (int) $variable;\n$float = (float) $variable;\n$string = (string) $variable;\n</code></pre> Exemple: <pre><code>$cadena = \"123\";\n$enter = (int)$cadena; // Converteix la cadena \"123\" a l'enter 123\n</code></pre></p>"},{"location":"02php.html#constants","title":"\ud83d\uded1 Constants","text":"<p>S\u00f3n variables el valor dels quals no varien. Existeixen dues possibilitats:</p> <ul> <li><code>define(NOMBRE, valor);</code></li> <li><code>const NOMBRE; // PHP &gt; 5.3</code></li> </ul> <pre><code>&lt;?php\ndefine(\"PI\", 3.1416);\nconst IVA = 0.21;\n\necho PI, \" \", IVA; // No se pone el s\u00edmbolo dolar\n</code></pre> <ul> <li>Es declaren sempre en MAJ\u00daSCULES</li> <li>Hi ha un conjunt de constants ja predefinides, tamb\u00e9 conegudes com magic constants: https://www.php.net/manual/es/language.constants.predefined.php</li> </ul>"},{"location":"02php.html#variables-operadors-ambits-de-les-variables","title":"\ud83d\udce6 Variables. Operadors.  \u00c0mbits de les variables","text":"<ul> <li>No \u00e9s necessari declarar-les pr\u00e8viament.</li> <li>Comencen per <code>$</code>, per exemple <code>$nom</code>. Despr\u00e9s del <code>$</code>, el seg\u00fcent car\u00e0cter ha de ser una lletra en min\u00fascula (recomanaci\u00f3) o gui\u00f3 baix <code>_</code>. Despr\u00e9s ja es poden posar n\u00fameros.</li> <li>S\u00f3n case sensitive: <code>$*var != $*vAR</code></li> <li>No es declara el seu tipus, el tipat \u00e9s din\u00e0mic. S'assigna en temps d'execuci\u00f3 depenent del valor assignat.</li> <li>Convenient inicialitzar-les, sin\u00f3 donen error a l'utilitzar-les. <pre><code>$variable = \"valor\";\n</code></pre> Operadors:</li> <li>Aritm\u00e8tics: <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code></li> <li>Assignaci\u00f3: <code>=</code>, <code>+=</code>, <code>-=</code></li> <li>Comparaci\u00f3: <code>==</code>, <code>===</code>, <code>!=</code></li> <li>L\u00f2gics: <code>&amp;&amp;</code>, <code>||</code>, <code>!</code></li> <li>Concatenaci\u00f3: <code>.</code></li> </ul> <p>Els \u00e0mbits d'utilitzaci\u00f3 d'una variable s\u00f3n:</p> <ul> <li>Local: dins d'una funci\u00f3.</li> <li>Global: fora de qualsevol funci\u00f3.</li> <li>Est\u00e0tic: persisteixen el seu valor entre crides a la funci\u00f3.</li> </ul> <p>Exemple:</p> <p>Assignacions <pre><code>$x = 5;\n$y = \"Hola m\u00f3n\";\n</code></pre> Operacions aritm\u00e8tiques <pre><code>$suma = $x + 10;  // Resulta en 15\n$producte = $x * 2;  // Resulta en 10\n</code></pre> Operacions d'entrada i eixida: <pre><code>echo \"Hola, m\u00f3n!\";\nprint \"Hola, m\u00f3n!\";\n</code></pre> Operacions amb cadenes: <pre><code>$nom = \"Joan\";\n$salutacio = $y . \", \" . $nom;  // Resulta en \"Hola m\u00f3n, Joan\"\n</code></pre></p>"},{"location":"02php.html#funcions","title":"\ud83d\udee0\ufe0f Funcions","text":"<ol> <li>Sintaxi b\u00e0sica:<ul> <li>La paraula clau <code>function</code> es fa servir per a definir la funci\u00f3.</li> <li>Despr\u00e9s segueix el nom de la funci\u00f3, que pot contenir lletres, nombres i guions baixos (per\u00f2 no pot comen\u00e7ar amb un nombre).</li> <li>Entre els par\u00e8ntesis es poden passar arguments (opcionals).</li> <li>El cos de la funci\u00f3 es defineix entre claud\u00e0tors <code>{}</code>.</li> </ul> </li> </ol> <pre><code>function nomFuncio() {\n    // Codi de la funci\u00f3\n}\n</code></pre> <ol> <li>Amb arguments:<ul> <li>Els arguments es passen entre els par\u00e8ntesis i poden ser utilitzats dins de la funci\u00f3.</li> </ul> </li> </ol> <pre><code>function saluda($nom) {\n    echo \"Hola, $nom!\";\n}\n\nsaluda(\"Maria\");  // Mostra \"Hola, Maria!\"\n</code></pre> <ol> <li>Amb valor de retorn:<ul> <li>La paraula clau <code>return</code> permet retornar un valor des de la funci\u00f3. Es pot retornar qualsevol tipus de dades (enter, string, array, etc.).</li> </ul> </li> </ol> <pre><code>function suma($a, $b) {\n    return $a + $b;\n}\n\n$resultat = suma(5, 3);  // $resultat cont\u00e9 8\n</code></pre> <ol> <li>Funcions amb valors per defecte:<ul> <li>Si no es passa cap argument, la funci\u00f3 pot utilitzar un valor per defecte.</li> </ul> </li> </ol> <pre><code>function saludar($nom = \"amic\") {\n    echo \"Hola, \" . $nom;\n}\n\nsaludar();  // Mostra \"Hola, amic\"\nsaludar(\"Maria\");  // Mostra \"Hola, Maria\"\n</code></pre> <ol> <li>Tipus de dades en arguments i retorn (des de PHP 7):<ul> <li>\u00c9s possible especificar el tipus de dades dels arguments i el tipus de retorn. Aix\u00f2 ajuda a assegurar que la funci\u00f3 rep i retorna els tipus esperats.</li> </ul> </li> </ol> <pre><code>function sumar(int $a, int $b): int {\n    return $a + $b;\n}\n\n$resultat = sumar(5, 3);  // $resultat cont\u00e9 8\n</code></pre>"},{"location":"02php.html#directives-per-a-modificar-el-comportament-predeterminat-del-codi","title":"\u2699\ufe0f Directives per a modificar el comportament predeterminat del codi","text":"<p>Include i require: <pre><code>include 'fitxer.php';\nrequire 'fitxer.php';\n</code></pre> Include_once i require_once: <pre><code>include_once 'fitxer.php';\nrequire_once 'fitxer.php';\n</code></pre> Exemple: <pre><code>// contingut de fitxer.php\n&lt;?php\nfunction saludar() {\n    echo \"Hola!\";\n}\n?&gt;\n\n// contingut de principal.php\n&lt;?php\ninclude 'fitxer.php';\nsaludar(); // Mostra \"Hola!\"\n?&gt;\n</code></pre></p>"},{"location":"02php.html#mecanismes-de-decisio-if-match","title":"\ud83d\udd00 Mecanismes de decisi\u00f3 (if, match)","text":"<p>If, else, elseif: <pre><code>if ($condicio) {\n    // Codi si la condici\u00f3 \u00e9s certa\n} elseif ($altra_condicio) {\n    // Codi si la segona condici\u00f3 \u00e9s certa\n} else {\n    // Codi si cap de les condicions anteriors \u00e9s certa\n}\n</code></pre></p> <p>Match:  <pre><code>$result = match ($variable) {\n    valor1 =&gt; resultat1,\n    valor2 =&gt; resultat2,\n    valor3 =&gt; resultat3,\n    // ...\n    default =&gt; valorPerDefecte,\n};\n</code></pre></p> <p>Exemple simple: <pre><code>$color = 'roig';\n\n$resultat = match ($color) {\n    'roig' =&gt; 'El color \u00e9s vermell',\n    'blau' =&gt; 'El color \u00e9s blau',\n    'verd' =&gt; 'El color \u00e9s verd',\n    default =&gt; 'Color desconegut',\n};\n\necho $resultat;  // Sortida: El color \u00e9s vermell\n</code></pre> Exemple expressions complexes: <pre><code>$edat = 20;\n\n$categoria = match (true) {\n    $edat &gt;= 0 &amp;&amp; $edat &lt;= 12 =&gt; 'Nen',\n    $edat &gt;= 13 &amp;&amp; $edat &lt;= 17 =&gt; 'Adolescent',\n    $edat &gt;= 18 &amp;&amp; $edat &lt;= 64 =&gt; 'Adult',\n    $edat &gt;= 65 =&gt; 'Gent gran',\n    default =&gt; 'Edat desconeguda',\n};\n\necho $categoria;  // Sortida: Adult\n</code></pre> Exemples casos multiples: <pre><code>$dia = 'dimecres';\n\n$tipusDia = match ($dia) {\n    'dissabte', 'diumenge' =&gt; 'Cap de setmana',\n    'dilluns', 'dimarts', 'dimecres', 'dijous', 'divendres' =&gt; 'Dia laborable',\n    default =&gt; 'Dia desconegut',\n};\necho $tipusDia;  // Sortida: Dia laborable\n</code></pre></p>"},{"location":"02php.html#bucles-for-while-foreach","title":"\ud83d\udd04 Bucles (for, while, foreach)","text":"<p>For: <pre><code>for ($i = 0; $i &lt; 10; $i++) {\n    echo $i;\n}\n</code></pre> While: <pre><code>$i = 0;\nwhile ($i &lt; 10) {\n    echo $i;\n    $i++;\n}\n</code></pre> Foreach: <pre><code>$matriu = array(1, 2, 3);\nforeach ($matriu as $valor) {\n    echo $valor;\n}\n</code></pre> Exemple: <pre><code>$fruites = array(\"poma\", \"pl\u00e0tan\", \"maduixa\");\nforeach ($fruites as $fruita) {\n    echo $fruita;\n}\n</code></pre></p>"},{"location":"02php.html#arrays","title":"\ud83d\udcda Arrays","text":"<p>Per a emmagatzemar dades compostes, podem utilitzar tant arrays senzills com arrays associatius (similars a un mapa). En realitat tots els arrays s\u00f3n mapes ordenats compostos de parells clau-valor.</p> <p>Compte amb mesclar tipus</p> <p>Com el tipat \u00e9s din\u00e0mic, nostres arrays poden contenir dades de diferents tipus. No es recomana mesclar els tipus.</p> <p>De la mateixa manera que Java, es defineixen mitjan\u00e7ant claud\u00e0tors, s\u00f3n 0-index, i es pot assignar un valor a un posici\u00f3 determinada:</p> <pre><code>&lt;?php\n$frutas = array(\"naranja\", \"pera\", \"manzana\");\n\n$frutas2 = [\"naranja\", \"pera\", \"manzana\"];\n\n$frutas3 = [];\n$frutas3[0] = \"naranja\";\n$frutas3[1] = \"pera\";\n$frutas3[] = \"manzana\"; // lo a\u00f1ade al final\n</code></pre> <p>Podem obtindre la grand\u00e0ria del array mitjan\u00e7ant la funci\u00f3 <code>count(array)</code>. Per a rec\u00f3rrer el array farem \u00fas d'un bucle <code>for</code>:</p> <pre><code>&lt;?php\n$tam = count($frutas); // tama\u00f1o del array\n\nfor ($i=0; $i&lt;count($frutas); $i++) {\n    echo \"Elemento $i: $frutas[$i] &lt;br /&gt;\";\n}\n</code></pre> <p>Una altra manera de rec\u00f3rrer els arrays, fins i tot m\u00e9s elegant, \u00e9s fer \u00fas de <code>foreach</code>. La seua sintaxi \u00e9s <code>foreach (array as element)</code>:</p> <pre><code>&lt;?php\n// Mitjan\u00e7ant foreach no necessitem saber la grand\u00e0ria del array\nforeach ($frutas as $fruta) {\n    echo \"$fruta &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"02php.html#arrays-associatius","title":"\ud83d\uddc2\ufe0f Arrays associatius","text":"<p>Cada element \u00e9s un parell clau-valor. En comptes d'accedir per la posici\u00f3, el fem mitjan\u00e7ant una clau. Aix\u00ed doncs, per a cada clau s'emmagatzema un valor.</p> <p>A l'hora de rec\u00f3rrer aquest tipus de arrays, mitjan\u00e7ant <code>foreach</code> separem cada element en una parella <code>clau =&gt; valor</code>:</p> <pre><code>&lt;?php\n$capitales = [\"Italia\" =&gt; \"Roma\",\n    \"Francia\" =&gt; \"Paris\",\n    \"Portugal\" =&gt; \"Lisboa\"];\n$capitalFrancia = $capitales[\"Francia\"]; // se accede al elemento por la clave, no la posici\u00f3n\n\n$capitales[\"Alemania\"] = \"Berl\u00edn\"; // a\u00f1adimos un elemento\n\necho \"La capital de Francia es $capitalFrancia &lt;br /&gt;\";\necho \"La capital de Francia es {$capitales[\"Francia\"]} &lt;br /&gt;\";\n\n$capitales[] = \"Madrid\"; // se a\u00f1ade con la clave 0 !!! \u00a1\u00a1\u00a1No asignar valores sin clave!!!\n\nforeach ($capitales as $valor) { // si recorremos un array asociativo, mostraremos los valores\n    echo \"$valor &lt;br /&gt;\";\n}\n\nforeach ($capitales as $pais =&gt; $ciudad) { // separamos cada elemento en clave =&gt; valor\n    echo \"$pais : $ciudad &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"02php.html#com-utilitzar-les-cometes-en-php","title":"\ud83d\udcdd Com utilitzar les cometes en PHP","text":"<p>En PHP, les cometes dobles (<code>\"</code>) i les cometes simples (<code>'</code>) s'utilitzen per definir cadenes de car\u00e0cters, per\u00f2 tenen comportaments diferents a l'hora de processar variables:</p> <ul> <li>Cometes dobles (<code>\"</code>): Interpolen variables i seq\u00fc\u00e8ncies d'escapament especials. \u00c9s a dir, el contingut de la variable es mostrar\u00e0 dins de la cadena.</li> </ul> <pre><code>$nom = \"Maria\";\necho \"Hola, $nom!\";  // Sortida: Hola, Maria!\n</code></pre> <ul> <li>Cometes simples (<code>'</code>): No interpolen variables ni seq\u00fc\u00e8ncies d'escapament especials. La cadena es mostrar\u00e0 exactament com es defineix.</li> </ul> <pre><code>$nom = \"Maria\";\necho 'Hola, $nom!';  // Sortida: Hola, $nom!\n</code></pre>"},{"location":"02php.html#exemple-dus-de-cometes-dobles-per-imprimir-variables","title":"Exemple d'\u00fas de cometes dobles per imprimir variables","text":"<pre><code>$color = \"blau\";\n$frase = \"El meu color preferit \u00e9s $color.\";\necho $frase;  // Sortida: El meu color preferit \u00e9s blau.\n</code></pre>"},{"location":"02php.html#comentaris-en-el-codi","title":"\ud83d\udcac Comentaris en el codi","text":"<p>Comentaris d'una l\u00ednia: <pre><code>// Aix\u00f2 \u00e9s un comentari d'una l\u00ednia\n</code></pre> Comentaris de diverses l\u00ednies: <pre><code>/* Aix\u00f2 \u00e9s un comentari\n   de diverses l\u00ednies */\n</code></pre></p>"},{"location":"02php.html#variables-de-servidor","title":"\ud83d\udda5\ufe0f Variables de servidor","text":"<p>PHP emmagatzema la informaci\u00f3 del servidor i de les peticions HTTP en sis arrays globals:</p> <ul> <li><code>$_ENV</code>: informaci\u00f3 sobre les variables d'entorn</li> <li><code>$_GET</code>: par\u00e0metres enviats en la petici\u00f3 GET</li> <li><code>$_POST</code>: par\u00e0metres enviats en el envio POST</li> <li><code>$_COOKIE</code>: cont\u00e9 les cookies de la petici\u00f3, les claus del array s\u00f3n els noms de les cookies</li> <li><code>$_SERVER</code>: informaci\u00f3 sobre el servidor</li> <li><code>$_FILES</code>: informaci\u00f3 sobre els fitxers carregats via upload</li> </ul> <p>Si ens centrem en el array <code>$_SERVER</code> podem consultar les seg\u00fcents propietats:</p> <ul> <li><code>PHP_SELF</code>: nom del script executat, relatiu al document root (p.ej: <code>/tenda/carret.php</code>)</li> <li><code>SERVER_SOFTWARE</code>: (p.ej: Apatxe)</li> <li><code>SERVER_NAME</code>: domini, \u00e0lies DNS (p.ej: <code>www.elche.es</code>)</li> <li><code>REQUEST_METHOD</code>: GET</li> <li><code>REQUEST_URI</code>: URI, sense el domini</li> <li><code>QUERY_STRING</code>: tot el que va despr\u00e9s de <code>?</code> en la URL (p.ej: <code>heroe=Batman&amp;nomene=Bruce</code>)</li> </ul> <p>M\u00e9s informaci\u00f3 en https://www.php.net/manual/es/reserved.variables.server.php</p> <pre><code>&lt;?php\necho\u00a0$_SERVER[\"PHP_SELF\"].\"&lt;br&gt;\";\u00a0//\u00a0/u4/401server.php\necho\u00a0$_SERVER[\"SERVER_SOFTWARE\"].\"&lt;br&gt;\";\u00a0//\u00a0Apache/2.4.46\u00a0(Win64)\u00a0OpenSSL/1.1.1g\u00a0PHP/7.4.9\necho\u00a0$_SERVER[\"SERVER_NAME\"].\"&lt;br&gt;\";\u00a0//\u00a0localhost\n\necho\u00a0$_SERVER[\"REQUEST_METHOD\"].\"&lt;br&gt;\";\u00a0//\u00a0GET\necho\u00a0$_SERVER[\"REQUEST_URI\"].\"&lt;br&gt;\";\u00a0//\u00a0/u4/401server.php?heroe=Batman\necho\u00a0$_SERVER[\"QUERY_STRING\"].\"&lt;br&gt;\";\u00a0//\u00a0heroe=Batman\n</code></pre> <p>Altres propietats relacionades:</p> <ul> <li><code>PATH_INFO</code>: ruta extra despr\u00e9s de la petici\u00f3. Si la URL \u00e9s <code>http://www.php.com/php/pathinfo.php/algo/cosa?foo=bar</code>, llavors <code>$_SERVER['PATH_INFO']</code> ser\u00e0 <code>/alguna cosa/cosa</code>.</li> <li><code>REMOTE_HOST</code>: hostname que va fer la petici\u00f3</li> <li><code>REMOTE_ADDR</code>: IP del client</li> <li><code>AUTH_TYPE</code>: tipus d'autenticaci\u00f3 (p.ej: Basic)</li> <li><code>REMOTE_USER</code>: nom de l'usuari autenticat</li> </ul> <p>Apatxe crea una clau per a cada cap\u00e7alera HTTP, en maj\u00fascules i substituint els guions per subratllats:</p> <ul> <li><code>HTTP_USER_AGENT</code>: agent (navegador)</li> <li><code>HTTP_REFERER</code>: p\u00e0gina des de la qual es va fer la petici\u00f3</li> </ul> <pre><code>&lt;?php\necho\u00a0$_SERVER[\"HTTP_USER_AGENT\"].\"&lt;br&gt;\";\u00a0//\u00a0Mozilla/5.0\u00a0(Windows\u00a0NT\u00a010.0;\u00a0Win64;\u00a0x64)\u00a0AppleWebKit/537.36\u00a0(KHTML,\u00a0like\u00a0Gecko)\u00a0Chrome/87.0.4280.88\u00a0Safari/537.36\n</code></pre>"},{"location":"02php.html#formularis","title":"\ud83d\udccb Formularis","text":"<p>A l'hora d'enviar un formulari, hem de tindre clar quan usar GET o POST</p> <ul> <li> <p>GET: els par\u00e0metres es passen en la URL</p> <ul> <li>&lt;2048 car\u00e0cters, nom\u00e9s ASCII</li> <li>Permet emmagatzemar la direcci\u00f3 completa (marcador / historial)</li> <li>Idempotent: dues crides amb les mateixes dades sempre ha de donar el mateix resultat</li> <li>El navegador pot cachejar les cridades</li> </ul> </li> <li> <p>POST: par\u00e0metres ocults (no encriptats)</p> <ul> <li>Sense l\u00edmit de dades, permet dades bin\u00e0ries.</li> <li>No es poden escorcollar</li> <li>No idempotent \u2192 actualitzar la BBDD</li> </ul> </li> </ul> <p>Aix\u00ed doncs, per a recollir les dades accedirem al array depenent del m\u00e8tode del formulari que ens ha invocat:</p> <pre><code>&lt;?php\n$par = $_GET[\"parametro\"]\n$par = $_POST[\"parametro\"]\n</code></pre> <p>A l'hora d'enviar un formulari, hem de tindre clar quan usar GET o POST. Per als seg\u00fcents apartats ens basarem en el seg\u00fcent exemple:</p>"},{"location":"02php.html#validacio","title":"Validaci\u00f3","text":"<p>Respecte a la validaci\u00f3, \u00e9s convenient sempre fer validaci\u00f3 doble:</p> <ul> <li>En el client mitjan\u00e7ant JS</li> <li>En servidor, abans de cridar a la capa de negoci, \u00e9s convenient tornar a validar les dades.</li> </ul> <pre><code>&lt;?php\nif\u00a0(isset($_GET[\"parametro\"]))\u00a0{\n\u00a0\u00a0\u00a0\u00a0$par\u00a0=\u00a0$_GET[\"parametro\"];\n\u00a0\u00a0\u00a0\u00a0//\u00a0comprobar\u00a0si\u00a0$par\u00a0tiene\u00a0el\u00a0formato\u00a0adecuado,\u00a0su\u00a0valor,\u00a0etc...\n}\n</code></pre> <p>Llibreries de validaci\u00f3</p> <p>Existeixen diverses llibreries que faciliten la validaci\u00f3 dels formularis, com s\u00f3n respect/validation o particle/validator. Quan estudiem Laravel aprofundirem en la validaci\u00f3 de manera declarativa.</p>"},{"location":"02php.html#parametre-multivalor","title":"Par\u00e1metre multivalor","text":"<p>Existeixen elements HTML que envien diversos valors:</p> <ul> <li><code>select multiple</code></li> <li><code>checkbox</code></li> </ul> <p>Per a recollir les dades, el nom de l'element ha de ser un array.</p> <pre><code>&lt;select name=\"lenguajes[]\" multiple=\"true\"&gt;\n    &lt;option value=\"c\"&gt;C&lt;/option&gt;\n    &lt;option value=\"java\"&gt;Java&lt;/option&gt;\n    &lt;option value=\"php\"&gt;PHP&lt;/option&gt;\n    &lt;option value=\"python\"&gt;Python&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"c\" /&gt; C&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"java\" /&gt; Java&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"php\" /&gt; Php&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"python\" /&gt; Python&lt;br /&gt;\n</code></pre> <p>De manera que despr\u00e9s en recollir les dades:</p> <pre><code>&lt;?php\n$lenguajes = $_GET[\"lenguajes\"];\n\nforeach ($lenguajes as $lenguaje) {\n    echo \"$lenguaje &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"02php.html#tornant-a-emplenar-un-formulari","title":"Tornant a emplenar un formulari","text":"<p>Un sticky form \u00e9s un formulari que recorda els seus valors. Per a aix\u00f2, hem d'emplenar els atributs <code>value</code> dels elements HTML amb la informaci\u00f3 que contenien:</p> <pre><code>&lt;?php\nif (!empty($_POST['modulos']) &amp;&amp; !empty($_POST['nombre'])) {\n  // Aqu\u00ed se incluye el c\u00f3digo a ejecutar cuando los datos son correctos\n} else {\n  // Generamos el formulario\n  $nombre = $_POST['nombre'] ?? \"\";\n  $modulos = $_POST['modulos'] ?? [];\n  ?&gt;\n  &lt;form action=\"&lt;?php echo $_SERVER['PHP_SELF'];?&gt;\" method=\"POST\"&gt;\n   &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre del alumno:&lt;/label&gt;\n    &lt;input type=\"text\" name=\"nombre\" id=\"nombre\" value=\"&lt;?= $nombre ?&gt;\" /&gt; \n   &lt;/p&gt;\n   &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWES\" value=\"DWES\"\n    &lt;?php if(in_array(\"DWES\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n    &lt;label for=\"modulosDWES\"&gt;Desarrollo web en entorno servidor&lt;/label&gt;\n   &lt;/p&gt;\n   &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWEC\" value=\"DWEC\"\n    &lt;?php if(in_array(\"DWEC\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n    &lt;label for=\"modulosDWEC\"&gt;Desarrollo web en entorno cliente&lt;/label&gt;\n   &lt;/p&gt;\n   &lt;input type=\"submit\" value=\"Enviar\" name=\"enviar\"/&gt;\n  &lt;/form&gt;\n&lt;?php } ?&gt;\n</code></pre>"},{"location":"02php.html#pujant-arxius","title":"Pujant arxius","text":"<p>S'emmagatzemen en el servidor en el array <code>$_FILES</code> amb el nom del camp del tipus <code>file</code> del formulari.</p> <pre><code>&lt;form enctype=\"multipart/form-data\" action=\"&lt;?php echo $_SERVER['PHP_SELF']; ?&gt;\"  method=\"POST\"&gt;\n    Archivo: &lt;input name=\"archivoEnviado\" type=\"file\" /&gt;\n    &lt;br /&gt;\n    &lt;input type=\"submit\" name=\"btnSubir\" value=\"Subir\" /&gt;\n&lt;/form&gt;\n</code></pre> <p>Configuraci\u00f3 en <code>php.ini</code></p> <ul> <li><code>file_uploads</code>: on / off</li> <li><code>upload_max_filesize</code>: 2M</li> <li><code>upload_tmp_dir</code>: directori temporal. No \u00e9s necessari configurar-ho, agafar\u00e0 el predeterminat del sistema</li> <li><code>post_max_size</code>: grand\u00e0ria m\u00e0xima de les dades POST. Ha de ser major a upload_max_filesize.</li> <li><code>max_file_uploads</code>: nombre m\u00e0xim d'arxius que es poden carregar alhora.</li> <li><code>max_input_estafe</code>: temps m\u00e0xim emprat en la c\u00e0rrega (GET/POST i upload \u2192 normalment es configura en 60)</li> <li><code>memory_limit</code>: 128M</li> <li><code>max_execution_estafe</code>: temps d'execuci\u00f3 d'un script (no t\u00e9 en compte el upload)</li> </ul> <p>Per a carregar els arxius, accedim al array <code>$_FILES</code>:</p> <pre><code>&lt;?php\nif (isset($_POST['btnSubir']) &amp;&amp; $_POST['btnSubir'] == 'Subir') {\n    if (is_uploaded_file($_FILES['archivoEnviado']['tmp_name'])) {\n        // subido con \u00e9xito\n        $nombre = $_FILES['archivoEnviado']['name'];\n        move_uploaded_file($_FILES['archivoEnviado']['tmp_name'], \"./uploads/{$nombre}\");\n\n        echo \"&lt;p&gt;Archivo $nombre subido con \u00e9xito&lt;/p&gt;\";\n    }\n}\n</code></pre> <p>Cada arxiu carregat en <code>$_FILES</code> t\u00e9:</p> <ul> <li><code>name</code>: nom</li> <li><code>tmp_name</code>: ruta temporal</li> <li><code>size</code>: grand\u00e0ria en bytes</li> <li><code>type</code>: tipus ACARONE</li> <li><code>error</code>: si hi ha error, cont\u00e9 un missatge. Si ok \u2192 0.</li> </ul>"},{"location":"02php.html#sa22-mecanismes-per-al-manteniment-de-la-informacio-en-aplicacions-web","title":"SA2.2 Mecanismes per al Manteniment de la Informaci\u00f3 en Aplicacions Web","text":""},{"location":"02php.html#fonaments","title":"\ud83d\udcd6 Fonaments","text":"<p>HTTP \u00e9s un protocol stateless, sense estat. En les aplicacions web modernes, \u00e9s essencial gestionar l'estat del client per proporcionar una experi\u00e8ncia d'usuari fluida i personalitzada. Per aix\u00f2, se simula l'estat mitjan\u00e7ant l'\u00fas de cookies, tokens o la sessi\u00f3. L'estat \u00e9s necessari per a processos com ara el carret de la compra, operacions associades a un usuari, etc... A continuaci\u00f3 es detallen diversos mecanismes per mantenir aquesta informaci\u00f3, aix\u00ed com els seus avantatges i desavantatges.</p>"},{"location":"02php.html#cookies","title":"Cookies","text":"<p>Les cookies s\u00f3n petits fitxers de text emmagatzemats al navegador de l'usuari. S\u00f3n \u00e0mpliament utilitzades per mantenir l'estat del client entre sol\u00b7licituds HTTP, ja que HTTP \u00e9s un protocol sense estat.</p>"},{"location":"02php.html#avantatges-de-les-cookies","title":"Avantatges de les Cookies","text":"<ul> <li>Persist\u00e8ncia: Les cookies poden mantenir-se durant per\u00edodes llargs definits per l'atribut <code>expires</code> o <code>max-age</code>.</li> <li>Accessibilitat: Es poden accedir des de qualsevol p\u00e0gina del mateix domini.</li> <li>Simplicitat: F\u00e0cils d'implementar i gestionar.</li> </ul>"},{"location":"02php.html#desavantatges-de-les-cookies","title":"Desavantatges de les Cookies","text":"<ul> <li>Seguretat: Poden ser objectiu d'atacs com XSS (Cross-Site Scripting) si no es gestionen correctament.</li> <li>Limitacions de mida: Les cookies estan limitades a 4KB de dades.</li> <li>Privadesa: Les dades de l'usuari poden ser vulnerables si no es protegeixen adequadament.</li> </ul>"},{"location":"02php.html#sessions","title":"Sessions","text":"<p>Les sessions s\u00f3n un mecanisme que permet associar dades a un usuari durant una sessi\u00f3 espec\u00edfica. Aquestes dades s'emmagatzemen al servidor, mentre que el client nom\u00e9s guarda un identificador de sessi\u00f3.</p>"},{"location":"02php.html#avantatges-de-les-sessions","title":"Avantatges de les Sessions","text":"<ul> <li>Seguretat: Les dades sensibles es mantenen al servidor.</li> <li>Capacitat d'emmagatzematge: No limitades per la mida de les cookies.</li> <li>Compartici\u00f3 de dades: Facilita la compartici\u00f3 d'estat entre diferents components d'una aplicaci\u00f3 web.</li> </ul>"},{"location":"02php.html#desavantatges-de-les-sessions","title":"Desavantatges de les Sessions","text":"<ul> <li>Escalabilitat: Requereix mem\u00f2ria addicional al servidor, la qual cosa pot ser problem\u00e0tica amb molts usuaris.</li> <li>Persist\u00e8ncia limitada: Normalment nom\u00e9s duren mentre el navegador est\u00e0 obert, tret que es configuri d'una altra manera.</li> </ul>"},{"location":"02php.html#web-storage","title":"Web Storage","text":"<p>El Web Storage \u00e9s una API del navegador que permet emmagatzemar dades al client de manera m\u00e9s senzilla i amb m\u00e9s capacitat que les cookies tradicionals. Inclou dos mecanismes principals: <code>localStorage</code> i <code>sessionStorage</code>.</p>"},{"location":"02php.html#caracteristiques-del-web-storage","title":"Caracter\u00edstiques del Web Storage","text":"<ul> <li><code>localStorage</code>: Permet emmagatzemar dades que persisteixen fins que s'elimina expl\u00edcitament, fins i tot despr\u00e9s de tancar el navegador.</li> <li><code>sessionStorage</code>: Les dades es mantenen nom\u00e9s durant la sessi\u00f3 del navegador i s'esborren quan es tanca la pestanya o finestra.</li> </ul>"},{"location":"02php.html#avantatges","title":"Avantatges","text":"<ul> <li>Capacitat d'Emmagatzematge: Ofereix m\u00e9s espai (fins a 5-10MB) que les cookies.</li> <li>API Simple: Proporciona una interf\u00edcie senzilla per emmagatzemar i recuperar dades.</li> </ul>"},{"location":"02php.html#usos-comuns","title":"Usos Comuns","text":"<ul> <li>Manteniment de l'Estat del Client: Pot guardar dades de sessi\u00f3 i prefer\u00e8ncies de l'usuari que no cal enviar al servidor.</li> <li>Sincronitzaci\u00f3 amb l'Entorn Servidor: Es pot utilitzar per emmagatzemar dades que despr\u00e9s es sincronitzen amb el servidor, millorant el rendiment i l'experi\u00e8ncia d'usuari.</li> </ul>"},{"location":"02php.html#consideracions-de-seguretat","title":"Consideracions de Seguretat","text":"<ul> <li>Accessibilitat: Les dades s\u00f3n accessibles per JavaScript, per la qual cosa s'ha de tenir cura amb les vulnerabilitats XSS.</li> <li>Dades Sensibles: Evita emmagatzemar dades sensibles o confidencials.</li> </ul> <p>Tot i que Web Storage s'executa al costat del client, entendre les seves funcionalitats pot ajudar els desenvolupadors del servidor a dissenyar sistemes m\u00e9s robustos i efica\u00e7os, on la cooperaci\u00f3 entre client i servidor maximitza l'efici\u00e8ncia de l'aplicaci\u00f3 web.</p>"},{"location":"02php.html#tokens-dautenticacio","title":"Tokens d'Autenticaci\u00f3","text":"<p>Els JSON Web Tokens (JWT) s\u00f3n un est\u00e0ndard obert que defineix una manera compacta i aut\u00f2noma d'enviar informaci\u00f3 entre dues parts de manera segura com a objecte JSON. S'utilitzen habitualment per a l'autenticaci\u00f3 en aplicacions web.</p>"},{"location":"02php.html#avantatges-dels-jwt","title":"Avantatges dels JWT","text":"<ul> <li>Estatut aut\u00f2nom: Porten tota la informaci\u00f3 necess\u00e0ria, eliminant la necessitat de mantenir sessions al servidor.</li> <li>Escalabilitat: Milloren l'escalabilitat en aplicacions distribu\u00efdes.</li> <li>Seguretat: Es poden signar digitalment per assegurar la seva autenticitat.</li> </ul>"},{"location":"02php.html#desavantatges-dels-jwt","title":"Desavantatges dels JWT","text":"<ul> <li>Revocaci\u00f3 complexa: Una vegada emesos, \u00e9s dif\u00edcil revocar-los sense mantenir una llista negra.</li> <li>Sobrecarrega de dades: Si els tokens s\u00f3n grans, poden afectar el rendiment, especialment en xarxes de baixa lat\u00e8ncia.</li> </ul>"},{"location":"02php.html#cache-del-navegador","title":"Cache del Navegador","text":"<p>El cache del navegador s'utilitza per emmagatzemar c\u00f2pies temporals de recursos web per millorar el rendiment i reduir la c\u00e0rrega del servidor.</p>"},{"location":"02php.html#avantatges-del-cache","title":"Avantatges del Cache","text":"<ul> <li>Rendiment: Redueix el temps de c\u00e0rrega dels recursos.</li> <li>Optimitzaci\u00f3: Disminueix l'ample de banda requerit.</li> </ul>"},{"location":"02php.html#desavantatges-del-cache","title":"Desavantatges del Cache","text":"<ul> <li>Consist\u00e8ncia: Pot servir dades obsoletes si no es gestiona correctament.</li> <li>Control: Requereix configuraci\u00f3 per evitar el caching indesitjat de dades din\u00e0miques.</li> </ul>"},{"location":"02php.html#cookies_1","title":"\ud83c\udf6a Cookies","text":"<p>Les cookies s'emmagatzemen en el array global <code>$_COOKIE</code>. El que col\u00b7loquem dins del array, es guardar\u00e0 en el client. Cal tindre present que el client pot no voler emmagatzemar-les.</p> <p>Existeix una limitaci\u00f3 de 20 cookies per domini i 300 en total en el navegador.</p> <p>En PHP, per a crear una cookie s'utilitza la funci\u00f3 <code>setcookie</code>:</p> <p><pre><code>&lt;?php\nsetcookie(\n    'nom_cookie',\n    'valor_cookie',\n    [\n        'expires' =&gt; time() + 3600, // 1 hora\n        'path' =&gt; '/',\n        'domain' =&gt; '', // Domini actual\n        'secure' =&gt; true, // Nom\u00e9s HTTPS\n        'httponly' =&gt; true, // Nom\u00e9s accessible via HTTP\n        'samesite' =&gt; 'Lax' // o 'Strict' o 'None'\n    ]\n);\n?&gt;\n</code></pre> Destacar que el nom no pot contindre espais ni el car\u00e0cter <code>;</code>. Respecte al contingut de la cookie, no pot superar els 4 KB.</p>"},{"location":"02php.html#consideracions-de-seguretat-per-a-cookies","title":"Consideracions de seguretat per a cookies:","text":"<p>HTTPOnly: Assegura't que les cookies que contenen informaci\u00f3 sensible no siguin accessibles per JavaScript utilitzant l'atribut HttpOnly.</p> <p>Secure: Utilitza l'atribut Secure per assegurar que les cookies nom\u00e9s es transmeten en connexions HTTPS.</p> <p>SameSite: Defineix correctament l'atribut SameSite per a prevenir atacs CSRF (Cross-Site Request Forgery).</p> <p>Per exemple, mitjan\u00e7ant cookies podem comprovar la quantitat de visites diferents que realitza un usuari:</p> <pre><code>&lt;?php\n$accesosPagina\u00a0=\u00a00;\nif\u00a0(isset($_COOKIE['accesos']))\u00a0{\u00a0\n    $accesosPagina\u00a0=\u00a0$_COOKIE['accesos']; // recuperamos una cookie\n    setcookie('accesos',\u00a0++$accesosPagina); // le asignamos un valor\n}\n?&gt;\n</code></pre> <p>Inspeccionant les cookies</p> <p>Si volem veure que contenen les cookies que tenim emmagatzemades en el navegador, es pot comprovar el seu valor en Dev Tools \u2192 Application \u2192 Storage</p> <p>El temps de vida de les cookies pot ser tan llarg com el lloc web en el qual resideixen. Elles seguiran ac\u00ed, fins i tot si el navegador est\u00e0 tancat o obert.</p> <p>Per a esborrar una cookie es pot posar que expiren en el passat:</p> <pre><code>&lt;?php\nsetcookie(nombre,\u00a0\"\",\u00a01) // pasado\n</code></pre> <p>O que caduquen dins d'un per\u00edode de temps deteminado:</p> <pre><code>&lt;?php\nsetcookie(nombre,\u00a0valor,\u00a0time() + 3600) // Caducan dentro de una hora\n</code></pre> Comunicaci\u00f3 amb cookies <p>S'utilitzen per a:</p> <ul> <li>Recordar els inicis de sessi\u00f3</li> <li>Emmagatzemar valors temporals d'usuari</li> <li>Si un usuari est\u00e0 navegant per una llista paginada d'articles, ordenats d'una certa manera, podem emmagatzemar l'ajust de la classificaci\u00f3.</li> </ul> <p>L'alternativa en el client per a emmagatzemar informaci\u00f3 en el navegador \u00e9s l'objecte LocalStorage.</p>"},{"location":"02php.html#sessions_1","title":"\ud83d\udd11 Sessions","text":"<p>La sessi\u00f3 afig la gesti\u00f3 de l'estat a HTTP, emmagatzemant en aquest cas la informaci\u00f3 en el servidor. Cada visitant t\u00e9 un ID de sessi\u00f3 \u00fanic, el qual per defecte s'emmagatzema en una cookie denominada <code>PHPSESSID</code>. Si el client no t\u00e9 les cookies actives, l'ID es propaga en cada URL dins del mateix domini. Cada sessi\u00f3 t\u00e9 associat un magatzem de dades mitjan\u00e7ant el array global <code>$_SESSION</code>, en el qual podem emmagatzemar i recuperar informaci\u00f3.</p> <p>La sessi\u00f3 comen\u00e7a en executar un script PHP. Es genera un nou ID i es carreguen les dades del magatzem:</p> Comunicaci\u00f3 amb sessions <p>Les operacions que podem realitzar amb la sessi\u00f3 s\u00f3n:</p> <pre><code>&lt;?php\nsession_start(); // carga la sesi\u00f3n\nsession_regenerate_id(true); // regenera el id\nsession_id() // devuelve el id\n$_SESSION[clave] = valor; // inserci\u00f3n\nsession_destroy(); // destruye la sesi\u00f3n\nunset($_SESSION[clave]; // borrado\n</code></pre> <p>Veurem mitjan\u00e7ant un exemple com podem inserir en un p\u00e0gina dades en la sessi\u00f3 per a posteriorment en una altra p\u00e0gina accedir a aqueixes dades. Per exemple, en <code>sesion.php</code> tindr\u00edem</p> <pre><code>&lt;?php\n// Iniciar sessi\u00f3\nsession_start();\nsession_regenerate_id(true);\n\n// Establir valors de sessi\u00f3\n$_SESSION['usuari'] = 'JohnDoe';\n$_SESSION['rol'] = 'admin';\n\n?&gt;\n</code></pre> <p>I posteriorment podem accedir a la sessi\u00f3 en <code>sesion1.php</code>:</p> <pre><code>&lt;?php\nsession_start();\n// Recuperar valors de sessi\u00f3\necho 'Usuari: ' . $_SESSION['usuari'] . '&lt;br&gt;';\necho 'Rol: ' . $_SESSION['rol'] . '&lt;br&gt;';\n\n// Tancar sessi\u00f3 de forma segura\nsession_unset();  // Eliminar totes les variables de sessi\u00f3\nsession_destroy();  // Destruir la sessi\u00f3\n?&gt;\n</code></pre> <p>Configurant la sessi\u00f3 en <code>php.ini</code></p> <p>Les seg\u00fcent propietats de <code>php.ini</code> permeten configurar alguns aspectes de la sessi\u00f3:</p> <pre><code>  * `session.save_handler`: controlador que gestiona com s'emmagatzema (`files`)\n  * `session.save_path`: ruta on s'emmagatzemen els arxius amb les dades (si tenim un cl\u00faster, podr\u00edem usar `/mnt/sessions` en tots els servidor de manera que apunten a una carpeta compartida)\n  * `session.name`: nom de la sessi\u00f3 (`PHSESSID`)\n  * `session.acte_start`: Es pot fer que s'autocarregue amb cada script. Per defecte est\u00e0 deshabilitat\n  * `session.cookie_lifetime`: temps de vida per defecte\n</code></pre> <p>M\u00e9s informaci\u00f3 en la documentaci\u00f3 oficial.</p>"},{"location":"02php.html#serialitzacio-en-php","title":"\ud83d\udce6\u27a1\ufe0f\ud83d\udcc4 Serialitzaci\u00f3 en PHP","text":"<p>La serialitzaci\u00f3 \u00e9s el proc\u00e9s de convertir una estructura de dades o un objecte en una seq\u00fc\u00e8ncia de car\u00e0cters que pot ser f\u00e0cilment emmagatzemada o transmesa i despr\u00e9s reconstru\u00efda. PHP proporciona dos funcions principals per a aix\u00f2: serialize() i unserialize().</p> <ol> <li>serialize()    La funci\u00f3 serialize() en PHP s'utilitza per a convertir una estructura de dades o un objecte en una representaci\u00f3 de cadena.</li> </ol> <p><pre><code>$data = array(\"a\", \"b\", \"c\");\n$serialized_data = serialize($data);\necho $serialized_data;\n</code></pre> Eixida</p> <pre><code>a:3:{i:0;s:1:\"a\";i:1;s:1:\"b\";i:2;s:1:\"c\";}\n</code></pre> <ol> <li>unserialize()    La funci\u00f3 unserialize() en PHP s'utilitza per a convertir la representaci\u00f3 de cadena serialitzada de nou en una estructura de dades o un objecte.</li> </ol> <pre><code>$original_data = unserialize($serialized_data);\nprint_r($original_data);\n</code></pre> <p>Eixida</p> <pre><code>Array\n(\n    [0] =&gt; a\n    [1] =&gt; b\n    [2] =&gt; c\n)\n</code></pre>"},{"location":"02php.html#utilitzant-serialitzacio-amb-sessions","title":"Utilitzant serialitzaci\u00f3 amb Sessions","text":"<p>Les sessions en PHP permeten emmagatzemar informaci\u00f3 d'usuari per ser utilitzada en diverses p\u00e0gines. Pot ser \u00fatil serialitzar dades per a emmagatzemar-les en una sessi\u00f3:</p> <p>Iniciant una sessi\u00f3 i emmagatzemant dades serialitzades:</p> <pre><code>session_start();\nsession_regenerate_id(true);\n\n$data = array(\"a\", \"b\", \"c\");\n$_SESSION['data_serialitzada'] = serialize($data);\n</code></pre> <pre><code>session_start();\n\nif (isset($_SESSION['data_serialitzada'])) {\n$data = unserialize($_SESSION['data_serialitzada']);\nprint_r($data);\n}\n</code></pre> <p>Consideracions de Seguretat: \u00c9s crucial entendre que la funci\u00f3 unserialize() pot ser perillosa si s'usa amb dades que no s\u00f3n de confian\u00e7a, ja que podria portar a l'execuci\u00f3 de codi arbitrari. Per aix\u00f2, mai has de deserialitzar dades que vinguen d'una font desconeguda o no fiable sense validar-les pr\u00e8viament.</p>"},{"location":"02php.html#autenticacio-dusuaris","title":"\ud83d\udc64\u2714\ufe0f Autenticaci\u00f3 d'usuaris","text":""},{"location":"02php.html#mecanismes-dautenticacio-dusuaris","title":"Mecanismes d'Autenticaci\u00f3 d'Usuaris","text":"Mecanisme d'Autenticaci\u00f3 Caracter\u00edstiques Avantatges B\u00e0sica (usuari/contrasenya) Es requereix un nom d'usuari i una contrasenya per accedir. F\u00e0cil d'implementar, \u00e0mpliament utilitzada. Cookies Emmagatzema informaci\u00f3 d'autenticaci\u00f3 en el navegador de l'usuari. Persist\u00e8ncia d'inici de sessi\u00f3, personalitzaci\u00f3 d'experi\u00e8ncia. Sessions Mant\u00e9 l'estat d'autenticaci\u00f3 en el servidor amb una identificaci\u00f3 de sessi\u00f3 \u00fanica. Major seguretat, evita la necessitat d'emmagatzemar informaci\u00f3 sensible al client. OAuth Permet als usuaris accedir a recursos sense compartir les seves credencials. Seguretat millorada, experi\u00e8ncia d'usuari simplificada. JWT (JSON Web Token) Utilitza tokens basats en JSON per a l'autenticaci\u00f3. Lliure d'estat, f\u00e0cil de compartir entre diferents serveis. SAML (Security Assertion Markup Language) Utilitza XML per a intercanviar dades d'autenticaci\u00f3 entre l'usuari i el servei. Integraci\u00f3 amb sistemes d'autenticaci\u00f3 empresarial, alt nivell de seguretat. Autenticaci\u00f3 multifactor (MFA) Requereix m\u00faltiples formes de verificaci\u00f3 (per exemple, contrasenya + codi SMS). Seguretat augmentada, redueix el risc de comprom\u00eds de comptes."},{"location":"02php.html#exemple-amb-sessions","title":"Exemple amb sessions","text":"<p>Una sessi\u00f3 estableix una relaci\u00f3 an\u00f2nima amb un usuari particular, de manera que podem saber si \u00e9s el mateix usuari entre dues peticions diferents. Si preparem un sistema de login, podrem saber qui utilitza la nostra aplicaci\u00f3.</p> <p><pre><code>&lt;?php\n// Llista d'usuaris predefinits amb contrasenyes en text pla\n$users = [\n    'user1@example.com' =&gt; 'password1',\n    'user2@example.com' =&gt; 'password2',\n];\n\n// Convertir les contrasenyes a un format encriptat\nforeach ($users as $email =&gt; $password) {\n    $users[$email] = password_hash($password, PASSWORD_BCRYPT);\n}\n\n// Formulari d'autenticaci\u00f3\nif (isset($_POST['login'])) {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    if (isset($users[$email]) &amp;&amp; password_verify($password, $users[$email])) {\n        // L'usuari est\u00e0 autenticat\n        session_start();\n        $_SESSION['user'] = $email;\n        echo \"Login successful. Welcome, \" . $email;\n    } else {\n        // Credencials incorrectes\n        echo \"Invalid email or password.\";\n    }\n}\n?&gt;\n&lt;form method=\"post\"&gt;\n    Email: &lt;input type=\"email\" name=\"email\" required&gt;\n    Password: &lt;input type=\"password\" name=\"password\" required&gt;\n    &lt;button type=\"submit\" name=\"login\"&gt;Login&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> Aquest exemple mostra com mantenir l'estat de la sessi\u00f3 d'un usuari una vegada autenticat.</p> <pre><code>&lt;?php\nsession_start();\n\nif (!isset($_SESSION['user'])) {\n    header(\"Location: login.php\");\n    exit();\n}\n\n// Mostra la p\u00e0gina nom\u00e9s si l'usuari est\u00e0 autenticat\necho \"Welcome, \" . $_SESSION['user'];\n?&gt;\n</code></pre> <p>Finalment, necessitem l'opci\u00f3 de tancar la sessi\u00f3 que col\u00b7loquem en <code>logout.php</code>:</p> <pre><code>&lt;?php\n// Recuperamos la informaci\u00f3n de la sesi\u00f3n\nsession_start();\n\n// Y la destruimos\nsession_destroy();\nheader(\"Location: index.php\");\n?&gt;\n</code></pre> <p>Autenticaci\u00f3 en producci\u00f3</p> <p>En l'actualitat l'autenticaci\u00f3 d'usuari no es realitza gestionant la sessi\u00f3 direcamente, sin\u00f3 que es realitza mitjan\u00e7ant algun framekwork que abstrau tot el proc\u00e9s o la integraci\u00f3 de mecanismes d'autenticaci\u00f3 tipus OAuth, com estudiarem en l'\u00faltima unitat mitjan\u00e7ant Laravel.  `</p>"},{"location":"02php.html#sa23-poo","title":"SA2.3 POO","text":""},{"location":"02php.html#introduccio-de-la-poo-en-php","title":"\ud83d\udc18 Introducci\u00f3 de la POO en php","text":"<p>PHP segueix un paradigma de programaci\u00f3 orientada a objectes (POO) basada en classes.</p> <p>Un classe \u00e9s un plantilla que defineix les propietats i m\u00e8todes per a poder crear objectes. D'aquest manera, un objecte \u00e9s una inst\u00e0ncia d'una classe.</p> <p>Tant les propietats com els m\u00e8todes es defineixen amb una visibilitat (qui pot accedir)</p> <ul> <li>Privat - <code>private</code>: Nom\u00e9s pot accedir la pr\u00f2pia classe.</li> <li>Protegit - <code>protected</code>: Nom\u00e9s pot accedir la pr\u00f2pia classe o els seus descendents.</li> <li>P\u00fablico - <code>public</code>: Pot accedir qualsevol altra classe.</li> </ul> <p>Per a declarar una classe, s'utilitza la paraula clau <code>class</code> seguit del nom de la classe. Per a instanciar un objecte a partir de la classe, s'utilitza <code>new</code>:</p> <pre><code>&lt;?php\nclass NomClase {\n// propiedades\n// y m\u00e9todos\n}\n\n$ob = new NomClase();\n</code></pre> <p>Classes amb maj\u00fascula</p> <p>Totes les classes comencen per lletra maj\u00fascula.</p> <p>Quan un projecte creix, \u00e9s normal modelar les classes mitjan\u00e7ant UML (recordeu Entorns de Desenvolupament?). La classes es representen mitjan\u00e7ant un quadrat, separant el nom, de les propietats i els m\u00e8todes:</p> <p></p> <p>Una vegada que hem creat un objecte, s'utilitza l'operador <code>-&gt;</code> per a accedir a una propietat o un m\u00e8tode:</p> <pre><code>$objeto-&gt;propiedad;\n$objeto-&gt;m\u00e9todo(par\u00e1metros);\n</code></pre> <p>Si des de dins de la classe, volem accedir a una propietat o m\u00e8tode de la mateixa classe, utilitzarem la refer\u00e8ncia <code>$this</code>;</p> <pre><code>$this-&gt;propiedad;\n$this-&gt;m\u00e9todo(par\u00e1metros);  \n</code></pre> <p>Aix\u00ed doncs, com a exemple, codificar\u00edem una persona en el fitxer <code>Persona.php</code> com:</p> <pre><code>&lt;?php\nclass\u00a0Persona\u00a0{\n    private\u00a0string $nombre;\n\n    public\u00a0function\u00a0setNombre(string $nom)\u00a0{\n        $this-&gt;nombre=$nom;\n    }\n\n    public\u00a0function\u00a0imprimir(){\n        echo\u00a0$this-&gt;nombre;\n        echo\u00a0'&lt;br&gt;';\n    }\n}\n\n$bruno\u00a0=\u00a0new\u00a0Persona(); // creamos un objeto\n$bruno-&gt;setNombre(\"Bruno\u00a0D\u00edaz\");\n$bruno-&gt;imprimir();\n</code></pre> <p>Encara que es poden declarar diverses classes en el mateix arxiu, \u00e9s una mala pr\u00e0ctica. Aix\u00ed doncs, cada fitxer contedr\u00e1 una sola classe, i es nomenar\u00e0 amb el nom de la classe.</p>"},{"location":"02php.html#principis-de-la-poo","title":"\ud83d\udcd0 Principis de la POO","text":""},{"location":"02php.html#encapsulacio","title":"Encapsulaci\u00f3","text":"<p>Les propietats es defineixen privades o protegides (si volem que les classes heretades puguen accedir).</p> <p>Per a cada propietat, s'afigen m\u00e8todes p\u00fablics (getter/setter):</p> <pre><code>public setPropiedad(tipo $param)\npublic getPropiedad() : tipo\n</code></pre> <p>Les constants es defineixen p\u00fabliques perqu\u00e8 siguen accessibles per tots els recursos.</p> <pre><code>&lt;?php\nclass\u00a0MayorMenor\u00a0{\n    private\u00a0int $mayor;\n    private\u00a0int $menor;\n\n    public\u00a0function\u00a0setMayor(int\u00a0$may)\u00a0{\n        $this-&gt;mayor\u00a0=\u00a0$may;\n    }\n\n    public\u00a0function\u00a0setMenor(int\u00a0$men)\u00a0{\n        $this-&gt;menor\u00a0=\u00a0$men;\n    }\n\n    public\u00a0function\u00a0getMayor()\u00a0:\u00a0int\u00a0{\n        return\u00a0$this-&gt;mayor;\n    }\n\n    public\u00a0function\u00a0getMenor()\u00a0:\u00a0int\u00a0{\n        return\u00a0$this-&gt;menor;\n    }\n}\n</code></pre>"},{"location":"02php.html#rebent-i-enviant-objectes","title":"Rebent i enviant objectes","text":"<p>\u00c9s recomanable indicar-ho en la mena de par\u00e0metres. Si l'objecte pot retornar nuls es posa <code>?</code> davant del nom de la classe.</p> <p>Objectes per refer\u00e8ncia</p> <p>Els objectes que s'envien i reben com a par\u00e0metres sempre es passen per refer\u00e8ncia.</p> <pre><code>&lt;?php\nfunction\u00a0maymen(array\u00a0$numeros)\u00a0:\u00a0?MayorMenor\u00a0{\n    $a\u00a0=\u00a0max($numeros);\n    $b\u00a0=\u00a0min($numeros);\n\n    $result\u00a0=\u00a0new\u00a0MayorMenor();\n    $result-&gt;setMayor($a);\n    $result-&gt;setMenor($b);\n\n    return\u00a0$result;\n}\n\n$resultado\u00a0=\u00a0\u00a0maymen([1,76,9,388,41,39,25,97,22]);\necho\u00a0\"&lt;br&gt;Mayor:\u00a0\".$resultado-&gt;getMayor();\necho\u00a0\"&lt;br&gt;Menor:\u00a0\".$resultado-&gt;getMenor();\n</code></pre>"},{"location":"02php.html#constructor","title":"Constructor","text":"<p>El constructor dels objectes es defineix mitjan\u00e7ant el m\u00e8tode m\u00e0gic <code>__construct</code>. Pot o no tindre par\u00e0metres, per\u00f2 nom\u00e9s pot haver-hi un \u00fanic constructor.</p> <p>Una de les grans novetats que ofereix PHP 8 \u00e9s la simplificaci\u00f3 dels constructors amb par\u00e0metres, la qual cosa es coneix com a promoci\u00f3 de les propietats del constructor*.</p> <p>Per a aix\u00f2, en comptes d'haver de declarar les propietats com a privades o protegides, i despr\u00e9s dins del constructor haver d'assignar els par\u00e0metres a est\u00e0s propietats, el propi constructor promociona les propietats.</p> <p>Vegem-ho millor amb un exemple. Imaginem una classe <code>Punt</code> on vulguem emmagatzemar les seues coordenades:</p> <pre><code>&lt;?php\nclass Punto {\n    protected float $x;\n    protected float $y;\n    protected float $z;\n\n    public function __construct(\n        float $x = 0.0,\n        float $y = 0.0,\n        float $z = 0.0\n    ) {\n        $this-&gt;x = $x;\n        $this-&gt;y = $y;\n        $this-&gt;z = $z;\n    }\n}\n</code></pre> <p>En PHP 8, quedaria de la seg\u00fcent manera (molt m\u00e9s curt, la qual cosa facilita la seua llegibilitat):</p> <pre><code>&lt;?php\nclass Punto {\n    public function __construct(\n        protected float $x = 0.0,\n        protected float $y = 0.0,\n        protected float $z = 0.0,\n    ) {}\n}\n</code></pre> <p>L'ordre importa</p> <p>A l'hora de codificar l'ordre dels elements ha de ser:</p> <pre><code>``` php\n&lt;?php\ndeclare(strict_types=1);\n\nclass NombreClase {\n    // propiedades\n\n    // constructor\n\n    // getters - setters\n\n    // resto de m\u00e9todos\n}\n?&gt;\n```\n</code></pre>"},{"location":"02php.html#classes-estatiques","title":"Classes est\u00e0tiques","text":"<p>S\u00f3n aquelles que tenen propietats i/o m\u00e8todes est\u00e0tics (tamb\u00e9 es coneixen com de classe, perqu\u00e8 el seu valor es comparteix entre totes les inst\u00e0ncies de la mateixa classe).</p> <p>Es declaren amb <code>static</code> i es referencien amb <code>::</code>.</p> <ul> <li>Si volem accedir a un m\u00e8tode est\u00e0tic, s'anteposa el nom de la classe: <code>Producte::nuevoProducto()</code>.</li> <li>Si des d'un m\u00e8tode volem accedir a una propietat est\u00e0tica de la mateixa classe, s'utilitza la refer\u00e8ncia <code>self</code>: <code>self::$numProductos</code></li> </ul> <pre><code>&lt;?php\nclass Producto {\n    const IVA = 0.23;\n    private static $numProductos = 0; \n\n    public static function nuevoProducto() {\n        self::$numProductos++;\n    }\n}\n\nProducto::nuevoProducto();\n$impuesto = Producto::IVA;\n</code></pre> <p>Tamb\u00e9 podem tindre classes normals que tinguen alguna propietat est\u00e0tica:</p> <pre><code>&lt;?php\nclass\u00a0Producto\u00a0{\n    const\u00a0IVA\u00a0=\u00a00.23;\n    private\u00a0static\u00a0$numProductos\u00a0=\u00a00;\u00a0\n    private\u00a0$codigo;\n\n    public\u00a0function\u00a0__construct(string\u00a0$cod)\u00a0{\n        self::$numProductos++;\n        $this-&gt;codigo\u00a0=\u00a0$cod;\n    }\n\n    public\u00a0function\u00a0mostrarResumen()\u00a0:\u00a0string\u00a0{\n        return\u00a0\"El\u00a0producto\u00a0\".$this-&gt;codigo.\" es\u00a0el\u00a0n\u00famero\u00a0\".self::$numProductos;\n    }\n}\n\n$prod1\u00a0=\u00a0new\u00a0Producto(\"PS5\");\n$prod2\u00a0=\u00a0new\u00a0Producto(\"XBOX\u00a0Series\u00a0X\");\n$prod3\u00a0=\u00a0new\u00a0Producto(\"Nintendo\u00a0Switch\");\necho\u00a0$prod3-&gt;mostrarResumen();\n</code></pre>"},{"location":"02php.html#metodes-encadenats","title":"M\u00e8todes encadenats","text":"<p>Segueix el plantejament de la programaci\u00f3 funcional, i tamb\u00e9 es coneix com method chaining. Planteja que sobre un objecte es realitzen diverses crides.</p> <pre><code>&lt;?php\n$p1\u00a0=\u00a0new\u00a0Libro();\n$p1-&gt;setNombre(\"Harry\u00a0Potter\");\n$p1-&gt;setAutor(\"JK\u00a0Rowling\");\necho\u00a0$p1;\n\n// Method chaining\n$p2\u00a0=\u00a0new\u00a0Libro();\n$p2-&gt;setNombre(\"Patria\")-&gt;setAutor(\"Aramburu\");\necho\u00a0$p2;\n</code></pre> <p>Per a facilitar-ho, modificarem tots els seus m\u00e8todes mutants (que modifiquen dades, setters*, ...) perqu\u00e8 retornen una refer\u00e8ncia a <code>$this</code>:</p> <pre><code>&lt;?php\nclass\u00a0Libro\u00a0{\n    private\u00a0string\u00a0$nombre;\n    private\u00a0string\u00a0$autor;\n\n    public\u00a0function\u00a0getNombre()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;nombre;\n    }\n    public\u00a0function\u00a0setNombre(string\u00a0$nombre)\u00a0:\u00a0Libro\u00a0{\u00a0\n        $this-&gt;nombre\u00a0=\u00a0$nombre;\n        return\u00a0$this;\n    }\n\n    public\u00a0function\u00a0getAutor()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;autor;\n    }\n    public\u00a0function\u00a0setAutor(string\u00a0$autor)\u00a0:\u00a0Libro\u00a0{\n        $this-&gt;autor\u00a0=\u00a0$autor;\n        return\u00a0$this;\n    }\n\n    public\u00a0function\u00a0__toString()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;nombre.\"\u00a0de\u00a0\".$this-&gt;autor;\n    }\n}\n</code></pre>"},{"location":"02php.html#metodes-magics","title":"M\u00e8todes m\u00e0gics","text":"<p>Totes les classes PHP ofereixen un conjunt de m\u00e8todes, tamb\u00e9 coneguts com magic methods que es poden sobreescriure per a substituir el seu comportament. Alguns d'ells ja els hem utilitzats.</p> <p>Davant qualsevol dubte, \u00e9s convenient consultar la documentaci\u00f3 oficial.</p> <p>Els m\u00e9s destacables s\u00f3n:</p> <ul> <li><code>__construct()</code></li> <li><code>__destruct()</code> \u2192 s'invoca en perdre la refer\u00e8ncia. S'utilitza per a tancar una connexi\u00f3 a la BD, tancar un fitxer, ...</li> <li><code>__toString()</code> \u2192 representaci\u00f3 de l'objecte com a cadena. \u00c9s a dir, quan fem <code>echo $objecte</code> s'executa autom\u00e0ticament aquest m\u00e8tode.</li> <li><code>__get(propietat)</code>, <code>__set(propietat, valor)</code> \u2192 Permetria accedir a les propietat privades, encara que sempre \u00e9s m\u00e9s llegible/mantenible codificar els getter/setter.</li> <li><code>__isset(propietat)</code>, <code>__unset(propietat)</code> \u2192 Permet esbrinar o llevar el valor a una propietat.</li> <li><code>__sleep()</code>, <code>__wakeup()</code> \u2192 S'executen en recuperar (unserialize^) o emmagatzemar un objecte que se serialitza (serialize), i s'utilitzen per a permet definir quines propietats se serialitzen.</li> <li><code>__call()</code>, <code>__callStatic()</code> \u2192 S'executen en cridar a un m\u00e8tode que no \u00e9s p\u00fablic. Permeten sobrecarreguen m\u00e8todes.</li> </ul>"},{"location":"02php.html#espai-de-noms","title":"\ud83d\uddfa\ufe0f Espai de noms","text":""},{"location":"02php.html#espais-de-noms-namespaces","title":"\ud83e\udde9 Espais de noms (Namespaces)","text":"<p>Els espais de noms serveixen per organitzar les classes i evitar conflictes. Funcionen com els paquets a Java.</p>"},{"location":"02php.html#com-es-declaren","title":"Com es declaren","text":"<p>S\u2019escriuen al principi del fitxer:</p> <pre><code>&lt;?php\nnamespace Dwes\\Exemples;\n\nclass Producte {\n  public $nom;\n\n  public function mostra() {\n    echo \"Producte: \" . $this-&gt;nom;\n  }\n}\n</code></pre>"},{"location":"02php.html#com-sutilitzen","title":"Com s'utilitzen","text":"<p>Per a usar una classe d\u2019un altre namespace:</p> <pre><code>require 'Dwes/Exemples/Producte.php';\nuse Dwes\\Exemples\\Producte;\n\n$p = new Producte();\n</code></pre> <p>To <code>use</code> or not to <code>use</code></p> <p>En resum, <code>use</code> permet accedir sense qualificar a recursos que estan en un altre namespace. Si estem en el mateix espai de nom, no necessitem <code>use</code>.</p>"},{"location":"02php.html#composer-i-autoload","title":"\ud83d\udce6 Composer i autoload","text":"Logo Composer <p>Composer \u00e9s una eina que:</p> <ul> <li>Instala paquets PHP (llibreries externes).</li> <li>Crea un fitxer autoload.php per carregar les classes autom\u00e0ticament.</li> </ul>"},{"location":"02php.html#installacio","title":"Instal\u00b7laci\u00f3","text":"<p>Si estem usant XAMPP, hem d'instal\u00b7lar Composer en el propi sistema operatiu. Es recomana seguir les instruccions oficials segons el sistema operatiu a emprar.</p> <p>En canvi, si usem Docker, necessitem modificar la configuraci\u00f3 del nostre contenidor. En el nostre cas, hem decidit modificar l'arxiu <code>Dockerfile</code> i afegir el seg\u00fcent comando:</p> <pre><code>COPY --from=composer:2.0 /usr/bin/composer /usr/local/bin/composer\n</code></pre> <p>\u00c9s important que dins del contenidor comprovem que tenim la v2:</p> <pre><code>composer -V\n</code></pre>"},{"location":"02php.html#primers-passos","title":"Primers passos","text":"<p>Quan creem un projecte per primera vegada, hem d'inicialitzar el repositori. Per a aix\u00f2, executarem el comando <code>composer init</code> on:</p> <ul> <li>Configurem el nom del paquet, descripci\u00f3, autor (nom ), tipus de paquet (project), etc... <li>Definim les depend\u00e8ncies del projecte (<code>require</code>) i les de desenvolupament (<code>require-dev</code>) de manera interactiva.</li> <li>En les de desenvolupament s'indica aquelles que no s'instal\u00b7laran a l'entorn de producci\u00f3, per exemple, les llibreries de proves.</li> <p>Despr\u00e9s de la seua configuraci\u00f3, es crear\u00e0 autom\u00e0ticament l'arxiu <code>composer.json</code> amb les dades introdu\u00efdes i desc\u00e0rrega les llibreries en la carpeta <code>vendor</code>. La instal\u00b7laci\u00f3 de les llibreries sempre es realitza de manera local per a cada projecte.</p> <pre><code>{\n    \"name\": \"dwes/log\",\n    \"description\": \"Pruebas con Monolog\",\n    \"type\": \"project\",\n    \"require\": {\n        \"monolog/monolog\": \"^2.1\"\n    },\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Aitor Medrano\",\n            \"email\": \"a.medrano@edu.gva.es\"\n        }\n    ]\n}\n</code></pre> <p>A l'hora d'indicar cada llibreria introduirem:</p> <ul> <li>el nom de la llibreria, composta tant pel creador o \"vendor\", com pel nom del projecte. Exemples: <code>monolog/monolog</code> o <code>laravel/installer</code>.</li> <li> <p>la versi\u00f3 de cada llibreria. Tenim diverses opcions per a indicar-la:</p> <ul> <li>Directament: 1.4.2</li> <li>Amb comodins: 1.</li> <li>A partir de: &gt;= 2.0.3</li> <li>Sense trencament de canvis: ^1.3.2 // &gt;=1.3.2 &lt;2.0.0</li> </ul> </li> </ul>"},{"location":"02php.html#actualitzar-llibreries","title":"Actualitzar llibreries","text":"<p>Podem definir les depend\u00e8ncies via l'arxiu <code>composer.json</code> o mitjan\u00e7ant comandos amb el format <code>composer require vendor/package:version</code>. Per exemple, si volem afegir phpUnit com a llibreria de desenvolupament, farem:</p> <pre><code>composer require phpunit/phpunit \u2013dev\n</code></pre> <p>Despr\u00e9s d'afegir noves llibreries, hem d'actualitzar el nostre projecte:</p> <pre><code>composer update\n</code></pre> <p>Si creem l'arxiu <code>composer.json</code> nosaltres directament sense inicialitzar el repositori, hem d'instal\u00b7lar les depend\u00e8ncies:</p> <pre><code>composer install\n</code></pre> <p>En fer aquest pas (tant instal\u00b7lar com actualitzar), com ja hem comentat, es descarreguen les llibreries en dins de la carpeta <code>vendor</code>. \u00c9s molt important afegir aquesta carpeta a l'arxiu <code>.gitignore</code> per a no pujar-les a GitHub.</p> <p>A m\u00e9s es crea l'arxiu <code>composer.lock</code>, que emmagatzema la versi\u00f3 exacta que s'ha instal\u00b7lat de cada llibreria (aquest arxiu no es toca).</p>"},{"location":"02php.html#autoloadphp","title":"<code>autoload.php</code>","text":"<p>Composer crea de manera autom\u00e0tica en <code>vendor/autoload.php</code> el codi per a incloure de manera autom\u00e0tica totes les llibreries que tinguem configurades en <code>composer.json</code>.</p> <p>Per a utilitzar-ho, en la cap\u00e7alera del nostre arxius posarem:</p> <pre><code>&lt;?php\nrequire 'vendor/autoload.php';\n</code></pre> <p>En el nostre cas, de moment nom\u00e9s el podrem en els arxius on provem les classes</p> <p>Si volem que Composer tamb\u00e9 s'encarregue de carregar de manera autom\u00e0tica les nostres classes de domini, dins de l'arxiu <code>composer.json</code>, definirem la propietat <code>autoload</code>:</p> <pre><code>\"autoload\": {\n    \"psr-4\": {\"Dwes\\\\\": \"app/Dwes\"}\n},\n</code></pre> <p>Posteriorment, hem de tornar a generar el autoload de Composer mitjan\u00e7ant l'opci\u00f3 <code>dump-autoload</code> (o <code>du</code>):</p> <pre><code>composer dump-autoload\n</code></pre>"},{"location":"02php.html#gestio-de-dates-i-hores-amb-carbon","title":"\ud83d\udcc5 Gesti\u00f3 de dates i hores amb Carbon","text":""},{"location":"02php.html#que-es-carbon","title":"Qu\u00e8 \u00e9s Carbon?","text":"<p>Carbon \u00e9s una llibreria PHP que facilita el treball amb dates i hores. Est\u00e0 basada en l\u2019extensi\u00f3 <code>DateTime</code> de PHP, per\u00f2 amb una sintaxi molt m\u00e9s senzilla i potent.</p> <p>Es tracta d\u2019una llibreria molt utilitzada en aplicacions modernes per formatar, manipular i calcular temps.</p>"},{"location":"02php.html#installacio-amb-composer","title":"Instal\u00b7laci\u00f3 amb Composer","text":"<p>Per a utilitzar Carbon en el nostre projecte, cal primer instal\u00b7lar-lo mitjan\u00e7ant Composer:</p> <p><pre><code>composer require nesbot/carbon\n</code></pre> Una vegada instal\u00b7lat, ja la podem carregar autom\u00e0ticament amb l\u2019autoloader de Composer.</p>"},{"location":"02php.html#exemple-basic","title":"Exemple b\u00e0sic","text":"<pre><code>$data = Carbon::now();\n\necho $data-&gt;format('d/m/Y H:i'); // 05/08/2025 11:45\necho $data-&gt;locale('ca')-&gt;isoFormat('dddd, D [de] MMMM [de] YYYY'); // dilluns, 5 de agost de 2025\n</code></pre>"},{"location":"02php.html#operacio-amb-dates","title":"Operaci\u00f2 amb dates","text":"<pre><code>$ahir = Carbon::yesterday();\n$dem\u00e0 = Carbon::tomorrow();\n$unaSetmanaDespr\u00e9s = Carbon::now()-&gt;addWeek();\n$fa3Dies = Carbon::now()-&gt;subDays(3);\n\necho \"Ahir era: \" . $ahir;\necho \"Dem\u00e0 ser\u00e0: \" . $dem\u00e0;\n</code></pre>"},{"location":"02php.html#comparacio-de-dates","title":"Comparaci\u00f2 de dates","text":"<pre><code>$data1 = Carbon::parse('2025-08-05');\n$data2 = Carbon::parse('2025-09-01');\n\nif ($data1-&gt;lt($data2)) {\necho \"$data1 \u00e9s anterior a $data2\";\n}\n</code></pre>"},{"location":"02php.html#gestio-dexempcions","title":"\ud83d\udeab Gesti\u00f3 d'Exempcions","text":"<p>La gesti\u00f3 d'excepcions forma part des de PHP 5. El seu funcionament \u00e9s similar a Java*, fent \u00fas d'un bloc <code>try / catch / finally</code>. Si detectem una situaci\u00f3 an\u00f2mala i volem llan\u00e7ar una excepci\u00f3, haurem de realitzar <code>throw new Exception</code> (adjuntant el missatge que l'ha provocat).</p> <pre><code>&lt;?php\ntry\u00a0{\n    if\u00a0($divisor\u00a0==\u00a00) {\n        throw\u00a0new\u00a0Exception(\"Divisi\u00f3n\u00a0por\u00a0cero.\");\n    }\n    $resultado\u00a0=\u00a0$dividendo\u00a0/\u00a0$divisor;\n}\u00a0catch\u00a0(Exception\u00a0$e)\u00a0{\n    echo\u00a0\"Se\u00a0ha\u00a0producido\u00a0el\u00a0siguiente\u00a0error:\u00a0\".$e-&gt;getMessage();\n}\n</code></pre> <p>La classe <code>Exception</code> \u00e9s la classe pare de totes les excepcions. El seu constructor rep <code>missatge[,codigoError][,excepcionPrevia]</code>.</p> <p>A partir d'un objecte <code>Exception</code>, podem accedir als m\u00e8todes <code>getMessage()</code>i <code>getCode()</code> per a obtindre el missatge i el codi d'error de l'excepci\u00f3 capturada.</p> <p>El propi llenguatge ofereix un conjunt d'excepcions ja definides, les quals podem capturar (i llan\u00e7ar des de PHP 7). Es recomana la seua consulta en la documentaci\u00f3 oficial.</p>"},{"location":"02php.html#creant-exempcions","title":"Creant exempcions","text":"<p>Per a crear una excepci\u00f3, la forma m\u00e9s curta \u00e9s crear una classe que \u00fanicament herete de <code>Exception</code>.</p> <pre><code>&lt;?php\nclass\u00a0HolaExcepcion\u00a0extends\u00a0Exception\u00a0{}\n</code></pre> <p>Si volem, i \u00e9s recomanable depenent dels requisits, podem sobrecarregar els m\u00e8todes m\u00e0gics, per exemple, sobrecarregant el constructor i cridant al constructor del pare, o reescriure el m\u00e8tode <code>__toString</code> per a canviar el seu missatge:</p> <pre><code>&lt;?php\nclass\u00a0MiExcepcion\u00a0extends\u00a0Exception\u00a0{\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0__construct($msj,\u00a0$codigo\u00a0=\u00a00,\u00a0Exception\u00a0$previa\u00a0=\u00a0null)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0c\u00f3digo\u00a0propio\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0parent::__construct($msj,\u00a0$codigo,\u00a0$previa);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0__toString()\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0__CLASS__\u00a0.\u00a0\":\u00a0[{$this-&gt;code}]:\u00a0{$this-&gt;message}\\n\";\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0miFuncion()\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Una\u00a0funci\u00f3n\u00a0personalizada\u00a0para\u00a0este\u00a0tipo\u00a0de\u00a0excepci\u00f3n\\n\";\n\u00a0\u00a0\u00a0\u00a0}\n}\n</code></pre> <p>Si definim una excepci\u00f3 d'aplicaci\u00f3 dins d'un namespace, quan referenciem a <code>Exception</code>, haurem de referenciar-la mitjan\u00e7ant el seu nom totalment qualificat (<code>\\Exception</code>), o utilitzant <code>use</code>:</p> Mitjan\u00e7ant nom totalment qualificat <pre><code>&lt;?php\nnamespace \\Dwes\\Ejemplos;\n\n    class\u00a0AppExcepcion\u00a0extends\u00a0\\Exception\u00a0{}\n ```\n=== \"Mitjan\u00e7ant `use`\"\n``` php\n&lt;?php\nnamespace \\Dwes\\Ejemplos;\n\n    use Exception;\n\n    class\u00a0AppExcepcion\u00a0extends\u00a0Exception\u00a0{}\n ```\n\n#### Rellan\u00e7ar exempcions\n\nEn les aplicacions reals, \u00e9s molt comuna capturar una excepci\u00f3 de sistema i llan\u00e7ar una d'aplicaci\u00f3 que hem definit nostros.\nTamb\u00e9 podem llan\u00e7ar les excepcions sense necessitat d'estar dins d'un `try/catch`.\n\n``` php\n&lt;?php\nclass\u00a0AppException\u00a0extends\u00a0Exception\u00a0{}\n\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0C\u00f3digo\u00a0de\u00a0negocio\u00a0que\u00a0falla\n}\u00a0catch\u00a0(Exception\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0AppException(\"AppException:\u00a0\".$e-&gt;getMessage(), $e-&gt;getCode(),\u00a0$e);\n}\n</code></pre>"},{"location":"02php.html#logger-amb-monolog","title":"\ud83d\udcdc Logger amb Monolog","text":"<p>Provarem Composer afegint la llibreria de Monolog al nostre projecte. Es tracta d'un llibreria per a la gesti\u00f3 de logs de les nostres aplicacions, suportant diferents nivells (info, warning, etc...), eixides (fitxers, sockets, BBDD, Web Services, email, etc) i formats (text pla, HTML, JSON, etc...).</p> <p>Per a aix\u00f2, inclourem la llibreria en el nostre projecte amb:</p> <pre><code>composer require monolog/monolog\n</code></pre> <p>Monolog 2 requereix almenys PHP 7.2, compleix amb el estandar de logging PSR-3, i \u00e9s la llibreria emprada per Laravel i Symfony per a la gesti\u00f3 de logs.</p> <p>Quan utilitzar un log</p> <ul> <li>Seguir les acciones/moviments dels usuaris</li> <li>Registrar les transaccions</li> <li>Rastrejar els errors d'usuari</li> <li>Fallades/avisos a nivell de sistema</li> <li>Interpretar i col\u00b7leccionar dades per a posterior investigaci\u00f3 de patrons</li> </ul>"},{"location":"02php.html#nivells","title":"Nivells","text":"<p>A continuaci\u00f3 vam mostrar els diferents nivells de menys a m\u00e9s restrictiu:</p> <pre><code>* debug -100: Informaci\u00f3 detallada amb prop\u00f2sits de debug. No usar en entorns de producci\u00f3.\n* info - 200: Esdeveniments interessants com l'inici de sessi\u00f3 d'usuaris.\n* notice - 250: Esdeveniments normals per\u00f2 significatius.\n* warning - 300: Ocurr\u00e8ncies excepcionals que no arriben a ser error.\n* error - 400: Errors d'execuci\u00f3 que permeten continuar amb l'execuci\u00f3 de l'aplicaci\u00f3 per\u00f2 que han de ser monitorats.\n* critical - 500: Situacions importants on es generen excepcions no esperades o no hi ha disponible un component.\n* alert - 550: S'han de prendre mesures immediatament.\n  Caiguda completa de la web, base de dades no disponible, etc... A m\u00e9s, se solen enviar missatges per email.\n* emergency - 600: \u00c9s l'error m\u00e9s greu i indica que tot el sistema est\u00e0 inutilitzable.\n</code></pre>"},{"location":"02php.html#hola-monolog","title":"Hola Monolog","text":"<p>Per exemple, en l'arxiu <code>pruebaLog.php</code> que col\u00b7locar\u00edem en l'arrel, primer incloem el autoload, importem els classes a utilitzar per a finalment usar els m\u00e8todes de Monolog:</p> <pre><code>&lt;?php\ninclude __DIR__ .\"/vendor/autoload.php\";\n\nuse Monolog\\Level;\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\n\n$log = new Logger(\"MiLogger\");\n$log-&gt;pushHandler(new StreamHandler(\"logs/milog.log\", Level::Debug));\n\n$log-&gt;debug(\"Esto es un mensaje de DEBUG\");\n$log-&gt;info(\"Esto es un mensaje de INFO\");\n$log-&gt;warning(\"Esto es un mensaje de WARNING\");\n$log-&gt;error(\"Esto es un mensaje de ERROR\");\n$log-&gt;critical(\"Esto es un mensaje de CRITICAL\");\n$log-&gt;alert(\"Esto es un mensaje de ALERT\");\n</code></pre> <p>En tots els m\u00e8todes de registre de missatges (<code>debug</code>, <code>info</code>, ...), a m\u00e9s del propi missatge, li podem passar informaci\u00f3 com el contingut d'alguna variable, usuari de l'aplicaci\u00f3, etc.. com a segon par\u00e0metre dins d'un array, el qual es coneix com array de contexte. \u00c9s convenient fer-ho mitjan\u00e7ant un array associatiu per a facilitar la lectura del log.</p> <pre><code>&lt;?php\n$log-&gt;warning(\"Producto no encontrado\", [$producto]);\n$log-&gt;warning(\"Producto no encontrado\", [\"datos\" =&gt; $producto]);\n</code></pre> <p>M\u00e9s informaci\u00f3</p> <p>M\u00e9s informaci\u00f3 sobre manejadores, formateadores i processadors en https://github.com/Seldaek/monolog/blob/master/doc/02-handlers-formatters-processors.md</p>"},{"location":"02php.html#annex-acces-a-fitxers","title":"\ud83d\udcce Annex:  Acc\u00e9s a fitxers","text":""},{"location":"02php.html#funcions-basiques-de-php-per-a-fitxers","title":"\ud83d\udcc4 Funcions b\u00e0siques de PHP per a fitxers","text":"Funci\u00f3 Descripci\u00f3 <code>fopen()</code> Obri un fitxer. <code>fread()</code> Llig el contingut d\u2019un fitxer. <code>fwrite()</code> Escriu dades en un fitxer. <code>fclose()</code> Tanca un fitxer obert. <code>file_exists()</code> Comprova si un fitxer existix. <code>unlink()</code> Elimina un fitxer."},{"location":"02php.html#modes-dobertura-de-fitxers","title":"\ud83d\udd13 Modes d'obertura de fitxers","text":"Mode Descripci\u00f3 <code>r</code> Llig nom\u00e9s. El punter es col\u00b7loca al principi del fitxer. <code>w</code> Escriure nom\u00e9s. Es crea o truncat si ja existix. <code>a</code> Afegeix al final del fitxer. El crea si no existix. <code>r+</code> Llig i escriu. No crea el fitxer si no existix. <code>w+</code> Llig i escriu. Trunca el fitxer o el crea de nou. <code>a+</code> Llig i escriu. Afegeix al final si el fitxer existix."},{"location":"02php.html#exemple-basic_1","title":"Exemple b\u00e0sic","text":"<pre><code>&lt;?php\n$fitxer = fopen(\"dades.txt\", \"w\");\nfwrite($fitxer, \"Hola m\u00f3n!\");\nfclose($fitxer);\n?&gt;\n</code></pre> <p>Aquest codi crea (o substitueix) un fitxer anomenat dades.txt i escriu el text \"Hola m\u00f3n!\" dins d'ell.</p>"},{"location":"02php.html#consideracions-de-seguretat_1","title":"Consideracions de seguretat","text":"<ul> <li>Comprova sempre si el fitxer existix abans de llegir o escriure.</li> <li>Utilitza rutes relatives i evita permetre a l\u2019usuari introduir noms de fitxer directament.</li> <li>Gestiona correctament els errors amb file_exists(), is_readable(), is_writable().</li> </ul>"},{"location":"02php.html#llegir-fitxer-linia-a-linia","title":"\ud83d\udcc4 Llegir fitxer l\u00ednia a l\u00ednia","text":"<pre><code>&lt;?php\n$fitxer = fopen(\"dades.txt\", \"r\");\n\nwhile (!feof($fitxer)) {\n    $linia = fgets($fitxer);\n    echo $linia . \"&lt;br&gt;\";\n}\n\nfclose($fitxer);\n</code></pre> <p>La funci\u00f3 fgets() llig una l\u00ednia de text. La funci\u00f3 feof() comprova si s\u2019ha arribat al final del fitxer.</p>"},{"location":"02php.html#escriure-multiples-linies","title":"\u270d\ufe0f Escriure m\u00faltiples l\u00ednies","text":"<p><pre><code>&lt;?php\n$fitxer = fopen(\"registre.log\", \"a\");\n$linies = [\"Primera l\u00ednia\", \"Segona l\u00ednia\", \"Tercera l\u00ednia\"];\n\nforeach ($linies as $linia) {\n    fwrite($fitxer, $linia . PHP_EOL);\n}\n\nfclose($fitxer);\n?&gt;\n</code></pre> PHP_EOL assegura que el salt de l\u00ednia siga compatible amb el sistema operatiu.</p>"},{"location":"02php.html#gestio-de-directoris","title":"\ud83d\udcc1 Gesti\u00f3 de directoris","text":""},{"location":"02php.html#crear-un-directori","title":"Crear un directori","text":"<pre><code>&lt;?php\nif (!is_dir(\"documents\")) {\n    mkdir(\"documents\", 0755);\n}\n?&gt;\n</code></pre> <p>mkdir() crea un directori amb els permisos indicats. is_dir() comprova si ja existix.</p>"},{"location":"02php.html#llistar-el-contingut-dun-directori","title":"Llistar el contingut d\u2019un directori","text":"<pre><code>&lt;?php\n$directori = opendir(\"documents\");\n\nwhile (($fitxer = readdir($directori)) !== false) {\n    if ($fitxer != \".\" &amp;&amp; $fitxer != \"..\") {\n        echo $fitxer . \"&lt;br&gt;\";\n    }\n}\n\nclosedir($directori);\n</code></pre>"},{"location":"02php.html#eliminar-fitxers-i-directoris","title":"Eliminar fitxers i directoris","text":"<pre><code>&lt;?php\nif (file_exists(\"documents/antiga.txt\")) {\n    unlink(\"documents/antiga.txt\");\n}\n\nif (is_dir(\"documents/buid\")) {\n    rmdir(\"documents/buid\");\n}\n?&gt;\n</code></pre>"},{"location":"02php.html#exercicis","title":"Exercicis","text":""},{"location":"02php.html#bateria-dexercicis-solucionats-per-a-la-unitat-de-php","title":"\ud83e\udde9 Bateria d'Exercicis Solucionats per a la Unitat de PHP","text":"<p>Hi ha un repositori preparat amb les solucions.</p>"},{"location":"02php.html#enunciat-dels-exercicis","title":"Enunciat dels exercicis","text":"<p>Escriu els seg\u00fcent programes: </p>"},{"location":"02php.html#1-hola-mon","title":"1. 'Hola m\u00f3n'","text":"<ul> <li>Declare una variable amb el teu nom.</li> <li>Mostre en pantalla un missatge com ara:  \u201cHola, m\u00f3n! , Ignasi\u201d dins d\u2019una etiqueta HTML  utilitzant echo.</li> </ul> <p>Pots combinar text i variables utilitzant el signe de concatenaci\u00f3 (.).</p>"},{"location":"02php.html#2-variables","title":"2. 'Variables'","text":"<ul> <li>Declare una variable $a amb el valor num\u00e8ric 5.</li> <li>Declare una altra variable $b amb el valor \"10\" (cadena).</li> <li>Mostre per pantalla el resultat de sumar $a + $b dins d\u2019una frase com: \u201cSuma: 15\u201d, utilitzant echo.</li> </ul> <p>Observa com PHP converteix autom\u00e0ticament el valor de la cadena \"10\" a nombre.</p>"},{"location":"02php.html#3-cometes-simples-vs-dobles","title":"3. 'Cometes simples vs dobles'","text":"<ul> <li>Declare una variable $name amb el teu nom.</li> <li> <p>Mostre dues frases amb echo:</p> <ul> <li>Una utilitzant cometes dobles, on s\u2019imprimisca el contingut de la variable.</li> <li>Una altra utilitzant cometes simples, on s\u2019imprimisca literalment $name.</li> </ul> <p>Ex.: Hola, Ignasi! Hola, $name!</p> </li> </ul>"},{"location":"02php.html#4-condicional-basic","title":"4. 'Condicional b\u00e0sic'","text":"<ul> <li>Crea una variable <code>$edat</code> amb un valor num\u00e8ric.</li> <li>Utilitza una estructura condicional <code>if</code> per:<ul> <li>Mostrar un missatge si l\u2019edat \u00e9s negativa: <code>\"Edat inv\u00e0lida\"</code>.</li> <li>Si \u00e9s igual o major de 18, mostrar <code>\"Ets major d'edat\"</code>.</li> <li>Si no, mostrar <code>\"Ets menor d'edat\"</code>.</li> </ul> </li> </ul>"},{"location":"02php.html#5-arrays-i-bucles","title":"5. 'Arrays i bucles'","text":"<ul> <li>Crea un array anomenat <code>$fruites</code> amb tres valors inicials: <code>\"poma\"</code>, <code>\"pl\u00e0tan\"</code> i <code>\"maduixa\"</code>.</li> <li>Mostra per pantalla el primer element de l\u2019array.</li> <li>Afegeix un nou element <code>\"taronja\"</code> a l\u2019array.</li> <li>Recorre l\u2019array complet amb un bucle <code>foreach</code> i mostra cada fruita en una l\u00ednia separada.</li> </ul>"},{"location":"02php.html#6-estructures-match","title":"6. 'Estructures <code>match</code>'","text":"<ul> <li>Declara una variable <code>$nota</code> amb un valor entre 0 i 10.</li> <li>Utilitza l\u2019estructura <code>match (true)</code> per assignar un resultat segons el valor:<ul> <li><code>10</code> \u2192 <code>\"Excel\u00b7lent\"</code></li> <li>Entre <code>8</code> i <code>9</code> \u2192 <code>\"Molt b\u00e9\"</code></li> <li>Entre <code>5</code> i <code>7</code> \u2192 <code>\"B\u00e9\"</code></li> <li>Per defecte \u2192 <code>\"Insuficient\"</code></li> </ul> </li> <li> <p>Mostra el resultat per pantalla.</p> </li> <li> <p>Declara una variable <code>$producte</code> amb algun dels seg\u00fcents valors: <code>\"pa\"</code>, <code>\"llet\"</code>, <code>\"formatge\"</code>.</p> </li> <li>Usa un altre <code>match</code> per assignar un preu a cada producte.</li> <li>Mostra per pantalla el missatge: <code>\"El preu de formatge \u00e9s 2.5 euros.\"</code></li> </ul>"},{"location":"02php.html#7-informacio-del-servidor-amb-_server","title":"7. 'Informaci\u00f3 del servidor amb <code>$_SERVER</code>'","text":"<ul> <li>Crea una p\u00e0gina HTML amb t\u00edtol \"Informaci\u00f3 del Servidor\".</li> <li>Mostra diferents dades utilitzant l\u2019array especial <code>$_SERVER</code>:<ul> <li>Nom del servidor (<code>SERVER_NAME</code>)</li> <li>Adre\u00e7a IP del servidor (<code>SERVER_ADDR</code>)</li> <li>Software del servidor (<code>SERVER_SOFTWARE</code>)</li> <li>Agent d'usuari del client (<code>HTTP_USER_AGENT</code>)</li> <li>M\u00e8tode de la sol\u00b7licitud (<code>REQUEST_METHOD</code>)</li> <li>URL de la sol\u00b7licitud (<code>REQUEST_URI</code>)</li> <li>Referent de la p\u00e0gina (<code>HTTP_REFERER</code>)</li> <li>Protocol utilitzat (<code>SERVER_PROTOCOL</code>)</li> <li>Port utilitzat (<code>SERVER_PORT</code>)</li> </ul> </li> <li>Assegura't de controlar si alguna clau no est\u00e0 disponible, com per exemple el <code>HTTP_REFERER</code>.</li> </ul>"},{"location":"02php.html#8-formulari-de-contacte-amb-validacio","title":"8. 'Formulari de contacte amb validaci\u00f3'","text":"<ul> <li>Crea una p\u00e0gina HTML amb un formulari que demane:<ul> <li>Una adre\u00e7a de correu electr\u00f2nic (<code>email</code>)</li> <li>Un missatge (<code>textarea</code>)</li> </ul> </li> <li>El formulari s\u2019ha d\u2019enviar mitjan\u00e7ant el m\u00e8tode POST i validar:<ul> <li>Que el camp <code>email</code> cont\u00e9 una adre\u00e7a v\u00e0lida (<code>FILTER_VALIDATE_EMAIL</code>)</li> <li>Que els camps no estiguen buits (usa <code>required</code> en HTML i valida amb PHP)</li> </ul> </li> <li>Mostra un missatge de confirmaci\u00f3 si tot \u00e9s correcte, o d\u2019error si el correu no \u00e9s v\u00e0lid.</li> <li>Assegura\u2019t de protegir el contingut rebut amb <code>htmlspecialchars()</code> per evitar problemes de seguretat.</li> </ul>"},{"location":"02php.html#9-formulari-amb-validacio-i-missatges-derror","title":"9. 'Formulari amb validaci\u00f3 i missatges d\u2019error'","text":"<ul> <li>Crea un formulari que demane:<ul> <li>El nom de l\u2019usuari (<code>input text</code>)</li> <li>El correu electr\u00f2nic (<code>input text</code>)</li> </ul> </li> <li>Afegeix validaci\u00f3 en PHP perqu\u00e8:<ul> <li>Cap dels camps estiga buit</li> <li>El correu siga v\u00e0lid (<code>FILTER_VALIDATE_EMAIL</code>)</li> </ul> </li> <li>Mostra missatges d\u2019error en cas de validaci\u00f3 incorrecta (en color roig).</li> <li>Si les dades s\u00f3n correctes, mostra-les en pantalla.</li> <li>Assegura\u2019t de:<ul> <li>Utilitzar <code>htmlspecialchars()</code> i <code>trim()</code> per netejar les entrades</li> <li>Mantenir les dades escrites en el formulari si hi ha errors (sticky form)</li> </ul> </li> </ul>"},{"location":"02php.html#10-pujar-fitxer-i-seleccionar-opcio","title":"10. 'Pujar fitxer i seleccionar opci\u00f3'","text":"<ul> <li>Crea un formulari que permeta:<ul> <li>Pujar un fitxer (input <code>file</code>)</li> <li>Seleccionar una opci\u00f3 d\u2019entre diverses (checkbox)</li> </ul> </li> <li>El formulari ha de validar:<ul> <li>Que el fitxer ha estat pujat correctament</li> <li>Que almenys una opci\u00f3 ha estat seleccionada</li> </ul> </li> <li>Mostra per pantalla:<ul> <li>Nom, tipus, mida i ubicaci\u00f3 del fitxer</li> <li>L\u2019opci\u00f3 seleccionada pel usuari</li> </ul> </li> <li>El fitxer pujat s\u2019ha de moure a una carpeta anomenada <code>uploads/</code> dins del projecte.</li> <li>Utilitza <code>move_uploaded_file()</code> per traslladar-lo de la ubicaci\u00f3 temporal a la definitiva.</li> </ul>"},{"location":"02php.html#11-comptador-de-visites-amb-sessio","title":"11. 'Comptador de visites amb sessi\u00f3'","text":"<ul> <li>Crea un script que utilitze sessions per comptar quantes vegades un usuari ha visitat la p\u00e0gina.<ul> <li>Si \u00e9s la primera vegada, mostra <code>\"Has visitat esta p\u00e0gina 1 vegada.\"</code></li> <li>Si ja ha visitat abans, incrementa el comptador i mostra el nombre de visites.</li> </ul> </li> <li>Afegeix un bot\u00f3 que permeta reiniciar el comptador. En fer clic:<ul> <li>S\u2019ha de destruir la sessi\u00f3</li> <li>Redirigir a la mateixa p\u00e0gina per tornar a comen\u00e7ar</li> </ul> </li> </ul>"},{"location":"02php.html#12-cistella-de-la-compra-i-afegir-productes","title":"12. 'Cistella de la compra (I): Afegir productes'","text":"<ul> <li>Crea una p\u00e0gina amb un formulari on es puga introduir el nom d\u2019un producte.</li> <li>Quan s\u2019envia el formulari:<ul> <li>Guarda el producte dins d\u2019una variable de sessi\u00f3 anomenada <code>$_SESSION[\"cistella\"]</code></li> <li>Redirigeix l\u2019usuari a una p\u00e0gina anomenada <code>02_cistella_veure.php</code></li> </ul> </li> <li>Inclou un enlla\u00e7 que permeta accedir a la p\u00e0gina de visualitzaci\u00f3 de la cistella.</li> </ul>"},{"location":"02php.html#13-cistella-de-la-compra-ii-veure-i-buidar","title":"13. 'Cistella de la compra (II): Veure i buidar'","text":"<ul> <li>Crea una p\u00e0gina que mostre els productes emmagatzemats en la variable de sessi\u00f3 <code>$_SESSION[\"cistella\"]</code>.<ul> <li>Si no hi ha cap producte, mostra un missatge indicant-ho.</li> <li>Si n\u2019hi ha, mostra\u2019ls en una llista.</li> </ul> </li> <li>Inclou un bot\u00f3 per buidar la cistella:<ul> <li>Si es prem, elimina <code>$_SESSION[\"cistella\"]</code></li> <li>Redirigeix a la mateixa p\u00e0gina per actualitzar el contingut</li> </ul> </li> </ul>"},{"location":"02php.html#14-sistema-basic-dautenticacio-amb-sessio","title":"14. 'Sistema b\u00e0sic d\u2019autenticaci\u00f3 amb sessi\u00f3'","text":"<ul> <li>Crea un formulari de login amb els camps:<ul> <li>Usuari (<code>usuari</code>)</li> <li>Contrasenya (<code>clau</code>)</li> </ul> </li> <li>Valida els camps amb valors fixos, per exemple:<ul> <li>Usuari: <code>admin</code></li> <li>Clau: <code>1234</code></li> </ul> </li> <li>Si les dades s\u00f3n correctes:<ul> <li>Guarda l\u2019estat de login a la sessi\u00f3 (<code>$_SESSION[\"login\"]</code>)</li> <li>Guarda tamb\u00e9 el nom de l\u2019usuari</li> <li>Redirigeix a la mateixa p\u00e0gina</li> </ul> </li> <li>Si s\u00f3n incorrectes, mostra un missatge d\u2019error.</li> <li>Si l\u2019usuari est\u00e0 identificat:<ul> <li>Mostra un missatge de benvinguda amb el nom d\u2019usuari</li> <li>Mostra un enlla\u00e7 per a tancar sessi\u00f3, que destru\u00efsca la sessi\u00f3 i redirigisca</li> </ul> </li> </ul>"},{"location":"02php.html#15-recordar-nom-amb-cookies","title":"15. 'Recordar nom amb cookies'","text":"<ul> <li>Crea una p\u00e0gina amb un formulari que demane el nom de l\u2019usuari.</li> <li>Quan s\u2019envie el formulari:<ul> <li>Guarda el nom en una cookie amb duraci\u00f3 d\u20191 hora.</li> <li>Redirigeix a la mateixa p\u00e0gina.</li> </ul> </li> <li>Quan es carregue la p\u00e0gina:<ul> <li>Si existeix la cookie, mostra un missatge de benvinguda amb el nom.</li> <li>Mostra el valor de la cookie com a valor per defecte en l\u2019input (<code>sticky form</code>).</li> </ul> </li> </ul>"},{"location":"02php.html#16-preferencia-de-tema-amb-cookies","title":"16. 'Prefer\u00e8ncia de tema amb cookies'","text":"<ul> <li>Crea una p\u00e0gina que permeta a l\u2019usuari seleccionar entre dos temes: <code>\"clar\"</code> i <code>\"fosc\"</code>.</li> <li>Quan l\u2019usuari selecciona un tema, guarda la selecci\u00f3 en una cookie amb duraci\u00f3 d\u20191 dia.</li> <li>Aplica l\u2019estil CSS corresponent segons el valor de la cookie:<ul> <li>Tema <code>\"clar\"</code>: fons blanc, text negre.</li> <li>Tema <code>\"fosc\"</code>: fons fosc, text clar.</li> </ul> </li> <li>Redirigeix autom\u00e0ticament despr\u00e9s de canviar el tema per aplicar-lo.</li> </ul>"},{"location":"02php.html#17-gestio-de-productes-amb-fitxer-csv","title":"17. 'Gesti\u00f3 de productes amb fitxer CSV'","text":"<ul> <li>Crea un formulari que permeta afegir productes amb:<ul> <li>Nom del producte (<code>text</code>)</li> <li>Preu (<code>number</code>)</li> </ul> </li> <li>Quan s\u2019envie el formulari:<ul> <li>Guarda les dades en un fitxer <code>productes.csv</code> en format CSV.</li> <li>Mostra un missatge si s\u2019ha afegit correctament o si falta algun camp.</li> </ul> </li> <li>Mostra una taula amb tots els productes emmagatzemats al fitxer:<ul> <li>Llig el fitxer <code>productes.csv</code></li> <li>Mostra una taula amb les columnes: <code>Nom</code> i <code>Preu (\u20ac)</code></li> </ul> </li> </ul>"},{"location":"02php.html#18-classe-usuari-i-metodes","title":"18. 'Classe <code>Usuari</code> i m\u00e8todes'","text":"<ul> <li>Crea una classe anomenada <code>Usuari</code> amb atributs privats:<ul> <li><code>$nom</code>, <code>$email</code> </li> </ul> </li> <li>Afegeix un constructor que inicialitze <code>$nom</code>, <code>$email</code> .</li> <li> <p>Afegeix els m\u00e8todes p\u00fablics seg\u00fcents:</p> <ul> <li><code>saluda()</code>: retorna un missatge com: <code>\"Hola, s\u00f3c Ignasi i el meu email \u00e9s ignasi@example.com\"</code></li> </ul> </li> <li> <p>Prova la classe creant una inst\u00e0ncia i cridant als m\u00e8todes <code>saluda()</code> i <code>validar()</code>.</p> </li> </ul>"},{"location":"02php.html#19-instanciacio-i-us-duna-classe","title":"19. 'Instanciaci\u00f3 i \u00fas d\u2019una classe'","text":"<ul> <li>Inclou el fitxer <code>Usuari.php</code> on es defineix la classe <code>Usuari</code>.</li> <li>Crea una inst\u00e0ncia de la classe amb nom <code>\"Pau\"</code> i email <code>\"pau@example.com\"</code>.</li> <li>Mostra el resultat del m\u00e8tode <code>saluda()</code> per pantalla.</li> <li>Assegura\u2019t que has utilitzat <code>require_once</code> per incloure la definici\u00f3 de la classe.</li> </ul>"},{"location":"02php.html#20-classe-producte-amb-constructor-i-metode","title":"20. 'Classe <code>Producte</code> amb constructor i m\u00e8tode'","text":"<ul> <li>Crea una classe anomenada <code>Producte</code> amb dos atributs p\u00fablics:<ul> <li><code>$nom</code> i <code>$preu</code></li> </ul> </li> <li>Afegeix un constructor per inicialitzar els atributs.</li> <li>Afegeix un m\u00e8tode p\u00fablic <code>mostrar()</code> que retorne una cadena amb el format:<ul> <li><code>\"Nom - Preu\u20ac\"</code> (per exemple: <code>\"Formatge - 2.5\u20ac\"</code>)</li> </ul> </li> <li>Crea una inst\u00e0ncia de <code>Producte</code> i mostra el resultat del m\u00e8tode <code>mostrar()</code>.</li> </ul>"},{"location":"02php.html#21-us-duna-classe-amb-try-catch","title":"21. '\u00das d\u2019una classe amb <code>try-catch</code>'","text":"<ul> <li>Inclou el fitxer <code>Producte.php</code> on es defineix la classe <code>Producte</code>.</li> <li>Crea una inst\u00e0ncia amb els valors <code>\"Port\u00e0til\"</code> i <code>799.99</code>.</li> <li>Mostra el resultat del m\u00e8tode <code>mostrar()</code> per pantalla.</li> <li>Encapsula la creaci\u00f3 i \u00fas de l\u2019objecte dins d\u2019un bloc <code>try-catch</code>.<ul> <li>En cas d\u2019error, mostra el missatge capturat amb <code>getMessage()</code>.</li> </ul> </li> </ul>"},{"location":"02php.html#22-login-amb-sessio-i-classe-usuari","title":"22. 'Login amb sessi\u00f3 i classe <code>Usuari</code>'","text":"<ul> <li>Afegeix a la classe <code>Usuari</code> la propietat $clau (modifica el constructor) i els m\u00e8todes:<ul> <li><code>validar($usuari, $clau)</code></li> <li><code>getNom()</code></li> </ul> </li> <li>Crea un script de login que:<ul> <li>Cree un objecte <code>Usuari</code> amb valors fixos (p. ex. <code>\"admin\"</code>, <code>\"1234\"</code>)</li> <li>Valide les dades del formulari POST utilitzant el m\u00e8tode <code>validar()</code></li> <li>Si les dades s\u00f3n correctes, guarde l\u2019estat en <code>$_SESSION</code> i redirigisca</li> <li>Si no, mostre un error</li> </ul> </li> <li>Mostra un formulari si l\u2019usuari no est\u00e0 loguejat i un missatge de benvinguda si ho est\u00e0.</li> <li>Afig un enlla\u00e7 per tancar sessi\u00f3 que:<ul> <li>Elimine la sessi\u00f3</li> <li>Redirigisca a la mateixa p\u00e0gina</li> </ul> </li> </ul>"},{"location":"02php.html#23-classe-amb-namespace-personalitzat","title":"23. 'Classe amb namespace personalitzat'","text":"<ul> <li>Crea una classe anomenada <code>Salutador</code> dins del namespace <code>App</code>.</li> <li>Afegeix un m\u00e8tode p\u00fablic <code>diu($nom)</code> que retorne <code>\"Hola, $nom!\"</code></li> <li>Desa la classe dins d\u2019un fitxer adequat, seguint l\u2019estructura de carpetes segons PSR-4.</li> <li>Prova la classe des d\u2019un fitxer a part utilitzant:<ul> <li><code>require 'vendor/autoload.php';</code></li> <li><code>use App\\Salutador;</code></li> </ul> </li> </ul>"},{"location":"02php.html#24-us-de-classe-amb-autoload-i-use","title":"24. '\u00das de classe amb autoload i <code>use</code>'","text":"<ul> <li>Crea un fitxer <code>index.php</code> dins d\u2019una carpeta <code>public/</code>.</li> <li>Assegura\u2019t que utilitza l\u2019autoload generat per Composer:<ul> <li><code>require __DIR__ . '/../vendor/autoload.php';</code></li> </ul> </li> <li>Importa la classe <code>Salutador</code> mitjan\u00e7ant <code>use App\\Salutador</code>.</li> <li>Crea una inst\u00e0ncia i crida al m\u00e8tode <code>diu(\"Anna\")</code> per mostrar el missatge.</li> </ul>"},{"location":"02php.html#projecte-el-penjat","title":"\ud83c\udfaf Projecte \"El penjat\"","text":""},{"location":"02php.html#repositori","title":"Repositori","text":"<p>Grup A</p>"},{"location":"02php.html#entrega-1","title":"Entrega 1","text":"<p>Implementa una versi\u00f3 simplificada del joc \"L'Ofegat\" utilitzant HTML i PHP. El joc ha de permetre als jugadors endevinar les lletres d'una paraula predefinida i mostrar l'estat actual de les lletres endevinades. No \u00e9s necessari mantenir l'estat del joc entre sol\u00b7licituds ni comprovar si s'han esgotat els intents en aquesta fase inicial.</p> <p>Requisits:</p> <ol> <li>Paraula a Endevinar:<ul> <li>Defineix una paraula predefinida a endevinar.</li> </ul> </li> <li>Inicialitzaci\u00f3 de les Lletres Endevinades:<ul> <li>Crea un array amb guions baixos per representar les lletres que l'usuari ha de trobar.</li> <li>Crea una funci\u00f3 per imprimir este array i que ser\u00e0 el que ens mostre el progres del joc. (les funcions aniran en un fitxer a part)</li> </ul> </li> <li>Funci\u00f3 per a Comprovar Intents:<ul> <li>Crea una funci\u00f3 en PHP que prenga la paraula a endevinar, la lletra introdu\u00efda per l'usuari i l'array de lletres endevinades (passat per refer\u00e8ncia).</li> <li>La funci\u00f3 ha de comprovar si la lletra introdu\u00efda per l'usuari forma part de la paraula.</li> <li>Si la lletra \u00e9s correcta, la funci\u00f3 substituir\u00e0 els guions baixos per la lletra corresponent.</li> <li>La funci\u00f3 retornar\u00e0 un valor boole\u00e0 que indique si la lletra \u00e9s err\u00f2nia o no.</li> <li>Fes proves de la funci\u00f3 per comprovar que funciona correctament.</li> </ul> </li> <li>Comprovaci\u00f3 d'Intents:<ul> <li>Utilitza la funci\u00f3 creada per comprovar si la lletra introdu\u00efda per l'usuari forma part de la paraula.</li> <li>Mostra un missatge d'error si la lletra no \u00e9s correcta.</li> </ul> </li> <li>Interf\u00edcie d'Usuari:<ul> <li>Mostra les lletres introdu\u00efdes per l'usuari fins al moment en color verd si s\u00f3n encertades o roig si s\u00f3n errades.</li> <li>Mostra les errades de l'usuari.</li> <li>Crea un formulari HTML que permeta als jugadors introduir una lletra.</li> </ul> </li> </ol> <p>Codi CSS Proporcionat:</p> <pre><code>.correct { color: green; }\n.incorrect { color: red; }\n</code></pre> Criteri Puntuaci\u00f3 Total Complet(2) Incomplet(1) Insuficient(0) Inicialitzaci\u00f3 de les variables (2.dg) 2 Paraula i Array creat correctament Creats per\u00f2 amb errors No s'ha creat l'array Funci\u00f3 per a Comprovar Intents (2.fe) 3 Funci\u00f3 creada i funcional Funci\u00f3 creada per\u00f2 amb errors No s'ha creat la funci\u00f3 Comprovaci\u00f3 d'Intents   (2.eh) 3 Comprovaci\u00f3 realitzada correctament Comprovaci\u00f3 amb errors No s'ha realitzat la comprovaci\u00f3 Estil CSS               (2c) 1 CSS aplicat correctament CSS aplicat per\u00f2 amb errors No s'ha aplicat el CSS Comentaris i Claredat del Codi  (2ah) 1 Codi ben comentat i clar Codi amb alguns comentaris Codi sense comentaris o desordenat"},{"location":"02php.html#entrega-2","title":"Entrega 2","text":"<ol> <li> <p>Manteniment de l'Estat del Joc amb Sessions:</p> <ul> <li>Utilitza sessions per a emmagatzemar l'estat actual del joc, incloent la paraula a endevinar, lletres endevinades, i el nombre d'intents restants.</li> </ul> </li> <li> <p>Gesti\u00f3 de la Sessi\u00f3 del Joc:</p> <ul> <li>Afegeix funcionalitats per a reiniciar el joc en qualsevol moment, reinicialitzant les variables de sessi\u00f3 per a comen\u00e7ar una nova partida.</li> <li>Afegeix una opci\u00f3 per a tancar sessi\u00f3 i finalitzar la partida actual.</li> <li>Afegeix un funci\u00f3 per a saver si el joc ha acabat, ja siga perqu\u00e8 s'han endevinat totes les lletres o s'haguen arribat al m\u00e0xim n\u00famero d'intents permesos.</li> <li>Controla el final del joc</li> </ul> </li> <li> <p>Cookies per a Recordar Jugadors:</p> <ul> <li>Implementa cookies per a recordar els jugadors entre visites, permetent que l'usuari siga recordat si selecciona una opci\u00f3 de \"Recordar-me\" durant l'inici de sessi\u00f3.</li> </ul> </li> <li> <p>Seguretat i Autenticaci\u00f3:</p> <ul> <li>Implementa un sistema d'autenticaci\u00f3 b\u00e0sic per a garantir que nom\u00e9s els jugadors autenticats puguen accedir al joc.</li> <li>Utilitza sessions per a mantenir l'estat d'autenticaci\u00f3 i controlar l'acc\u00e9s a les funcionalitats del joc.</li> </ul> </li> </ol>"},{"location":"02php.html#consideracions-addicionals","title":"Consideracions Addicionals","text":"<ul> <li>Resili\u00e8ncia del Joc: Implementa la l\u00f2gica necess\u00e0ria per a manejar intents inv\u00e0lids i mostrar missatges d'error adequats.</li> <li>Millores d'Interf\u00edcie: Afegix un enlla\u00e7 o bot\u00f3 per a tancar sessi\u00f3 i una opci\u00f3 per a reiniciar el joc.</li> </ul> Criteri Puntuaci\u00f3 Total Complet (2) Incomplet (1) Insuficient (0) Funcionalitat del Joc (4f) 2 El joc est\u00e0 completament funcional i sense errors. El joc \u00e9s funcional, per\u00f2 cont\u00e9 errors significatius. El joc no \u00e9s funcional o est\u00e0 incomplet. \u00das de Sessions         (4b) 1 Sessions ben implementades per a mantenir l'estat del joc. Sessions utilitzades, per\u00f2 amb defici\u00e8ncies importants. No s'han utilitzat sessions o s\u00f3n incorrectes. \u00das de Cookies       (4c) 1 Cookies ben utilitzades per a recordar els jugadors. Cookies utilitzades amb limitacions evidents. No s'han utilitzat cookies o s\u00f3n incorrectes. Autenticaci\u00f3 d'Usuaris   (4de) 3 Autenticaci\u00f3 segura i efectiva implementada. Autenticaci\u00f3 present per\u00f2 amb defici\u00e8ncies notables. No s'ha implementat autenticaci\u00f3 o \u00e9s incorrecta. Interf\u00edcie d'Usuari (3f) 1 Interf\u00edcie atractiva i f\u00e0cil d'utilitzar. Interf\u00edcie funcional per\u00f2 poc intu\u00eftiva. Interf\u00edcie confusa i dif\u00edcil d'utilitzar. Punts addicionals    (4ef) 2 1 punt per cadasc\u00fana aconseguida."},{"location":"02php.html#entrega-3","title":"Entrega 3","text":"<ol> <li> <p>Desenvolupar una versi\u00f3 modular i escalable del joc \"L'Ofegat\" emprant programaci\u00f3 orientada a objectes (POO) i gesti\u00f3 de depend\u00e8ncies amb Composer     -Organitza el projecte de manera clara utilitzant namespaces i Composer (autoload PSR-4):</p> <p>ofegat-poo/ \u251c\u2500\u2500 composer.json \u251c\u2500\u2500 vendor/ \u251c\u2500\u2500 app/ \u2502 \u251c\u2500\u2500 Joc.php \u2502 \u251c\u2500\u2500 Jugador.php \u2502 \u2514\u2500\u2500 GestorPartida.php \u251c\u2500\u2500 public/ \u2502 \u251c\u2500\u2500 index.php \u2502 \u251c\u2500\u2500 login.php \u2502 \u251c\u2500\u2500 logout.php \u2502 \u2514\u2500\u2500 reiniciar.php \u251c\u2500\u2500 config/ \u2502 \u2514\u2500\u2500 paraules.php \u251c\u2500\u2500 templates/ \u2502 \u251c\u2500\u2500 cap\u00e7alera.php \u2502 \u251c\u2500\u2500 peu.php \u2502 \u2514\u2500\u2500 joc.php \u251c\u2500\u2500 style.css</p> </li> <li> <p>Classes</p> </li> </ol> <ul> <li> <p>Joc</p> <ul> <li>Emmagatzema la paraula a endevinar, intents restants i lletres encertades/error.</li> <li>M\u00e8todes per comprovar lletres, mostrar estat del joc i saber si ha acabat.</li> </ul> </li> <li> <p>Jugador</p> <ul> <li>Gesti\u00f3 del nom d\u2019usuari (amb cookie si s'ha marcat \"recordar\").</li> <li>Control de sessi\u00f3.</li> </ul> </li> <li> <p>GestorPartida</p> <ul> <li>Inicia, reinicia i mant\u00e9 l'estat del joc en sessi\u00f3.</li> <li>Crida els m\u00e8todes corresponents de <code>Joc</code> i <code>Jugador</code>.</li> </ul> </li> </ul> <ol> <li>Altres </li> </ol> <ul> <li>\u00das de Composer per a autoload.</li> <li><code>index.php</code> mostrar\u00e0 el joc actual.</li> <li><code>login.php</code> per accedir amb nom d\u2019usuari.</li> <li><code>reiniciar.php</code> per reiniciar la partida.</li> <li> <p><code>logout.php</code> per tancar sessi\u00f3 i esborrar cookies.</p> </li> <li> <p>Crea un fitxer de paraules i utilitza'l per fer que cada vegada s'haja d'endivinar una</p> </li> </ul> <ol> <li>Extres</li> </ol> <ul> <li>Afegir dibuix d'ofegat (ASCII o imatge) segons el nombre d'errades.</li> <li>Multijugador amb base de dades.</li> <li>Guardar puntuacions.</li> </ul> Criteri Punts Complet (2) Incomplet (1) Insuficient (0) Funcionament correcte del joc (3de) 2 El joc \u00e9s completament funcional i sense errors. El joc \u00e9s funcional per\u00f2 amb errors o limitacions notables. El joc no funciona o est\u00e0 incomplet. \u00das correcte de POO    (3af) 2 Classes ben estructurades, encapsulament correcte, \u00fas de m\u00e8todes i atributs clars. S\u2019usen classes per\u00f2 amb estructura poc clara o pr\u00e0ctiques deficients. No s\u2019aplica orientaci\u00f3 a objectes o de manera incorrecta. Autoload amb Composer      (3b) 1 Composer ben configurat i autoload funcional amb PSR-4. Composer usat per\u00f2 amb problemes o mala configuraci\u00f3. No s\u2019ha utilitzat Composer o l\u2019autoload no funciona. Utilitzaci\u00f3 del fitxer      (4f) 2 Lectura del fitxer i random de paraules amb funcions o poo Lectura del fitxer poc funcional o escalable No s\u2019han implementat o no funciona correctament. Extres                      (4f) 2 Tots els extres implementats Algun extra implementat No s'han implementat Bon \u00fas del codi i organitzaci\u00f3 (3f) 1 Codi ben estructurat, clar i f\u00e0cil de seguir. Codi funcional per\u00f2 desorganitzat o poc llegible. Codi desordenat i dif\u00edcil de mantenir. <p>Puntuaci\u00f3 m\u00e0xima total: 10 punts</p>"},{"location":"02php.html#exercicis-proposats","title":"\ud83d\udcdd Exercicis proposats","text":""},{"location":"02php.html#exercici-1-manipulacio-de-variables-i-operadors","title":"Exercici 1: Manipulaci\u00f3 de Variables i Operadors","text":"<p>Assigna m\u00faltiples variables i utilitza operadors aritm\u00e8tics i l\u00f2gics. Mostra el resultat de cada operaci\u00f3.</p>"},{"location":"02php.html#exercici-2-control-de-flux-amb-bucles","title":"Exercici 2: Control de Flux amb Bucles","text":"<p>Utilitza un bucle <code>for</code> per imprimir els n\u00fameros parells del 0 al 20. Fes-ho tamb\u00e9 amb un bucle <code>while</code>.</p>"},{"location":"02php.html#exercici-3-treballar-amb-arrays-i-funcions","title":"Exercici 3: Treballar amb Arrays i Funcions","text":"<p>Escriu una funci\u00f3 que prenga un array de n\u00fameros, calculi la mitjana i retorni el resultat. Utilitza aquesta funci\u00f3 per imprimir la mitjana d'un array de cinc n\u00fameros.</p>"},{"location":"02php.html#exercici-4-manipulacio-de-strings","title":"Exercici 4: Manipulaci\u00f3 de Strings","text":"<p>Escriu un script que prenga una cadena de text i compti el nombre de vocals. Imprimeix el resultat.</p>"},{"location":"02php.html#exercici-5-arrays-multidimensionals","title":"Exercici 5: Arrays Multidimensionals","text":"<p>Crea un array multidimensional que represente una taula de multiplicar del 1 al 5 i imprimeix els resultats en forma de taula.</p>"},{"location":"02php.html#exercici-6-utilitzant-match-per-a-categoritzar","title":"Exercici 6: Utilitzant <code>match</code> per a categoritzar","text":"<p>Crea un fitxer que utilitze la instrucci\u00f3 <code>match</code> per categoritzar una variable <code>$nota</code> segons el seg\u00fcent criteri: - Si la nota \u00e9s 10, imprimir \"Excel\u00b7lent\". - Si la nota \u00e9s 8 o 9, imprimir \"Molt b\u00e9\". - Si la nota \u00e9s 5, 6 o 7, imprimir \"B\u00e9\". - Per qualsevol altra nota, imprimir \"Insuficient\".</p>"},{"location":"02php.html#exercici-7-validacio-de-formularis","title":"Exercici 7: Validaci\u00f3 de Formularis","text":"<p>Crea un formulari en HTML que permetis als usuaris introduir el seu nom, el correu electr\u00f2nic i un password (dues vegades). Despr\u00e9s de l'enviament del formulari, valida que tots els camps han estat completats i que el correu electr\u00f2nic \u00e9s v\u00e0lid, que el password tinga complexitat i que coincidixen. Mostra un missatge d'error si alguna validaci\u00f3 falla, i si tot \u00e9s correcte, mostra un missatge confirmant que l'usuari s'ha registrat correctament.</p>"},{"location":"02php.html#exercici-8-processament-de-formularis-amb-select-i-radio-buttons","title":"Exercici 8: Processament de Formularis amb Select i Radio Buttons","text":"<p>A partir del formulari newBook.php, fes que el m\u00f2dul i el estat els agafe de valors introdu\u00efts en arrays. Mostra el resultat en una taula.</p>"},{"location":"02php.html#exercici-9-pujar-imatges-des-de-formulari","title":"Exercici 9: Pujar imatges des de formulari","text":"<p>A partir del formulari anterior fes que es puga pujar una imatge. Mostra la imatge en la taula.</p>"},{"location":"02php.html#exercici-10-sistema-de-carret-de-compres-sense-base-de-dades","title":"Exercici 10: Sistema de Carret de Compres sense Base de Dades","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Desenvolupa una aplicaci\u00f3 PHP que permeta als usuaris afegir productes a un carret de compres i mostrar el contingut del carret. Utilitza sessions per a mantindre l'estat del carret entre p\u00e0gines.</p> <ol> <li>Requisits:<ul> <li>Crear una p\u00e0gina on l'usuari puga seleccionar productes.</li> <li>Afegir els productes seleccionats a un carret emmagatzemat en una sessi\u00f3.</li> <li>Mostrar un resum del carret amb els productes afegits i les seues quantitats.</li> <li>Permetre que l'usuari elimine productes del carret.</li> </ul> </li> </ol> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Selecci\u00f3 de productes&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Afegir productes al carret&lt;/h1&gt;\n    &lt;form action=\"carret.php\" method=\"POST\"&gt;\n        &lt;label for=\"producte\"&gt;Tria un producte:&lt;/label&gt;\n        &lt;select name=\"producte\" id=\"producte\"&gt;\n            &lt;option value=\"Poma\"&gt;Poma&lt;/option&gt;\n            &lt;option value=\"Pl\u00e0tan\"&gt;Pl\u00e0tan&lt;/option&gt;\n            &lt;option value=\"Taronja\"&gt;Taronja&lt;/option&gt;\n        &lt;/select&gt;\n        &lt;input type=\"submit\" value=\"Afegir al carret\"&gt;\n    &lt;/form&gt;\n    &lt;a href=\"carret.php\"&gt;Veure carret&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"02php.html#exercici-11-autenticacio-basica-dusuaris-amb-sessions","title":"Exercici 11: Autenticaci\u00f3 B\u00e0sica d'Usuaris amb Sessions","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Crea una aplicaci\u00f3 PHP que permeta als usuaris iniciar sessi\u00f3 mitjan\u00e7ant un formulari. Utilitza sessions per a mantindre l'estat d'autenticaci\u00f3 de l'usuari i mostrar missatges personalitzats basats en aquest estat.</p> <ol> <li>Requisits:<ul> <li>Crear un formulari d'inici de sessi\u00f3 que sol\u00b7licite el nom d'usuari i la contrasenya.</li> <li>Emmagatzemar l'estat d'autenticaci\u00f3 en una sessi\u00f3 despr\u00e9s de verificar les credencials.</li> <li>Mostrar una p\u00e0gina de benvinguda personalitzada per a l'usuari autenticat.</li> <li>Proporcionar un enlla\u00e7 per a tancar sessi\u00f3 i destruir la sessi\u00f3.</li> </ul> </li> </ol>"},{"location":"02php.html#exercici-12-recordatori-dusuari-amb-cookies","title":"Exercici 12: Recordatori d'Usuari amb Cookies","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Afig una funcionalitat de \"recordar-me\" a l'exercici anterior que emmagatzeme el nom d'usuari en una cookie i permeta a l'usuari ser recordat en futures visites al lloc web.</p> <ol> <li>Requisits:<ul> <li>Afig una opci\u00f3 de \"recordar-me\" al formulari d'inici de sessi\u00f3.</li> <li>Emmagatzemar el nom d'usuari en una cookie quan l'opci\u00f3 \u00e9s seleccionada.</li> <li>Comprovar la cookie en futures visites i iniciar sessi\u00f3 autom\u00e0ticament si la cookie existeix.</li> <li>Assegurar que les cookies es configuren amb atributs de seguretat adequats (<code>HttpOnly</code>, <code>Secure</code>, <code>SameSite</code>).</li> </ul> </li> </ol>"},{"location":"02php.html#exercici-13-formulari-de-contacte-amb-proteccio-csrf","title":"Exercici 13: Formulari de Contacte amb Protecci\u00f3 CSRF","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Desenvolupa un formulari de contacte que permeta als usuaris enviar missatges i implementa protecci\u00f3 CSRF per a assegurar que les sol\u00b7licituds siguen leg\u00edtimes.</p> <ol> <li>Requisits:<ul> <li>Crear un formulari de contacte amb camps per al nom, correu electr\u00f2nic i missatge.</li> <li>Generar i emmagatzemar un token CSRF en una sessi\u00f3 quan es carrega el formulari.</li> <li>Incloure el token CSRF com a camp ocult en el formulari.</li> <li>Verificar el token CSRF quan s'envia el formulari i mostrar un missatge de confirmaci\u00f3 si \u00e9s v\u00e0lid.</li> <li>Mostrar un missatge d'error si el token CSRF no \u00e9s v\u00e0lid o no existeix.</li> </ul> </li> </ol>"},{"location":"02php.html#exercici-14-seguiment-dactivitat-de-lusuari-amb-sessions","title":"Exercici 14: Seguiment d'Activitat de l'Usuari amb Sessions","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Crea un sistema que registre les p\u00e0gines visitades per l'usuari durant una sessi\u00f3 i mostre aquesta informaci\u00f3 quan l'usuari visita una p\u00e0gina d'activitat.</p> <ol> <li>Requisits:<ul> <li>Emmagatzemar una llista de p\u00e0gines visitades per l'usuari en una sessi\u00f3.</li> <li>Actualitzar la llista de p\u00e0gines cada vegada que l'usuari visite una nova p\u00e0gina.</li> <li>Crear una p\u00e0gina que mostre l'historial de p\u00e0gines visitades durant la sessi\u00f3 actual.</li> <li>Assegurar que l'historial es restableix quan l'usuari tanca la sessi\u00f3.</li> </ul> </li> </ol>"},{"location":"02php.html#exercici-15-creacio-de-la-classe-basica-i-gestio-de-propietats","title":"Exercici 15. Creaci\u00f3 de la Classe B\u00e0sica i Gesti\u00f3 de Propietats","text":"<ul> <li> <p>Crea una classe <code>Persona</code> amb les propietats privades <code>nom</code>, <code>cognoms</code>, i <code>edat</code>. Encapsula aquestes propietats mitjan\u00e7ant getters i setters. Afig els seg\u00fcents m\u00e8todes:</p> <ul> <li><code>getNomComplet(): string</code> \u2013 Retorna el nom complet de la persona.</li> <li><code>estaJubilat(): bool</code> \u2013 Retorna <code>true</code> si l'edat \u00e9s major o igual a 65, <code>false</code> en cas contrari.</li> </ul> </li> <li> <p>Modifica la classe <code>Persona</code> afegint un constructor que assigna nom i cognoms. Si es proporciona un tercer par\u00e0metre, assigna l'edat; en cas contrari, assigna una edat per defecte de 25 anys.</p> </li> <li> <p>Modifica la classe <code>Persona</code> per utilitzar una constant <code>LIMITE_EDAT</code> amb el valor de 66 anys i utilitza-la en el m\u00e8tode <code>estaJubilat</code>.</p> </li> </ul>"},{"location":"02php.html#exercici-16-herencia-i-polimorfisme","title":"Exercici 16. Her\u00e8ncia i Polimorfisme","text":"<ul> <li> <p>Crea una classe <code>Empleado</code> que herete de <code>Persona</code>. Afig les seg\u00fcents propietats i m\u00e8todes:</p> <ul> <li><code>private float $sou</code></li> <li><code>private array $telefons</code></li> <li><code>anyadirTelefono(int $telefon): void</code> \u2013 Afig un n\u00famero de tel\u00e8fon a l'array.</li> <li><code>listarTelefonos(): string</code> \u2013 Retorna els n\u00fameros de tel\u00e8fon separats per comes.</li> <li><code>vaciarTelefonos(): void</code> \u2013 Buida l'array de tel\u00e8fons.</li> <li><code>debePagarImpuestos(): bool</code> \u2013 Retorna <code>true</code> si el sou \u00e9s superior a 3333\u20ac, <code>false</code> en cas contrari.</li> </ul> </li> <li> <p>Afig un m\u00e8tode est\u00e0tic <code>toHtml(Empleado $emp): string</code> que genere un codi HTML que mostre el nom complet de l'empleat dins d'un par\u00e0graf i els seus tel\u00e8fons dins d'una llista ordenada.</p> </li> <li>Afig un m\u00e8tode est\u00e0tic <code>toHtml(Persona $p)</code> a la classe Persona que mostre el nom complet de la persona dins d'un par\u00e0graf. Modifica el m\u00e8tode <code>toHtml</code> de <code>Empleado</code> per rebre una <code>Persona</code> com a par\u00e0metre i comprovar si es tracta d'un <code>Empleado</code> amb <code>instanceof</code>.</li> <li>Transforma <code>Persona</code> en una classe abstracta. Redefineix el m\u00e8tode est\u00e0tic <code>toHtml(Persona $p)</code> en totes les seues subclasses.</li> </ul>"},{"location":"02php.html#exercici-17-integracio-despais-de-noms-autoloading-i-composer","title":"Exercici 17. Integraci\u00f3 d'Espais de Noms, Autoloading, i Composer","text":"<ul> <li> <p>Crea una classe <code>Empresa</code> que incloga una propietat amb un array de <code>Empleados</code> . Implementa:</p> <ul> <li><code>public function addWorker(Empleado $t)</code></li> <li><code>public function listWorkersHtml(): string</code> \u2013 Genera la llista de treballadors en format HTML.</li> <li><code>public function getCosteNominas(): float</code> \u2013 Calcula el cost total de les n\u00f2mines.</li> </ul> </li> <li> <p>Configura el projecte PHP amb Composer que utilitze l'autoloading PSR-4.</p> </li> </ul>"},{"location":"02php.html#exercici-18-logger","title":"Exercici 18. Logger","text":"<ul> <li> <p>Utilitza la llibreria <code>Monolog</code> per configurar un logger que escriga missatges a un fitxer <code>app.log</code>. Afig funcionalitat perqu\u00e8 el logger registre missatges d'informaci\u00f3 i d'error en diferents arxius segons la gravetat.</p> </li> <li> <p>Configura un logger que escriga missatges de registre tant a un fitxer com a la consola. Prova el logger registrant missatges d'error i advert\u00e8ncia.</p> </li> </ul>"},{"location":"02php.html#exercici-19-generacio-de-pdfs-amb-dompdf","title":"Exercici 19. Generaci\u00f3 de PDFs amb DomPDF","text":"<ul> <li> <p>Instal\u00b7la la llibreria <code>dompdf/dompdf</code> amb Composer. Crea un script PHP que genere un PDF senzill amb un t\u00edtol i un par\u00e0graf de text.</p> </li> <li> <p>Crea un PDF utilitzant DomPDF que incloga una taula amb dades i una imatge. Assegura't que el PDF es renderitze correctament i que la imatge s'incloga en el document.</p> </li> <li> <p>Utilitzant la classe <code>Empresa</code> i <code>Empleado</code>, genera un informe en PDF amb la llista de treballadors i el seu sou. Utilitza DomPDF per generar aquest informe.</p> </li> </ul>"},{"location":"02php.html#solucions","title":"Solucions","text":""},{"location":"02php.html#autoavaluacio","title":"\u2705 Autoavaluaci\u00f3","text":""},{"location":"02php.html#exercici-1-sintaxi-basica-de-php","title":"Exercici 1: Sintaxi B\u00e0sica de PHP","text":""},{"location":"02php.html#pregunta","title":"Pregunta:","text":"<p>Quina \u00e9s la manera correcta d'iniciar i finalitzar un bloc de codi PHP dins d'un fitxer HTML?</p>"},{"location":"02php.html#opcions","title":"Opcions:","text":"a) `` b) ` ... ` c) ` ... ` d) ``"},{"location":"02php.html#exercici-2-variables-i-tipus-de-dades","title":"Exercici 2: Variables i Tipus de Dades","text":""},{"location":"02php.html#pregunta_1","title":"Pregunta:","text":"<p>Quina opci\u00f3 mostra el tipus de dades assignat a la variable <code>$nom</code>?</p>"},{"location":"02php.html#opcions_1","title":"Opcions:","text":"a) `echo gettype($nom);` b) `print datatype($nom);` c) `echo typeof($nom);` d) `print type($nom);`"},{"location":"02php.html#exercici-3-estructures-de-control","title":"Exercici 3: Estructures de Control","text":""},{"location":"02php.html#pregunta_2","title":"Pregunta:","text":"<p>Quina \u00e9s la sortida de l'estructura de control seg\u00fcent? <pre><code>$numero = 10;\nif ($numero &gt; 5) {\n    echo \"Major que 5\";\n} else {\n    echo \"Menor o igual a 5\";\n}\n</code></pre></p>"},{"location":"02php.html#opcions_2","title":"Opcions","text":"a) Major que 5 b) Menor o igual a 5 c) No imprimeix res d) Error de sintaxi"},{"location":"02php.html#exercici-4-operadors-en-php","title":"Exercici 4: Operadors en PHP","text":""},{"location":"02php.html#pregunta_3","title":"Pregunta:","text":"<p>Quin ser\u00e0 el valor de <code>$resultat</code> despr\u00e9s d'executar el seg\u00fcent codi? <pre><code>$resultat = 5 + 2 * 3;\n</code></pre></p>"},{"location":"02php.html#opcions_3","title":"Opcions:","text":"a) 21 b) 11 c) 17 d) 13"},{"location":"02php.html#exercici-5-arrays-en-php","title":"Exercici 5: Arrays en PHP","text":""},{"location":"02php.html#pregunta_4","title":"Pregunta:","text":"<p>Com es pot afegir un element al final d'un array en PHP?</p>"},{"location":"02php.html#opcions_4","title":"Opcions:","text":"a) array_add($array, $element); b) $array[] = $element; c) append($array, $element); d) add_to_array($array, $element);"},{"location":"02php.html#exercici-6-funcions-en-php","title":"Exercici 6: Funcions en PHP","text":""},{"location":"02php.html#pregunta_5","title":"Pregunta:","text":"<p>Com es defineix una funci\u00f3 en PHP?</p>"},{"location":"02php.html#opcions_5","title":"Opcions:","text":"a) function: myFunction() { ... } b) def myFunction() { ... } c) function myFunction() { ... } d) fn myFunction() =&gt; { ... }"},{"location":"02php.html#exercici-7-instruccio-switch","title":"Exercici 7: Instrucci\u00f3 switch","text":""},{"location":"02php.html#pregunta_6","title":"Pregunta:","text":"<p>Quina instrucci\u00f3 s'utilitza per detenir l'execuci\u00f3 d'un cas dins d'un switch en PHP?</p>"},{"location":"02php.html#opcions_6","title":"Opcions:","text":"a) stop b) exit c) halt d) break"},{"location":"02php.html#exercici-8-funcions-de-les-cookies","title":"Exercici 8: Funcions de les Cookies","text":""},{"location":"02php.html#pregunta_7","title":"Pregunta:","text":"<p>Quina \u00e9s la funci\u00f3 principal de les cookies en el context del desenvolupament web?</p>"},{"location":"02php.html#opcions_7","title":"Opcions:","text":"a) Guardar els fitxers de l'usuari al servidor. b) Emmagatzemar informaci\u00f3 del client per personalitzar l'experi\u00e8ncia d'usuari. c) Executar codi al servidor. d) Controlar la velocitat de la connexi\u00f3 a Internet."},{"location":"02php.html#exercici-9-seguretat-de-les-cookies","title":"Exercici 9: Seguretat de les Cookies","text":""},{"location":"02php.html#pregunta_8","title":"Pregunta:","text":"<p>Quins atributs de seguretat haurien de tindre les cookies per protegir-les contra atacs?</p>"},{"location":"02php.html#opcions_8","title":"Opcions:","text":"a) Secure b) HttpOnly c) SameSite d) CrossSite"},{"location":"02php.html#exercici-10-creacio-de-sessions-en-php","title":"Exercici 10: Creaci\u00f3 de Sessions en PHP","text":""},{"location":"02php.html#pregunta_9","title":"Pregunta:","text":"<p>Quin dels seg\u00fcents passos \u00e9s necessari per iniciar una sessi\u00f3 en PHP?</p>"},{"location":"02php.html#opcions_9","title":"Opcions:","text":"a) Cridar a la funci\u00f3 session_start(). b) Utilitzar la funci\u00f3 session_open(). c) Assignar un valor a la variable $_SESSION. d) No es necessita cap funci\u00f3 especial."},{"location":"02php.html#exercici-11-manteniment-dinformacio-en-sessions","title":"Exercici 11: Manteniment d'Informaci\u00f3 en Sessions","text":""},{"location":"02php.html#pregunta_10","title":"Pregunta:","text":"<p>Com es pot mantindre la informaci\u00f3 d'un usuari durant la sessi\u00f3 d'una aplicaci\u00f3 web?</p>"},{"location":"02php.html#opcions_10","title":"Opcions:","text":"a) Utilitzant la variable global $GLOBALS. b) Utilitzant la variable $_SESSION. c) Utilitzant la variable $_COOKIE. d) Utilitzant arxius temporals al servidor."},{"location":"02php.html#exercici-12-funcions-de-php-per-a-sessions","title":"Exercici 12: Funcions de PHP per a Sessions","text":""},{"location":"02php.html#pregunta_11","title":"Pregunta:","text":"<p>Quina funci\u00f3 de PHP es fa servir per destruir una sessi\u00f3?</p>"},{"location":"02php.html#opcions_11","title":"Opcions:","text":"a) session_destroy() b) session_unset() c) session_delete() d) session_end()"},{"location":"02php.html#exercici-13-avantatges-de-les-sessions","title":"Exercici 13: Avantatges de les Sessions","text":""},{"location":"02php.html#pregunta_12","title":"Pregunta:","text":"<p>Quins s\u00f3n els avantatges d'utilitzar sessions en lloc de cookies per a mantenir l'estat de l'usuari?</p>"},{"location":"02php.html#opcions_12","title":"Opcions:","text":"a) Les sessions poden emmagatzemar m\u00e9s informaci\u00f3 perqu\u00e8 es guarden al servidor. b) Les sessions s\u00f3n m\u00e9s segures perqu\u00e8 no s'envien al client. c) Les sessions redueixen la c\u00e0rrega del servidor. d) Les sessions no necessiten ser configurades amb atributs de seguretat."},{"location":"02php.html#exercici-14-autenticacio-dusuaris","title":"Exercici 14: Autenticaci\u00f3 d'Usuaris","text":""},{"location":"02php.html#pregunta_13","title":"Pregunta:","text":"<p>Quina \u00e9s la pr\u00e0ctica recomanada per assegurar la identitat d'un usuari en una aplicaci\u00f3 web?</p>"},{"location":"02php.html#opcions_13","title":"Opcions:","text":"a) Utilitzar noms d'usuari i contrasenyes emmagatzemades com a cookies. b) Utilitzar sessions per mantenir l'estat d'autenticaci\u00f3 despr\u00e9s d'iniciar sessi\u00f3. c) Emmagatzemar la contrasenya de l'usuari a la URL. d) No utilitzar cap forma d'autenticaci\u00f3."},{"location":"02php.html#exercici-15-constructors-en-php","title":"Exercici 15: Constructors en PHP","text":""},{"location":"02php.html#pregunta_14","title":"Pregunta:","text":"<p>Quina \u00e9s la funci\u00f3 principal d'un constructor en una classe PHP?</p>"},{"location":"02php.html#opcions_14","title":"Opcions:","text":"a) Destruir els objectes de la classe quan ja no s\u00f3n necessaris. b) Inicialitzar les propietats de l'objecte quan es crea. c) Executar una funci\u00f3 arbitr\u00e0ria abans de cada m\u00e8tode. d) Crear m\u00e8todes m\u00e0gics autom\u00e0ticament."},{"location":"02php.html#exercici-16-herencia-en-php","title":"Exercici 16: Her\u00e8ncia en PHP","text":""},{"location":"02php.html#pregunta_15","title":"Pregunta:","text":"<p>Quina \u00e9s l'avantatge principal de l'her\u00e8ncia en la programaci\u00f3 orientada a objectes?</p>"},{"location":"02php.html#opcions_15","title":"Opcions:","text":"a) Permet reutilitzar codi definint classes noves basades en classes existents. b) Permet ocultar totes les propietats i m\u00e8todes de la classe. c) Permet definir funcions globals sense necessitat de classes. d) Permet cridar a funcions de JavaScript des de PHP."},{"location":"02php.html#exercici-17-polimorfisme","title":"Exercici 17: Polimorfisme","text":""},{"location":"02php.html#pregunta_16","title":"Pregunta:","text":"<p>Qu\u00e8 permet el polimorfisme en el context de la POO?</p>"},{"location":"02php.html#opcions_16","title":"Opcions:","text":"a) Permet que una funci\u00f3 tinga m\u00faltiples implementacions depenent de l'objecte que la cride. b) Permet la creaci\u00f3 d'objectes a partir de funcions an\u00f2nimes. c) Permet la connexi\u00f3 entre PHP i bases de dades relacionals. d) Permet executar m\u00faltiples scripts PHP alhora."},{"location":"02php.html#exercici-18-espais-de-noms","title":"Exercici 18: Espais de Noms","text":""},{"location":"02php.html#pregunta_17","title":"Pregunta:","text":"<p>Per a qu\u00e8 s'utilitzen els espais de noms (namespaces) en PHP?</p>"},{"location":"02php.html#opcions_17","title":"Opcions:","text":"a) Per executar codi PHP de forma asincr\u00f2nica. b) Per evitar conflictes entre noms de classes, funcions o constants en diferents parts del codi. c) Per definir variables globals accessibles des de qualsevol punt del codi. d) Per importar codi d'altres llenguatges de programaci\u00f3 com JavaScript."},{"location":"02php.html#exercici-19-excepcions-en-php","title":"Exercici 19: Excepcions en PHP","text":""},{"location":"02php.html#pregunta_18","title":"Pregunta:","text":"<p>Quina \u00e9s la finalitat d'utilitzar excepcions en PHP?</p>"},{"location":"02php.html#opcions_18","title":"Opcions:","text":"a) Evitar l'execuci\u00f3 de codi mal format. b) Gestionar errors i condicions excepcionals de manera controlada dins d'una aplicaci\u00f3. c) Declarar funcions dins d'una classe. d) Garantir que totes les variables estiguen inicialitzades abans del seu \u00fas."},{"location":"02php.html#exercici-20-autoloading-en-php","title":"Exercici 20: Autoloading en PHP","text":""},{"location":"02php.html#pregunta_19","title":"Pregunta:","text":"<p>Quin avantatge ofereix l'autoloading en PHP?</p>"},{"location":"02php.html#opcions_19","title":"Opcions:","text":"a) Permet que les classes es carreguen autom\u00e0ticament quan s'utilitzen, sense necessitat de fer incloure manualment cada fitxer. b) Permet l'execuci\u00f3 de m\u00faltiples scripts alhora. c) Permet la manipulaci\u00f3 de fitxers en el servidor. d) Permet la connexi\u00f3 amb bases de dades."},{"location":"02php_24.html","title":"El llenguatge PHP","text":"Duraci\u00f3 i criteris d'avaluaci\u00f3 <p>Duraci\u00f3 estimada: 16 hores</p> Resultat d'aprenentatge Criteris d'avaluaci\u00f3 2. Escriu sent\u00e8ncies executables per un servidor Web reconeixent i aplicant procediments d'integraci\u00f3 del codi en llenguatges de marques. a) S'han reconegut els mecanismes de generaci\u00f3 de p\u00e0gines Web a partir de llenguatges de marques amb codi embegut.  b) S'han identificat les principals tecnologies associades.   c) S'han utilitzat etiquetes per a la inclusi\u00f3 de codi en el llenguatge de marques.   d) S'ha reconegut la sintaxi del llenguatge de programaci\u00f3 que s'ha d'utilitzar.   e) S'han escrit sent\u00e8ncies simples i s'ha comprovat els seus efectes en el document resultant.   f) S'han utilitzat directives per a modificar el comportament predeterminat.   g) S'han utilitzat els diferents tipus de variables i operadors disponibles en el llenguatge.   h) S'han identificat els \u00e0mbits d'utilitzaci\u00f3 de les variables.   3. Escriu blocs de sent\u00e8ncies embeguts en llenguatges de marques, seleccionant i utilitzant les estructures de programaci\u00f3. a) S'han utilitzat mecanismes de decisi\u00f3 en la creaci\u00f3 de blocs de sent\u00e8ncies.  b) S'han utilitzat bucles i s'ha verificat el seu funcionament.   c) S'han utilitzat \u00abarrays\u00bb per a emmagatzemar i recuperar conjunts de dades.   d) S'han creat i utilitzat funcions.   e) S'han utilitzat formularis Web per a interactuar amb l'usuari del navegador Web.   f) S'han emprat m\u00e8todes per a recuperar la informaci\u00f3 introdu\u00efda en el formulari.   g) S'han afegit comentaris al codi."},{"location":"02php_24.html#php","title":"PHP","text":"<ul> <li>Acr\u00f2nim de Personal Home Page</li> <li>Llenguatge de prop\u00f2sit general, encara que el seu fort \u00e9s el *desarollo web.</li> <li>Sintaxi similar a C / Java</li> <li>El codi s'executa en el servidor (en Apatxe mitjan\u00e7ant mod_php)</li> <li>El client rep el resultat generat despr\u00e9s d'interpretar el codi en el servidor.</li> <li>El codi s'emmagatzema en arxiu amb extensi\u00f3 <code>.*php</code>.</li> </ul> <p>L'\u00faltima versi\u00f3 \u00e9s la 8.2, d'Agost de 2023.</p> <p>La seua documentaci\u00f3 \u00e9s extensa i est\u00e0 tradu\u00efda: https://www.php.net/manual/es/.</p>"},{"location":"02php_24.html#codi-embegut","title":"Codi embegut","text":"<p>Els blocs de codi s'escriuen entre <code>&lt;?php</code> y <code>?&gt;</code>, mentre que les sent\u00e8ncies se separen mitjan\u00e7ant <code>;</code>.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;title&gt;PHP f\u00e1cil&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;!-- Muestra una frase con HTML --&gt;\nHola mundo&lt;br&gt;\n&lt;!-- Muestra una frase con PHP --&gt;\n&lt;?php echo \"Es muy f\u00e1cil programar en PHP.\"; ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Nom\u00e9s etiquetes d'obertura</p> <p>Si el nostre codi nom\u00e9s contindr\u00e0 codi PHP i res d'html, com per exemple, quan codifiquem classes o interf\u00edcies, nom\u00e9s posarem l'etiqueta d'obertura, per a aix\u00ed indicar que \u00e9s una arxiu de php pur.</p>"},{"location":"02php_24.html#generant-contingut","title":"Generant contingut","text":"<p>Tenim tres possibilitats a l'hora de generar contingut en els nostres documents PHP:</p> <ul> <li><code>echo</code><code>expresi\u00f3n</code>; </li> <li><code>print</code><code>(expresi\u00f3n);</code></li> <li><code>&lt;?=</code><code>expresi\u00f3n ?&gt;</code></li> </ul> <p>Les que utilitzarem s\u00f3n <code>echo</code> quan ho fem dins d'un bloc d'instruccions i <code>&lt;?=</code> quan nom\u00e9s anem a mostrar el valor d'una variable dins d'un fragment HTML.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n&lt;title&gt;Echo y print&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;p&gt;&lt;?php echo \"Este texto se mostrar\u00e1 en la p\u00e1gina web.\" ?&gt;&lt;/p&gt;\n&lt;p&gt;&lt;?= \"Este texto se mostrar\u00e1 en la p\u00e1gina web.\" ?&gt;&lt;/p&gt;\n&lt;p&gt;&lt;?php print(\"Este texto se mostrar\u00e1 en la p\u00e1gina web.\") ?&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"02php_24.html#comentaris","title":"Comentaris","text":"<p>Podem utilitzar comentaris d'una l\u00ednia o de bloc:</p> <pre><code>&lt;?php\n// Este es un comentario de una sola l\u00ednea\n/*\n  Este es\n  un comentario\n  que ocupa\n  varias l\u00edneas\n*/ \n?&gt;\n</code></pre>"},{"location":"02php_24.html#errors","title":"Errors","text":"<p>Si hi ha un error d'execuci\u00f3, es produeix un Fatal Error.</p> <pre><code>Fatal error: Uncaught Error: Call to undefined function plint() in C:\\xampp\\htdocs\\202echo.php:11\n Stack trace:\n #0 {main}\n    thrown in C:\\xampp\\htdocs\\202echo.php on line 11\n</code></pre> <p>Des de PHP 5 es llancen com una excepci\u00f3. M\u00e9s endavant veurem l'\u00fas de <code>try</code> / <code>catch</code>.</p>"},{"location":"02php_24.html#variables","title":"Variables","text":"<ul> <li>No \u00e9s necessari declarar-les pr\u00e8viament.</li> <li>Comencen per <code>$</code>, per exemple <code>$nom</code>. Despr\u00e9s del <code>$</code>, el seg\u00fcent car\u00e0cter ha de ser una lletra en min\u00fascula (recomanaci\u00f3) o gui\u00f3 baix <code>_</code>. Despr\u00e9s ja es poden posar n\u00fameros.</li> <li>S\u00f3n case sensitive: <code>$*var != $*vAR</code></li> <li>No es declara el seu tipus, el tipat \u00e9s din\u00e0mic. S'assigna en temps d'execuci\u00f3 depenent del valor assignat.</li> <li>Convenient inicialitzar-les, sin\u00f3 donen error.</li> </ul> <pre><code>&lt;?php\n$nombre = \"Aitor\";\n$nombreCompleto = \"Aitor Medrano\";\n$numero = 123;\n$numero2 = 456;\n$pi = 3.14;\n$suerte = true;\n$sinValor;\n\necho $sinValor;\n</code></pre> <p>Tipus</p> <p>Encara que a priori no hi ha tipus de dades, internament PHP treballa amb quatre tipus escalars: boolean, integer, float i string i quatre tipus compostos: array, object, callable i iterable. Existeix un tipus especial per a null (m\u00e9s informaci\u00f3 en http://php.net/manual/es/language.types.null.php).</p>"},{"location":"02php_24.html#constants","title":"Constants","text":"<p>S\u00f3n variables el valor dels quals no varien. Existeixen dues possibilitats:</p> <ul> <li><code>define(NOMBRE, valor);</code></li> <li><code>const NOMBRE; // PHP &gt; 5.3</code></li> </ul> <pre><code>&lt;?php\ndefine(\"PI\", 3.1416);\nconst IVA = 0.21;\n\necho PI, \" \", IVA; // No se pone el s\u00edmbolo dolar\n</code></pre> <ul> <li>Es declaren sempre en MAJ\u00daSCULES</li> <li>Hi ha un conjunt de constants ja predefinides, tamb\u00e9 conegudes com magic constants: https://www.php.net/manual/es/language.constants.predefined.php</li> </ul>"},{"location":"02php_24.html#operadors","title":"Operadors","text":""},{"location":"02php_24.html#arimetics","title":"Arim\u00e8tics","text":"Exemple Nom Resultadt <code>-$a</code> Negaci\u00f3 Oposat de <code>$a</code>. <code>$a + $b</code> Suma Suma de <code>$a</code> i <code>$b</code>. <code>$a - $b</code> Resta Difer\u00e8ncia de <code>$a</code> i <code>$b</code>. <code>$a * $b</code> Multiplicaci\u00f3 Producte de <code>$a</code> i <code>$b</code>. <code>$a / $b</code> Divisi\u00f3 Cocient de <code>$a</code> i <code>$b</code>. <code>$a % $b</code> M\u00f2dul / Resto Resta de <code>$a</code> dividit per <code>$b</code>. <code>$a ** $b</code> Pot\u00e8ncia Resultat de <code>$a</code> elevat a <code>$b</code>. <p>En el cas de cadenes, si volem concatenar-les, s'utilitza l'operador <code>.</code>:</p> <pre><code>&lt;?php\n$x = 33;\n$y = 11;\n$z = $x + $y;\necho \"La suma de 33 y 11 es \".(44).\"&lt;br /&gt;\";\necho \"La suma de \".$x.\" y \".$y.\" es \".(33 + 11).\"&lt;br /&gt;\";\necho \"La suma de \".$x.\" y \".$y.\" es \".$z.\"&lt;br /&gt;\";\n</code></pre> <p>Realment, en comptes de concatenar cadenes amb variables, podem imprimir-les directament ja que s'expandeixen autom\u00e0ticament:</p> <pre><code>&lt;?php\necho \"La suma de $x y $y es $z &lt;br /&gt;\";\n</code></pre> <p>A vegades, necessitem envoltar el nom de la variable entre claus per a poder unir m\u00e9s text al resultat:</p> <pre><code>&lt;?php\n$color = \"rojo\";\necho \"El plural de $color el ${color}s\";\n?&gt;\n</code></pre> <p>M\u00e9s endavant estudiarem algunes funcions per al tractament de cadenes.</p>"},{"location":"02php_24.html#comparacio","title":"Comparaci\u00f3","text":"Exemple Nom Resultat <code>$a == $b</code> Igual <code>true</code> si <code>$a</code> \u00e9s igual a <code>$b</code> despres de la conversi\u00f3 de tipus. <code>$a === $b</code> Id\u00e8ntic, Comparaci\u00f3 estricta <code>true</code> si <code>$a</code> \u00e9s igual a <code>$b</code>, i s\u00f3n del mateix tipus de dades. <code>$a != $b</code>, <code>$a &lt;&gt; $b</code> Diferent <code>true</code> si <code>$a</code> no \u00e9s igual a <code>$b</code> despres de la conversi\u00f3 de tipus. <code>$a !== $b</code> No id\u00e8ntic <code>true</code> si <code>$a</code> no \u00e9s igual a <code>$b</code>, o si no s\u00f3n del mateix tipus. <code>$a &lt; $b</code> Menor que <code>true</code> si <code>$a</code> \u00e9s estrictament menor que <code>$b</code>. <code>$a &gt; $b</code> Major que <code>true</code> si <code>$a</code> \u00e9s estrictamente major que <code>$b</code>. <code>$a &lt;= $b</code> Menor o igual que <code>true</code> si <code>$a</code> \u00e9s menor o igual que <code>$b</code>. <code>$a &gt;= $b</code> Major o igual que <code>true</code> si <code>$a</code> \u00e9s major o igual que <code>$b</code>. <code>$a &lt;=&gt; $b</code> Nau espacial Torna <code>-1</code>, <code>0</code> o <code>1</code> cuando <code>$a</code> \u00e9s respectivament menor, igual, o major que <code>$b</code>. <code>$a ?? $b ?? $c</code> Fussi\u00f3 de null El primer operador d'esquerra a dreta que existisca i no siga <code>null</code>. <code>null</code> si no hi ha valors definits i no s\u00f3n <code>null</code>. PHP &gt;= 7."},{"location":"02php_24.html#logics","title":"L\u00f2gics","text":"Exemple Nom Resultat <code>$a and $b</code>, <code>$a &amp;&amp; $b</code> And (i) <code>true</code> si tant <code>$a</code> com <code>$b</code> s\u00f2n <code>true</code>. <code>$a or $b</code>, <code>$a         || $b</code> Or (o inclusiva) <code>true</code> si qualsevol de <code>$a</code> o <code>$b</code> s\u00f3n <code>true</code>. <code>$a xor $b</code> Xor (o exclusiva) <code>true</code> si <code>$a</code> o <code>$b</code> s\u00f3n <code>true</code>, pero no ambd\u00f3s. <code>!$a</code> Not (no) <code>true</code> si <code>$a</code> no \u00e9s <code>true</code>."},{"location":"02php_24.html#assignacio","title":"Assignaci\u00f3","text":"Exemple Nom Resultat <code>$a = $b</code> Assignaci\u00f3 Assign a <code>$a</code> el valor de <code>$b</code> <code>$a += $b</code> Assignaci\u00f3 de la suma Li afegix a <code>$a</code> el valor de <code>$b</code>. Equivalent a <code>$a = $a + $b</code> <code>$a -= $b</code> Assignaci\u00f3 de la resta Li resta a <code>$a</code> el valor de <code>$b</code>. Equivalent a <code>$a = $a - $b</code> <code>$a *= $b</code> Assignaci\u00f3 del producte Assigna a <code>$a</code> el producte de <code>$a</code> per <code>$b</code>. Equivalent a <code>$a = $a * $b</code> <code>$a /= $b</code> Assignaci\u00f3 de la divisi\u00f3 Assigna a <code>$a</code> el concient de <code>$a</code> entre <code>$b</code>. Equivalent a <code>$a = $a / $b</code> <code>$a %= $b</code> Assignaci\u00f3 de la resta Assigna a <code>$a</code> la resta de dividir <code>$a</code> entre <code>$b</code>. Equivalent a <code>$a = $a % $b</code> <code>$a .= $b</code> Concatenaci\u00f3 Concatena a <code>$a</code> la cadena <code>$b</code>. Equivalent a <code>$a = $a . $b</code> <code>$a++</code> Increment Incrementa <code>$a</code> en una unitat. Equivalent a <code>$a = $a + 1</code> <code>$a--</code> Decrement Decrementa <code>$a</code> en una unitat. Equivalent a <code>$a = $a - 1</code> <p>Prioritat dels operadors</p> <p>Recorda la prioritat. Primer els par\u00e8ntesis, despr\u00e9s la negaci\u00f3 (<code>!</code>), productes/divisions, sumes/restes, comparacions, l\u00f2gics i finalment es realitza l'assignaci\u00f3. M\u00e9s informaci\u00f3 en https://www.php.net/manual/es/language.operators.precedence.php</p> <p>Autoavaluaci\u00f3</p> <p>Si <code>$a=5</code> i <code>$b=4</code>, esbrina el valor de <code>$c</code> si <code>$c = $a*2 &gt; $b+5 &amp;&amp; !($b&lt;&gt;4)</code></p>"},{"location":"02php_24.html#treballant-amb-formularis","title":"Treballant amb formularis","text":"<p>Les dades s'envien via URL amb el format <code>var1=valor1&amp;var2=valor2\u2026</code>. Per exemple: <code>exemple.php?nom=Bruce&amp;cognom=Wayne</code></p> <p>Es divideix en dos passos:</p> <ol> <li>Generar un formulari amb <code>action='arxiu.php' method='GET'</code></li> <li>En l'arxiu <code>.php</code> llegir les dades amb <code>$_GET['nombreVar']</code></li> </ol> <p>Separarem sempre que podem el codi HTML del de PHP. Per exemple, el formulari el col\u00b7loquem en <code>saluda.html</code>:</p> <pre><code>&lt;form action=\"saluda.php\" method=\"get\"&gt;\n    &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre: &lt;/label&gt;\n    &lt;input type=\"text\" name=\"nombre\" id=\"nombre\"&gt;&lt;/p&gt;\n    &lt;p&gt;&lt;label for=\"apellido1\"&gt;Primer apellido:&lt;/label&gt; \n    &lt;input type=\"text\" name=\"apellido1\" id=\"apellido1\"&gt;&lt;/p&gt;\n    &lt;p&gt;&lt;input type=\"submit\" value=\"enviar\"&gt;&lt;/p&gt;\n&lt;/form&gt;\n</code></pre> <p>I arrepleguem les dades en <code>saluda.php</code>:</p> <pre><code>&lt;?php\n$nombre = $_GET[\"nombre\"];\n$apellido1 = $_GET[\"apellido1\"];\n\necho \"Hola $nombre $apellido1\";\n</code></pre> <p>Si el volgu\u00e9rem realitzar tot en un \u00fanic arxiu (la qual cosa no \u00e9s recomanable), podem fer-ho aix\u00ed:</p> <pre><code>&lt;form action=\"\" method=\"get\"&gt;\n    &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre: &lt;/label&gt;\n    &lt;input type=\"text\" name=\"nombre\" id=\"nombre\"&gt;&lt;/p&gt;\n    &lt;p&gt;&lt;label for=\"apellido1\"&gt;Primer apellido:&lt;/label&gt;\n    &lt;input type=\"text\" name=\"apellido1\" id=\"apellido1\"&gt;&lt;/p&gt;\n    &lt;input type=\"submit\" value=\"enviar\"&gt;\n&lt;/form&gt;\n&lt;p&gt;\n    &lt;?php\n    if(isset($_GET['nombre'])) {\n        $nombre = $_GET[\"nombre\"];\n        $apellido1 = $_GET[\"apellido1\"];\n\n        echo \"Hola $nombre $apellido1\";\n    }\n    ?&gt;\n&lt;/p&gt;\n</code></pre> <p>El treball amb formularis l'estudiarem en profunditat en la unitat 4, i veurem que a m\u00e9s de <code>*GET</code>, podem enviar les dades amb <code>POST</code>.</p>"},{"location":"02php_24.html#condicions","title":"Condicions","text":"<p>La condici\u00f3 simple es realitza mitjan\u00e7ant la instrucci\u00f3 <code>if</code>. Entre par\u00e8ntesi es posa la condici\u00f3 que es avalua a <code>true</code> o <code>false</code>. Si no es posen claus, en comptes d'obrir un bloc, s'executar\u00e0 nom\u00e9s la seg\u00fcent instrucci\u00f3.</p> <p>Sempre claus</p> <p>\u00c9s recomanable posar claus sempre encara que en el moment de codificar nom\u00e9s hi haja una \u00fanica instrucci\u00f3. D'aquesta manera, es queda preparat per a afegir m\u00e9s contingut en el futur sense provocar bugs.</p> <pre><code>&lt;?php\n$hora = 8; // La hora en formato de 24 horas\nif ($hora === 8) {\n    echo \"Suena el despertador.\";\n}\necho \"&lt;br&gt;\";\nif ($hora === 8)\n    echo \"Suena el despertador.\";\n</code></pre> <p>Les condicions compostes mitjan\u00e7ant <code>if-else</code>:</p> <pre><code>&lt;?php\n$hora = 17; // La hora en formato de 24 horas\nif ($hora &lt;= 12) {\n    echo \"Son las \" . $hora . \" de la ma\u00f1ana\";\n} else {\n    echo \"Son las \" . ($hora - 12) . \" de la tarde\";\n}\n</code></pre> <p>Les condicions niades mitjan\u00e7ant <code>if-else if-else</code>:</p> <pre><code>&lt;?php\n$hora = 14; // La hora en formato de 24 horas\nif ($hora === 8) {\n    echo \"Es la hora de desayunar.\";\n} else if ($hora === 14) {\n    echo \"Es la hora de la comida.\";\n} else if ($hora === 21) {\n    echo \"Es la hora de la cena.\";\n} else {\n    echo \"Ahora no toca comer.\";\n}\n</code></pre> <p>La sent\u00e8ncia <code>switch</code> tamb\u00e9 permet treballar amb condicions m\u00faltiples:</p> <pre><code>&lt;?php\n$hora = 14; // La hora en formato de 24 horas\nswitch ($hora) {\n    case 9:\n        echo \"Es la hora de desayunar.\";\n        break;\n    case 14:\n        echo \"Es la hora de la comida.\";\n        break;\n    case 21:\n        echo \"Es la hora de la cena.\";\n        break;\n    default:\n        echo \"Ahora no toca comer\";\n}\n</code></pre> <p>No oblides el <code>break</code></p> <p>Un error molt com\u00fa \u00e9s oblidar la instrucci\u00f3 <code>break</code> despr\u00e9s de cada cas. Si no ho posem, executar\u00e0 el seg\u00fcent cas autom\u00e0ticament.</p> <p>Finalment, tamb\u00e9 tenim l'operador ternari <code>condici\u00f3 ? valorTrue : valorFalse</code></p> <pre><code>&lt;?php\n$hora = 14;\n$formato = ($hora &gt; 12) ? 24 : 12;\necho \"El formato es de $formato horas\";\n</code></pre> <p>Si volem comprovar si una variable t\u00e9 valor i si no donar-li un valor determinat, usarem l'operador <code>?:</code> (es coneix com l'operador Elvis - https://en.wikipedia.org/wiki/Elvis_operator) amb la sintaxi <code>expressi\u00f3 ?: valorSiVacio</code>:</p> <pre><code>&lt;?php\n$nombre = $_GET['nombre'] ?: \"desconocido\";\n</code></pre>"},{"location":"02php_24.html#bucles","title":"Bucles","text":"<p>Mitjan\u00e7ant la instrucci\u00f3 <code>while</code>:</p> <pre><code>&lt;?php\n$i = 1;\nwhile ($i &lt;= 10) {\n    echo \"L\u00ednea \" . $i;\n    echo \"&lt;br&gt;\";\n    $i++;\n}\n</code></pre> <p>Mitjan\u00e7ant la instrucci\u00f3 <code>do-while</code>:</p> <pre><code>&lt;?php\ndo {\n    $dado = rand(1, 6);\n    // rand() devuelve un valor aleatorio \n    echo \"Tirando el dado... \";\n    echo \"ha salido un \" . $dado . \".\";\n    echo \"&lt;br&gt;\";\n} while ($dado != 5);\necho \"\u00a1Bien! Saco una ficha de casa.\";\n</code></pre> <p>Mitjan\u00e7ant la instrucci\u00f3 <code>for</code>:</p> <pre><code>&lt;?php\n// Bucle ascendente\nfor ($i = 1; $i &lt;= 10; $i++) {\n    echo \"L\u00ednea \" . $i;\n    echo \"&lt;br&gt;\";\n}\n\n// Bucle descendente\nfor ($i = 10; $i &gt;= 0; $i--) {\n    echo \"L\u00ednea \" . $i;\n    echo \"&lt;br&gt;\";\n}\n</code></pre> <p>M\u00e9s endavant estudiarem el bucle <code>foreach</code> per a rec\u00f3rrer arrays.</p> <p>PHP, de la mateixa manera que Java i C, permet trencar els bucles mitjan\u00e7ant la instrucci\u00f3 <code>break</code>. Al seu torn, <code>continue</code> permet saltar a la seg\u00fcent iteraci\u00f3.</p> <p>Si pots, evita <code>break</code> i <code>continue</code></p> <p>Personalment, no m'agrada el seu \u00fas. Preferisc l'\u00fas de variables flag per a controlar l'eixida dels bucles. Per exemple:</p> <pre><code>&lt;?php\n$salir = false;\nfor ($i = 1; $i &lt;= 10 &amp;&amp; !$salir; $i++) {\n  if ($i === 5) {\n    echo \"Salgo cuando i=5\";\n    $salir = true;\n  }\n}\n</code></pre>"},{"location":"02php_24.html#arrays","title":"Arrays","text":"<p>Per a emmagatzemar dades compostes, podem utilitzar tant arrays senzills com arrays associatius (similars a un mapa). En realitat tots els arrays s\u00f3n mapes ordenats compostos de parells clau-valor.</p> <p>Compte amb mesclar tipus</p> <p>Com el tipat \u00e9s din\u00e0mic, nostres arrays poden contenir dades de diferents tipus. No es recomana mesclar els tipus.</p> <p>De la mateixa manera que Java, es defineixen mitjan\u00e7ant claud\u00e0tors, s\u00f3n 0-index, i es pot assignar un valor a un posici\u00f3 determinada:</p> <pre><code>&lt;?php\n$frutas = array(\"naranja\", \"pera\", \"manzana\");\n\n$frutas2 = [\"naranja\", \"pera\", \"manzana\"];\n\n$frutas3 = [];\n$frutas3[0] = \"naranja\";\n$frutas3[1] = \"pera\";\n$frutas3[] = \"manzana\"; // lo a\u00f1ade al final\n</code></pre> <p>Podem obtindre la grand\u00e0ria del array mitjan\u00e7ant la funci\u00f3 <code>count(array)</code>. Per a rec\u00f3rrer el array farem \u00fas d'un bucle <code>for</code>:</p> <pre><code>&lt;?php\n$tam = count($frutas); // tama\u00f1o del array\n\nfor ($i=0; $i&lt;count($frutas); $i++) {\n    echo \"Elemento $i: $frutas[$i] &lt;br /&gt;\";\n}\n</code></pre> <p>Una altra manera de rec\u00f3rrer els arrays, fins i tot m\u00e9s elegant, \u00e9s fer \u00fas de <code>foreach</code>. La seua sintaxi \u00e9s <code>foreach (array as element)</code>:</p> <pre><code>&lt;?php\n// Mitjan\u00e7ant foreach no necessitem saber la grand\u00e0ria del array\nforeach ($frutas as $fruta) {\n    echo \"$fruta &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"02php_24.html#arrays-associatius","title":"Arrays associatius","text":"<p>Cada element \u00e9s un parell clau-valor. En comptes d'accedir per la posici\u00f3, el fem mitjan\u00e7ant una clau. Aix\u00ed doncs, per a cada clau s'emmagatzema un valor.</p> <p>A l'hora de rec\u00f3rrer aquest tipus de arrays, mitjan\u00e7ant <code>foreach</code> separem cada element en una parella <code>clau =&gt; valor</code>:</p> <pre><code>&lt;?php\n$capitales = [\"Italia\" =&gt; \"Roma\",\n    \"Francia\" =&gt; \"Paris\",\n    \"Portugal\" =&gt; \"Lisboa\"];\n$capitalFrancia = $capitales[\"Francia\"]; // se accede al elemento por la clave, no la posici\u00f3n\n\n$capitales[\"Alemania\"] = \"Berl\u00edn\"; // a\u00f1adimos un elemento\n\necho \"La capital de Francia es $capitalFrancia &lt;br /&gt;\";\necho \"La capital de Francia es {$capitales[\"Francia\"]} &lt;br /&gt;\";\n\n$capitales[] = \"Madrid\"; // se a\u00f1ade con la clave 0 !!! \u00a1\u00a1\u00a1No asignar valores sin clave!!!\n\nforeach ($capitales as $valor) { // si recorremos un array asociativo, mostraremos los valores\n    echo \"$valor &lt;br /&gt;\";\n}\n\nforeach ($capitales as $pais =&gt; $ciudad) { // separamos cada elemento en clave =&gt; valor\n    echo \"$pais : $ciudad &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"02php_24.html#operacions","title":"Operacions","text":"<ul> <li><code>print_r($array)</code>: mostra el contingut de tot el <code>$array</code>. Si volem mostrar el contingut amb un format determinat, hem de rec\u00f3rrer el array amb <code>foreach</code>.</li> <li><code>var_dump($mixed)</code>: mostra el contingut de l'element rebut. Mostra m\u00e9s informaci\u00f3 que <code>print_r</code>.</li> <li><code>$elem = array_pop($array)</code>: elimina l'\u00faltim <code>$element</code></li> <li><code>array_push($array, $elem)</code>: afig un <code>$element</code> al final</li> <li><code>$boole\u00e0 = in_array($elem, $array)</code>: esbrina si <code>$elem</code> est\u00e0 en el <code>$array</code></li> </ul> PHPConsola <pre><code>&lt;?php\n$frutas = [\"naranja\", \"pera\", \"manzana\"];\n\narray_push($frutas, \"pi\u00f1a\");\nprint_r($frutas);\n\n$ultFruta = array_pop($frutas);\nif (in_array(\"pi\u00f1a\", $frutas)) {\n    echo \"&lt;p&gt;Queda pi\u00f1a&lt;/p&gt;\";\n} else {\n    echo \"&lt;p&gt;No queda pi\u00f1a&lt;/p&gt;\";\n}\nprint_r($frutas);\n</code></pre> <pre><code>Array\n(\n  [0] =&gt; naranja\n  [1] =&gt; pera\n  [2] =&gt; manzana\n  [3] =&gt; pi\u00f1a\n)\n&lt;p&gt;No queda pi\u00f1a&lt;/p&gt;\nArray\n(\n  [0] =&gt; naranja\n  [1] =&gt; pera\n  [2] =&gt; manzana\n)\n</code></pre> <ul> <li><code>$claus = array_keys($array)</code>: retorna les claus del <code>$array</code> associatiu</li> <li><code>$tam = count($array)</code>: retorna la grand\u00e0ria de <code>$array</code></li> <li><code>sort($array)</code>: ordena els elements del <code>$array</code></li> <li><code>isset($array[element])</code>: indica si existeix/t\u00e9 valor element dins del array</li> <li><code>unset($array[element])</code>: elimina l'element del array (deixa un buit)</li> </ul> PHPConsola <pre><code>&lt;?php\n$capitales = array(\"Italia\" =&gt; \"Roma\",\n\"Francia\" =&gt; \"Paris\",\n\"Portugal\" =&gt; \"Lisboa\");\n\n$paises = array_keys($capitales);\nprint_r($paises);\nsort($paises);\nprint_r($paises);\n\nunset($capitales[\"Francia\"]);\nprint_r($capitales);\n</code></pre> <pre><code>Array\n(\n  [0] =&gt; Italia\n  [1] =&gt; Francia\n  [2] =&gt; Portugal\n)\nArray\n(\n  [0] =&gt; Francia\n  [1] =&gt; Italia\n  [2] =&gt; Portugal\n)\nArray\n(\n  [Italia] =&gt; Roma\n  [Portugal] =&gt; Lisboa\n)\n</code></pre> <p>En assignar un array a un altre es realitza una c\u00f2pia. Compte amb aquesta operaci\u00f3 que pot consumir molts recursos.</p> PHPConsola <pre><code>&lt;?php\n$nombres = [\"Juan\", \"Ana\", \"Pedro\", \"Laura\"];\n$copia = $nombres;\nsort($nombres);\nprint_r($nombres);\nprint_r($copia);\n</code></pre> <pre><code>Array\n(\n    [0] =&gt; Ana\n    [1] =&gt; Juan\n    [2] =&gt; Laura\n    [3] =&gt; Pedro\n)\nArray\n(\n    [0] =&gt; Juan\n    [1] =&gt; Ana\n    [2] =&gt; Pedro\n    [3] =&gt; Laura\n)\n</code></pre> <p>Existeixen molt\u00edssimes m\u00e9s funcions per a treballar amb arrays. Pots consultar roda la informaci\u00f3 en la documentaci\u00f3 oficial.</p> <p>Articles per a aprofundir en les operacions amb arrays</p> <ul> <li>Un article molt complet (en angl\u00e9s) de Com treballar amb arrays en PHP de la manera correcta.</li> <li>Un altre article recomanable (en angl\u00e9s) \u00e9s Com ordenar arrays en PHP.</li> </ul>"},{"location":"02php_24.html#arrays-bidimensionales","title":"Arrays bidimensionales","text":"<p>Consisteix en un array de arrays, ja siguen arrays seq\u00fcencials o associatius. Pot haver-hi N dimensiones. <pre><code>&lt;?php\n$persona[\"nombre\"] = \"Bruce Wayne\";\n$persona[\"telefonos\"] = [\"966 123 456\", \"636 636 636\"]; // array de arrays ordinarios\n$persona[\"profesion\"] = [\"dia\" =&gt; \"fil\u00e1ntropo\", \"noche\" =&gt; \"caballero oscuro\"]; // array de arrays asociativos\n\necho $persona['nombre'].\" por la noche trabaja de \".$persona['profesion']['noche'];\n</code></pre> Combinant els arrays associatius en diverses dimensions podem emmagatzemar la informaci\u00f3 com si fora una taula:</p> <pre><code>&lt;?php\n$menu1 = [\"Plato1\" =&gt; \"Macarrones con queso\", \"Plato2\" =&gt; \"Pescado asado\", \"Bebida\" =&gt; \"Coca-Cola\", \"Postre\" =&gt; \"Helado de vainilla\"];\n$menu2 = [\"Plato1\" =&gt; \"Sopa\", \"Plato2\" =&gt; \"Lomo con patatas\", \"Bebida\" =&gt; \"Agua\", \"Postre\" =&gt; \"Arroz con leche\"];\n$menus = [$menu1, $menu2]; // creamos un array a partir de arrays asociativos\n\nforeach ($menus as $menudeldia) {\n  echo \"Men\u00fa del d\u00eda&lt;br/&gt;\";\n\n  foreach ($menudeldia as $platos =&gt; $comida) {\n    echo \"$platos: $comida &lt;br/&gt;\";\n  }\n}\n\n// Per a accedir a un element concret es nien els claud\u00e0tors\n$postre0 = $menus[0][\"Postre\"];\n</code></pre> <p>Encara que puga semblar una bona idea crear aquest tipus d'estructures, \u00e9s millor utilitzar objectes conjuntament amb arrays (possiblement arrays d'altres objectes) per a crear estructures complexes que permeten modelar millor els problemes.</p>"},{"location":"02php_24.html#funcions","title":"Funcions","text":"<p>Al no declarar-se els tipus de dades, els par\u00e0metres de les funcions no tenen tipus ni s'indica el tipus de dada que retornen. El pas de par\u00e0metres es realitza per valor, \u00e9s a dir, es realitza una c\u00f2pia de la variable.</p> <pre><code>&lt;?php\nfunction nombreFuncion($par1, $par2, ...) {\n  // c\u00f3digo\n  return $valor;\n}\n\n$resultado = nombreFuncion($arg1, $arg2, \u2026);\n?&gt;\n</code></pre> <p>Per exemple:</p> <pre><code>&lt;?php\nfunction diaSemana() {\n    $semana = [ \"lunes\", \"martes\", \"mi\u00e9rcoles\",\n        \"jueves\", \"viernes\", \"s\u00e1bado\", \"domingo\" ];\n    $dia = $semana[rand(0, 6)];\n    return $dia;\n}\n\n$diaCine = diaSemana();\necho \"El pr\u00f3ximo $diaCine voy al cine.\";\n</code></pre>"},{"location":"02php_24.html#parametres-per-referencia","title":"Par\u00e0metres per refer\u00e8ncia","text":"<p>Si volem passar un par\u00e0metre per refer\u00e8ncia, en la declaraci\u00f3 de la funci\u00f3, indicarem els par\u00e0metres mitjan\u00e7ant l'operador <code>&amp;</code>* per a indicar la direcci\u00f3 de mem\u00f2ria de la variable.</p> <pre><code>&lt;?php\nfunction duplicarPorValor($argumento) {\n    $argumento = $argumento * 2;\n    echo \"Dentro de la funci\u00f3n: $argumento.&lt;br&gt;\";\n}\nfunction duplicarPorReferencia(&amp;$argumento) {\n    $argumento = $argumento * 2;\n    echo \"Dentro de la funci\u00f3n: $argumento.&lt;br&gt;\";\n}\n\n$numero1 = 5;\necho \"Antes de llamar: $numero1.&lt;br&gt;\";\nduplicarPorValor($numero1);\necho \"Despu\u00e9s de llamar: $numero1.&lt;br&gt;\";\necho \"&lt;br&gt;\";\n\n$numero2 = 7;\necho \"Antes de llamar: $numero2.&lt;br&gt;\";\nduplicarPorReferencia($numero2);\necho \"Despu\u00e9s de llamar: $numero2.&lt;br&gt;\";\n</code></pre>"},{"location":"02php_24.html#parametres-per-defecte-opcionals","title":"Par\u00e0metres per defecte / opcionals","text":"<p>Permeten assignar valors en la declaraci\u00f3, i posteriorment, deixar l'argument en blanc.</p> <pre><code>&lt;?php\nfunction obtenerCapital($pais = \"todos\") {\n    $capitales = array(\"Italia\" =&gt; \"Roma\",\n    \"Francia\" =&gt; \"Paris\",\n    \"Portugal\" =&gt; \"Lisboa\");\n\n    if ($pais == \"todos\") {\n        return array_values($capitales);\n    } else {\n        return $capitales[$pais];\n    }\n}\n\nprint_r(obtenerCapital());\necho \"&lt;br/&gt;\";\necho obtenerCapital(\"Francia\");\n</code></pre> <p>En el cas de conviure amb una altra mena de par\u00e0metres, els par\u00e0metres que tenen el valor assignat per defecte sempre es col\u00b7loquen al final.</p> <pre><code>&lt;?php\nfunction saluda($nombre, $prefijo = \"Sr\") {\n    echo \"Hola \".$prefijo.\" \".$nombre;\n}\n\nsaluda(\"Aitor\", \"Mr\");\nsaluda(\"Aitor\");\nsaluda(\"Marina\", \"Srta\");\n</code></pre>"},{"location":"02php_24.html#parametres-variables","title":"Par\u00e0metres variables","text":"<p>Podem tindre funcions on en la declaraci\u00f3 no indiquem la quantitat de dades d'entrada.</p> <ul> <li><code>$arrayArgs = func_get_args();</code> \u2192 Obt\u00e9 un array amb els par\u00e0metres</li> <li><code>$quantitat = func_num_args();</code> \u2192 Obt\u00e9 la quantitat de par\u00e0metres rebuts</li> <li><code>$valor = func_get_arg(numArgumento);</code> \u2192 Obt\u00e9 el par\u00e0metre que ocupa la posici\u00f3 <code>numArgumento</code>.</li> </ul> <p>Aquestes funcions no es poden passar com a par\u00e0metre a una altra funci\u00f3 (com a funcions variable, que veurem m\u00e9s endavant). Per a aix\u00f2, hem de guardar pr\u00e8viament la funci\u00f3 en una variable.</p> <pre><code>&lt;?php\nfunction sumaParametros() {\n    if (func_num_args() == 0) {\n        return false;\n    } else {\n        $suma = 0;\n\n        for ($i = 0; $i &lt; func_num_args(); $i++) {\n            $suma += func_get_arg($i);\n        }\n\n        return $suma;\n    }\n}\n\necho sumaParametros(1, 5, 9); // 15\n</code></pre> <p>Des de PHP 5.6, es pot utilitzar l'operador <code>...</code> (variadics) el qual \"disfressa\" els par\u00e0metres com un array:</p> <pre><code>&lt;?php\nfunction sumaParametrosMejor(...$numeros) {\n    if (count($numeros) == 0) {\n        return false;\n    } else {\n        $suma = 0;\n\n        foreach ($numeros as $num) {\n            $suma += $num;\n        }\n\n        return $suma;\n    }\n}\n\necho sumaParametrosMejor(1, 5, 9); // 15\n</code></pre> <p>M\u00e9s usos de <code>...</code></p> <p>Tamb\u00e9 es pot utilitzar per a dividir un array en variables separades per a proporcionar arguments</p> <pre><code>&lt;?php\nfunction suma($a, $b) {\n    return $a + $b;\n}\n\necho suma(...[1, 5]).\"&lt;br /&gt;\";\n\n$a = [1, 5];\necho suma(...$a);\n</code></pre>"},{"location":"02php_24.html#arguments-amb-nom","title":"Arguments amb nom","text":"<p>Des de PHP 8.0 podem passar els arguments amb el nom (a m\u00e9s de per posici\u00f3, com hem fet fins ara). Els arguments amb nom es passen posant el nom com a prefix del par\u00e0metres separat per dos punts: <code>$resultat = funcion( arg1 : valor1, arg2 : valor2);</code></p> <p>Aquesta caracter\u00edstica complementa els parametros opcionals permitiendonos saltar el seu valor:</p> <pre><code>&lt;?php\nfunction funcionArgumentosNombre($a, $b = 2, $c = 4) {\n\u00a0\u00a0echo \"$a $b $c\";\n}\nfuncionArgumentosNombre(c: 3, a: 1); // \"1 2 3\"\n</code></pre> <p>Tant els par\u00e0metres opcionals com els obligatoris poden tindre nom, per\u00f2 els arguments amb nom s'han de posar despr\u00e9s dels que no ho tenen. <pre><code>&lt;?php\nfuncionArgumentosNombre(1, c: 3); // \"1 2 3\"\n</code></pre></p>"},{"location":"02php_24.html#funcions-amb-tipus","title":"Funcions amb tipus","text":"<p>Des de PHP7 en les funcions, tant els par\u00e0metre com la seua devoluci\u00f3, permeten la definici\u00f3 de tipus. Aix\u00f2 es coneix com strict_types (tipificaci\u00f3 estricta) i cal definir-ho en la primera l\u00ednia de cada arxiu <code>.php</code> perqu\u00e8 el propi interprete PHP comprove els tipus i llance errors si els tipus s\u00f3n incorrectes, mitjan\u00e7ant la sent\u00e8ncia</p> <pre><code>&lt;?php\ndeclare(strict_types=1);\n</code></pre> <p>Aix\u00ed doncs, definirem  els tipus dels par\u00e0metres i dels valors retornats mitjan\u00e7ant els tipus: <code>int</code>, <code>float</code>, <code>string</code>, <code>bool</code>, <code>object</code> i <code>array</code>.</p> <p>Si una funci\u00f3 no retorna res s'indica mitjan\u00e7ant el tipus <code>void</code>.</p> <pre><code>&lt;?php\ndeclare(strict_types=1);\n\nfunction suma(int $a, int $b) : int {\n    return $a + $b;\n}\n\n$num = 33;\necho suma(10, 30);\necho suma(10, $num);\necho suma(\"10\", 30); // error por tipificaci\u00f3n estricta, sino dar\u00eda 40\n</code></pre>"},{"location":"02php_24.html#abast","title":"Abast","text":"<p>Les variables definides fora de les funcions tenen abast global dins del fitxer, es veuen enlloc excepte dins de les funcions. Els par\u00e0metres d'una funci\u00f3 i les variables declarades dins d'una funci\u00f3 (es coneixen com a variables locals) nom\u00e9s s\u00f3n accessibles des de dins de la mateixa funci\u00f3.</p> <p>En cas de conflicte, tenen prioritat les variables locals. Per a evitar el conflicte, dins de la funci\u00f3, podem declarar la variable com a <code>global</code>.</p> Abast localAbast global <pre><code>&lt;?php\nfunction miCiudad() {\n    $ciudad = \"Elche\";\n    echo \"Dentro de la funci\u00f3n: $ciudad.&lt;br&gt;\";\n}\n\n$ciudad = \"Alicante\";\necho \"Antes de la funci\u00f3n: $ciudad.&lt;br&gt;\";\nmiCiudad();\necho \"Despu\u00e9s de la funci\u00f3n: $ciudad.&lt;br&gt;\"\n</code></pre> <pre><code>&lt;?php\nfunction miCiudad() {\n    global $ciudad;\n    $ciudad = \"Elche\";\n    echo \"Dentro de la funci\u00f3n: $ciudad.&lt;br&gt;\";\n}\n\n$ciudad = \"Alicante\";\necho \"Antes de llamar: $ciudad.&lt;br&gt;\";\nmiCiudad();\necho \"Despu\u00e9s de llamar: $ciudad.&lt;br&gt;\"\n</code></pre> <p>No globals</p> <p>Per favor, cal evitar l'\u00fas de variables globals dins de les funcions. En el cas de necessitar-les, \u00e9s millor passar-les com a par\u00e0metre a les funcions.</p>"},{"location":"02php_24.html#funcions-variable","title":"Funcions variable","text":"<ul> <li>Permet assignar una funci\u00f3 a una variable.</li> <li>Nom de la funci\u00f3 entre cometes.</li> <li>Si una variable va seguida de par\u00e8ntesi, PHP buscar\u00e0 una funci\u00f3 amb el seu valor.</li> </ul> <pre><code>&lt;?php\n$miFuncionSuma = \"suma\";\necho $miFuncionSuma(3,4); // invoca a la funci\u00f3n suma\n</code></pre> <p>Funcions an\u00f2nimes</p> <p>PHP permet la definici\u00f3 i \u00fas de funcions an\u00f2nimes, \u00e9s a dir, funcions que no tenen nom, i s'utilitzen principalment per a gestionar els callbacks. Aquest tipus de funcions s'utilitza molt en JavaScript per a gestionar els esdeveniments i promeses.</p> <p><pre><code>&lt;?php\n$anonima = function() {\n    echo \"Hola\";\n};\n$anonima();\n\n$anonimaConParametro = function($nombre) {\n    echo \"Hola \".$nombre;\n};\n$anonimaConParametro(\"Aitor\");\n\n// Uso de variables externas a la funci\u00f3n an\u00f3nima --&gt; `use`\n$mensaje = \"Hola\";\n$miClosure = function() use ($mensaje) {\n    echo $mensaje;\n};\n$miClosure();\n\n// Uso de par\u00e1metros\n$holaPHP = function($arg) use ($mensaje) {\n    echo $mensaje.\" \".$arg;\n};\n$holaPHP(\"PHP\");\n?&gt;\n</code></pre> Des de PHP 7.4 s'han introdu\u00eft les funciones fletxa (arrow functions) per a simplificar la seua definici\u00f3 i \u00fas.</p> <p>Teniu m\u00e9s informaci\u00f3 sobre funcions an\u00f2nimes i fletxa en el seg\u00fcent article (en angl\u00e9s): Funcions an\u00f2nimes i fletxa en PHP</p>"},{"location":"02php_24.html#biblioteca-de-funcions","title":"Biblioteca de funcions","text":"<p>Podem agrupar un conjunt de funcions en un arxiu, per a permetre la seua reutilitzaci\u00f3. Posteriorment, s'inclou amb:</p> <ul> <li><code>include(arxiu);</code> / <code>include_once(arxiu);</code></li> <li><code>require(arxiu);</code> / <code>require_once(arxiu);</code></li> </ul> <p>Si no troba l'arxiu, <code>require</code> llan\u00e7a un error fatal, <code>include</code> l'ignora Les funcions <code>_once</code> nom\u00e9s es carreguen una vegada, si ja ha sigut inclosa pr\u00e8viament, no el torna a fer, evitant bucles.</p> <p>Per exemple, col\u00b7loquem les funcions en l'arxiu <code>biblioteca.php</code>:</p> <pre><code>&lt;?php\nfunction suma(int $a, int $b) : int {\n    return $a + $b;\n}\n\nfunction resta(int $a, int $b) : int {\n    return $a - $b;\n}\n</code></pre> <p>I posteriorment en un altre arxiu:</p> <pre><code>&lt;?php \ninclude_once(\"biblioteca.php\");\necho suma(10,20);\necho resta(40,20);\n</code></pre>"},{"location":"02php_24.html#plantilles-mitjancant-include","title":"Plantilles mitjan\u00e7ant <code>include</code>","text":"<p>Mitjan\u00e7ant l'\u00fas de la instrucci\u00f3 <code>include</code> tamb\u00e9 podem separar fragments de codi PHP/HTML que vulguem reutilitzar en els nostres llocs web i crear un sistema molt senzill de plantilles. Per exemple, separarem una p\u00e0gina en tres parts, primer la part superior en <code>encap\u00e7alat.php</code>:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n&lt;title&gt;&lt;?= $titulo ?&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n</code></pre> <p>La part de baix, per exemple, nom\u00e9s contindr\u00e0 HTML i la col\u00b7loquem en <code>peu.html</code>: <pre><code>&lt;footer&gt;Aitor Medrano&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>I despr\u00e9s ens centrem \u00fanicament en el contingut que canvia en <code>pagina.php</code>:</p> <pre><code>&lt;?php\n$titulo = \"P\u00e1gina con includes\";\ninclude(\"encap\u00e7alat.php\");\n?&gt;\n&lt;h1&gt;&lt;?= $titulo ?&gt;&lt;/h1&gt;\n&lt;?php\ninclude(\"peu.html\");\n?&gt;\n</code></pre>"},{"location":"02php_24.html#funcions-predefinides","title":"Funcions predefinides","text":"<p>El llenguatge ofereix un ventall de funcions ja definides, agrupades per la seua funcionalitat: https://www.php.net/manual/es/funcref.php</p>"},{"location":"02php_24.html#cadenes","title":"Cadenes","text":"<p>Ja hem vist que es poden crear amb cometes simples (<code>''</code>, sense interpretaci\u00f3) o cometes dobles (<code>\"\"</code>, interpreten el contingut i les seq\u00fc\u00e8ncies de fuita <code>\\n</code>, <code>\\t</code>, <code>\\$</code>, <code>{</code>, \u2026 - *magic quotes)</p> <pre><code>&lt;?php\n\"Me llamo $nombre\"\n\"Son 30 {$moneda}s\"\n</code></pre> <p>S'accedeixen als car\u00e0cters com si fora un array.</p> <pre><code>&lt;?php\n$cadena = \u201cYo soy Batman\u201d;\n$ygriega = $cadena[0];\n</code></pre> <p>A m\u00e9s de <code>echo</code>, podem mostrar les cadenes mitjan\u00e7ant la funci\u00f3 <code>printf</code>. Aquesta funci\u00f3 ve heretada del llenguatge C, i en la cadena s'indica el tipus de dada a formatar i genera una eixida formatada. Si vull guardar el resultat en una variable, podem utilitzar <code>sprintf</code>.</p> <pre><code>&lt;?php\n$num = 33;\n$nombre = \"Larry Bird\";\nprintf(\"%s llevaba el n\u00famero %d\", $nombre, $num); // %d -&gt; n\u00famero decimal, %s -&gt; string\n$frase = sprintf(\"%s llevaba el n\u00famero %d\", $nombre, $num);\necho $frase\n</code></pre> <p>Teniu molts m\u00e9s exemples en https://www.w3schools.com/php/func_string_printf.asp</p>"},{"location":"02php_24.html#operacions-basiques","title":"Operacions b\u00e0siques","text":"<p>Totes les funcions es poden consultar en https://www.php.net/manual/es/ref.strings.php</p> <p>Les m\u00e9s importants s\u00f3n:</p> <ul> <li><code>strlen</code>: obt\u00e9 la longitud d'una cadena i retorna un nombre enter</li> <li><code>substr</code>: retorna una subcadena de la cadena original</li> <li><code>str_replace</code>: reempla\u00e7a car\u00e0cters en una cadena</li> <li><code>strtolower</code> i <code>strtoupper</code>: Transformen una cadena de car\u00e0cters en la mateixa cadena en min\u00fascules o maj\u00fascules respectivament.</li> </ul> <pre><code>&lt;?php\n$cadena = \"El caballero oscuro\";\n$tam = strlen($cadena);\necho \"La longitud de '$cadena' es: $tam &lt;br /&gt;\";\n\n$oscuro = substr($cadena, 13); // desde 13 al final\n$caba = substr($cadena, 3, 4); // desde 3, 4 letras\n$katman = str_replace(\"c\", \"k\", $cadena);\necho \"$oscuro $caba ahora es $katman\";\n\necho \"Grande \".strtoupper($cadena);\n?&gt;\n</code></pre> <p>Si volem treballar amb car\u00e0cters ASCII de manera individual, s\u00f3n \u00fatils les funcions:</p> <ul> <li><code>chr</code>: obt\u00e9 el car\u00e0cter a partir d'un ASCII</li> <li><code>ord</code>: obt\u00e9 l'ASCII d'un car\u00e0cter</li> </ul> <pre><code>&lt;?php\nfunction despues(string $letra): string {\n    $asciiLetra = ord($letra);\n    return chr($asciiLetra + 1);\n}\n\necho despues(\"B\");\n</code></pre> <p>Si volem netejar cadenes, tenim les funcions:</p> <ul> <li><code>trim</code>: elimina els espais al principi i al final</li> <li><code>ltrim</code> / <code>rtrim</code> o <code>chop</code>: Elimina els espais inicials / finals d'una cadena.</li> <li><code>str_pad</code>: emplena la cadenes fins a una longitud especificada i amb el car\u00e0cter o car\u00e0cters especificats.</li> </ul> <pre><code>&lt;?php\n$cadena = \" Programando en PHP \";\n$limpia = trim($cadena); // \"Programando en PHP\"\n\n$sucia = str_pad($limpia, 23, \".\"); // \"Programando en PHP.....\"\n</code></pre>"},{"location":"02php_24.html#comparant-i-buscant","title":"Comparant i buscant","text":"<p>La comparaci\u00f3 de cadenes pot ser amb conversi\u00f3 de tipus mitjan\u00e7ant <code>==</code> o estricta amb <code>===</code>. Tamb\u00e9 funcionen els operadors <code>&lt;</code> i <code>&gt;</code> si ambdues s\u00f3n cadenes. En comparar cadenes amb valors numericos podem utilitzar:</p> <ul> <li><code>strcmp</code>: 0 iguals, &lt;0 si <code>a&lt;b</code> o &gt;0 si <code>a&gt;b</code></li> <li><code>strcasecmp</code>: les passa a min\u00fascules i compara</li> <li><code>strncmp</code> / <code>strncasecmp</code>: compara els N primers car\u00e0cters</li> <li><code>strnatcmp</code>: comparacions naturals</li> </ul> <pre><code>&lt;?php\n$frase1 = \"Alfa\";\n$frase2 = \"Alfa\";\n$frase3 = \"Beta\";\n$frase4 = \"Alfa5\";\n$frase5 = \"Alfa10\";\n\nvar_dump( $frase1 == $frase2 ); // true\nvar_dump( $frase1 === $frase2 ); // true\nvar_dump( strcmp($frase1, $frase2) ); // 0\nvar_dump( strncmp($frase1, $frase5, 3) ); // 0\nvar_dump( $frase2 &lt; $frase3 ); // true\nvar_dump( strcmp($frase2, $frase3) ); // -1\nvar_dump( $frase4 &lt; $frase5 ); // false\nvar_dump( strcmp($frase4, $frase5) ); // 4 \u2192 f4 &gt; f5\nvar_dump( strnatcmp($frase4, $frase5) ); // -1 \u2192 f4 &lt; f5\n?&gt;\n</code></pre> <p>Si el que volem \u00e9s buscar dins d'una cadena, tenim:</p> <ul> <li><code>strpos</code> / <code>strrpos</code>: cerca en una cadena i retorna la posici\u00f3 de la primera/\u00faltima ocurr\u00e8ncia.</li> <li><code>strstr</code> / <code>strchr (\u00e0lies)</code>: cerca una cadena i retorna la subcadena a partir d'on l'ha trobada</li> <li><code>stristr</code>: ignora les maj\u00fascules</li> </ul> <pre><code>&lt;?php\n$frase = \"Quien busca encuentra, eso dicen, a veces\";\n$pos1 = strpos($frase, \",\"); // encuentra la primera coma\n$pos2 = strrpos($frase, \",\"); // encuentra la \u00faltima coma\n$trasComa = strstr($frase, \",\"); // \", eso dicen, a veces\"\n</code></pre> <p>Si volem esbrinar que cont\u00e9 les cadenes, tenim un conojunto de funcions de comprovacions de tipus, es coneixen com les funcions ctype que retornen un boole\u00e0:</p> <ul> <li><code>ctype_alpha</code> \u2192 lletres</li> <li><code>ctype_alnum</code> \u2192 alfanum\u00e8rics</li> <li><code>ctype_digit</code> \u2192 d\u00edgits</li> <li><code>ctype_punct</code> \u2192 car\u00e0cters de puntuaci\u00f3, sense espais</li> <li><code>ctype_space</code> \u2192 s\u00f3n espais, tabulador, salt de l\u00ednia</li> </ul> <pre><code>&lt;?php\n$prueba1 = \"hola\";\n$prueba2 = \"hola33\";\n$prueba3 = \"33\";\n$prueba4 = \",.()[]\";\n$prueba5 = \" ,.()[]\";\n\necho ctype_alpha($prueba1).\"&lt;br&gt;\"; // true\necho ctype_alnum($prueba2).\"&lt;br&gt;\"; // true\necho ctype_digit($prueba3).\"&lt;br&gt;\"; // true\necho ctype_punct($prueba4).\"&lt;br&gt;\"; // true\necho ctype_space($prueba5).\"&lt;br&gt;\"; // false\necho ctype_space($prueba5[0]).\"&lt;br&gt;\"; // true\n?&gt;\n</code></pre>"},{"location":"02php_24.html#treballant-amb-subcadenes","title":"Treballant amb subcadenes","text":"<p>Si volem trencar les cadenes en trossos, tenim:</p> <ul> <li><code>explode</code>: converteix en array la cadena mitjan\u00e7ant un separador.</li> <li><code>implode</code> / <code>join</code>: passa un array a cadena amb un separador</li> <li><code>str_split</code> / <code>chunk_split</code>: passa una cadena a una array/cadena cada X car\u00e0cters</li> </ul> <pre><code>&lt;?php\n$frase = \"Quien busca encuentra, eso dicen, a veces\";\n$partes = explode(\",\", $frase);\n\n$ciudades = [\"Elche\", \"Aspe\", \"Alicante\"];\n$cadenaCiudades = implode(\"&gt;\", $ciudades);\n\n$partes3cadena = chunk_split($frase, 3);\n// Qui \n// en \n// bus \n// ca \n// ...\n$partes3array = str_split($frase, 3);\n// [\"Qui\", \"en \", \"bus\", \"ca \", \"enc\", \u2026] \n</code></pre> <p>Si volem treballar amb tokens:</p> <ul> <li><code>strtok(cadena, separador)</code></li> <li>i dins del bucle: <code>strtok(separador)</code></li> </ul> <p>Finalment, per a separar-la sobre la base del format:</p> <ul> <li><code>sscanf</code>: a l'inrev\u00e9s que <code>sprintf</code>, crea un array a partir de la cadena i el patr\u00f3.</li> </ul> <p>Finalment, altres operacions que podem realitzar per a treballar amb subcadenes s\u00f3n:</p> <ul> <li><code>substr_count</code>: nombre de vegades que apareix la subcadena dins de la cadena</li> <li><code>substr_replau</code>: reempla\u00e7a part de la cadena a partir de la seua posici\u00f3, i opcionalment, longitud</li> </ul> <pre><code>&lt;?php\n$batman = \"Bruce Wayne es Batman\";\n$empresa = substr($batman, 6, 5); // Wayne\n$bes = substr_count($batman, \"B\"); // 2\n// Bruce Wayne es camarero\n$camarero1 = substr_replace($batman, \"camarero\", 15);\n$camarero2 = substr_replace($batman, \"camarero\", -6); // quita 6 desde el final\n// Bruno es Batman\n$bruno = substr_replace($batman, \"Bruno\", 0, 11);\n</code></pre> <p>Tamb\u00e9 disposem d'una s\u00e8rie de funcions que faciliten les codificacions des d'i cap a HTML:</p> <ul> <li><code>htmlentities</code>: converteix a entitats HTML, per exemple, <code>\u00e1</code> per <code>\uffc3\uffa1</code>, <code>\u00f1</code> per <code>\uffc3\uffb1</code>, <code>&lt;</code> per&lt;<code></code>, etc..</li> <li><code>htmlspecialchars</code>: idem per\u00f2 nom\u00e9s amb els car\u00e0cters especials (<code>&amp;</code>, <code>\"</code>, <code>'</code>, <code>&lt;</code>, <code>&gt;</code>, ...)</li> <li><code>striptags</code>: elimina etiquetes HTML.</li> <li><code>nl2br</code>: canvia salts de l\u00ednia per <code>&lt;br /&gt;</code>.</li> <li><code>rawurlencode</code> / <code>rawurldecode</code>: codifica/descodifica una URL (espais, ...).</li> </ul> <p>Aquestes funcions les utilitzarem en la unitat 4.- Programaci\u00f3 Web.</p>"},{"location":"02php_24.html#matematiques","title":"Matem\u00e1tiques","text":"<p>Disposem tant de constants com funcions ja definides per a treballar amb operacions matem\u00e0tiques: https://www.php.net/manual/es/ref.math.php</p> <ul> <li>Constants ja definides<ul> <li><code>M_PI</code>, <code>M_E</code>, <code>M_EULER</code>, <code>M_LN2</code>, <code>M_LOG2E</code></li> <li><code>PHP_INT_MAX</code>, <code>PHP_FLOAT_MAX</code></li> </ul> </li> <li>Funciones de c\u00e0lcul<ul> <li><code>pow</code>, <code>sqrt</code>, <code>log</code>, <code>decbin</code>, <code>bindec</code>, <code>decoct</code>, <code>dechex</code>, <code>base_convert</code>, <code>max</code>, <code>min</code></li> </ul> </li> <li>Funcions trigonom\u00e8triques<ul> <li><code>sense</code>, <code>cos</code>, <code>tan</code>, <code>deg2rad</code>, <code>rad2deg</code></li> </ul> </li> <li>Funcions per a treballar amb n\u00fameros aleatoris<ul> <li><code>rand</code>, <code>mt_rand</code> (m\u00e9s r\u00e0pida)</li> </ul> </li> </ul> <p>Encara que la majoria d'elles s\u00f3n molt espec\u00edfiques de problemes matem\u00e0tics / estad\u00edstics, \u00e9s molt com\u00fa que h\u00e0gem d'arredonir i/o formatar els c\u00e0lculs abans de mostrar-los a l'usuari.</p> <p>Mitjan\u00e7ant la funci\u00f3 <code>number_format(numere, cantidadDecimales, separadorDecimales, separadorMiles)</code> podermos passar n\u00fameros a cadena amb decimals i/o separadors de decimals i/o de milers.</p> <pre><code>&lt;?php\n$nf = 1234.5678;\necho number_format($nf, 2); // 1,234.57\necho number_format($nf, 2, \"M\", \"#\"); // 1#234M57\n</code></pre> <p>Per a arredonir, tenim <code>abs</code> per al valor absolut i <code>round</code> per a arredonir, <code>ceil</code> per a aproximaci\u00f3 per exc\u00e9s i <code>floor</code> per defecte.</p> <pre><code>&lt;?php\n$num = 7.7;\n$siete = floor($num);\n$ocho = ceil($num);\n\n$otro = 4.49;\n$cuatro = round($otro);\n$cuatrocinco = round($otro, 1);\n$cinco = round($cuatrocinco);\n</code></pre>"},{"location":"02php_24.html#tipus-de-dades","title":"Tipus de dades","text":"<p>Finalment, per a realitzar conversions de dades o si volem treballar amb tipus de dades, tenim les seg\u00fcents funcions:</p> <ul> <li><code>floatval</code>, <code>intval</code>, <code>strval</code>: retorna una variable de la mena de la funci\u00f3 indicada</li> <li><code>settype</code>: for\u00e7a la conversi\u00f3</li> <li><code>gettype</code>: obt\u00e9 el tipus</li> <li><code>is_int</code>, <code>is_float</code>, <code>is_string</code>, <code>is_array</code>, <code>is_object</code>: retorna un boole\u00e0 a partir del tipus rebut</li> </ul> <pre><code>&lt;?php\n$uno = 1;\nvar_dump(is_int($uno)); // true\n$unofloat = floatval($uno);\nsettype($uno, \"string\");\nvar_dump(is_int($uno)); // false\nvar_dump(is_string($uno)); // true\nsettype($uno, \"float\");\nvar_dump(is_int($uno)); // false\nvar_dump(is_float($uno)); // true\nvar_dump(is_int(intval($uno))); // true\n</code></pre>"},{"location":"02php_24.html#referencies","title":"Refer\u00e8ncies","text":"<ul> <li>Documentaci\u00f3 oficial de PHP</li> <li>W3Schools PHP Tutorial</li> <li>PHP The Right Way</li> <li>MDN Web Docs sobre PHP</li> </ul>"},{"location":"02php_24.html#exercicis","title":"Exercicis","text":""},{"location":"02php_24.html#php-basic","title":"PHP b\u00e0sic","text":"<ol> <li><code>201.php</code> (pissarra): Crea un fitxer PHP anomenat \"201.php\".  Defineix dues variables per representar l'amplada i l'altura del rectangle i assigna'ls valors 10 i 5. Defineix una constant anomenada \"factor\" i assigna-li un valor 2. Aquesta constant s'utilitzar\u00e0 per calcular l'\u00e0rea del rectangle. Calcula l'\u00e0rea del rectangle utilitzant la f\u00f3rmula:</li> </ol> <p>\u00c0rea = Amplada x Altura x FACTOR</p> <p>Imprimeix el resultat utilitzant la funci\u00f3 echo i una cadena de text descriptiva.</p> <ol> <li> <p><code>202.php</code>: Escriu un programa que emmagatzeme en variables el teu nom, primer cognom, segon cognom, email, any de naixement i tel\u00e8fon. Despr\u00e9s mostra'ls per pantalla dins d'una taula.</p> </li> <li> <p><code>203.html</code> i <code>203.php</code> (pissarra): \u00c9s el mateix exercici que l'anterior, per\u00f2 separant la l\u00f2gica. En el primer arxiu crearem el formulari per a introduir les dades, i despr\u00e9s recollim les dades i generem la taula en el segon arxiu.</p> </li> <li> <p><code>204.php</code>: anys - Despr\u00e9s de llegir l'edat d'una persona, mostrar l'edat que tindr\u00e0 dins de 10 anys i fa 10 anys.      A m\u00e9s, mostra quin any ser\u00e0 en cadascun dels casos.      Finalment, mostra l'any de jubilaci\u00f3 suposant que treballar\u00e0s fins als 67 anys.      En aquest cas, no fa falta que pr\u00e8viament crees un formulari, pots provar l'exercici via URL: <code>204.php?edat=33</code>.</p> </li> </ol> <p><code>$anyoActual = date(\"Y\");</code></p> <ol> <li> <p><code>205.php</code> (pissarra): dines -A partir d'una quantitat de diners, mostrar la seua descomposici\u00f3 en bitllets (500, 200, 100, 50, 20, 10, 5) i monedes (2, 1), perqu\u00e8 el nombre d'elements siga m\u00ednim.      No s'ha d'utilitzar cap instrucci\u00f3 condicional. Per exemple, en introduir <code>139</code> ha de mostrar:</p> <p>1 bitllet de 100</p> <p>0 bitllet de 50</p> <p>1 bitllet de 20</p> <p>1 bitllet de 10</p> <p>1 bitllet de 5 </p> <p>2 moneda de 2 </p> <p>Pots for\u00e7ar a realitzar la divisi\u00f3 sencera mitjan\u00e7ant la funci\u00f3 <code>intdiv($dividend, $divisor)</code> o passar un n\u00famero flotant a enter pots usar la funci\u00f3 <code>intval()</code></p> </li> <li> <p><code>206.php</code>: A partir d'un <code>numero</code>, mostra per pantalla si el n\u00famero \u00e9s <code>positiu</code>, <code>negatiu</code> o <code>zero</code>.</p> </li> <li> <p><code>207.php</code>: Sense fer \u00fas de condicions amb operadors l\u00f2gics, mostra el major de tres n\u00fameros (<code>a</code>, <code>b</code> i <code>c</code>).</p> </li> <li> <p><code>208.php</code>: A partir d'una <code>edat</code> mostra per pantalla:</p> <ul> <li><code>beb\u00e9</code> si t\u00e9 menys de 3 anys</li> <li><code>xiquet</code> si t\u00e9 entre 3 i 12 anys</li> <li><code>adolescent</code> entre 13 i 17 anys</li> <li><code>adult</code> entre 18 i 66</li> <li><code>jubilat</code> a partir de 67 </li> </ul> </li> <li> <p><code>209.php</code>: Escriu un programa que funcione similar a un rellotge, de manera que a partir dels valors de <code>hora</code>, <code>minut</code> i <code>segon</code> mostre l'hora dins d'un segon. Despr\u00e9s de les <code>23.59:59</code> seran les <code>0:0:0</code>.</p> </li> </ol>"},{"location":"02php_24.html#bucles_1","title":"Bucles","text":"<ol> <li> <p>Escriu un programa que mostre els nombres parells del 0 al 50 (dins d'una llista desordenada) (pissarra).</p> </li> <li> <p>Escriu un programa que sume els n\u00fameros de l'1 al 10.</p> </li> <li> <p>A partir d'una <code>base</code> i <code>exponent</code>, mitjan\u00e7ant l'acumulaci\u00f3 de productes, calcula la pot\u00e8ncia utilitzant la instrucci\u00f3 <code>for</code> (pissarra).</p> </li> <li> <p>Mostra dins d'una taula HTML la taula de multiplicar del <code>nombre</code> que reba com a par\u00e0metre. Utilitza <code>&lt;thead&gt;</code> amb els seus respectius <code>&lt;th&gt;</code> i <code>&lt;tbody</code>&gt; per a dibuixar la taula. Per exemple:</p> a * b = a*b 7 * 1 = 7 7 * 2 = 14 ... 7 * 10 = 70 </li> <li> <p><code>224.html</code>: Crea un formulari que permeta llegir una <code>quantitat</code>. (pissarra)      <code>224.php</code>: a partir de la quantitat, prepara un formulari amb tantes caixes de dades com el seu valor.      Finalment a partir de les dades de totes les caixes de la p\u00e0gina anterior, suma'ls i mostra el total.</p> <p>Tip</p> <p>Per a guardar una dada oculta pots utilitzar un camp de formulari de tipus ocult: <code>&lt;input type=\"hidden\" name=\"cantidad\" value=\"33\" /&gt;</code></p> </li> <li> <p><code>225.html</code> i <code>225.php</code>: Apartir d'un nombre de <code>files</code> i <code>columnes</code>, crear una taula amb aqueixa grand\u00e0ria.      Les cel\u00b7les han d'estar emplenades amb els valors de les coordenades de cada cel\u00b7la.</p> </li> <li> <p><code>226.html</code> i <code>226.php</code>: Basant-te en l'exercici anterior, emplena la taula de manera que nom\u00e9s les vores de l'esquerra i la de dalt tinguen contingut, quedant-se la resta de cel\u00b7les en blanc.</p> </li> <li> <p><code>227.html</code> i <code>227.php</code>:Basant-te en l'exercici anterior, ara nom\u00e9s ha d'apar\u00e9ixer el contingut dels dues diagonals.</p> </li> </ol>"},{"location":"02php_24.html#arrays_1","title":"Arrays","text":"<ol> <li> <p><code>230.php</code>: Emplena un array amb 50 n\u00fameros aleatoris compresos entre el 0 i el 99, i despr\u00e9s mostra-ho en una llista desordenada.      Per a crear un n\u00famero aleatori, utilitza la funci\u00f3 <code>rand(inici, fi)</code>. (Pissarra) Per exemple:</p> <pre><code>$num = rand(0, 99)\n</code></pre> </li> <li> <p><code>231.php</code>: A partir de l'exercici 230, genera un array aleatori de 33 elements amb n\u00fameros compresos entre el 0 i 100 i calcula:</p> <ul> <li>El major</li> <li>El menor</li> <li>La mitjana</li> </ul> </li> <li> <p><code>232.php</code>: Emplena un array de 100 elements de manera aleat\u00f2ria amb valors <code>M</code> o <code>F</code> (per exemple <code>[\"M\", \"M\", \"F\", \"M\", ...]</code>). Una vegada completat, torna a rec\u00f3rrer-ho i calcula quants elements hi ha de cadascun dels valors emmagatzemant el resultat en un array associatiu <code>['M' =&gt; 44, 'F' =&gt; 66]</code> (no utilitzes variables per a comptar les <code>M</code> o les <code>F</code>).      Finalment, mostra el resultat per pantalla</p> </li> <li> <p><code>233.php</code>: Torna a realitzar l'exercici 207, el de les monedes (500, 200, 100, 50, 20, 10, 5, 2, 1), per\u00f2 fent \u00fas de arrays i un bucle.      Emmagatzema el resultat en un array associatiu. (pissarra)      Mostra el resultat en una llista desordenada \u00fanicament amb les quantitats que tenen algun valor.</p> </li> <li> <p><code>234.php</code>: Mitjan\u00e7ant un array associatiu, emmagatzema el nom i l'al\u00e7ada de 5 persones (<code>nom =&gt; al\u00e7ada</code>).      Posteriorment, recorre el array i mostra-ho en una taula HTML.      Finalment afig una \u00faltima fila a la taula amb l'altura mitjana.</p> </li> <li> <p><code>235.php</code>: Mitjan\u00e7ant un array bidimensional, emmagatzema el nom, altura i email de 5 persones. Per a aix\u00f2, crea un array de persones, sent cada persona un array associatiu: <code>[ ['nom'=&gt;'Aitor', 'altura'=&gt;182, 'email'=&gt;'aitor@correo.com'],[\u2026],\u2026 ]</code>      Posteriorment, recorre el array i mostra-ho en una taula HTML. (pissarra)</p> </li> <li> <p><code>236.html</code> i <code>236.php</code>: a partir d'un formulari amb un camp de <code>quantitat</code> de persones, generar un nou formulari per a llegir el nom, altura i email de <code>quantitat</code> persones.</p> </li> <li> <p><code>237.php</code>: A partir de les persones introdu\u00efdes, mostrar les seues dades en una taula, i posteriorment, destaca les dades del m\u00e9s alt i el del m\u00e9s baix.</p> </li> <li> <p><code>238.php</code>: Emplena un array bidimensional de 6 files per 9 columnes amb n\u00fameros aleatoris compresos entre 100 i 999 (tots dos inclosos). Tots els n\u00fameros han de ser diferents, \u00e9s a dir, no es pot repetir cap.  Mostra a continuaci\u00f3 per pantalla el contingut del array de tal forma que:</p> <ul> <li>La columna del m\u00e0xim ha d'apar\u00e9ixer en blau.</li> <li>La fila del m\u00ednim ha d'apar\u00e9ixer en verd</li> <li>La resta de n\u00fameros han d'apar\u00e9ixer en negre.</li> </ul> </li> </ol>"},{"location":"02php_24.html#funcions_1","title":"Funcions","text":"<ol> <li> <p><code>functions.php</code>: Crea les seg\u00fcents funcions: (pissarra)</p> <ul> <li>Una funci\u00f3 que esbrine si un n\u00famero \u00e9s parell: <code>esParell(int $num): bool</code></li> <li>Una funci\u00f3 que retorne un array de grand\u00e0ria <code>$tam</code> amb n\u00fameros aleatoris compr\u00e9s entre <code>$min</code> i <code>$max</code> : <code>arrayAleatori(int $tam, int $min, int $max) : array</code></li> <li>Una funci\u00f3 que reba un <code>$array</code> per refer\u00e8ncia i retorne la quantitat de nombres parells que hi ha emmagatzemats: <code>countParells(array &amp;$array): int</code></li> </ul> </li> <li> <p><code>functions.php</code>: Crea les seg\u00fcents funcions:</p> <ul> <li>Una funci\u00f3 que retorne el major de tots els n\u00fameros rebuts com a par\u00e0metres: <code>function major(): int</code>. No pots usar la funci\u00f3 <code>max()</code>.</li> <li>Una funci\u00f3 que concatene tots els par\u00e0metres rebuts separant-los amb un espai: <code>function concatenar(...$paraules) : string</code>. Utilitza l'operador <code>...</code>.</li> </ul> </li> <li> <p><code>functions.php</code>: Afig les seg\u00fcents funcions:</p> <ul> <li><code>digits(int $num): int</code> \u2192 retorna la quantitat de d\u00edgits d'un n\u00famero.</li> <li><code>digitsN(int $num, int $post): int</code> \u2192 retorna el d\u00edgit que ocupa, comen\u00e7ant per l'esquerra, la posici\u00f3 <code>$post</code>.</li> <li><code>llevaDarrere(int $num, int $cant): int</code> \u2192 li lleva per darrere (dreta) <code>$cant</code> d\u00edgits.</li> <li><code>llevaDavant(int $num, int $cant): int</code> \u2192 li lleva per davant (esquerra) <code>$cant</code> d\u00edgits.</li> </ul> </li> <li> <p><code>functions.php</code>: Afig dues funcions:</p> <ul> <li>peseta2euros: passa de pessetes a euros</li> <li>euro2pesetes: passa d'euros a pessetes</li> </ul> <p>Cada funci\u00f3 ha de rebre dos par\u00e0metres:</p> <ul> <li>La quantitat a transformar</li> <li>La cotitzaci\u00f3, amb un par\u00e0metre per defecte amb el factor de transformaci\u00f3.</li> </ul> <p><code>243.php</code>: utilitza-la per construir un formulari que fa\u00e7a la transformaci\u00f3 en ambdos sentits.</p> </li> <li> <p><code>244a.php</code>: A partir d'una quantitat de productes, llegir el nom i cost de la quantitat de productes indicats (similar a l'exercici 237, per\u00f2 aquesta vegada no fa falta crear el formulari amb la quantitat, es rep mitjan\u00e7ant un par\u00e0metre GET via URL). </p> <p><code>244b.php</code>: Despr\u00e9s de llegir les dades del tiquet de compra, enumera en una taula els productes, amb el seu preu en euros i pessetes, i finalment, en una \u00faltima fila, totalitzar en totes dues monedes.</p> </li> </ol>"},{"location":"02php_24.html#plantilles","title":"Plantilles","text":"<ol> <li> <p><code>245a.php</code>: A partir dels arxius creats en l'exercici anterior, crea una plantilla mitjan\u00e7ant includes: 245a.php: similar a 244a.php, per\u00f2 separant l'encap\u00e7alat (Supermercat Sever en h1) i el peu (El teu supermercat de confian\u00e7a) en fitxers externs i referenciant a ells mitjan\u00e7ant include. (pissarra)      <code>245b.php</code>: rep les dades de l'anterior, i reutilitza part de 245b.php canviant la taula per una llista desordenada dels productes al costat del seu preu i utilitzan les plantilles fetes. </p> </li> <li> <p>Simularem un formulari d'acc\u00e9s:</p> <ul> <li><code>246.html</code>: el formulari d'entrada, que sol\u00b7licita l'usuari i contrasenya.</li> <li><code>246.php</code>: rep les dades i comprova si s\u00f3n correctes (els usuaris es guarden en un array associatiu en el fitxer <code>246password.php</code>.Utilitza  <code>include</code>.</li> <li><code>246.php</code>: L'usuari introdu\u00eft \u00e9s correcte</li> <li><code>246.php</code>: L'usuari \u00e9s incorrecte. Informar si tots dos estan mal o nom\u00e9s la contrasenya.</li> </ul> </li> </ol>"},{"location":"02php_24.html#cadenes-i-subcadenes","title":"Cadenes i subcadenes","text":"<p>Tots els exercicis s'han de realitzar creant noves funcions per a encapsular el codi. A m\u00e9s de la pr\u00f2pia funci\u00f3, l'exercici ha de contindre codi per a poder provar-lo.</p> <ol> <li><code>250.php</code>: A partir d'una frase, retorna una nova amb nom\u00e9s els car\u00e0cters de les posicions imparelles. (pissarra)</li> <li><code>251.php</code>: A partir d'una frase, retorna la quantitat de cadascuna de les vocals, i el total d'elles.</li> <li> <p><code>252.php</code>: A partir d'una frase amb paraules nom\u00e9s separades per espais, retornar (pissarra)</p> <ul> <li>Lletres totals i quantitat de paraules</li> <li>Una l\u00ednia per cada paraula indicant la seua grand\u00e0ria</li> </ul> </li> <li> <p><code>253.php</code>: EsCrIu UnA fUnCi\u00d3 qUe TrAnSfOrMe UnA cAdEnA eN cAnI.</p> </li> <li><code>254.php</code>: Escriu una funci\u00f3 que retorne un boole\u00e0 indicant si una paraula \u00e9s pal\u00edndroma (es llig igual d'esquerra a dreta que de dreta a esquerra, per exemple, \u201clligar \u00e9s ser agil\u201d).</li> <li><code>255.php</code>: Utilitzant les funcions per a treballar amb car\u00e0cters, a partir d'una cadena i un despla\u00e7ament:<ul> <li>Si el despla\u00e7ament \u00e9s 1, substitueix l'A per B, la B per C, etc.</li> <li>El despla\u00e7ament no pot ser negatiu</li> <li>Si s'ix de l'abecedari, ha de tornar a comen\u00e7ar</li> <li>Cal respectar els espais, punts i comes.</li> </ul> </li> <li><code>256.html</code>: Crea un programa que permeta a l'usuari llegir un conjunt de n\u00fameros separats per espais.      <code>256.php</code>: El programa filtrar\u00e0 els n\u00fameros llegits per a tornar a mostrar \u00fanicament els nombres parells i indicar\u00e0 la quantitat existent.      <pre><code>Dona'm n\u00fameros: 1 4 7 9 23 10 8\nEls 3 nombres parells s\u00f3n: 4 10 8\n</code></pre></li> </ol>"},{"location":"02php_24.html#activitats","title":"Activitats","text":"<ol> <li> <p><code>270.php</code> : A partir del fitxer de records d'atletisme que se un suministra pinta una taula amb tots els records.      . Es valorar\u00e0 que s'utilitzen comentaris en el resultat d'html per a indicar el codi que s'ocupa de la cap\u00e7alera de la taula i el del cos de la taula. Tamb\u00e8 que no s'utilitze ninguna instrucci\u00f3 de php per a imprimir la taula(echo, print ...)</p> <p><code>270a.php</code>: Extrau el codi que s'utilitza per a pintar la taula al fitxer 207a.php i fes un include del mateix des de 270.php</p> </li> <li> <p><code>271.php</code> : A partir del formulari per a modificar un record i una vegada que l'usuari introdu\u00efsca les dades corresponents:</p> <ul> <li>Si no existeix la prova ixir\u00e0 un missatge comunicant-li a l'usuari que no existeix eixa prova 'La prova ... no existeix en la llista de records oficials de la FEA' </li> <li>Si existeix es modificaran les dades i mostrarem la taula amb les dades modificades. </li> </ul> </li> </ol> <p>Hem de fer un include al fitxer 270a.php per mostrar la taula</p> <ol> <li><code>272.php</code> : Fes una p\u00e0gina d'estadistiques i fes una funci\u00f3 per a cada una d'elles<ul> <li>El record m\u00e9s vell. La funcio vell(array):mixed extrau la key de la m\u00e9s antiga de les dates d'un array en format 'dd.mm.yyyy'  </li> </ul> </li> </ol> <p>Crea una funci\u00f3 fecha_inglesa(string):string. Funci\u00f3 que donada un data en format 'dd.mm.yyyy' el transforma en format 'yyyy/mm/dd'</p> <ul> <li>El club, el atleta i la ciutat amb m\u00e9s records. La funci\u00f3 laureado(array):mixed extrau la key de la que m\u00e9s es repeteix. Si hi ha m\u00e9s d'un extreu un. </li> <li>L'atleta m\u00e9s jove en conseguir el record. Funci\u00f3 jove(array,array):mixed on de l'array de natalici i data extreu el que la difer\u00e8ncia siga menor. </li> </ul> <p>Crea una funci\u00f3 any(string):string. Funci\u00f3 que donada un data en format 'dd.mm.yyyy' el transforma en format 'yyyy' </p> <ul> <li>Al final pinta la taula </li> </ul> <p>La funci\u00f3 array_column_ext ens permet extraure una columna d'un array multidimensional respectant la clau del array. La possariem de la seg\u00fcent forma: array_column_ext($records,'data',-1)</p> <p>Els tests s'han de possar en la carpeta corresponent. El d'aceptaci\u00f3 en accceptance i l'altre en unit</p>"},{"location":"03MVC_Laravel.html","title":"SA3. Arquitectura MVC amb Laravel","text":"Duraci\u00f3 i criteris d'evaluaci\u00f3 <p>Duraci\u00f3 estimada: 18 hores</p> Resultat d'aprenentatge Criteris d'avaluaci\u00f3 5. Desenvolupa aplicacions Web identificant i aplicant mecanismes per a separar el codi de presentaci\u00f3 de la l\u00f2gica de negoci. a) S'han identificat els avantatges de separar la l\u00f2gica de negoci dels aspectes de presentaci\u00f3 de l'aplicaci\u00f3.  b) S'han analitzat i utilitzat mecanismes i frameworks que permeten realitzar aquesta separaci\u00f3 i les seues caracter\u00edstiques principals.  c) S'han utilitzat objectes i controls en el servidor per a generar l'aspecte visual de l'aplicaci\u00f3 web en el client.  d) S'han utilitzat formularis generats de manera din\u00e0mica per a respondre als esdeveniments de l'aplicaci\u00f3 web.  e) S'han identificat i aplicat els par\u00e0metres relatius a la configuraci\u00f3 de l'aplicaci\u00f3 web.  f) S'han escrit aplicacions web amb manteniment d'estat i separaci\u00f3 de la l\u00f2gica de negoci.  g) S'han aplicat els principis i patrons de disseny de la programaci\u00f3 orientada a objectes.  h) S'ha provat i documentat el codi."},{"location":"03MVC_Laravel.html#sa-31-mvc-i-installacio-de-laravel","title":"SA 3.1 MVC i instal\u00b7laci\u00f3 de Laravel","text":""},{"location":"03MVC_Laravel.html#avantatges-de-la-separacio-de-capes","title":"\ud83e\udde9 Avantatges de la separaci\u00f3 de capes","text":""},{"location":"03MVC_Laravel.html#que-es-la-separacio-de-responsabilitats","title":"\ud83d\udd0d Qu\u00e8 \u00e9s la separaci\u00f3 de responsabilitats?","text":"<p>En el desenvolupament d\u2019aplicacions web, separar la l\u00f2gica de negoci (com es processen les dades) de la presentaci\u00f3 (com es mostren) \u00e9s essencial per crear projectes escalables i f\u00e0cils de mantindre.</p>"},{"location":"03MVC_Laravel.html#problemes-quan-no-hi-ha-separacio","title":"Problemes quan no hi ha separaci\u00f3","text":"<ul> <li>Codi desordenat i dif\u00edcil de llegir.</li> <li>Modificar la interf\u00edcie pot trencar la l\u00f2gica i viceversa.</li> <li>Dificultat per treballar en equip.</li> </ul>"},{"location":"03MVC_Laravel.html#beneficis","title":"Beneficis","text":"Avantatge Descripci\u00f3 Mantenibilitat \u00c9s m\u00e9s f\u00e0cil modificar el codi, ja que cada part est\u00e0 separada. Reutilitzaci\u00f3 El codi es pot reutilitzar en diferents parts del projecte. Escalabilitat \u00c9s m\u00e9s senzill afegir noves funcionalitats sense trencar les existents. Treball en equip Permet dividir tasques entre programadors backend i frontend. Testabilitat Podem fer proves unit\u00e0ries de la l\u00f2gica sense necessitat de la interf\u00edcie. Seguretat Mantindre la l\u00f2gica separada ajuda a controlar millor les entrades i sortides."},{"location":"03MVC_Laravel.html#comparacio","title":"Comparaci\u00f3","text":"<ul> <li>Aplicaci\u00f3 monol\u00edtica: tot el codi barrejat (HTML, SQL, l\u00f2gica PHP).</li> <li>MVC: cada capa t\u00e9 la seua responsabilitat i nom\u00e9s interactua amb les necess\u00e0ries.</li> </ul>"},{"location":"03MVC_Laravel.html#exemple-senzill","title":"\ud83d\udca1 Exemple senzill","text":"<p>Sense separaci\u00f3:</p> <pre><code>&lt;?php\n    // Exemple dolent: l\u00f2gica i presentaci\u00f3 mesclades\n    $conn = new PDO('mysql:host=localhost;dbname=test', 'root', '');\n    $sql = \"SELECT * FROM usuaris\";\n    $result = $conn-&gt;query($sql);\n    echo \"&lt;ul&gt;\";\n    foreach ($result as $usuari) {\n        echo \"&lt;li&gt;\" . $usuari['nom'] . \"&lt;/li&gt;\";\n    }\n    echo \"&lt;/ul&gt;\";\n ```\nAmb separaci\u00f3:\n\n```php\n// Controlador (l\u00f2gica)\n$usuaris = Usuari::tots();\n\n// Vista (presentaci\u00f3 - Blade)\n&lt;ul&gt;\n    @foreach ($usuaris as $usuari)\n        &lt;li&gt;{{ $usuari-&gt;nom }}&lt;/li&gt;\n    @endforeach\n&lt;/ul&gt;\n</code></pre>"},{"location":"03MVC_Laravel.html#avantatges-de-la-separacio","title":"Avantatges de la separaci\u00f3","text":"Avantatge Descripci\u00f3 Mantenibilitat \u00c9s m\u00e9s f\u00e0cil modificar el codi, ja que cada part est\u00e0 separada. Reutilitzaci\u00f3 El codi es pot reutilitzar en diferents parts del projecte. Escalabilitat \u00c9s m\u00e9s senzill afegir noves funcionalitats sense trencar les existents. Treball en equip Permet dividir tasques entre programadors backend i frontend. Testabilitat Podem fer proves unit\u00e0ries de la l\u00f2gica sense necessitat de la interf\u00edcie. Seguretat Mantindre la l\u00f2gica separada ajuda a controlar millor les entrades i sortides. <p>En resum, separar la l\u00f2gica de negoci dels aspectes de presentaci\u00f3 \u00e9s una bona pr\u00e0ctica fonamental per desenvolupar aplicacions web robustes, escalables i f\u00e0cils de mantindre. Aquesta separaci\u00f3 s\u2019aplica de forma natural amb frameworks com Laravel, que segueixen el patr\u00f3 MVC (Model-Vista-Controlador).</p>"},{"location":"03MVC_Laravel.html#frameworks-i-mecanismes-de-separacio","title":"\ud83d\udd27 Frameworks i mecanismes de separaci\u00f3","text":"<p>Un framework \u00e9s un conjunt d'eines i biblioteques que facilita el desenvolupament d'aplicacions seguint una estructura predefinida i bones pr\u00e0ctiques.</p>"},{"location":"03MVC_Laravel.html#caracteristiques-generals","title":"Caracter\u00edstiques generals:","text":"<ul> <li>Facilita la separaci\u00f3 de responsabilitats (MVC).</li> <li>Redueix el temps de desenvolupament.</li> <li>Estableix un patr\u00f3 coherent i mantenible.</li> <li>Incorpora sistemes de seguretat, validaci\u00f3, rutes i molt m\u00e9s.</li> </ul>"},{"location":"03MVC_Laravel.html#patro-mvc-model-vista-controlador","title":"\ud83e\uddf1 Patr\u00f3 MVC (Model \u2013 Vista \u2013 Controlador)","text":"<p>El patr\u00f3 MVC \u00e9s un patr\u00f3 de disseny que separa clarament tres responsabilitats:</p> Component Funci\u00f3 principal Model Gestiona les dades i la l\u00f2gica de negoci. Vista Mostra la informaci\u00f3 a l\u2019usuari. Controlador Gestiona les peticions i coordina el Model i la Vista. <p></p>"},{"location":"03MVC_Laravel.html#laravel-com-a-framework-mvc","title":"\ud83d\ude80 Laravel com a framework MVC","text":"<p>Laravel \u00e9s un framework PHP modern que aplica de manera nativa el patr\u00f3 MVC.</p> <pre><code>app/\n\u251c\u2500\u2500 Http/\n\u2502 \u2514\u2500\u2500 Controllers/ \u2192 Controladors (C)\n\u251c\u2500\u2500 Models/ \u2192 Models (M)\nresources/\n\u2514\u2500\u2500 views/ \u2192 Vistes Blade (V)\n\u2514\u2500\u2500 routes/ \u2192 Rutes (R)\n</code></pre>"},{"location":"03MVC_Laravel.html#exemple-basic","title":"\ud83e\uddea Exemple b\u00e0sic","text":"<p>Ruta:</p> <pre><code>Route::get('/usuaris', [UsuariController::class, 'index']);\n</code></pre> <p>Controlador: <pre><code>class UsuariController extends Controller {\n    public function index() {\n        $usuaris = Usuari::all();\n        return view('usuaris.index', compact('usuaris'));\n    }\n}\n</code></pre> Models:</p> <p><pre><code>class Usuari extends Model {\n    protected $table = 'usuaris';\n}\n</code></pre> Vista (Blade): <pre><code>&lt;ul&gt;\n@foreach($usuaris as $usuari)\n    &lt;li&gt;{{ $usuari-&gt;nom }}&lt;/li&gt;\n@endforeach\n&lt;/ul&gt;\n</code></pre></p>"},{"location":"03MVC_Laravel.html#installacio-de-laravel","title":"\ud83d\udce6 Instal\u00b7laci\u00f3 de Laravel","text":""},{"location":"03MVC_Laravel.html#crear-una-aplicacio-laravel-amb-docker-sail","title":"\ud83d\udd27 Crear una aplicaci\u00f3 Laravel amb Docker (Sail)","text":"<p>Si est\u00e0s desenvolupant en Linux i ja tens Docker Compose instal\u00b7lat, pots crear una aplicaci\u00f3 Laravel nova amb una simple comanda de term</p> <p>1\ufe0f\u20e3 Preparaci\u00f3 (nom\u00e9s si utilitzes Docker Desktop per a Linux)</p> <p>Si est\u00e0s utilitzant Docker Desktop per a Linux, executa aquesta comanda:</p> <p><pre><code>docker context use default\n</code></pre> Si no utilitzes Docker Desktop per a Linux, pots saltar aquest pas.</p> <p>2\ufe0f\u20e3 Crear el projecte</p> <p>Executa aquesta comanda per crear una nova aplicaci\u00f3 Laravel en una carpeta anomenada example-app</p> <pre><code>curl -s https://laravel.build/example-app | bash\n</code></pre> <p>Per descomptat, podeu canviar \"exemple-app\" en aquest URL a qualsevol cosa que vulgueu - nom\u00e9s assegureu-vos que el nom de l'aplicaci\u00f3 nom\u00e9s cont\u00e9 car\u00e0cters alfanum\u00e8rics, guions i guions baixos. El directori de l'aplicaci\u00f3 Laravel es crear\u00e0 dins del directori des del qual executeu l'ordre.</p> <p>3\ufe0f\u20e3 Iniciar Laravel Sail</p> <p>Ara podeu navegar al directori de l'aplicaci\u00f3 i iniciar Laravel Sail. Laravel Sail proporciona una interf\u00edcie senzilla de l\u00ednia d'ordres per a interactuar amb la configuraci\u00f3 predeterminada de l'acoblador Laravel:</p> <p><pre><code>cd exemple-app &amp;&amp; ./vendor/bin/sail up &amp;\n</code></pre> La instal\u00b7laci\u00f3 del Sail pot trigar diversos minuts mentre els contenidors de l'aplicaci\u00f3 del sail es construeixen a la vostra m\u00e0quina local.</p> <p>4\ufe0f\u20e3 Executar les migracions</p> <p>Una vegada arrancats els contenidors, pots aplicar les migracions:</p> <p><pre><code>./vendor/bin/sail artisan migrate\n</code></pre> \ud83c\udf10 Accedir a l\u2019aplicaci\u00f3</p> <p>Ara pots obrir l\u2019aplicaci\u00f3 en el navegador en http://localhost.</p>"},{"location":"03MVC_Laravel.html#estructura-de-carpetes-simplificada","title":"Estructura de carpetes simplificada","text":""},{"location":"03MVC_Laravel.html#configuracio-basica-en-laravel","title":"\u2699\ufe0f Configuraci\u00f3 b\u00e0sica en Laravel","text":"<p>Laravel gestiona la configuraci\u00f3 en el fitxer <code>.env</code> i en fitxers del directori <code>config/</code>.</p> <p>.env \u2192 Cont\u00e9 les variables de configuraci\u00f3 de l\u2019entorn (nom de l\u2019app, base de dades, correu\u2026). config/ \u2192 Cont\u00e9 fitxers PHP amb configuracions globals (<code>app.php</code>, <code>database.php</code>, etc.).</p> <p>\ud83d\udccc Exemple <code>.env</code> m\u00ednim:</p> <p><pre><code>APP_NAME=\"LaravelApp\"\nAPP_ENV=local\nAPP_DEBUG=true\nDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_DATABASE=laravel\nDB_USERNAME=root\nDB_PASSWORD=\n</code></pre> Per comprovar configuracions o generar codi, utilitza Artisan:</p> <pre><code>php artisan list                  # totes les comandes\nphp artisan route:list            # rutes registrades\nphp artisan make:model Nom -m     # model + migraci\u00f3\nphp artisan migrate               # aplicar migracions\n</code></pre> <p>Bones pr\u00e0ctiques</p> <p>Mai posar secrets al codi; usa .env i variables d\u2019entorn. Revisa APP_ENV, APP_DEBUG, APP_URL, timezone, locale.</p>"},{"location":"03MVC_Laravel.html#sa-32-crud-basic-en-laravel","title":"SA 3.2 CRUD b\u00e0sic en Laravel","text":""},{"location":"03MVC_Laravel.html#rutes","title":"\ud83d\udee3\ufe0f Rutes","text":"<p>Les rutes web viuen a routes/web.php. Importa les classes amb use.</p> <p>Simple</p> <pre><code>    use Illuminate\\Support\\Facades\\Route;\n    Route::get('/salut', fn() =&gt; 'Hola m\u00f3n!');\n ```\n\n**Amb Par\u00e0metres (i opcionals)**\n\n```php\n    Route::get('/salut/{nom}', fn(string $nom) =&gt; \"Bon dia, $nom\");\n    Route::get('/salut/{nom?}', fn(?string $nom = 'Convidat') =&gt; \"Bon dia, $nom\");\n</code></pre> <p>Amb Validaci\u00f3 b\u00e0sica (regex helpers)</p> <pre><code>Route::get('/producte/{id}', fn(int $id) =&gt; \"Producte ID: $id\")-&gt;whereNumber('id');\n</code></pre> <p>Amb Route Model Binding (recomanat)</p> <pre><code>use App\\Models\\Producte;\nRoute::get('/productes/{producte}', fn(Producte $producte) =&gt; $producte-&gt;nom);\n</code></pre> <p>Amb nom</p> <pre><code>Route::get('/contacte', fn() =&gt; 'P\u00e0gina de contacte')-&gt;name('contacte');\n// Blade: &lt;a href=\"{{ route('contacte') }}\"&gt;Contacte&lt;/a&gt;\n</code></pre> <p>Grups (prefix + middleware)</p> <pre><code>Route::prefix('admin')-&gt;middleware('auth')-&gt;group(function () {\nRoute::get('/dashboard', fn() =&gt; 'Admin Dashboard');\nRoute::get('/usuaris', fn() =&gt; 'Admin Usuaris');\n});\n</code></pre> <p>Controladors i recursos</p> <pre><code>use App\\Http\\Controllers\\UsuariController;\nuse App\\Http\\Controllers\\ArticleController;\n\nRoute::get('/usuari/{id}', [UsuariController::class, 'mostrar']);\n\nRoute::resource('articles', ArticleController::class);\n// variants:\nRoute::resource('articles', ArticleController::class)-&gt;only(['index','show']);\n</code></pre>"},{"location":"03MVC_Laravel.html#vistes-i-blade-essencial","title":"\ud83e\ude9f Vistes i Blade (essencial)","text":"<p>Vistes en resources/views. No hi posem l\u00f2gica de negoci.</p> <p>Mostrar vista i passar dades</p> <pre><code>Route::get('/', fn() =&gt; view('welcome'));\nRoute::get('/inici', function () {\n    $nom = 'Nacho';\n    return view('inici', compact('nom')); // o ['nom'=&gt;$nom] o -&gt;with('nom',$nom)\n});\n</code></pre> <p>resources/views/inici.blade.php <pre><code>Benvingut/da, {{ $nom }}\n</code></pre></p>"},{"location":"03MVC_Laravel.html#sintaxi-blade-basica","title":"\ud83d\udde1\ufe0f Sintaxi Blade b\u00e0sica","text":"<pre><code>{{-- Comentari Blade --}}\n\nHola, {{ $nom }}     {{-- escapada (segura) --}}\n{!! $html !!}        {{-- sense escapar (atenci\u00f3 XSS) --}}\n\n@if($condicio) ... @elseif($altra) ... @else ... @endif\n\n@foreach($items as $it) {{ $it }} @endforeach\n\n@forelse($items as $it) {{ $it }} @empty Sense items @endforelse\n</code></pre>"},{"location":"03MVC_Laravel.html#layouts-herencia","title":"\ud83d\udcf0 Layouts (her\u00e8ncia)","text":"<p>resources/views/layouts/app.blade.php</p> <p><pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;title&gt;@yield('title', config('app.name'))&lt;/title&gt;\n  @vite(['resources/css/app.css','resources/js/app.js'])\n&lt;/head&gt;\n&lt;body&gt;\n  @include('partials.nav')\n  &lt;main&gt;@yield('content')&lt;/main&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> Vista que hereta:</p> <pre><code>@extends('layouts.app')\n@section('title','Inici')\n@section('content')\n  &lt;h1&gt;Benvingut/da!&lt;/h1&gt;\n@endsection\n</code></pre>"},{"location":"03MVC_Laravel.html#components-blade","title":"\ud83e\udde9 Components Blade","text":"<p>Els Components Blade permeten definir elements reutilitzables:</p> <p>1\ufe0f\u20e3 Crear component:</p> <pre><code>php artisan make:component Alert\n</code></pre> <p>2\ufe0f\u20e3 Definir la l\u00f2gica:</p> <pre><code>class Alert extends Component {\n public $type;\n public function __construct($type) {\n    $this-&gt;type = $type;\n }\n public function render() {\n    return view('components.alert');\n }\n}\n</code></pre> <p>3\ufe0f\u20e3  Vista del component:</p> <pre><code> {{ $slot }}\n</code></pre> <p>4\ufe0f\u20e3 Utilitzar-lo en una vista:</p> <pre><code>&lt;x-alert &gt;Missatge Enviat!&lt;/x-alert&gt;\n</code></pre>"},{"location":"03MVC_Laravel.html#controladors-organitzar-la-logica","title":"\u2699\ufe0f Controladors (organitzar la l\u00f2gica)","text":"<p>Crear controlador <pre><code>   php artisan make:controller PruebaController\n</code></pre></p> <p>Controlador de recursos (CRUD)</p> <p>```bash php artisan make:controller ProducteController --resource <pre><code>   Rutes:\n```php\n   use App\\Http\\Controllers\\ProducteController;\n   Route::resource('productes', ProducteController::class);\n</code></pre></p>"},{"location":"03MVC_Laravel.html#esquelet-tipic-amb-validacio-i-binding","title":"\ud83e\uddb4\ud83c\udfd7\ufe0fEsquelet t\u00edpic (amb validaci\u00f3 i binding)","text":"<pre><code>   use App\\Models\\Producte;\n   use Illuminate\\Http\\Request;\n\nclass ProducteController extends Controller\n{\npublic function index() {\n$productes = Producte::latest()-&gt;get();\nreturn view('productes.index', compact('productes'));\n}\n\n    public function create() {\n        return view('productes.create');\n    }\n\n    public function store(Request $request) {\n        $validated = $request-&gt;validate([\n            'nom'  =&gt; 'required|string|max:255',\n            'preu' =&gt; 'required|numeric|min:0',\n        ]);\n\n        Producte::create($validated);\n        return redirect()-&gt;route('productes.index')-&gt;with('ok','Creat!');\n    }\n\n    public function edit(Producte $producte) {\n        return view('productes.edit', compact('producte'));\n    }\n\n    public function update(Request $request, Producte $producte) {\n        $validated = $request-&gt;validate([\n            'nom'  =&gt; 'required|string|max:255',\n            'preu' =&gt; 'required|numeric|min:0',\n        ]);\n\n        $producte-&gt;update($validated);\n        return redirect()-&gt;route('productes.index')-&gt;with('ok','Actualitzat!');\n    }\n\n    public function destroy(Producte $producte) {\n        $producte-&gt;delete();\n        return redirect()-&gt;route('productes.index')-&gt;with('ok','Esborrat!');\n    }\n}\n</code></pre>"},{"location":"03MVC_Laravel.html#formularis-dinamics-post-i-validacio","title":"\ud83d\udccb Formularis din\u00e0mics, POST i validaci\u00f3","text":"<p>Vistes per al CRUD    resources/views/productes/index.blade.php</p> <p><pre><code>&lt;h1&gt;Productes&lt;/h1&gt;\n\n@if(session('ok'))\n  &lt;div class=\"alert alert-success\"&gt;{{ session('ok') }}&lt;/div&gt;\n@endif\n\n&lt;a href=\"{{ route('productes.create') }}\"&gt;Nou producte&lt;/a&gt;\n\n&lt;ul&gt;\n@forelse($productes as $p)\n  &lt;li&gt;\n    {{ $p-&gt;nom }} \u2014 {{ $p-&gt;preu }} \u20ac\n    &lt;a href=\"{{ route('productes.edit', $p) }}\"&gt;Editar&lt;/a&gt;\n    &lt;form action=\"{{ route('productes.destroy', $p) }}\" method=\"POST\" style=\"display:inline\"&gt;\n      @csrf @method('DELETE')\n      &lt;button type=\"submit\"&gt;Esborrar&lt;/button&gt;\n    &lt;/form&gt;\n  &lt;/li&gt;\n@empty\n  &lt;li&gt;No hi ha productes&lt;/li&gt;\n@endforelse\n&lt;/ul&gt;\n</code></pre> resources/views/productes/create.blade.php</p> <pre><code>&lt;h1&gt;Nou producte&lt;/h1&gt;\n\n&lt;form method=\"POST\" action=\"{{ route('productes.store') }}\"&gt;\n  @csrf\n  &lt;label&gt;Nom&lt;/label&gt;\n  &lt;input name=\"nom\" value=\"{{ old('nom') }}\"&gt;\n  @error('nom') &lt;small&gt;{{ $message }}&lt;/small&gt; @enderror\n\n&lt;label&gt;Preu&lt;/label&gt;\n&lt;input name=\"preu\" value=\"{{ old('preu') }}\"&gt;\n@error('preu') &lt;small&gt;{{ $message }}&lt;/small&gt; @enderror\n\n&lt;button type=\"submit\"&gt;Guardar&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>resources/views/productes/edit.blade.php</p> <pre><code>&lt;h1&gt;Editar producte&lt;/h1&gt;\n\n&lt;form method=\"POST\" action=\"{{ route('productes.update', $producte) }}\"&gt;\n  @csrf @method('PUT')\n\n&lt;label&gt;Nom&lt;/label&gt;\n&lt;input name=\"nom\" value=\"{{ old('nom', $producte-&gt;nom) }}\"&gt;\n@error('nom') &lt;small&gt;{{ $message }}&lt;/small&gt; @enderror\n\n&lt;label&gt;Preu&lt;/label&gt;\n&lt;input name=\"preu\" value=\"{{ old('preu', $producte-&gt;preu) }}\"&gt;\n@error('preu') &lt;small&gt;{{ $message }}&lt;/small&gt; @enderror\n\n&lt;button type=\"submit\"&gt;Actualitzar&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"03MVC_Laravel.html#model-eloquent","title":"\ud83d\uddc4\ufe0f Model Eloquent","text":"<p>app/Models/Producte.php</p> <pre><code>namespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Producte extends Model\n{\nprotected $fillable = ['nom','preu'];\n}\n</code></pre>"},{"location":"03MVC_Laravel.html#migracio","title":"\ud83c\udfd7\ufe0f  Migraci\u00f3","text":"<pre><code>Schema::create('productes', function (Blueprint $table) {\n$table-&gt;id();\n$table-&gt;string('nom');\n$table-&gt;decimal('preu', 8, 2);\n$table-&gt;timestamps();\n});\n</code></pre>"},{"location":"03MVC_Laravel.html#recursos-del-client-amb-vite","title":"\u26a1 Recursos del client amb Vite","text":"<p>Instal\u00b7lar depend\u00e8ncies frontend</p> <pre><code>   npm install\n</code></pre> <p>Config per defecte (resum)    vite.config.js <pre><code>   import { defineConfig } from 'vite';\n   import laravel from 'laravel-vite-plugin';\n\n\nexport default defineConfig({\nplugins: [laravel(['resources/css/app.css','resources/js/app.js'])],\n});\n</code></pre></p> <p>Carregar a layout Blade</p> <pre><code>@vite(['resources/css/app.css','resources/js/app.js'])\n</code></pre> <p>Executar</p> <pre><code>npm run dev   # HMR\nnpm run build # producci\u00f3\n</code></pre>"},{"location":"03MVC_Laravel.html#sa33-formularis-dinamics-i-manteniment-destat","title":"SA3.3 Formularis din\u00e0mics i manteniment d\u2019estat","text":"<p>En Laravel, els formularis es creen amb Blade i s\u2019envien als controladors. La validaci\u00f3 i el manteniment d\u2019estat (sessions, <code>old()</code>) s\u00f3n clau per a una bona UX (User Experience).</p>"},{"location":"03MVC_Laravel.html#formularis-amb-blade","title":"\ud83d\udccb  Formularis amb Blade","text":"<ul> <li>Sempre inclou <code>@csrf</code> per protegir contra CSRF.</li> <li>Per a PUT/PATCH/DELETE, usa <code>@method('PUT')</code>, etc.</li> </ul> <pre><code>{{-- resources/views/productes/create.blade.php --}}\n&lt;h1&gt;Nou producte&lt;/h1&gt;\n\n&lt;form method=\"POST\" action=\"{{ route('productes.store') }}\"&gt;\n  @csrf\n  &lt;label&gt;Nom&lt;/label&gt;\n  &lt;input name=\"nom\" value=\"{{ old('nom') }}\"&gt;\n  @error('nom') &lt;small class=\"error\"&gt;{{ $message }}&lt;/small&gt; @enderror\n\n  &lt;label&gt;Preu&lt;/label&gt;\n  &lt;input name=\"preu\" value=\"{{ old('preu') }}\"&gt;\n  @error('preu') &lt;small class=\"error\"&gt;{{ $message }}&lt;/small&gt; @enderror\n\n  &lt;label&gt;Categoria&lt;/label&gt;\n  &lt;select name=\"categoria\"&gt;\n    &lt;option value=\"\"&gt;-- Selecciona --&lt;/option&gt;\n    &lt;option value=\"hardware\" @selected(old('categoria')==='hardware')&gt;Hardware&lt;/option&gt;\n    &lt;option value=\"software\" @selected(old('categoria')==='software')&gt;Software&lt;/option&gt;\n  &lt;/select&gt;\n\n  &lt;label&gt;\n    &lt;input type=\"checkbox\" name=\"actiu\" value=\"1\" @checked(old('actiu'))&gt;\n    Actiu\n  &lt;/label&gt;\n\n  &lt;button type=\"submit\"&gt;Guardar&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>Mantenir valors</p> <p>old('camp') mant\u00e9 el valor introdu\u00eft si la validaci\u00f3 falla.</p>"},{"location":"03MVC_Laravel.html#validacio-al-controlador-rapida","title":"\u23f1\ufe0f Validaci\u00f3 al controlador (r\u00e0pida)","text":"<pre><code>public function store(\\Illuminate\\Http\\Request $request)\n{\n    $validated = $request-&gt;validate([\n    'nom'       =&gt; ['required','string','max:255'],\n    'preu'      =&gt; ['required','numeric','min:0'],\n    'categoria' =&gt; ['nullable','in:hardware,software'],\n    'actiu'     =&gt; ['nullable','boolean'],\n    ]);\n\n    $validated['actiu'] = (bool)($validated['actiu'] ?? false);\n\n    \\App\\Models\\Producte::create($validated);\n\n    return redirect()\n        -&gt;route('productes.index')\n        -&gt;with('ok','Producte creat correctament'); // flash message (sessi\u00f3)\n}\n</code></pre> <p>Missatges d\u2019error a la vista: @error('camp') ... @enderror i {{ $message }}.</p>"},{"location":"03MVC_Laravel.html#validacio-amb-form-request-recomanat","title":"\u2705\ud83d\udcc4 Validaci\u00f3 amb Form Request (recomanat)","text":"<pre><code>php artisan make:request StoreProducteRequest\n</code></pre> <p>// app/Http/Requests/StoreProducteRequest.php <pre><code>class StoreProducteRequest extends FormRequest {\n\n    public function authorize(): bool\n    {\n      return true;\n    }\n\n    public function rules(): array {\n        return [\n        'nom'       =&gt; ['required','string','max:255'],\n        'preu'      =&gt; ['required','numeric','min:0'],\n        'categoria' =&gt; ['nullable','in:hardware,software'],\n        'actiu'     =&gt; ['nullable','boolean'],\n        ];\n    }\n}\n</code></pre> // controller</p> <pre><code>public function store(\\App\\Http\\Requests\\StoreProducteRequest $request)\n{\n    \\App\\Models\\Producte::create($request-&gt;validated());\n    return redirect()-&gt;route('productes.index')-&gt;with('ok','Creat!');\n}\n</code></pre>"},{"location":"03MVC_Laravel.html#manteniment-de-lestat-amb-sessions","title":"\ud83d\udd11 Manteniment de l'estat amb sessions","text":"<pre><code>// Escriure en sessi\u00f3\nsession(['tema' =&gt; 'fosc']);\n\n// Llegir amb valor per defecte\n$tema = session('tema', 'clar');\n\n// Flash (1 petici\u00f3)\nreturn back()-&gt;with('ok', 'Acci\u00f3 completada');\n</code></pre> <p>blade <pre><code>@if(session('ok'))\n  &lt;div class=\"alert alert-success\"&gt;{{ session('ok') }}&lt;/div&gt;\n@endif\n</code></pre></p>"},{"location":"03MVC_Laravel.html#formularis-que-responen-a-lestat","title":"\ud83d\udd04\ud83d\udccb Formularis que responen a l'estat","text":"<pre><code>{{-- canvia el text del bot\u00f3 segons si l\u2019usuari est\u00e0 logat --}}\n&lt;button&gt;\n{{ auth()-&gt;check() ? 'Comprar ara' : 'Inicia sessi\u00f3 per comprar' }}\n&lt;/button&gt;\n</code></pre>"},{"location":"03MVC_Laravel.html#sa34-introduccio-a-phpdoc-en-laravel","title":"SA3.4 Introducci\u00f3 a PHPDoc en Laravel","text":"<p>PHPDoc \u00e9s un est\u00e0ndard de documentaci\u00f3 per a codi PHP que utilitza comentaris especials per descriure m\u00e8todes, classes, propietats i constants.</p> <p>En Laravel, ajuda a: - Entendre m\u00e9s r\u00e0pid el codi. - Millorar l\u2019autocompletat a l\u2019IDE (VS Code, PhpStorm\u2026). - Generar documentaci\u00f3 autom\u00e0tica. - Evitar errors per mal \u00fas de m\u00e8todes i dades.</p>"},{"location":"03MVC_Laravel.html#sintaxi-basica","title":"\ud83d\udcdd Sintaxi b\u00e0sica","text":"<p>Un comentari PHPDoc comen\u00e7a amb /* i acaba amb /. Dins, utilitzem etiquetes per descriure elements.</p> <pre><code>/**\n* Descripci\u00f3 breu del que fa el m\u00e8tode.\n*\n* Descripci\u00f3 m\u00e9s detallada (opcional).\n*\n* @param  Tipus  $nomParam  Descripci\u00f3 del par\u00e0metre\n* @return TipusRetorn  Descripci\u00f3 del retorn\n  */\n  \ud83d\udccc Exemple en un controlador de Laravel\n  /**\n* Mostra el llistat de productes.\n*\n* @return \\Illuminate\\View\\View\n  */\n  public function index()\n  {\n  $productes = Producte::all();\n  return view('productes.index', compact('productes'));\n  }\n\n/**\n* Guarda un nou producte a la base de dades.\n*\n* @param  \\Illuminate\\Http\\Request  $request\n* @return \\Illuminate\\Http\\RedirectResponse\n  */\n  public function store(Request $request)\n  {\n  $validated = $request-&gt;validate([\n  'nom' =&gt; 'required|string|max:255',\n  'preu' =&gt; 'required|numeric|min:0',\n  ]);\n\n  Producte::create($validated);\n\n  return redirect()-&gt;route('productes.index')-&gt;with('success', 'Producte creat correctament.');\n  }\n</code></pre>"},{"location":"03MVC_Laravel.html#etiquetes-mes-habituals","title":"\ud83d\udd16 Etiquetes m\u00e9s habituals","text":"<pre><code>  Etiqueta  Significat\n  @param    Tipus i nom de cada par\u00e0metre que rep el m\u00e8tode.\n  @return   Tipus del valor retornat.\n  @var  Tipus d\u2019una variable o propietat.\n  @throws   Tipus d\u2019excepci\u00f3 que pot llen\u00e7ar-se.\n  @property Propietats \u201cm\u00e0giques\u201d d\u2019una classe (per Eloquent).\n  @method   M\u00e8todes \u201cm\u00e0gics\u201d que no estan expl\u00edcits al codi.\n</code></pre>"},{"location":"03MVC_Laravel.html#phpdoc-en-models-eloquent","title":"\ud83d\udcda PHPDoc en models Eloquent","text":"<p>Quan Laravel crea models, moltes propietats i m\u00e8todes no apareixen al codi, per\u00f2 hi s\u00f3n gr\u00e0cies a Eloquent. Podem documentar-los aix\u00ed: <pre><code>  /**\n* App\\Models\\Producte\n*\n* @property int $id\n* @property string $nom\n* @property float $preu\n* @method static \\Illuminate\\Database\\Eloquent\\Builder|Producte whereNom($value)\n  */\n  class Producte extends Model\n  {\n  protected $fillable = ['nom', 'preu'];\n  }\n</code></pre></p>"},{"location":"03MVC_Laravel.html#bones-practiques","title":"\ud83d\udca1 Bones pr\u00e0ctiques","text":"<ul> <li>Documenta tots els m\u00e8todes p\u00fablics.</li> <li>Usa tipus complets (no array, sin\u00f3 string[] o int[] quan siga possible).</li> <li>Actualitza PHPDoc quan canvies la signatura d\u2019un m\u00e8tode.</li> <li>No sobrecarregues amb informaci\u00f3 obvia; sigues clar i \u00fatil.</li> </ul>"},{"location":"03MVC_Laravel.html#sequencia-de-reptes","title":"\ud83e\udde9 Seq\u00fc\u00e8ncia de reptes","text":""},{"location":"03MVC_Laravel.html#r1-endreca-el-caos-installa-laravel-i-aplica-mvc-basic","title":"\ud83e\uddf1 R1. Endre\u00e7a el caos \u2014 Instal\u00b7la Laravel i aplica MVC b\u00e0sic","text":"<p>Duraci\u00f3: 1 sessi\u00f3 (3 h)</p>"},{"location":"03MVC_Laravel.html#plantejament","title":"\ud83e\udde9 Plantejament","text":"<p>Un antic projecte PHP del client est\u00e0 tot en un sol fitxer ple d\u2019<code>echo</code> i <code>if</code>. T\u2019han demanat \u201cposar-ho bonic\u201d amb Laravel i aplicar bones pr\u00e0ctiques.</p>"},{"location":"03MVC_Laravel.html#tasques","title":"\ud83d\udccb Tasques","text":"<ol> <li>Instal\u00b7la Laravel.</li> <li>Prova que funcione la ruta <code>/</code> mostrant una vista Blade amb un text.</li> <li>Crea un controlador <code>WelcomeController</code> amb un m\u00e8tode <code>index()</code>.</li> <li>Passa dades des del controlador a la vista (<code>compact()</code>).</li> <li>Mostra la informaci\u00f3 en una vista <code>welcome.blade.php</code> amb Blade (<code>{{ $variable }}</code>).</li> </ol>"},{"location":"03MVC_Laravel.html#evidencies-esperades","title":"\ud83e\uddfe Evid\u00e8ncies esperades","text":"<ul> <li>Projecte Laravel funcionant localment.  </li> <li>Controlador, ruta i vista correctament connectats.  </li> <li>Vista amb dades din\u00e0miques.  </li> </ul>"},{"location":"03MVC_Laravel.html#explicacio-previa-docent","title":"\ud83e\udde0 Explicaci\u00f3 pr\u00e8via docent","text":"<ul> <li>Qu\u00e8 \u00e9s Laravel i com s\u2019instal\u00b7la.  </li> <li>Flux Request \u2192 Route \u2192 Controller \u2192 View.  </li> <li>Passar dades amb <code>compact()</code> o <code>with()</code>.  </li> <li>Sintaxi b\u00e0sica Blade (<code>{{ }}</code>, <code>@if</code>, <code>@foreach</code>).  </li> </ul>"},{"location":"03MVC_Laravel.html#r2-el-cataleg-dinamic-models-sense-base-de-dades","title":"\ud83e\uddf1 R2. El cat\u00e0leg din\u00e0mic \u2014 Models sense base de dades","text":"<p>Duraci\u00f3: 1 sessi\u00f3 (3 h)</p>"},{"location":"03MVC_Laravel.html#plantejament_1","title":"\ud83e\udde9 Plantejament","text":"<p>Una empresa et demana una web de cat\u00e0leg (llibres, pel\u00b7l\u00edcules o equips). De moment no hi ha base de dades, per\u00f2 cal mostrar una llista i un detall.</p>"},{"location":"03MVC_Laravel.html#tasques_1","title":"\ud83d\udccb Tasques","text":"<ol> <li>Crea un model (per exemple <code>Producte.php</code>) amb un array intern de dades.  </li> <li>Afegeix m\u00e8todes com <code>all()</code> i <code>find($id)</code>.  </li> <li>Crea un controlador <code>ProducteController</code> amb <code>index()</code> i <code>show($id)</code>.  </li> <li>Defineix rutes <code>/productes</code> i <code>/productes/{id}</code>.  </li> <li>Mostra la llista i la fitxa amb vistes Blade.</li> </ol>"},{"location":"03MVC_Laravel.html#evidencies-esperades_1","title":"\ud83e\uddfe Evid\u00e8ncies esperades","text":"<ul> <li>Model funcional amb array d\u2019objectes.  </li> <li>Controlador amb dos m\u00e8todes ben diferenciats.  </li> <li>Vistes que reben i mostren dades reals.</li> </ul>"},{"location":"03MVC_Laravel.html#explicacio-previa-docent_1","title":"\ud83e\udde0 Explicaci\u00f3 pr\u00e8via docent","text":"<ul> <li>Models sense Eloquent: classes PHP normals.  </li> <li>Rutes amb par\u00e0metres (<code>Route::get('/productes/{id}')</code>).  </li> <li>Passar dades amb <code>compact()</code>.  </li> <li>Organitzaci\u00f3 de carpetes (<code>app/Models</code>, <code>app/Http/Controllers</code>, <code>resources/views</code>).</li> </ul>"},{"location":"03MVC_Laravel.html#r3-reutilitza-i-dissenya-plantilles-i-components-blade","title":"\ud83e\uddf1 R3. Reutilitza i dissenya \u2014 Plantilles i components Blade","text":"<p>Duraci\u00f3: 1 sessi\u00f3 (3 h)</p>"},{"location":"03MVC_Laravel.html#objectiu","title":"\ud83c\udfaf Objectiu","text":"<p>Aprendre a reutilitzar codi de vistes amb plantilles, seccions i components Blade.</p>"},{"location":"03MVC_Laravel.html#plantejament_2","title":"\ud83e\udde9 Plantejament","text":"<p>El client vol que totes les p\u00e0gines tinguen el mateix estil i men\u00fa. T\u2019has d\u2019encarregar de crear una plantilla comuna per a tota la web.</p>"},{"location":"03MVC_Laravel.html#tasques_2","title":"\ud83d\udccb Tasques","text":"<ol> <li>Crea un <code>layouts/app.blade.php</code> amb <code>@yield('content')</code>.  </li> <li>Modifica les vistes per <code>@extends('layouts.app')</code> i <code>@section('content')</code>.  </li> <li>Crea un <code>partials/menu.blade.php</code> i inclou-lo amb <code>@include</code>.  </li> <li>Afig un estil coherent (Tailwind o CSS senzill).  </li> <li>(Opcional) Crea un component Blade <code>&lt;x-targeta&gt;</code>.</li> </ol>"},{"location":"03MVC_Laravel.html#evidencies-esperades_2","title":"\ud83e\uddfe Evid\u00e8ncies esperades","text":"<ul> <li>Layout principal operatiu.  </li> <li>Vistes hereten i mostren contingut coherent.  </li> <li>Components o <code>@include</code> utilitzats correctament.</li> </ul>"},{"location":"03MVC_Laravel.html#explicacio-previa-docent_2","title":"\ud83e\udde0 Explicaci\u00f3 pr\u00e8via docent","text":"<ul> <li>Blade inheritance: <code>@extends</code>, <code>@yield</code>, <code>@section</code>.  </li> <li><code>@include</code> i components Blade.  </li> <li>Bones pr\u00e0ctiques de modularitat i DRY.  </li> </ul>"},{"location":"03MVC_Laravel.html#r4-interacciona-amb-lusuari-formularis-i-validacio","title":"\ud83e\uddf1 R4. Interacciona amb l\u2019usuari \u2014 Formularis i validaci\u00f3","text":"<p>Duraci\u00f3: 1\u20131,5 sessions (3\u20134,5 h)</p>"},{"location":"03MVC_Laravel.html#objectiu_1","title":"\ud83c\udfaf Objectiu","text":"<p>Aprendre a gestionar rutes POST, formularis i validaci\u00f3 b\u00e0sica.</p>"},{"location":"03MVC_Laravel.html#plantejament_3","title":"\ud83e\udde9 Plantejament","text":"<p>El client vol un formulari de contacte o per a afegir un comentari, encara que no s\u2019arxive. Nom\u00e9s cal mostrar un missatge de confirmaci\u00f3 amb les dades rebudes.</p>"},{"location":"03MVC_Laravel.html#tasques_3","title":"\ud83d\udccb Tasques","text":"<ol> <li>Crea una ruta <code>GET /contacte</code> i <code>POST /contacte</code>.  </li> <li>Implementa un formulari Blade amb <code>@csrf</code>.  </li> <li>Valida les dades amb <code>$request-&gt;validate()</code>.  </li> <li>Mostra errors amb <code>@error</code> i valors antics amb <code>old()</code>.  </li> <li>Redirigeix amb <code>redirect()-&gt;with('success', 'Missatge rebut!')</code>.</li> </ol>"},{"location":"03MVC_Laravel.html#evidencies-esperades_3","title":"\ud83e\uddfe Evid\u00e8ncies esperades","text":"<ul> <li>Formulari funcional.  </li> <li>Validacions amb missatges.  </li> <li>Confirmaci\u00f3 visual correcta.</li> </ul>"},{"location":"03MVC_Laravel.html#explicacio-previa-docent_3","title":"\ud83e\udde0 Explicaci\u00f3 pr\u00e8via docent","text":"<ul> <li>Rutes <code>POST</code> i controladors.  </li> <li>Validaci\u00f3 b\u00e0sica i missatges d\u2019error.  </li> <li>Sessi\u00f3 i missatges flash.  </li> </ul>"},{"location":"03MVC_Laravel.html#exercicis","title":"Exercicis","text":""},{"location":"03MVC_Laravel.html#bateria-dexercicis-solucionats-per-al-crud-de-laravel-guia-dequips-de-futbol-femeni","title":"\ud83e\udde9 Bateria d'Exercicis Solucionats per al CRUD de Laravel : Guia d'Equips de Futbol Femen\u00ed","text":"<p>L'objectiu d'aquest exercici \u00e9s construir una aplicaci\u00f3 Laravel per gestionar una guia d'equips de futbol femen\u00ed. Aprendrem a configurar rutes, controladors, vistes i a passar dades utilitzant les funcionalitats de Laravel.</p>"},{"location":"03MVC_Laravel.html#arbre-del-repositori","title":"Arbre del repositori","text":"<pre><code>FutbolFemeni/\n\u251c\u2500 README.md\n\u251c\u2500 routes/\n\u2502  \u2514\u2500 web.php\n\u251c\u2500 app/\n\u2502  \u2514\u2500 Http/\n\u2502     \u2514\u2500 Controllers/\n\u2502        \u2514\u2500 EquipController.php\n\u251c\u2500 resources/\n\u2502  \u251c\u2500 views/\n\u2502  \u2502  \u251c\u2500 layouts/\n\u2502  \u2502  \u2502  \u2514\u2500 app.blade.php\n\u2502  \u2502  \u251c\u2500 partials/\n\u2502  \u2502  \u2502  \u2514\u2500 menu.blade.php\n\u2502  \u2502  \u251c\u2500 equips/\n\u2502  \u2502  \u2502  \u251c\u2500 index.blade.php\n\u2502  \u2502  \u2502  \u251c\u2500 show.blade.php\n\u2502  \u2502  \u2502  \u2514\u2500 create.blade.php\n\u2502  \u2502  \u2514\u2500 components/\n\u2502  \u2502     \u2514\u2500 equip.blade.php\n\u2502  \u2514\u2500 css/\n\u2502     \u2514\u2500 equips.css\n\u251c\u2500 vite.config.js            # afegim equips.css a l\u2019input de Vite\n\u2514\u2500 .env.example              # opcional\n</code></pre>"},{"location":"03MVC_Laravel.html#pas-1-configurar-el-projecte","title":"Pas 1: Configurar el projecte","text":"<ol> <li>Crea un projecte Laravel anomenat <code>futbol-femeni</code>:</li> </ol> <pre><code> curl -s \"https://laravel.build/futbol-femeni?with=mysql,mailpit\" | bash\n cd futbol-femeni\n ./vendor/bin/sail up -d\n ./vendor/bin/sail artisan migrate\n</code></pre> <p>Problemes:  des de dins de l'institut no funciona perqu\u00e8 els repositoris estan capats.</p> <p>Soluci\u00f3:</p> <ul> <li>Quan falle . Copiar la seg\u00fcent carpeta a la carpeta del projecte.</li> <li>Canviar este tro\u00e7 del docker-compose.yml per este:</li> </ul> <p><pre><code>    laravel.test:\n        build:\n            context: './vendor/laravel/sail/runtimes/8.3'  \n</code></pre> per <pre><code>    laravel.test:\n        build:\n            context: './docker'\n</code></pre></p> <p>i despres acabem la instal\u00b7laci\u00f3:</p> <pre><code>  cd futbol-femeni\n  ./vendor/bin/sail up \n  ./vendor/bin/sail artisan migrate\n  ./vendor/bin/sail npm install &amp;&amp; npm run build\n</code></pre> <p>Navega a http://localhost i a /equips</p>"},{"location":"03MVC_Laravel.html#pas-2-crear-rutes-i-controlador","title":"Pas 2: Crear rutes i controlador","text":"<p>Defineix les rutes a  <code>routes/web.php</code> </p> <p>Crea el controlador:  <pre><code> ./vendor/bin/sail artisan make:controller EquipController\n</code></pre> Modifica el controlador <code>EquipController.php</code></p>"},{"location":"03MVC_Laravel.html#pas-3-crear-les-vistes","title":"Pas 3: Crear les vistes","text":"<p>Defineix la plantilla <code>layout\\app.blade.php</code></p> <p>Crea les vistes:</p> <ul> <li><code>partials/menu.blade.php</code></li> <li><code>equips/index.blade.php</code></li> <li><code>equips/show.blade.php</code></li> <li><code>equips/create.blade.php</code></li> </ul> <p>Defineix el component de la vista per a Equip:</p> <ul> <li><code>components/equip.blade.php</code></li> </ul> <p>Afegeix els estils:    </p> <ul> <li><code>equips.css</code></li> </ul> <p>Configura vite:</p> <ul> <li>Modifica el fixer <code>vite.config.js</code></li> <li>Executa:</li> </ul> <pre><code>  ./vendor/bin/sail npm install &amp;&amp; npm run build\n</code></pre>"},{"location":"03MVC_Laravel.html#projecte-futbol-femeni-i","title":"\ud83c\udfaf Projecte \"Futbol Femen\u00ed I\"","text":""},{"location":"03MVC_Laravel.html#objectiu_2","title":"Objectiu","text":"<p>Estendre la mini-app de la Guia d\u2019equips de futbol femen\u00ed per afegir: 1) Estadis (llistat + alta), 2) Jugadores (llistat + alta) i 3) Partits (llistat + alta),    aplicant MVC en Laravel, Blade, components, Vite i validaci\u00f3.</p> <p>Sense base de dades: emmagatzema les dades en sessi\u00f3.</p>"},{"location":"03MVC_Laravel.html#requisits-previs","title":"Requisits previs","text":"<ul> <li>Projecte Laravel funcionant.</li> <li><code>.env</code> amb <code>SESSION_DRIVER=file</code>.</li> <li><code>resources/views/layouts/app.blade.php</code> com a layout com\u00fa amb <code>@include('partials.menu')</code>.</li> <li>Vite: un \u00fanic <code>@vite(['resources/css/app.css','resources/js/app.js'])</code> al layout.   Importa els estils propis dins <code>resources/css/app.css</code> (p. ex. <code>@import './guias.css';</code>).</li> </ul>"},{"location":"03MVC_Laravel.html#dades-minimes-per-iniciar","title":"Dades m\u00ednimes (per iniciar)","text":"<ul> <li>Estadis (m\u00ednim):<pre><code>- Estadi Johan Cruyff \u00b7 Sant Joan Desp\u00ed \u00b7 6000 \u00b7 FC Barcelona Femen\u00ed\n- Centro Deportivo Wanda Alcal\u00e1 de Henares \u00b7 Alcal\u00e1 de Henares \u00b7 2800 \u00b7 Atl\u00e8tic de Madrid Femen\u00ed\n- Estadio Alfredo Di St\u00e9fano \u00b7 Madrid \u00b7 6000 \u00b7 Real Madrid Femen\u00ed\n</code></pre> <ul> <li> <p>Jugadores (m\u00ednim):</p> <ul> <li>Alexia Putellas \u00b7 Bar\u00e7a Femen\u00ed \u00b7 Migcampista</li> <li>Esther Gonz\u00e1lez \u00b7 Atl\u00e8tic de Madrid \u00b7 Davantera</li> <li>Misa Rodr\u00edguez \u00b7 Real Madrid Femen\u00ed \u00b7 Portera</li> <li> <p>Partits (m\u00ednim):</p> </li> <li> <p>Local: Bar\u00e7a Femen\u00ed \u00b7 Visitant: Atl\u00e8tic de Madrid \u00b7 Data: 2024-11-30 \u00b7 Resultat: (buit)</p> </li> <li>Local: Real Madrid Femen\u00ed \u00b7 Visitant: Bar\u00e7a Femen\u00ed \u00b7 Data: 2024-12-15 \u00b7 Resultat: 0-3</li> </ul> </li> </ul> </li> </ul> <p>Pots ampliar els arrays, per\u00f2 no uses Eloquent ni migracions.</p>"},{"location":"03MVC_Laravel.html#fases-i-tasques","title":"Fases i tasques","text":""},{"location":"03MVC_Laravel.html#fase-1-estadis","title":"Fase 1 \u2014 Estadis","text":"<ol> <li>Controlador <code>EstadiController</code>    - M\u00e8todes: <code>index</code>, <code>create</code>, <code>store</code>.    - Dades inicials: array intern (seed).    - Llegir/guardar en sessi\u00f3 a la clau <code>estadis</code>.</li> <li>Rutes anomenades    - <code>GET /estadis</code> \u2192 <code>estadis.index</code>    - <code>GET /estadis/crear</code> \u2192 <code>estadis.create</code>    - <code>POST /estadis</code> \u2192 <code>estadis.store</code></li> <li>Vistes Blade    - <code>estadis/index.blade.php</code>: taula Nom, Ciutat, Capacitat, Equip principal + enlla\u00e7 \u201c+ Nou estadi\u201d.    - <code>estadis/create.blade.php</code>: formulari nom, ciutat, capacitat, equip_principal + bot\u00f3 \u201cGuardar\u201d.    - Totes hereten de <code>layouts/app</code> i mostren missatges d\u2019\u00e8xit/errades.</li> <li>Validaci\u00f3 obligat\u00f2ria    - <code>nom</code>: required, m\u00edn. 3    - <code>ciutat</code>: required, m\u00edn. 2    - <code>capacitat</code>: required, integer, m\u00edn. 0    - <code>equip_principal</code>: required, m\u00edn. 3</li> <li>Component Blade    - Crea un component (ex. <code>&lt;x-estadi :nom=\"\u2026\"/&gt;</code>) i utilitza\u2019l a la taula.</li> </ol>"},{"location":"03MVC_Laravel.html#fase-2-jugadores","title":"Fase 2 \u2014 Jugadores","text":"<ol> <li>Controlador <code>JugadoraController</code> (<code>index</code>, <code>create</code>, <code>store</code>; sessi\u00f3 clau <code>jugadores</code>).</li> <li>Rutes    - <code>GET /jugadores</code> \u2192 <code>jugadores.index</code>    - <code>GET /jugadores/crear</code> \u2192 <code>jugadores.create</code>    - <code>POST /jugadores</code> \u2192 <code>jugadores.store</code></li> <li>Vistes    - <code>jugadores/index.blade.php</code>: taula Nom, Equip, Posici\u00f3 + \u201c+ Nova jugadora\u201d.    - <code>jugadores/create.blade.php</code>: formulari nom, equip, posicio (select amb: Portera, Defensa, Migcampista, Davantera).</li> <li>Validaci\u00f3    - <code>nom</code>: required, m\u00edn. 3    - <code>equip</code>: required, m\u00edn. 2    - <code>posicio</code>: required, in(Portera, Defensa, Migcampista, Davantera)</li> <li>Component    - Component (ex. <code>&lt;x-jugadora :nom=\"\u2026\"/&gt;</code>) i \u00fas a la taula.</li> </ol>"},{"location":"03MVC_Laravel.html#fase-3-partits","title":"Fase 3 \u2014 Partits","text":"<ol> <li>Controlador <code>PartitController</code> (<code>index</code>, <code>create</code>, <code>store</code>; sessi\u00f3 clau <code>partits</code>).</li> <li>Rutes    - <code>GET /partits</code> \u2192 <code>partits.index</code>    - <code>GET /partits/crear</code> \u2192 <code>partits.create</code>    - <code>POST /partits</code> \u2192 <code>partits.store</code></li> <li>Vistes    - <code>partits/index.blade.php</code>: taula Local, Visitant, Data, Resultat + \u201c+ Nou partit\u201d.    - <code>partits/create.blade.php</code>: formulari local, visitant, data (input date), resultat (opcional).</li> <li>Validaci\u00f3    - <code>local</code>: required, m\u00edn. 2    - <code>visitant</code>: required, m\u00edn. 2, different:local    - <code>data</code>: required, format <code>Y-m-d</code>    - <code>resultat</code>: nullable, regex <code>^\\d+-\\d+$</code> (ex. <code>2-1</code>) amb missatge personalitzat.</li> <li>Component    - Component curt (ex. <code>&lt;x-equip-mini :nom=\"\u2026\"/&gt;</code>) per al nom d\u2019equip.</li> </ol>"},{"location":"03MVC_Laravel.html#fase-4-menu-i-navegacio","title":"Fase 4 \u2014 Men\u00fa i navegaci\u00f3","text":"<ul> <li>Actualitza <code>resources/views/partials/menu.blade.php</code> per enlla\u00e7ar amb rutes anomenades: <code>equips.index</code>, <code>estadis.index</code>, <code>jugadores.index</code>, <code>partits.index</code>.</li> <li>Verifica que totes les p\u00e0gines hereten del layout i mostren el men\u00fa.</li> </ul>"},{"location":"03MVC_Laravel.html#fase-5-estils-i-vite","title":"Fase 5 \u2014 Estils i Vite","text":"<ul> <li>Crea/actualitza <code>resources/css/guias.css</code> amb estils b\u00e0sics de taules, formularis i alertes.</li> <li>Importa\u2019l dins <code>resources/css/app.css</code> amb <code>@import</code>.</li> <li>Executa Vite (<code>npm run dev</code> o <code>npm run build</code>) i comprova c\u00e0rrega d\u2019estils sense errors de manifest.</li> </ul>"},{"location":"03MVC_Laravel.html#criteris-dacceptacio-checklist","title":"Criteris d\u2019acceptaci\u00f3 (checklist)","text":"<ul> <li> Rutes definides i anomenades (no hardcodejar URLs a les vistes).</li> <li> Dades en sessi\u00f3 (no BBDD); persistixen mentre el servidor est\u00e0 actiu.</li> <li> Formularis amb validaci\u00f3 i missatges d\u2019error visibles.</li> <li> Missatge d\u2019\u00e8xit (flash) despr\u00e9s de guardar.</li> <li> Vistes que hereten del layout i inclouen el men\u00fa.</li> <li> Components Blade usats en cada apartat (min. 1 per secci\u00f3).</li> <li> Estils via Vite (un sol <code>@vite</code> al layout; CSS importat des d\u2019<code>app.css</code>).</li> </ul>"},{"location":"03MVC_Laravel.html#entregables","title":"Entregables","text":"<ul> <li>Enlla\u00e7 del repositori GitHub amb un <code>README</code> curt per arrancar el projecte.</li> <li>Captures o GIF breu mostrant: crear estadi, crear jugadora i crear partit.</li> <li>(Opcional) Breu text amb decisions de validaci\u00f3 i possibles millores.</li> </ul> Criteri Puntuaci\u00f3 Total Complet(2) Incomplet(1) Insuficient(0) Inicialitzaci\u00f3 de dades (seed i sessi\u00f3) 1 Arrays inicials creats i carregats en sessi\u00f3; persist\u00e8ncia mentre dura l\u2019execuci\u00f3 Arrays creats per\u00f2 sense c\u00e0rrega en sessi\u00f3 o amb claus inconsistents No hi ha dades inicials ni \u00fas de sessi\u00f3 Rutes anomenades i navegaci\u00f3 (men\u00fa) 3 Totes les rutes definides amb <code>name()</code> i enlla\u00e7ades des del men\u00fa; no hi ha URLs hardcodejades Algunes rutes sense nom o enlla\u00e7os directes en vistes Rutes desordenades o sense nom; men\u00fa inoperatiu Controladors i l\u00f2gica de sessi\u00f3 (MVC) 3 L\u00f2gica en controladors (seed, lectura/escriptura sessi\u00f3); vistes netes sense l\u00f2gica Part de la l\u00f2gica en vistes o manca de consist\u00e8ncia en l\u2019\u00fas de sessi\u00f3 L\u00f2gica principal en vistes o sense \u00fas de controladors Validaci\u00f3 \u2014 Estadis (store) 2 Regles completes (<code>nom</code>, <code>ciutat</code>, <code>capacitat</code>, <code>equip_principal</code>) i missatges visibles Regles incompletes o errors mostrats parcialment Sense validaci\u00f3 o sense mostrar errors Validaci\u00f3 \u2014 Jugadores (store) 2 Regles completes (<code>nom</code>, <code>equip</code>, <code>posicio in[...]</code>) i feedback d\u2019errors clar Regles incompletes o select sense control de valors Sense validaci\u00f3 o feedback Validaci\u00f3 \u2014 Partits (store) 2 Regles completes (<code>local</code>, <code>visitant different:local</code>, <code>data</code>, <code>resultat regex^\\d+-\\d+$</code>) Falta alguna regla clau (p. ex. <code>different</code> o <code>regex</code>) Sense validaci\u00f3 o no funcional Vistes Blade i her\u00e8ncia de layout + men\u00fa 2 Totes les vistes hereten de <code>layouts/app</code> i inclouen el men\u00fa; estructura clara Algunes vistes no hereten o no mostren el men\u00fa Sense layout com\u00fa o vistes disperses Components Blade 1 Component creat i utilitzat a cada secci\u00f3 (p. ex. estadi, jugadora, equip-mini) Component creat per\u00f2 \u00fas limitat o inconsistent Sense components o no s\u2019usen Estils CSS i Vite 1 Estils aplicats via Vite (un \u00fanic <code>@vite</code> al layout i CSS importat amb <code>@import</code>); sense errors Estils aplicats per\u00f2 amb advertiments/manifest puntuals Sense estils o errors de manifest recurrents Missatges d\u2019\u00e8xit i errors (flash/validaci\u00f3) 1 Missatge de confirmaci\u00f3 en guarda i llistat d\u2019errors en formularis Nom\u00e9s algun missatge (\u00e8xit o errors) Sense missatges Comentaris i claredat del codi 1 Codi net i comentat on cal; noms de rutes/variables coherents Alguns comentaris o noms poc descriptius Codi desordenat o sense comentaris Documentaci\u00f3 amb PHPDoc (controladors/m\u00e8todes) 1 PHPDoc en m\u00e8todes clau (<code>@param</code>, <code>@return</code>, descripci\u00f3 clara de prop\u00f2sit i flux) PHPDoc present per\u00f2 incomplet o inconsistent Sense PHPDoc"},{"location":"03MVC_Laravel.html#preguntes-de-reflexio-a-respondre-al-lliurament","title":"Preguntes de reflexi\u00f3 (a respondre al lliurament)","text":"<ol> <li>Rutes i controladors: quins avantatges t\u00e9 centralitzar validaci\u00f3 i gesti\u00f3 de sessi\u00f3 al controlador?</li> <li>Blade: com evites errors quan una clau pot no existir en un array? Dona exemples.</li> <li>Vite: per qu\u00e8 \u00e9s m\u00e9s robust tenir un sol <code>@vite</code> al layout i importar la resta de CSS amb <code>@import</code>?</li> <li>Sessi\u00f3 vs BBDD: quins l\u00edmits t\u00e9 la sessi\u00f3 per a persistir dades? Quan migraries a models i migracions?</li> </ol>"},{"location":"03MVC_Laravel.html#annex-i-configuracio-predeterminada","title":"\ud83d\udcce Annex I : Configuraci\u00f3 predeterminada","text":"<p>Els fitxers de configuraci\u00f3 es troben al directori <code>config/</code>. A continuaci\u00f3 es descriuen alguns dels m\u00e9s importants:</p>"},{"location":"03MVC_Laravel.html#1-configappphp","title":"1. config/app.php","text":"<p>Cont\u00e9 configuracions globals de l'aplicaci\u00f3.</p> <ul> <li><code>name</code>: Nom de l'aplicaci\u00f3.</li> <li><code>env</code>: Entorn d'execuci\u00f3 (<code>local</code>, <code>production</code>, <code>testing</code>).</li> <li><code>debug</code>: Habilita o deshabilita el mode depuraci\u00f3 (<code>true</code> o <code>false</code>).</li> <li><code>timezone</code>: Zona hor\u00e0ria de l'aplicaci\u00f3 (per defecte <code>UTC</code>).</li> <li><code>locale</code>: Idioma predeterminat.</li> </ul>"},{"location":"03MVC_Laravel.html#2-configdatabasephp","title":"2. config/database.php","text":"<p>Configura les bases de dades de l'aplicaci\u00f3.</p> <ul> <li><code>default</code>: Connexi\u00f3 predeterminada (<code>mysql</code>, <code>sqlite</code>, <code>pgsql</code>, etc.).</li> <li>Configuracions per a cada connexi\u00f3:</li> <li><code>mysql</code>: Exemple:  ```php 'mysql' =&gt; [   'driver' =&gt; 'mysql',   'host' =&gt; env('DB_HOST', '127.0.0.1'),   'port' =&gt; env('DB_PORT', '3306'),   'database' =&gt; env('DB_DATABASE', 'laravel'),   'username' =&gt; env('DB_USERNAME', 'root'),   'password' =&gt; env('DB_PASSWORD', ''), ],</li> </ul> <p>```</p>"},{"location":"03MVC_Laravel.html#3-configmailphp","title":"3. config/mail.php","text":"<p>Configura el sistema d'enviament de correus electr\u00f2nics.</p> <ul> <li><code>default</code>: Transport predeterminat (<code>smtp</code>, <code>mailgun</code>, <code>sendmail</code>, <code>resend</code> etc.).</li> <li>Configuracions SMTP:  <pre><code>'mailers' =&gt; [\n    'smtp' =&gt; [\n    'transport' =&gt; 'smtp',\n    'host' =&gt; env('MAIL\\_HOST', 'smtp.mailtrap.io'),\n    'port' =&gt; env('MAIL\\_PORT', 2525),\n    'username' =&gt; env('MAIL\\_USERNAME'),\n    'password' =&gt; env('MAIL\\_PASSWORD'),\n    'encryption' =&gt; env('MAIL\\_ENCRYPTION', 'tls'),\n    ],\n],\n</code></pre></li> </ul>"},{"location":"03MVC_Laravel.html#4-configfilesystemsphp","title":"4. config/filesystems.php","text":"<p>Gestiona els sistemes d'arxius.</p> <ul> <li><code>default</code>: Sistema predeterminat (local, s3, etc.).</li> <li>Configuraci\u00f3 de discos: <pre><code> 'disks' =&gt; [\n     'local' =&gt; [\n     'driver' =&gt; 'local',\n     'root' =&gt; storage_path('app'),\n     ],\n     's3' =&gt; [\n     'driver' =&gt; 's3',\n     'key' =&gt; env('AWS_ACCESS_KEY_ID'),\n     'secret' =&gt; env('AWS_SECRET_ACCESS_KEY'),\n     'region' =&gt; env('AWS_DEFAULT_REGION'),\n     'bucket' =&gt; env('AWS_BUCKET'),\n     ],\n ],\n</code></pre></li> </ul>"},{"location":"03MVC_Laravel.html#annex-ii-funcions-dajuda","title":"\ud83d\udcce  Annex II :  Funcions d'ajuda","text":"<p>Laravel proporciona helpers per treballar amb configuracions de manera senzilla i din\u00e0mica.</p> <p>Accedir a configuracions</p> <p>Utilitza la funci\u00f3 <code>config()</code> per obtenir valors de configuraci\u00f3 des de qualsevol lloc de l'aplicaci\u00f3:</p> <p><pre><code>config('app.name'); // Retorna el nom de l'aplicaci\u00f3\n</code></pre> Canviar configuracions en temps d'execuci\u00f3</p> <p>Pots modificar configuracions de forma temporal durant l'execuci\u00f3 de l'aplicaci\u00f3:</p> <pre><code>config(['app.debug' =&gt; false]); // Desactiva el mode depuraci\u00f3\n</code></pre> <p>Establir valors predeterminats</p> <p>Si el valor no existeix, pots establir un valor predeterminat:</p> <p><pre><code>$value = config('app.missing_key', 'valor per defecte');\n</code></pre> Aquestes funcions s\u00f3n \u00fatils per ajustar l'aplicaci\u00f3 a les necessitats de l'entorn o per gestionar configuracions espec\u00edfiques durant l'execuci\u00f3.</p>"},{"location":"03web.html","title":"Programaci\u00f3 Web","text":"Duraci\u00f3 i criteris d'evaluaci\u00f3 <p>Duraci\u00f3 estimada: 10 hores</p> Resultat d'aprenentatge Criteris d'avaluaci\u00f3 4. Desenvolupa aplicacions Web embegudes en llenguatges de marques analitzant i incorporant funcionalitats segons especificacions a) S'han identificat els mecanismes disponibles per al manteniment de la informaci\u00f3 que concerneix un client web concret i s'han assenyalat els seus avantatges. b) S'han utilitzat mecanismes per a mantindre l'estat de les aplicacions web. c) S'han utilitzat mecanismes per a emmagatzemar informaci\u00f3 en el client web i per a recuperar el seu contingut. d) S'han identificat i caracteritzat els mecanismes disponibles per a l'autenticaci\u00f3 d'usuaris. e) S'han escrit aplicacions que integren mecanismes d'autenticaci\u00f3 d'usuaris. f) S'han utilitzat eines i entorns per a facilitar la programaci\u00f3, prova i depuraci\u00f3 del codi."},{"location":"03web.html#1-mecanismes-per-al-manteniment-de-la-informacio-en-aplicacions-web","title":"1.  Mecanismes per al Manteniment de la Informaci\u00f3 en Aplicacions Web","text":"<p>HTTP \u00e9s un protocol stateless, sense estat. En les aplicacions web modernes, \u00e9s essencial gestionar l'estat del client per proporcionar una experi\u00e8ncia d'usuari fluida i personalitzada. Per aix\u00f2, se simula l'estat mitjan\u00e7ant l'\u00fas de cookies, tokens o la sessi\u00f3. L'estat \u00e9s necessari per a processos com ara el carret de la compra, operacions associades a un usuari, etc...  A continuaci\u00f3 es detallen diversos mecanismes per mantenir aquesta informaci\u00f3, aix\u00ed com els seus avantatges i desavantatges.</p>"},{"location":"03web.html#cookies","title":"Cookies","text":"<p>Les cookies s\u00f3n petits fitxers de text emmagatzemats al navegador de l'usuari. S\u00f3n \u00e0mpliament utilitzades per mantenir l'estat del client entre sol\u00b7licituds HTTP, ja que HTTP \u00e9s un protocol sense estat.</p>"},{"location":"03web.html#avantatges-de-les-cookies","title":"Avantatges de les Cookies","text":"<ul> <li>Persist\u00e8ncia: Les cookies poden mantenir-se durant per\u00edodes llargs definits per l'atribut <code>expires</code> o <code>max-age</code>.</li> <li>Accessibilitat: Es poden accedir des de qualsevol p\u00e0gina del mateix domini.</li> <li>Simplicitat: F\u00e0cils d'implementar i gestionar.</li> </ul>"},{"location":"03web.html#desavantatges-de-les-cookies","title":"Desavantatges de les Cookies","text":"<ul> <li>Seguretat: Poden ser objectiu d'atacs com XSS (Cross-Site Scripting) si no es gestionen correctament.</li> <li>Limitacions de mida: Les cookies estan limitades a 4KB de dades.</li> <li>Privadesa: Les dades de l'usuari poden ser vulnerables si no es protegeixen adequadament.</li> </ul>"},{"location":"03web.html#millors-practiques","title":"Millors Pr\u00e0ctiques","text":"<ul> <li>Utilitzar l'atribut <code>HttpOnly</code> per evitar l'acc\u00e9s a les cookies des de JavaScript.</li> <li>Configurar <code>SameSite</code> per prevenir atacs CSRF.</li> <li>Emmagatzemar \u00fanicament informaci\u00f3 essencial i no sensible.</li> </ul>"},{"location":"03web.html#sessions","title":"Sessions","text":"<p>Les sessions s\u00f3n un mecanisme que permet associar dades a un usuari durant una sessi\u00f3 espec\u00edfica. Aquestes dades s'emmagatzemen al servidor, mentre que el client nom\u00e9s guarda un identificador de sessi\u00f3.</p>"},{"location":"03web.html#avantatges-de-les-sessions","title":"Avantatges de les Sessions","text":"<ul> <li>Seguretat: Les dades sensibles es mantenen al servidor.</li> <li>Capacitat d'emmagatzematge: No limitades per la mida de les cookies.</li> <li>Compartici\u00f3 de dades: Facilita la compartici\u00f3 d'estat entre diferents components d'una aplicaci\u00f3 web.</li> </ul>"},{"location":"03web.html#desavantatges-de-les-sessions","title":"Desavantatges de les Sessions","text":"<ul> <li>Escalabilitat: Requereix mem\u00f2ria addicional al servidor, la qual cosa pot ser problem\u00e0tica amb molts usuaris.</li> <li>Persist\u00e8ncia limitada: Normalment nom\u00e9s duren mentre el navegador est\u00e0 obert, tret que es configuri d'una altra manera.</li> </ul>"},{"location":"03web.html#millors-practiques_1","title":"Millors Pr\u00e0ctiques","text":"<ul> <li>Emmagatzemar \u00fanicament refer\u00e8ncies o identificadors a la sessi\u00f3.</li> <li>Utilitzar eines com Redis per a una gesti\u00f3 eficient de sessions en entorns escalables.</li> </ul>"},{"location":"03web.html#web-storage","title":"Web Storage","text":"<p>El Web Storage \u00e9s una API del navegador que permet emmagatzemar dades al client de manera m\u00e9s senzilla i amb m\u00e9s capacitat que les cookies tradicionals. Inclou dos mecanismes principals: <code>localStorage</code> i <code>sessionStorage</code>.</p>"},{"location":"03web.html#caracteristiques-del-web-storage","title":"Caracter\u00edstiques del Web Storage","text":"<ul> <li><code>localStorage</code>: Permet emmagatzemar dades que persisteixen fins que s'elimina expl\u00edcitament, fins i tot despr\u00e9s de tancar el navegador.</li> <li><code>sessionStorage</code>: Les dades es mantenen nom\u00e9s durant la sessi\u00f3 del navegador i s'esborren quan es tanca la pestanya o finestra.</li> </ul>"},{"location":"03web.html#avantatges","title":"Avantatges","text":"<ul> <li>Capacitat d'Emmagatzematge: Ofereix m\u00e9s espai (fins a 5-10MB) que les cookies.</li> <li>API Simple: Proporciona una interf\u00edcie senzilla per emmagatzemar i recuperar dades.</li> </ul>"},{"location":"03web.html#usos-comuns","title":"Usos Comuns","text":"<ul> <li>Manteniment de l'Estat del Client: Pot guardar dades de sessi\u00f3 i prefer\u00e8ncies de l'usuari que no cal enviar al servidor.</li> <li>Sincronitzaci\u00f3 amb l'Entorn Servidor: Es pot utilitzar per emmagatzemar dades que despr\u00e9s es sincronitzen amb el servidor, millorant el rendiment i l'experi\u00e8ncia d'usuari.</li> </ul>"},{"location":"03web.html#consideracions-de-seguretat","title":"Consideracions de Seguretat","text":"<ul> <li>Accessibilitat: Les dades s\u00f3n accessibles per JavaScript, per la qual cosa s'ha de tenir cura amb les vulnerabilitats XSS.</li> <li>Dades Sensibles: Evita emmagatzemar dades sensibles o confidencials.</li> </ul> <p>Tot i que Web Storage s'executa al costat del client, entendre les seves funcionalitats pot ajudar els desenvolupadors del servidor a dissenyar sistemes m\u00e9s robustos i efica\u00e7os, on la cooperaci\u00f3 entre client i servidor maximitza l'efici\u00e8ncia de l'aplicaci\u00f3 web.</p>"},{"location":"03web.html#tokens-dautenticacio","title":"Tokens d'Autenticaci\u00f3","text":"<p>Els JSON Web Tokens (JWT) s\u00f3n un est\u00e0ndard obert que defineix una manera compacta i aut\u00f2noma d'enviar informaci\u00f3 entre dues parts de manera segura com a objecte JSON. S'utilitzen habitualment per a l'autenticaci\u00f3 en aplicacions web.</p>"},{"location":"03web.html#avantatges-dels-jwt","title":"Avantatges dels JWT","text":"<ul> <li>Estatut aut\u00f2nom: Porten tota la informaci\u00f3 necess\u00e0ria, eliminant la necessitat de mantenir sessions al servidor.</li> <li>Escalabilitat: Milloren l'escalabilitat en aplicacions distribu\u00efdes.</li> <li>Seguretat: Es poden signar digitalment per assegurar la seva autenticitat.</li> </ul>"},{"location":"03web.html#desavantatges-dels-jwt","title":"Desavantatges dels JWT","text":"<ul> <li>Revocaci\u00f3 complexa: Una vegada emesos, \u00e9s dif\u00edcil revocar-los sense mantenir una llista negra.</li> <li>Sobrecarrega de dades: Si els tokens s\u00f3n grans, poden afectar el rendiment, especialment en xarxes de baixa lat\u00e8ncia.</li> </ul>"},{"location":"03web.html#millors-practiques_2","title":"Millors Pr\u00e0ctiques","text":"<ul> <li>Utilitzar signatura HS256 o RS256 per garantir la integritat del token.</li> <li>No emmagatzemar dades sensibles directament al token.</li> </ul>"},{"location":"03web.html#cache-del-navegador","title":"Cache del Navegador","text":"<p>El cache del navegador s'utilitza per emmagatzemar c\u00f2pies temporals de recursos web per millorar el rendiment i reduir la c\u00e0rrega del servidor.</p>"},{"location":"03web.html#avantatges-del-cache","title":"Avantatges del Cache","text":"<ul> <li>Rendiment: Redueix el temps de c\u00e0rrega dels recursos.</li> <li>Optimitzaci\u00f3: Disminueix l'ample de banda requerit.</li> </ul>"},{"location":"03web.html#desavantatges-del-cache","title":"Desavantatges del Cache","text":"<ul> <li>Consist\u00e8ncia: Pot servir dades obsoletes si no es gestiona correctament.</li> <li>Control: Requereix configuraci\u00f3 per evitar el caching indesitjat de dades din\u00e0miques.</li> </ul>"},{"location":"03web.html#millors-practiques_3","title":"Millors Pr\u00e0ctiques","text":"<ul> <li>Configurar els encap\u00e7alaments HTTP correctament (<code>Cache-Control</code>, <code>ETag</code>) per gestionar l'actualitzaci\u00f3 de recursos.</li> </ul>"},{"location":"03web.html#sincronitzacio-offline","title":"Sincronitzaci\u00f3 Offline","text":"<p>La sincronitzaci\u00f3 offline es refereix a la capacitat d'una aplicaci\u00f3 web de funcionar sense connexi\u00f3 a Internet, sincronitzant dades quan es recupera la connexi\u00f3.</p>"},{"location":"03web.html#tecniques-i-eines","title":"T\u00e8cniques i Eines","text":"<ul> <li>IndexedDB: Emmagatzema grans volums de dades estructurades dins del navegador.</li> <li>Service Workers: Gestionen peticions de xarxa, proporcionant funcionalitats offline i cache avan\u00e7at.</li> </ul>"},{"location":"03web.html#millors-practiques_4","title":"Millors Pr\u00e0ctiques","text":"<ul> <li>Gestionar conflictes de dades quan es torna a estar en l\u00ednia.</li> <li>Utilitzar estrat\u00e8gies de sincronitzaci\u00f3 optimitzades per minimitzar l'ample de banda i el temps de sincronitzaci\u00f3.</li> </ul>"},{"location":"03web.html#seguretat-de-les-cookies-i-sessions","title":"Seguretat de les Cookies i Sessions","text":"<p>La seguretat \u00e9s fonamental en la gesti\u00f3 de cookies i sessions per protegir les dades dels usuaris de possibles atacs.</p>"},{"location":"03web.html#practiques-de-seguretat","title":"Pr\u00e0ctiques de Seguretat","text":"<ul> <li>CSRF: Utilitzar tokens CSRF per validar sol\u00b7licituds d'accions sensibles.</li> <li>XSS: Sanear les dades d'entrada i utilitzar cap\u00e7aleres de seguretat (<code>Content-Security-Policy</code>) per prevenir XSS.</li> <li>Secure Flag: Marcar les cookies amb l'atribut <code>Secure</code> perqu\u00e8 nom\u00e9s s'envi\u00efn a trav\u00e9s de connexions HTTPS.</li> </ul>"},{"location":"03web.html#conclusio","title":"Conclusi\u00f3","text":"<p>La selecci\u00f3 del mecanisme adequat per al manteniment de l'estat en una aplicaci\u00f3 web dep\u00e8n de les necessitats espec\u00edfiques de l'aplicaci\u00f3, el volum de dades, els requisits de seguretat i l'arquitectura del sistema. Avaluar cada t\u00e8cnica pel que fa a avantatges i desavantatges ajudar\u00e0 a prendre decisions informades i construir aplicacions web m\u00e9s segures i eficients.</p>"},{"location":"03web.html#2exemples-de-cookies-i-sessions-en-php","title":"2.Exemples de Cookies i Sessions en PHP","text":""},{"location":"03web.html#cookies_1","title":"Cookies","text":"<p>Les cookies s'emmagatzemen en el array global <code>$_COOKIE</code>. El que col\u00b7loquem dins del array, es guardar\u00e0 en el client. Cal tindre present que el client pot no voler emmagatzemar-les.</p> <p>Existeix una limitaci\u00f3 de 20 cookies per domini i 300 en total en el navegador.</p> <p>En PHP, per a crear una cookie s'utilitza la funci\u00f3 <code>setcookie</code>:</p> <p><pre><code>&lt;?php\nsetcookie(\n    'nom_cookie',\n    'valor_cookie',\n    [\n        'expires' =&gt; time() + 3600, // 1 hora\n        'path' =&gt; '/',\n        'domain' =&gt; '', // Domini actual\n        'secure' =&gt; true, // Nom\u00e9s HTTPS\n        'httponly' =&gt; true, // Nom\u00e9s accessible via HTTP\n        'samesite' =&gt; 'Lax' // o 'Strict' o 'None'\n    ]\n);\n?&gt;\n</code></pre> Destacar que el nom no pot contindre espais ni el car\u00e0cter <code>;</code>. Respecte al contingut de la cookie, no pot superar els 4 KB.</p>"},{"location":"03web.html#consideracions-de-seguretat-per-a-cookies","title":"Consideracions de seguretat per a cookies:","text":"<p>HTTPOnly: Assegura't que les cookies que contenen informaci\u00f3 sensible no siguin accessibles per JavaScript utilitzant l'atribut HttpOnly.</p> <p>Secure: Utilitza l'atribut Secure per assegurar que les cookies nom\u00e9s es transmeten en connexions HTTPS.</p> <p>SameSite: Defineix correctament l'atribut SameSite per a prevenir atacs CSRF (Cross-Site Request Forgery).</p> <p>Per exemple, mitjan\u00e7ant cookies podem comprovar la quantitat de visites diferents que realitza un usuari:</p> <pre><code>&lt;?php\n$accesosPagina\u00a0=\u00a00;\nif\u00a0(isset($_COOKIE['accesos']))\u00a0{\u00a0\n    $accesosPagina\u00a0=\u00a0$_COOKIE['accesos']; // recuperamos una cookie\n    setcookie('accesos',\u00a0++$accesosPagina); // le asignamos un valor\n}\n?&gt;\n</code></pre> <p>Inspeccionant les cookies</p> <p>Si volem veure que contenen les cookies que tenim emmagatzemades en el navegador, es pot comprovar el seu valor en Dev Tools \u2192 Application \u2192 Storage</p> <p>El temps de vida de les cookies pot ser tan llarg com el lloc web en el qual resideixen. Elles seguiran ac\u00ed, fins i tot si el navegador est\u00e0 tancat o obert.</p> <p>Per a esborrar una cookie es pot posar que expiren en el passat:</p> <pre><code>&lt;?php\nsetcookie(nombre,\u00a0\"\",\u00a01) // pasado\n</code></pre> <p>O que caduquen dins d'un per\u00edode de temps deteminado:</p> <pre><code>&lt;?php\nsetcookie(nombre,\u00a0valor,\u00a0time() + 3600) // Caducan dentro de una hora\n</code></pre> Comunicaci\u00f3 amb cookies <p>S'utilitzen per a:</p> <ul> <li>Recordar els inicis de sessi\u00f3</li> <li>Emmagatzemar valors temporals d'usuari</li> <li>Si un usuari est\u00e0 navegant per una llista paginada d'articles, ordenats d'una certa manera, podem emmagatzemar l'ajust de la classificaci\u00f3.</li> </ul> <p>L'alternativa en el client per a emmagatzemar informaci\u00f3 en el navegador \u00e9s l'objecte LocalStorage.</p>"},{"location":"03web.html#sessio","title":"Sessi\u00f3","text":"<p>La sessi\u00f3 afig la gesti\u00f3 de l'estat a HTTP, emmagatzemant en aquest cas la informaci\u00f3 en el servidor. Cada visitant t\u00e9 un ID de sessi\u00f3 \u00fanic, el qual per defecte s'emmagatzema en una cookie denominada <code>PHPSESSID</code>. Si el client no t\u00e9 les cookies actives, l'ID es propaga en cada URL dins del mateix domini. Cada sessi\u00f3 t\u00e9 associat un magatzem de dades mitjan\u00e7ant el array global <code>$_SESSION</code>, en el qual podem emmagatzemar i recuperar informaci\u00f3.</p> <p>La sessi\u00f3 comen\u00e7a en executar un script PHP. Es genera un nou ID i es carreguen les dades del magatzem:</p> Comunicaci\u00f3 amb sessions <p>Les operacions que podem realitzar amb la sessi\u00f3 s\u00f3n:</p> <pre><code>&lt;?php\nsession_start(); // carga la sesi\u00f3n\nsession_regenerate_id(true); // regenera el id\nsession_id() // devuelve el id\n$_SESSION[clave] = valor; // inserci\u00f3n\nsession_destroy(); // destruye la sesi\u00f3n\nunset($_SESSION[clave]; // borrado\n</code></pre> <p>Veurem mitjan\u00e7ant un exemple com podem inserir en un p\u00e0gina dades en la sessi\u00f3 per a posteriorment en una altra p\u00e0gina accedir a aqueixes dades. Per exemple, en <code>sesion.php</code> tindr\u00edem</p> <pre><code>&lt;?php\n// Iniciar sessi\u00f3\nsession_start();\nsession_regenerate_id(true);\n\n// Establir valors de sessi\u00f3\n$_SESSION['usuari'] = 'JohnDoe';\n$_SESSION['rol'] = 'admin';\n\n?&gt;\n</code></pre> <p>I posteriorment podem accedir a la sessi\u00f3 en <code>sesion1.php</code>:</p> <pre><code>&lt;?php\nsession_start();\n// Recuperar valors de sessi\u00f3\necho 'Usuari: ' . $_SESSION['usuari'] . '&lt;br&gt;';\necho 'Rol: ' . $_SESSION['rol'] . '&lt;br&gt;';\n\n// Tancar sessi\u00f3 de forma segura\nsession_unset();  // Eliminar totes les variables de sessi\u00f3\nsession_destroy();  // Destruir la sessi\u00f3\n?&gt;\n</code></pre> <p>Configurant la sessi\u00f3 en <code>php.ini</code></p> <p>Les seg\u00fcent propietats de <code>php.ini</code> permeten configurar alguns aspectes de la sessi\u00f3:</p> <ul> <li><code>session.save_handler</code>: controlador que gestiona com s'emmagatzema (<code>files</code>)</li> <li><code>session.save_path</code>: ruta on s'emmagatzemen els arxius amb les dades (si tenim un cl\u00faster, podr\u00edem usar <code>/mnt/sessions</code> en tots els servidor de manera que apunten a una carpeta compartida)</li> <li><code>session.name</code>: nom de la sessi\u00f3 (<code>PHSESSID</code>)</li> <li><code>session.acte_start</code>: Es pot fer que s'autocarregue amb cada script. Per defecte est\u00e0 deshabilitat</li> <li><code>session.cookie_lifetime</code>: temps de vida per defecte</li> </ul> <p>M\u00e9s informaci\u00f3 en la documentaci\u00f3 oficial.</p>"},{"location":"03web.html#serialitzacio-en-php","title":"Serialitzaci\u00f3 en PHP","text":"<p>La serialitzaci\u00f3 \u00e9s el proc\u00e9s de convertir una estructura de dades o un objecte en una seq\u00fc\u00e8ncia de car\u00e0cters que pot ser f\u00e0cilment emmagatzemada o transmesa i despr\u00e9s reconstru\u00efda. PHP proporciona dos funcions principals per a aix\u00f2: serialize() i unserialize().</p> <ol> <li>serialize()    La funci\u00f3 serialize() en PHP s'utilitza per a convertir una estructura de dades o un objecte en una representaci\u00f3 de cadena.</li> </ol> <p><pre><code>$data = array(\"a\", \"b\", \"c\");\n$serialized_data = serialize($data);\necho $serialized_data;\n</code></pre> Eixida </p> <pre><code>a:3:{i:0;s:1:\"a\";i:1;s:1:\"b\";i:2;s:1:\"c\";}\n</code></pre> <ol> <li>unserialize()    La funci\u00f3 unserialize() en PHP s'utilitza per a convertir la representaci\u00f3 de cadena serialitzada de nou en una estructura de dades o un objecte.</li> </ol> <pre><code>$original_data = unserialize($serialized_data);\nprint_r($original_data);\n</code></pre> <p>Eixida</p> <pre><code>Array\n(\n    [0] =&gt; a\n    [1] =&gt; b\n    [2] =&gt; c\n)\n</code></pre>"},{"location":"03web.html#utilitzant-amb-sessions","title":"Utilitzant amb Sessions","text":"<p>Les sessions en PHP permeten emmagatzemar informaci\u00f3 d'usuari per ser utilitzada en diverses p\u00e0gines. Pot ser \u00fatil serialitzar dades per a emmagatzemar-les en una sessi\u00f3:</p> <p>Iniciant una sessi\u00f3 i emmagatzemant dades serialitzades:</p> <pre><code>session_start();\nsession_regenerate_id(true);\n\n$data = array(\"a\", \"b\", \"c\");\n$_SESSION['data_serialitzada'] = serialize($data);\n</code></pre> <pre><code>session_start();\n\nif (isset($_SESSION['data_serialitzada'])) {\n$data = unserialize($_SESSION['data_serialitzada']);\nprint_r($data);\n}\n</code></pre> <p>Consideracions de Seguretat: \u00c9s crucial entendre que la funci\u00f3 unserialize() pot ser perillosa si s'usa amb dades que no s\u00f3n de confian\u00e7a, ja que podria portar a l'execuci\u00f3 de codi arbitrari. Per aix\u00f2, mai has de deserialitzar dades que vinguen d'una font desconeguda o no fiable sense validar-les pr\u00e8viament.</p>"},{"location":"03web.html#3autenticacio-dusuaris","title":"3.Autenticaci\u00f3 d'usuaris","text":""},{"location":"03web.html#mecanismes-dautenticacio-dusuaris","title":"Mecanismes d'Autenticaci\u00f3 d'Usuaris","text":"Mecanisme d'Autenticaci\u00f3 Caracter\u00edstiques Avantatges B\u00e0sica (usuari/contrasenya) Es requereix un nom d'usuari i una contrasenya per accedir. F\u00e0cil d'implementar, \u00e0mpliament utilitzada. Cookies Emmagatzema informaci\u00f3 d'autenticaci\u00f3 en el navegador de l'usuari. Persist\u00e8ncia d'inici de sessi\u00f3, personalitzaci\u00f3 d'experi\u00e8ncia. Sessions Mant\u00e9 l'estat d'autenticaci\u00f3 en el servidor amb una identificaci\u00f3 de sessi\u00f3 \u00fanica. Major seguretat, evita la necessitat d'emmagatzemar informaci\u00f3 sensible al client. OAuth Permet als usuaris accedir a recursos sense compartir les seves credencials. Seguretat millorada, experi\u00e8ncia d'usuari simplificada. JWT (JSON Web Token) Utilitza tokens basats en JSON per a l'autenticaci\u00f3. Lliure d'estat, f\u00e0cil de compartir entre diferents serveis. SAML (Security Assertion Markup Language) Utilitza XML per a intercanviar dades d'autenticaci\u00f3 entre l'usuari i el servei. Integraci\u00f3 amb sistemes d'autenticaci\u00f3 empresarial, alt nivell de seguretat. Autenticaci\u00f3 multifactor (MFA) Requereix m\u00faltiples formes de verificaci\u00f3 (per exemple, contrasenya + codi SMS). Seguretat augmentada, redueix el risc de comprom\u00eds de comptes."},{"location":"03web.html#exemple-amb-sessions","title":"Exemple amb sessions","text":"<p>Una sessi\u00f3 estableix una relaci\u00f3 an\u00f2nima amb un usuari particular, de manera que podem saber si \u00e9s el mateix usuari entre dues peticions diferents. Si preparem un sistema de login, podrem saber qui utilitza la nostra aplicaci\u00f3.</p> <p><pre><code>&lt;?php\n// Llista d'usuaris predefinits amb contrasenyes en text pla\n$users = [\n    'user1@example.com' =&gt; 'password1',\n    'user2@example.com' =&gt; 'password2',\n];\n\n// Convertir les contrasenyes a un format encriptat\nforeach ($users as $email =&gt; $password) {\n    $users[$email] = password_hash($password, PASSWORD_BCRYPT);\n}\n\n// Formulari d'autenticaci\u00f3\nif (isset($_POST['login'])) {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    if (isset($users[$email]) &amp;&amp; password_verify($password, $users[$email])) {\n        // L'usuari est\u00e0 autenticat\n        session_start();\n        $_SESSION['user'] = $email;\n        echo \"Login successful. Welcome, \" . $email;\n    } else {\n        // Credencials incorrectes\n        echo \"Invalid email or password.\";\n    }\n}\n?&gt;\n&lt;form method=\"post\"&gt;\n    Email: &lt;input type=\"email\" name=\"email\" required&gt;\n    Password: &lt;input type=\"password\" name=\"password\" required&gt;\n    &lt;button type=\"submit\" name=\"login\"&gt;Login&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> Aquest exemple mostra com mantenir l'estat de la sessi\u00f3 d'un usuari una vegada autenticat.</p> <pre><code>&lt;?php\nsession_start();\n\nif (!isset($_SESSION['user'])) {\n    header(\"Location: login.php\");\n    exit();\n}\n\n// Mostra la p\u00e0gina nom\u00e9s si l'usuari est\u00e0 autenticat\necho \"Welcome, \" . $_SESSION['user'];\n?&gt;\n</code></pre> <p>Finalment, necessitem l'opci\u00f3 de tancar la sessi\u00f3 que col\u00b7loquem en <code>logout.php</code>:</p> <pre><code>&lt;?php\n// Recuperamos la informaci\u00f3n de la sesi\u00f3n\nsession_start();\n\n// Y la destruimos\nsession_destroy();\nheader(\"Location: index.php\");\n?&gt;\n</code></pre> <p>Autenticaci\u00f3 en producci\u00f3</p> <p>En l'actualitat l'autenticaci\u00f3 d'usuari no es realitza gestionant la sessi\u00f3 direcamente, sin\u00f3 que es realitza mitjan\u00e7ant algun framekwork que abstrau tot el proc\u00e9s o la integraci\u00f3 de mecanismes d'autenticaci\u00f3 tipus OAuth, com estudiarem en l'\u00faltima unitat mitjan\u00e7ant Laravel.</p>"},{"location":"03web.html#exemple-amb-cookies","title":"Exemple amb cookies","text":"<pre><code>&lt;?php\n// Llista d'usuaris predefinits amb contrasenyes en text pla\n$users = [\n    'user1@example.com' =&gt; 'password1',\n    'user2@example.com' =&gt; 'password2',\n];\n\n// Convertir les contrasenyes a un format encriptat\nforeach ($users as $email =&gt; $password) {\n    $users[$email] = password_hash($password, PASSWORD_BCRYPT);\n}\n\nif (isset($_POST['login'])) {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    if (isset($users[$email]) &amp;&amp; password_verify($password, $users[$email])) {\n        // Establir una cookie d'autenticaci\u00f3\n        setcookie(\"user\", $email, time() + (86400 * 30), \"/\"); // 86400 = 1 dia\n        echo \"Login successful. Welcome, \" . $email;\n    } else {\n        // Credencials incorrectes\n        echo \"Invalid email or password.\";\n    }\n}\n\n// Llegir la cookie\nif (isset($_COOKIE['user'])) {\n    echo \"Welcome back, \" . $_COOKIE['user'];\n}\n?&gt;\n&lt;form method=\"post\"&gt;\n    Email: &lt;input type=\"email\" name=\"email\" required&gt;\n    Password: &lt;input type=\"password\" name=\"password\" required&gt;\n    &lt;button type=\"submit\" name=\"login\"&gt;Login&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>Seguretat en cookies</p> <p>Les cookies s\u00f3n vulnerables a atacs com Cross-Site Scripting (XSS) i Cross-Site Request Forgery (CSRF). Per a protegir-les, s'ha de configurar la cookie com a segura i nom\u00e9s accessible a trav\u00e9s de la web.</p>"},{"location":"03web.html#exemple-amb-jwt","title":"Exemple amb JWT","text":"<p>Aquest exemple mostra com generar i verificar un JWT per a l'autenticaci\u00f3.</p> <pre><code>&lt;?php\nfunction base64UrlEncode($data) {\n    return rtrim(strtr(base64_encode($data), '+/', '-_'), '=');\n}\n\nfunction base64UrlDecode($data) {\n    return base64_decode(strtr($data, '-_', '+/'));\n}\n\nfunction createJWT($header, $payload, $secret) {\n    $headerEncoded = base64UrlEncode(json_encode($header));\n    $payloadEncoded = base64UrlEncode(json_encode($payload));\n\n    $signature = hash_hmac('sha256', \"$headerEncoded.$payloadEncoded\", $secret, true);\n    $signatureEncoded = base64UrlEncode($signature);\n\n    return \"$headerEncoded.$payloadEncoded.$signatureEncoded\";\n}\n\nfunction verifyJWT($jwt, $secret) {\n    list($headerEncoded, $payloadEncoded, $signatureEncoded) = explode('.', $jwt);\n\n    $signature = base64UrlDecode($signatureEncoded);\n    $expectedSignature = hash_hmac('sha256', \"$headerEncoded.$payloadEncoded\", $secret, true);\n\n    if ($signature === $expectedSignature) {\n        return json_decode(base64UrlDecode($payloadEncoded));\n    }\n\n    return false;\n}\n\n// Exemples d'\u00fas\n$header = ['alg' =&gt; 'HS256', 'typ' =&gt; 'JWT'];\n$payload = ['email' =&gt; 'user1@example.com', 'exp' =&gt; time() + 3600];\n$secret = 'your_secret_key';\n\n$jwt = createJWT($header, $payload, $secret);\necho \"JWT: \" . $jwt . \"\\n\";\n\n$decoded = verifyJWT($jwt, $secret);\nif ($decoded) {\n    echo \"JWT valid: \" . json_encode($decoded) . \"\\n\";\n} else {\n    echo \"Invalid JWT.\\n\";\n}\n?&gt;\n</code></pre>"},{"location":"03web.html#exemple-amb-mfa","title":"Exemple amb MFA","text":"<p>Aquest exemple mostra com afegir una capa addicional d'autenticaci\u00f3 amb un codi MFA.</p> <pre><code>&lt;?php\nsession_start();\n\nfunction sendMFACode() {\n    $code = rand(100000, 999999);\n    $_SESSION['mfa_code'] = $code;\n\n    // Simular enviament de codi via email o SMS\n    echo \"Verification code: $code\"; // En un entorn real, envia el codi per email o SMS.\n}\n\nfunction verifyMFACode($inputCode) {\n    return isset($_SESSION['mfa_code']) &amp;&amp; $inputCode == $_SESSION['mfa_code'];\n}\n\nif (isset($_POST['send_code'])) {\n    sendMFACode();\n}\n\nif (isset($_POST['verify_code'])) {\n    if (verifyMFACode($_POST['mfa_code'])) {\n        echo \"MFA successful.\";\n    } else {\n        echo \"Invalid verification code.\";\n    }\n}\n?&gt;\n&lt;form method=\"post\"&gt;\n    &lt;button type=\"submit\" name=\"send_code\"&gt;Send MFA Code&lt;/button&gt;\n&lt;/form&gt;\n&lt;form method=\"post\"&gt;\n    MFA Code: &lt;input type=\"text\" name=\"mfa_code\" required&gt;\n    &lt;button type=\"submit\" name=\"verify_code\"&gt;Verify MFA Code&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"03web.html#exemple-amb-oauth","title":"Exemple amb OAuth","text":"<p>Per a OAuth, es pot utilitzar un prove\u00efdor extern com Google per autenticar els usuaris. Ho vorem m\u00e9s avant.</p> <pre><code>&lt;?php\nrequire_once 'vendor/autoload.php';\n\n$provider = new League\\OAuth2\\Client\\Provider\\Google([\n    'clientId'     =&gt; 'your-client-id',\n    'clientSecret' =&gt; 'your-client-secret',\n    'redirectUri'  =&gt; 'your-redirect-url',\n]);\n\nif (!isset($_GET['code'])) {\n    $authUrl = $provider-&gt;getAuthorizationUrl();\n    $_SESSION['oauth2state'] = $provider-&gt;getState();\n    header('Location: ' . $authUrl);\n    exit;\n} elseif (empty($_GET['state']) || ($_GET['state'] !== $_SESSION['oauth2state'])) {\n    unset($_SESSION['oauth2state']);\n    exit('Invalid state');\n} else {\n    $token = $provider-&gt;getAccessToken('authorization_code', [\n        'code' =&gt; $_GET['code']\n    ]);\n\n    $user = $provider-&gt;getResourceOwner($token);\n    $userData = $user-&gt;toArray();\n\n    // Mostra la informaci\u00f3 de l'usuari\n    echo 'Hello, ' . $userData['name'];\n}\n?&gt;\n</code></pre>"},{"location":"03web.html#4-referencies-addicionals","title":"4. Refer\u00e8ncies Addicionals","text":"<p>A continuaci\u00f3 es presenten diverses refer\u00e8ncies que poden ajudar-te a aprofundir en el tema de la gesti\u00f3 de sessions i cookies en PHP.</p>"},{"location":"03web.html#documentacio-oficial-de-php","title":"Documentaci\u00f3 Oficial de PHP","text":"<ul> <li> <p>Sessions a PHP: La documentaci\u00f3 oficial de PHP proporciona informaci\u00f3 detallada sobre l'\u00fas de sessions, incloent-hi exemples pr\u00e0ctics i consells de millors pr\u00e0ctiques.</p> <ul> <li>Sessions a PHP</li> </ul> </li> <li> <p>Cookies a PHP: Trobar\u00e0s informaci\u00f3 oficial sobre com treballar amb cookies en PHP, amb descripcions d'atributs com <code>HttpOnly</code>, <code>Secure</code> i <code>SameSite</code>.</p> <ul> <li>Cookies a PHP</li> </ul> </li> </ul>"},{"location":"03web.html#articles-i-blocs-tecnics","title":"Articles i Blocs T\u00e8cnics","text":"<ul> <li> <p>PHP Sessions: Tips &amp; Tricks: Aquest article discuteix t\u00e8cniques avan\u00e7ades per gestionar sessions en PHP, amb exemples i millors pr\u00e0ctiques per a la seguretat.</p> <ul> <li>PHP Sessions: Tips &amp; Tricks</li> </ul> </li> <li> <p>Handling Cookies Securely in PHP: Una guia sobre com manejar cookies de manera segura, destacant estrat\u00e8gies per protegir les dades de l'usuari.</p> <ul> <li>Handling Cookies Securely in PHP</li> </ul> </li> </ul>"},{"location":"03web.html#llibres-sobre-php","title":"Llibres sobre PHP","text":"<ul> <li> <p>\"Modern PHP: New Features and Good Practices\" de Josh Lockhart: Aquest llibre cobreix les novetats de PHP i les millors pr\u00e0ctiques, incloent la seguretat de sessions i cookies.</p> </li> <li> <p>\"PHP Objects, Patterns, and Practice\" de M. Zandstra: Proporciona una visi\u00f3 profunda sobre el disseny de programari amb PHP, incloent-hi aspectes de seguretat relacionats amb sessions i cookies.</p> </li> </ul>"},{"location":"03web.html#guies-de-seguretat-en-desenvolupament-web","title":"Guies de Seguretat en Desenvolupament Web","text":"<ul> <li> <p>OWASP Secure Coding Practices: Aquesta guia de OWASP ofereix una r\u00e0pida refer\u00e8ncia sobre les millors pr\u00e0ctiques de codificaci\u00f3 segura, \u00fatils per a protegir les teves aplicacions web.</p> <ul> <li>OWASP Secure Coding Practices</li> </ul> </li> <li> <p>OWASP Cheat Sheet on Session Management: Una fitxa de refer\u00e8ncia r\u00e0pida de OWASP sobre la gesti\u00f3 de sessions, proporcionant consells de seguretat essencials.</p> <ul> <li>OWASP Cheat Sheet on Session Management</li> </ul> </li> </ul>"},{"location":"03web.html#conferencies-i-videos-educatius","title":"Confer\u00e8ncies i V\u00eddeos Educatius","text":"<ul> <li> <p>PHP Conference YouTube Channel: El canal de YouTube de PHP Conference ofereix v\u00eddeos de confer\u00e8ncies i xerrades que cobreixen una varietat de temes, incloent sessions i seguretat.</p> <ul> <li>PHP Conference YouTube Channel</li> </ul> </li> <li> <p>Laracasts: Ofereix v\u00eddeos d'alta qualitat sobre desenvolupament en PHP i Laravel, amb temes rellevants per a sessions i cookies.</p> <ul> <li>Laracasts</li> </ul> </li> </ul>"},{"location":"03web.html#tutorials-online-i-plataformes-educatives","title":"Tutorials Online i Plataformes Educatives","text":"<ul> <li> <p>Stack Overflow PHP Sessions Tag: Un lloc de consulta on trobar respostes a preguntes freq\u00fcents sobre la gesti\u00f3 de sessions en PHP.</p> <ul> <li>Stack Overflow PHP Sessions Tag</li> </ul> </li> <li> <p>Cursos a Udemy sobre PHP: Cursos que cobreixen des de conceptes b\u00e0sics fins a avan\u00e7ats de PHP, incloent-hi la gesti\u00f3 de sessions i cookies.</p> <ul> <li>Cursos a Udemy sobre PHP</li> </ul> </li> </ul>"},{"location":"03web.html#5exercicis","title":"5.Exercicis","text":""},{"location":"03web.html#bateria-dexercicis-solucionats-per-a-la-unitat-de-programacio-web","title":"Bateria d'Exercicis Solucionats per a la Unitat de Programaci\u00f3 web","text":""},{"location":"03web.html#exercici-1-crear-una-sessio","title":"Exercici 1: Crear una sessi\u00f3","text":"<p>1.Crea una p\u00e0gina PHP que inicialitze una sessi\u00f3 i emmagatzeme el nom i el rol d'un usuari en variables de sessi\u00f3. Mostra aquests valors a la p\u00e0gina web.</p> Soluci\u00f3 <pre><code>&lt;?php\n// Iniciar sessi\u00f3\nsession_start();\n\n// Emmagatzemar informaci\u00f3 de l'usuari en la sessi\u00f3\n$_SESSION['nom'] = 'Joan';\n$_SESSION['rol'] = 'Administrador';\n\necho 'Benvingut, ' . $_SESSION['nom'] . '&lt;br&gt;';\necho 'Rol: ' . $_SESSION['rol'] . '&lt;br&gt;';\n?&gt;\n</code></pre>"},{"location":"03web.html#exercici-2-regenerar-lid-de-sessio","title":"Exercici 2: Regenerar l'ID de sessi\u00f3","text":"<ol> <li>Modifica l'exercici anterior per regenerar l'ID de sessi\u00f3 just despr\u00e9s d'emmagatzemar la informaci\u00f3 de l'usuari.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Iniciar sessi\u00f3\nsession_start();\n\n// Emmagatzemar informaci\u00f3 de l'usuari en la sessi\u00f3\n$_SESSION['nom'] = 'Joan';\n$_SESSION['rol'] = 'Administrador';\n\n// Regenerar l'ID de sessi\u00f3\nsession_regenerate_id(true);\n\necho 'Benvingut, ' . $_SESSION['nom'] . '&lt;br&gt;';\necho 'Rol: ' . $_SESSION['rol'] . '&lt;br&gt;';\n?&gt;\n</code></pre>"},{"location":"03web.html#exercici-3-tancar-la-sessio","title":"Exercici 3: Tancar la sessi\u00f3","text":"<ol> <li>Escriu un script PHP que elimine totes les variables de sessi\u00f3 i destrueixi la sessi\u00f3 quan l'usuari tanqui sessi\u00f3.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Iniciar sessi\u00f3\nsession_start();\n\n// Eliminar totes les variables de sessi\u00f3\nsession_unset();\n\n// Destruir la sessi\u00f3\nsession_destroy();\n?&gt;\n</code></pre>"},{"location":"03web.html#exercici-4-crear-una-cookie-segura","title":"Exercici 4: Crear una cookie segura","text":"<ol> <li>Escriu un script PHP per crear una cookie que emmagatzeme el nom d'usuari amb els atributs de seguretat <code>HttpOnly</code>, <code>Secure</code> i <code>SameSite</code>.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Crear una cookie segura\nsetcookie(\n    'nom_usuari',\n    'Joan',\n    [\n        'expires' =&gt; time() + 3600, // 1 hora\n        'path' =&gt; '/',\n        'domain' =&gt; '', // Domini actual\n        'secure' =&gt; true, // Nom\u00e9s HTTPS\n        'httponly' =&gt; true, // Nom\u00e9s accessible via HTTP\n        'samesite' =&gt; 'Lax' // o 'Strict' o 'None'\n    ]\n);\n?&gt;\n</code></pre>"},{"location":"03web.html#exercici-5-llegir-i-modificar-una-cookie","title":"Exercici 5: Llegir i modificar una cookie","text":"<ol> <li>Crea una p\u00e0gina PHP que llegeixca el valor d'una cookie anomenada <code>nom_usuari</code> i la modifique afegint un prefix de salutaci\u00f3.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Llegir el valor de la cookie\nif (isset($_COOKIE['nom_usuari'])) {\n    $nomUsuari = $_COOKIE['nom_usuari'];\n    echo 'Hola, ' . $nomUsuari;\n\n    // Modificar el valor de la cookie\n    $salutacio = 'Hola, ' . $nomUsuari;\n    setcookie('nom_usuari', $salutacio, time() + 3600, '/');\n} else {\n    echo 'Cookie not found.';\n}\n?&gt;\n</code></pre>"},{"location":"03web.html#exercici-6-aplicacio-de-gestio-dusuaris-amb-sessions","title":"Exercici 6: Aplicaci\u00f3 de gesti\u00f3 d'usuaris amb sessions","text":"<ol> <li>Desenvolupa una aplicaci\u00f3 PHP amb dos scripts: un per iniciar sessi\u00f3 i un altre per tancar sessi\u00f3. L'aplicaci\u00f3 ha de permetre que l'usuari introdueixca el seu nom d'usuari i vega un missatge de benvinguda una vegada haja iniciat sessi\u00f3.</li> </ol> Soluci\u00f3 <pre><code>&lt;!-- login.php --&gt;\n&lt;?php\nsession_start();\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n$nomUsuari = $_POST['nom_usuari'];\n\n    // Emmagatzemar el nom d'usuari en la sessi\u00f3\n    $_SESSION['nom_usuari'] = $nomUsuari;\n\n    // Redireccionar a la p\u00e0gina de benvinguda\n    header('Location: welcome.php');\n    exit();\n}\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Iniciar Sessi\u00f3&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h2&gt;Iniciar Sessi\u00f3&lt;/h2&gt;\n    &lt;form method=\"post\" action=\"login.php\"&gt;\n        &lt;label for=\"nom_usuari\"&gt;Nom d'usuari:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"nom_usuari\" name=\"nom_usuari\" required&gt;\n        &lt;button type=\"submit\"&gt;Iniciar Sessi\u00f3&lt;/button&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <pre><code>&lt;!-- logout.php --&gt;\n&lt;?php\nsession_start();\n\n// Tancar sessi\u00f3 de forma segura\nsession_unset();\nsession_destroy();\n\n// Redireccionar a la p\u00e0gina de login\nheader('Location: login.php');\nexit();\n?&gt;\n</code></pre> <pre><code>&lt;!-- wellcome.php --&gt;\n&lt;?php\nsession_start();\n\nif (!isset($_SESSION['nom_usuari'])) {\n    // Redireccionar a la p\u00e0gina de login si no s'ha iniciat sessi\u00f3\n    header('Location: login.php');\n    exit();\n}\n\n$nomUsuari = $_SESSION['nom_usuari'];\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Benvingut&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h2&gt;Benvingut, &lt;?php echo htmlspecialchars($nomUsuari); ?&gt;!&lt;/h2&gt;\n    &lt;p&gt;Aquesta \u00e9s la teva p\u00e0gina de benvinguda.&lt;/p&gt;\n    &lt;a href=\"logout.php\"&gt;Tancar Sessi\u00f3&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"03web.html#exercici-7-aplicacio-de-gestio-de-preferencies-amb-cookies","title":"Exercici 7: Aplicaci\u00f3 de gesti\u00f3 de prefer\u00e8ncies amb cookies","text":"<ol> <li>Crea una aplicaci\u00f3 PHP que permeta als usuaris seleccionar el seu color preferit, emmagatzemant aquesta informaci\u00f3 en una cookie. La p\u00e0gina hauria de mostrar el color preferit de l'usuari en futures visites.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Llegir el color preferit de la cookie\n$colorPreferit = isset($_COOKIE['color_preferit']) ? $_COOKIE['color_preferit'] : 'blau';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $colorPreferit = $_POST['color_preferit'];\n\n    // Emmagatzemar el color preferit en una cookie\n    setcookie('color_preferit', $colorPreferit, time() + 3600, '/');\n}\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Prefer\u00e8ncies de Color&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=\"background-color: &lt;?php echo $colorPreferit; ?&gt;\"&gt;\n    &lt;h2&gt;Prefer\u00e8ncies de Color&lt;/h2&gt;\n    &lt;form method=\"post\"&gt;\n        &lt;label for=\"color_preferit\"&gt;Color preferit:&lt;/label&gt;\n        &lt;select id=\"color_preferit\" name=\"color_preferit\"&gt;\n            &lt;option value=\"blau\" &lt;?php if ($colorPreferit === 'blau') echo 'selected'; ?&gt;&gt;Blau&lt;/option&gt;\n            &lt;option value=\"vermell\" &lt;?php if ($colorPreferit === 'vermell') echo 'selected'; ?&gt;&gt;Vermell&lt;/option&gt;\n            &lt;option value=\"verd\" &lt;?php if ($colorPreferit === 'verd') echo 'selected'; ?&gt;&gt;Verd&lt;/option&gt;\n        &lt;/select&gt;\n        &lt;button type=\"submit\"&gt;Guardar&lt;/button&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"03web.html#exercicis-proposats","title":"Exercicis proposats","text":""},{"location":"03web.html#exercici-1-sistema-de-carret-de-compres-sense-base-de-dades","title":"Exercici 1: Sistema de Carret de Compres sense Base de Dades","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Desenvolupa una aplicaci\u00f3 PHP que permeta als usuaris afegir productes a un carret de compres i mostrar el contingut del carret. Utilitza sessions per a mantindre l'estat del carret entre p\u00e0gines.</p> <ol> <li>Requisits:<ul> <li>Crear una p\u00e0gina on l'usuari puga seleccionar productes.</li> <li>Afegir els productes seleccionats a un carret emmagatzemat en una sessi\u00f3.</li> <li>Mostrar un resum del carret amb els productes afegits i les seues quantitats.</li> <li>Permetre que l'usuari elimine productes del carret.</li> </ul> </li> </ol> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Selecci\u00f3 de productes&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Afegir productes al carret&lt;/h1&gt;\n    &lt;form action=\"carret.php\" method=\"POST\"&gt;\n        &lt;label for=\"producte\"&gt;Tria un producte:&lt;/label&gt;\n        &lt;select name=\"producte\" id=\"producte\"&gt;\n            &lt;option value=\"Poma\"&gt;Poma&lt;/option&gt;\n            &lt;option value=\"Pl\u00e0tan\"&gt;Pl\u00e0tan&lt;/option&gt;\n            &lt;option value=\"Taronja\"&gt;Taronja&lt;/option&gt;\n        &lt;/select&gt;\n        &lt;input type=\"submit\" value=\"Afegir al carret\"&gt;\n    &lt;/form&gt;\n    &lt;a href=\"carret.php\"&gt;Veure carret&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"03web.html#exercici-2-autenticacio-basica-dusuaris-amb-sessions","title":"Exercici 2: Autenticaci\u00f3 B\u00e0sica d'Usuaris amb Sessions","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Crea una aplicaci\u00f3 PHP que permeta als usuaris iniciar sessi\u00f3 mitjan\u00e7ant un formulari. Utilitza sessions per a mantindre l'estat d'autenticaci\u00f3 de l'usuari i mostrar missatges personalitzats basats en aquest estat.</p> <ol> <li>Requisits:<ul> <li>Crear un formulari d'inici de sessi\u00f3 que sol\u00b7licite el nom d'usuari i la contrasenya.</li> <li>Emmagatzemar l'estat d'autenticaci\u00f3 en una sessi\u00f3 despr\u00e9s de verificar les credencials.</li> <li>Mostrar una p\u00e0gina de benvinguda personalitzada per a l'usuari autenticat.</li> <li>Proporcionar un enlla\u00e7 per a tancar sessi\u00f3 i destruir la sessi\u00f3.</li> </ul> </li> </ol>"},{"location":"03web.html#exercici-3-recordatori-dusuari-amb-cookies","title":"Exercici 3: Recordatori d'Usuari amb Cookies","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Afig una funcionalitat de \"recordar-me\" a l'exercici anterior que emmagatzeme el nom d'usuari en una cookie i permeta a l'usuari ser recordat en futures visites al lloc web.</p> <ol> <li>Requisits:<ul> <li>Afig una opci\u00f3 de \"recordar-me\" al formulari d'inici de sessi\u00f3.</li> <li>Emmagatzemar el nom d'usuari en una cookie quan l'opci\u00f3 \u00e9s seleccionada.</li> <li>Comprovar la cookie en futures visites i iniciar sessi\u00f3 autom\u00e0ticament si la cookie existeix.</li> <li>Assegurar que les cookies es configuren amb atributs de seguretat adequats (<code>HttpOnly</code>, <code>Secure</code>, <code>SameSite</code>).</li> </ul> </li> </ol>"},{"location":"03web.html#exercici-4-formulari-de-contacte-amb-proteccio-csrf","title":"Exercici 4: Formulari de Contacte amb Protecci\u00f3 CSRF","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Desenvolupa un formulari de contacte que permeta als usuaris enviar missatges i implementa protecci\u00f3 CSRF per a assegurar que les sol\u00b7licituds siguen leg\u00edtimes.</p> <ol> <li>Requisits:<ul> <li>Crear un formulari de contacte amb camps per al nom, correu electr\u00f2nic i missatge.</li> <li>Generar i emmagatzemar un token CSRF en una sessi\u00f3 quan es carrega el formulari.</li> <li>Incloure el token CSRF com a camp ocult en el formulari.</li> <li>Verificar el token CSRF quan s'envia el formulari i mostrar un missatge de confirmaci\u00f3 si \u00e9s v\u00e0lid.</li> <li>Mostrar un missatge d'error si el token CSRF no \u00e9s v\u00e0lid o no existeix.</li> </ul> </li> </ol>"},{"location":"03web.html#exercici-5-seguiment-dactivitat-de-lusuari-amb-sessions","title":"Exercici 5: Seguiment d'Activitat de l'Usuari amb Sessions","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Crea un sistema que registre les p\u00e0gines visitades per l'usuari durant una sessi\u00f3 i mostre aquesta informaci\u00f3 quan l'usuari visita una p\u00e0gina d'activitat.</p> <ol> <li>Requisits:<ul> <li>Emmagatzemar una llista de p\u00e0gines visitades per l'usuari en una sessi\u00f3.</li> <li>Actualitzar la llista de p\u00e0gines cada vegada que l'usuari visite una nova p\u00e0gina.</li> <li>Crear una p\u00e0gina que mostre l'historial de p\u00e0gines visitades durant la sessi\u00f3 actual.</li> <li>Assegurar que l'historial es restableix quan l'usuari tanca la sessi\u00f3.</li> </ul> </li> </ol>"},{"location":"03web.html#solucions","title":"Solucions","text":""},{"location":"03web.html#6-enunciats-dels-projectes","title":"6. Enunciats dels projectes","text":""},{"location":"03web.html#per-als-dos-projectes","title":"Per als dos projectes","text":"<ol> <li>Autenticaci\u00f3 de Jugadors:<ul> <li>Implementa un sistema d'autenticaci\u00f3 b\u00e0sic que permeta als jugadors iniciar sessi\u00f3 abans de comen\u00e7ar el joc. Utilitza sessions per a mantindre l'estat d'autenticaci\u00f3.</li> <li>Ha de servir per als dos jocs, \"Penjat\" i \"4 en Ratlla\".</li> <li>Fes que una vegada autenticar l'usuari puga triar a quin joc vol jugar (en la mateix p\u00e0gina).</li> <li>Protegeix els jocs per tal que no es puga jugar en cas de no estar autenticat.</li> </ul> </li> </ol>"},{"location":"03web.html#projecte-penjat","title":"Projecte Penjat","text":"<ol> <li> <p>Manteniment de l'Estat del Joc amb Sessions:</p> <ul> <li>Utilitza sessions per a emmagatzemar l'estat actual del joc, incloent la paraula a endevinar, lletres endevinades, i el nombre d'intents restants.</li> </ul> </li> <li> <p>Gesti\u00f3 de la Sessi\u00f3 del Joc:</p> <ul> <li>Afegeix funcionalitats per a reiniciar el joc en qualsevol moment, reinicialitzant les variables de sessi\u00f3 per a comen\u00e7ar una nova partida.</li> <li>Afegeix una opci\u00f3 per a tancar sessi\u00f3 i finalitzar la partida actual.</li> <li>Afegeix un funci\u00f3 per a saver si el joc ha acabat, ja siga perqu\u00e8 s'han endevinat totes les lletres o s'haguen arribat al m\u00e0xim n\u00famero d'intents permesos.</li> <li>Controla el final del joc</li> </ul> </li> <li> <p>Cookies per a Recordar Jugadors:</p> <ul> <li>Implementa cookies per a recordar els jugadors entre visites, permetent que l'usuari siga recordat si selecciona una opci\u00f3 de \"Recordar-me\" durant l'inici de sessi\u00f3.</li> </ul> </li> <li> <p>Seguretat i Autenticaci\u00f3:</p> <ul> <li>Implementa un sistema d'autenticaci\u00f3 b\u00e0sic per a garantir que nom\u00e9s els jugadors autenticats puguen accedir al joc.</li> <li>Utilitza sessions per a mantenir l'estat d'autenticaci\u00f3 i controlar l'acc\u00e9s a les funcionalitats del joc.</li> </ul> </li> </ol>"},{"location":"03web.html#consideracions-addicionals","title":"Consideracions Addicionals","text":"<ul> <li>Resili\u00e8ncia del Joc: Implementa la l\u00f2gica necess\u00e0ria per a manejar intents inv\u00e0lids i mostrar missatges d'error adequats.</li> <li>Millores d'Interf\u00edcie: Afegix un enlla\u00e7 o bot\u00f3 per a tancar sessi\u00f3 i una opci\u00f3 per a reiniciar el joc.</li> </ul>"},{"location":"03web.html#projecte-4-en-ratlla","title":"Projecte \"4 en Ratlla\"","text":"<ol> <li> <p>Gesti\u00f3 de l'Estat de la Graella amb Sessions:</p> <ul> <li>Utilitza sessions per a emmagatzemar l'estat actual de la graella i el torn del jugador. Aix\u00f2 permet mantenir la partida entre sol\u00b7licituds.</li> </ul> </li> <li> <p>Manteniment de la Sessi\u00f3 entre Jugadors:</p> <ul> <li>Emmagatzema l'identificador de cada jugador en sessions per a assegurar que el torn actual siga persistent entre sol\u00b7licituds.</li> <li>Afegeix funcionalitats per a reiniciar el joc en qualsevol moment, reinicialitzant les variables de sessi\u00f3 per a comen\u00e7ar una nova partida.</li> <li>Afegeix una opci\u00f3 per a tancar sessi\u00f3 i finalitzar la partida actual.</li> <li>Afegeix un funci\u00f3 per a saver si el joc ha acabat, ja siga perqu\u00e8 s'ha fet 4 en ratlla  o s'haja completat el tauler.</li> <li>Controla el final del joc.</li> </ul> </li> <li> <p>Cookies per a la Persist\u00e8ncia d'Usuaris:</p> <ul> <li>Permet l'\u00fas de cookies per a recordar els jugadors entre visites si han seleccionat \"Recordar-me\". Utilitza cookies per a emmagatzemar l'\u00faltim jugador autenticat.</li> </ul> </li> <li> <p>Seguretat i Autenticaci\u00f3:</p> <ul> <li>Implementa un sistema d'autenticaci\u00f3 b\u00e0sic per a garantir que nom\u00e9s els jugadors autenticats puguen accedir al joc.</li> <li>Utilitza sessions per a mantenir l'estat d'autenticaci\u00f3 i controlar l'acc\u00e9s a les funcionalitats del joc.</li> </ul> </li> <li> <p>Addicional</p> <ul> <li>Implementa la l\u00f2gica per tal que el segon jugador siga la m\u00e0quina (pots adaptar i/o millorar l'algorisme de baix).</li> <li>Controla el joc per a que no es puga seguir jugant una vegada acabat.</li> <li>Implementa un sistema de puntuaci\u00f3 que otorgue 2 punts al guanyador i 1 a cadasc\u00fa en cas d'empat.</li> </ul> </li> </ol> <pre><code>function jugar(&amp;$graella,$jugadorActual){\n\n       $opponent = $jugadorActual === 1 ? 2 : 1;\n\n       // Comprovar si pots guanyar\n       for ($col = 1; $col &lt;= COLUMNES; $col++) {\n           if (isValidMove($graella, $col)) {\n               $tempBoard = $graella;\n               $coord = ferMoviment($tempBoard, $col, $jugadorActual);\n\n               if (fi_joc($tempBoard, $coord)) {\n                   return ferMoviment($graella,$col,$jugadorActual); // Guanyar immediatament\n               }\n           }\n       }\n\n       // Comprovar si l'oponent pot guanyar i bloquejar\n       for ($col = 1; $col &lt;= COLUMNES; $col++) {\n           if (isValidMove($graella, $col)) {\n               $tempBoard = $graella;\n               $coord = ferMoviment($tempBoard, $col, $opponent);\n               if (fi_joc($tempBoard, $coord )) {\n                   return ferMoviment($graella,$col,$jugadorActual); // Bloquejar\n               }\n           }\n       }\n\n       // Estrat\u00e8gia: buscar el millor moviment\n       // Podem afegir m\u00e9s l\u00f2gica aqu\u00ed per seleccionar el millor moviment\n       $possibles = array();\n       for ($col = 1; $col &lt;= COLUMNES; $col++) {\n           if (isValidMove($graella, $col)) {\n               $possibles[] = $col; \n           }\n       }\n       if (count($possibles)&gt;2) {\n           $random = rand(-1,1);\n       }\n       $middle = (int) (count($possibles) / 2)+$random;\n       $inthemiddle = $possibles[$middle];\n       return ferMoviment($graella, $inthemiddle, $jugadorActual); \n\n       return -1; // Totes les columnes estan plenes\n}\n</code></pre>"},{"location":"03web.html#consideracions-addicionals_1","title":"Consideracions Addicionals","text":"<ul> <li>L\u00f2gica de Torn de Jugadors: Implementa la l\u00f2gica necess\u00e0ria per a canviar de torn entre els jugadors utilitzant sessions.</li> <li>Reinici de Partida: Afegeix una opci\u00f3 per a reiniciar el joc, que ha de restablir les sessions i permetre comen\u00e7ar de nou.</li> <li>Interf\u00edcie d'Usuari Amigable: Assegura't que la interf\u00edcie d'usuari \u00e9s clara i proporciona indicacions visuals dels moviments i torns dels jugadors.</li> </ul>"},{"location":"03web.html#rubrica-davaluacio","title":"R\u00fabrica d'Avaluaci\u00f3","text":"Criteri Excel\u00b7lent (4) B\u00e9 (3) Adequat (2) Insuficient (1) Funcionalitat del Joc El joc est\u00e0 completament funcional i sense errors. El joc est\u00e0 majorit\u00e0riament funcional amb errors m\u00ednims. El joc \u00e9s funcional, per\u00f2 cont\u00e9 errors significatius. El joc no \u00e9s funcional o est\u00e0 incomplet. \u00das de Sessions Sessions ben implementades per a mantenir l'estat del joc. Sessions utilitzades correctament amb alguns problemes menors. Sessions utilitzades, per\u00f2 amb defici\u00e8ncies importants. No s'han utilitzat sessions o s\u00f3n incorrectes. \u00das de Cookies Cookies ben utilitzades per a recordar els jugadors. Cookies utilitzades adequadament amb algunes millores possibles. Cookies utilitzades amb limitacions evidents. No s'han utilitzat cookies o s\u00f3n incorrectes. Autenticaci\u00f3 d'Usuaris Autenticaci\u00f3 segura i efectiva implementada. Autenticaci\u00f3 implementada amb alguns problemes. Autenticaci\u00f3 present per\u00f2 amb defici\u00e8ncies notables. No s'ha implementat autenticaci\u00f3 o \u00e9s incorrecta. Interf\u00edcie d'Usuari Interf\u00edcie atractiva i f\u00e0cil d'utilitzar. Interf\u00edcie clara amb algunes millores possibles. Interf\u00edcie funcional per\u00f2 poc intu\u00eftiva. Interf\u00edcie confusa i dif\u00edcil d'utilitzar. Seguretat Totes les mesures de seguretat implementades correctament. Seguretat adequada amb algunes millores possibles. Mesures de seguretat b\u00e0siques implementades. No s'han tingut en compte mesures de seguretat. Comentaris i Codi Codi ben comentat i f\u00e0cilment llegible. Codi clar amb comentaris adequats. Codi llegible per\u00f2 amb pocs comentaris. Codi desordenat i sense comentaris. Innovaci\u00f3 i Creativitat El projecte mostra innovaci\u00f3 significativa. Algunes idees creatives han estat implementades. Alguna creativitat present, per\u00f2 limitada. Cap creativitat o innovaci\u00f3 en el projecte. Punts addicionals 1 punt per cadasc\u00fana aconseguida."},{"location":"03web.html#explicacio-dels-criteris","title":"Explicaci\u00f3 dels Criteris","text":""},{"location":"03web.html#funcionalitat-del-joc","title":"Funcionalitat del Joc","text":"<ul> <li> <p>Excel\u00b7lent (4): El joc funciona completament segons les especificacions, amb totes les funcionalitats implementades i sense errors. Els jugadors poden interaccionar amb el joc tal com s'esperava i totes les accions es realitzen correctament.</p> </li> <li> <p>Insuficient (1): El joc no \u00e9s funcional, falten parts importants del codi o el joc no es pot jugar correctament.</p> </li> </ul>"},{"location":"03web.html#us-de-sessions","title":"\u00das de Sessions","text":"<ul> <li> <p>Excel\u00b7lent (4): Les sessions s'utilitzen efica\u00e7ment per a mantenir l'estat del joc i de l'usuari entre sol\u00b7licituds. Les dades de la sessi\u00f3 es gestionen de manera adequada per a preservar l'experi\u00e8ncia de l'usuari.</p> </li> <li> <p>Insuficient (1): No s'han utilitzat sessions o la seva implementaci\u00f3 \u00e9s incorrecta, la qual cosa afecta negativament l'experi\u00e8ncia de l'usuari.</p> </li> </ul>"},{"location":"03web.html#us-de-cookies","title":"\u00das de Cookies","text":"<ul> <li> <p>Excel\u00b7lent (4): Les cookies s'utilitzen de manera efectiva per a recordar els jugadors entre sessions, amb la configuraci\u00f3 adequada d'atributs de seguretat (<code>HttpOnly</code>, <code>Secure</code>, <code>SameSite</code>).</p> </li> <li> <p>Insuficient (1): No s'han utilitzat cookies o la seva implementaci\u00f3 \u00e9s incorrecta, amb una configuraci\u00f3 de seguretat deficient.</p> </li> </ul>"},{"location":"03web.html#autenticacio-dusuaris","title":"Autenticaci\u00f3 d'Usuaris","text":"<ul> <li> <p>Excel\u00b7lent (4): L'autenticaci\u00f3 dels usuaris \u00e9s segura i eficient, amb mecanismes adequats per a validar les credencials i protegir la informaci\u00f3 dels usuaris.</p> </li> <li> <p>Insuficient (1): No s'ha implementat un sistema d'autenticaci\u00f3 o el sistema present \u00e9s insegur i defectu\u00f3s.</p> </li> </ul>"},{"location":"03web.html#interficie-dusuari","title":"Interf\u00edcie d'Usuari","text":"<ul> <li> <p>Excel\u00b7lent (4): La interf\u00edcie d'usuari \u00e9s atractiva, clara i f\u00e0cil de navegar, proporcionant una experi\u00e8ncia d'usuari \u00f2ptima.</p> </li> <li> <p>Insuficient (1): La interf\u00edcie \u00e9s confusa, dif\u00edcil d'utilitzar o inacabada.</p> </li> </ul>"},{"location":"03web.html#seguretat","title":"Seguretat","text":"<ul> <li> <p>Excel\u00b7lent (4): Totes les mesures de seguretat necess\u00e0ries han estat implementades, incloent-hi la validaci\u00f3 de dades d'entrada, protecci\u00f3 CSRF i altres pr\u00e0ctiques de seguretat recomanades.</p> </li> <li> <p>Insuficient (1): No s'han tingut en compte mesures de seguretat, deixant el projecte vulnerable a possibles atacs.</p> </li> </ul>"},{"location":"03web.html#comentaris-i-codi","title":"Comentaris i Codi","text":"<ul> <li> <p>Excel\u00b7lent (4): El codi est\u00e0 ben comentat, \u00e9s llegible i segueix bones pr\u00e0ctiques de programaci\u00f3.</p> </li> <li> <p>Insuficient (1): El codi est\u00e0 desordenat, dif\u00edcil de llegir i manca de comentaris explicatius.</p> </li> </ul>"},{"location":"03web.html#innovacio-i-creativitat","title":"Innovaci\u00f3 i Creativitat","text":"<ul> <li> <p>Excel\u00b7lent (4): El projecte mostra un alt grau d'innovaci\u00f3 i creativitat, oferint caracter\u00edstiques o enfocaments \u00fanics que milloren el joc.</p> </li> <li> <p>Insuficient (1): El projecte manca de creativitat o innovaci\u00f3, seguint \u00fanicament les instruccions b\u00e0siques sense cap valor afegit.</p> </li> </ul>"},{"location":"03web.html#notes-addicionals","title":"Notes Addicionals","text":"<ul> <li>Consist\u00e8ncia del Codi: S'espera que el codi sigui consistent, utilitzant convencions de noms adequades i estructures de codi clares.</li> <li>Adaptaci\u00f3 de les Necessitats: Els criteris poden ser adaptats segons les necessitats espec\u00edfiques del curs o dels projectes individuals.</li> </ul>"},{"location":"03web.html#7-autoavaluacio-gestio-de-sessions-i-cookies","title":"7. Autoavaluaci\u00f3: Gesti\u00f3 de Sessions i Cookies","text":""},{"location":"03web.html#exercici-1-funcions-de-les-cookies","title":"Exercici 1: Funcions de les Cookies","text":""},{"location":"03web.html#pregunta","title":"Pregunta:","text":"<p>Quina \u00e9s la funci\u00f3 principal de les cookies en el context del desenvolupament web?</p>"},{"location":"03web.html#opcions","title":"Opcions:","text":"a) Guardar els fitxers de l'usuari al servidor. b) Emmagatzemar informaci\u00f3 del client per personalitzar l'experi\u00e8ncia d'usuari. c) Executar codi al servidor. d) Controlar la velocitat de la connexi\u00f3 a Internet."},{"location":"03web.html#exercici-2-seguretat-de-les-cookies","title":"Exercici 2: Seguretat de les Cookies","text":""},{"location":"03web.html#pregunta_1","title":"Pregunta:","text":"<p>Quins atributs de seguretat haurien de tindre les cookies per protegir-les contra atacs?</p>"},{"location":"03web.html#opcions_1","title":"Opcions:","text":"a) Secure b) HttpOnly c) SameSite d) CrossSite"},{"location":"03web.html#exercici-3-creacio-de-sessions-en-php","title":"Exercici 3: Creaci\u00f3 de Sessions en PHP","text":""},{"location":"03web.html#pregunta_2","title":"Pregunta:","text":"<p>Quin dels seg\u00fcents passos \u00e9s necessari per iniciar una sessi\u00f3 en PHP?</p>"},{"location":"03web.html#opcions_2","title":"Opcions:","text":"a) Cridar a la funci\u00f3 session_start(). b) Utilitzar la funci\u00f3 session_open(). c) Assignar un valor a la variable $_SESSION. d) No es necessita cap funci\u00f3 especial."},{"location":"03web.html#exercici-4-manteniment-dinformacio-en-sessions","title":"Exercici 4: Manteniment d'Informaci\u00f3 en Sessions","text":""},{"location":"03web.html#pregunta_3","title":"Pregunta:","text":"<p>Com es pot mantindre la informaci\u00f3 d'un usuari durant la sessi\u00f3 d'una aplicaci\u00f3 web?</p>"},{"location":"03web.html#opcions_3","title":"Opcions:","text":"a) Utilitzant la variable global $GLOBALS. b) Utilitzant la variable $_SESSION. c) Utilitzant la variable $_COOKIE. d) Utilitzant arxius temporals al servidor."},{"location":"03web.html#exercici-5-funcions-de-php-per-a-sessions","title":"Exercici 5: Funcions de PHP per a Sessions","text":""},{"location":"03web.html#pregunta_4","title":"Pregunta:","text":"<p>Quina funci\u00f3 de PHP es fa servir per destruir una sessi\u00f3?</p>"},{"location":"03web.html#opcions_4","title":"Opcions:","text":"a) session_destroy() b) session_unset() c) session_delete() d) session_end()"},{"location":"03web.html#exercici-6-avantatges-de-les-sessions","title":"Exercici 6: Avantatges de les Sessions","text":""},{"location":"03web.html#pregunta_5","title":"Pregunta:","text":"<p>Quins s\u00f3n els avantatges d'utilitzar sessions en lloc de cookies per a mantenir l'estat de l'usuari?</p>"},{"location":"03web.html#opcions_5","title":"Opcions:","text":"a) Les sessions poden emmagatzemar m\u00e9s informaci\u00f3 perqu\u00e8 es guarden al servidor. b) Les sessions s\u00f3n m\u00e9s segures perqu\u00e8 no s'envien al client. c) Les sessions redueixen la c\u00e0rrega del servidor. d) Les sessions no necessiten ser configurades amb atributs de seguretat."},{"location":"03web.html#exercici-7-autenticacio-dusuaris","title":"Exercici 7: Autenticaci\u00f3 d'Usuaris","text":""},{"location":"03web.html#pregunta_6","title":"Pregunta:","text":"<p>Quina \u00e9s la pr\u00e0ctica recomanada per assegurar la identitat d'un usuari en una aplicaci\u00f3 web?</p>"},{"location":"03web.html#opcions_6","title":"Opcions:","text":"a) Utilitzar noms d'usuari i contrasenyes emmagatzemades com a cookies. b) Utilitzar sessions per mantenir l'estat d'autenticaci\u00f3 despr\u00e9s d'iniciar sessi\u00f3. c) Emmagatzemar la contrasenya de l'usuari a la URL. d) No utilitzar cap forma d'autenticaci\u00f3."},{"location":"04dades_Laravel.html","title":"SA4. Acc\u00e9s segur i estructurat a bases de dades amb Laravel","text":"Duraci\u00f3 i criteris d'avaluaci\u00f3 <p>Duraci\u00f3 estimada: 20 hores</p> Resultat d'aprenentatge Criteris d'avaluaci\u00f3 RA6.-Desenvolupa aplicacions web d'acc\u00e9s a magatzems de dades, aplicant mesures per a mantindre la seguretat i la integritat de la informaci\u00f3. a) S'han analitzat les tecnologies que permeten l'acc\u00e9s mitjan\u00e7ant programaci\u00f3 a la informaci\u00f3 disponible en magatzems de dades. b) S'han creat aplicacions que establisquen connexions amb bases de dades. c) S'ha recuperat informaci\u00f3 emmagatzemada en bases de dades. d) S'ha publicat en aplicacions web la informaci\u00f3 recuperada. e) S'han utilitzat conjunts de dades per a emmagatzemar la informaci\u00f3. f) S'han creat aplicacions web que permeten l'actualitzaci\u00f3 i l'eliminaci\u00f3 d'informaci\u00f3 disponible en una base de dades. g) S'han provat i documentat les aplicacions web."},{"location":"04dades_Laravel.html#sa-41-connexio-a-la-base-de-dades","title":"SA 4.1 Connexi\u00f3 a la base de dades","text":""},{"location":"04dades_Laravel.html#configuracio-de-la-base-de-dades-en-laravel","title":"\ud83d\udd27 Configuraci\u00f3 de la base de dades en Laravel","text":"<p>Per a poder treballar amb bases de dades en Laravel, el primer pas \u00e9s configurar l\u2019acc\u00e9s al sistema gestor de base de dades (SGBD) que vulguem utilitzar. En aquest cas, farem servir MySQL.</p>"},{"location":"04dades_Laravel.html#1-fitxer-env-i-separacio-de-configuracions","title":"\ud83d\udcc1 1. Fitxer <code>.env</code> i separaci\u00f3 de configuracions","text":"<pre><code>DB_CONNECTION=mysql\nDB_HOST=localhost\nDB_PORT=3306\nDB_DATABASE=nom_base_de_dades\nDB_USERNAME=usuari\nDB_PASSWORD=contrasenya\n</code></pre>"},{"location":"04dades_Laravel.html#2-fitxer-configdatabasephp","title":"\u2699\ufe0f 2. Fitxer <code>config/database.php</code>","text":"<p>Aquest fitxer defineix com Laravel interpreta aquestes variables. Per exemple, a l\u2019inici veur\u00e0s:</p> <pre><code>'default' =&gt; env('DB_CONNECTION', 'mysql'),\n</code></pre> <p>Aix\u00f2 significa que Laravel utilitzar\u00e0 la base de dades especificada a la variable DB_CONNECTION. Si no s\u2019ha definit al .env, utilitzar\u00e0 'mysql' per defecte. M\u00e9s avall, hi ha la secci\u00f3 connections amb les configuracions espec\u00edfiques per a cada tipus de base de dades. Per a MySQL:</p> <pre><code>'mysql' =&gt; [\n'driver' =&gt; 'mysql',\n'host' =&gt; env('DB_HOST', '127.0.0.1'),\n'port' =&gt; env('DB_PORT', '3306'),\n'database' =&gt; env('DB_DATABASE', 'forge'),\n'username' =&gt; env('DB_USERNAME', 'forge'),\n'password' =&gt; env('DB_PASSWORD', ''),\n...\n],\n</code></pre>"},{"location":"04dades_Laravel.html#3-contrasenya-i-parametres-necessaris","title":"\ud83d\udd10 3. Contrasenya i par\u00e0metres necessaris","text":"<p>Perqu\u00e8 Laravel puga connectar-se correctament a la base de dades, \u00e9s necessari configurar correctament els valors seg\u00fcents en el fitxer <code>.env</code>:</p> <ul> <li>L\u2019adre\u00e7a del servidor.</li> <li>El nom de la base de dades.</li> <li>L\u2019usuari.</li> <li>La contrasenya d\u2019acc\u00e9s.</li> </ul> <p>En un entorn local, l\u2019adre\u00e7a del servidor sol ser \u201clocalhost\u201d.</p>"},{"location":"04dades_Laravel.html#4-crear-la-base-de-dades-fora-de-laravel","title":"\ud83e\uddf1 4. Crear la base de dades (fora de Laravel)","text":"<p>Laravel pot crear taules, relacions i introduir dades, per\u00f2 la base de dades com a contenidor l\u2019has de crear pr\u00e8viament de forma manual. Pots fer-ho de dues maneres:</p> <ul> <li>\u2705 Amb una eina gr\u00e0fica com phpMyAdmin (si tens XAMPP, Laragon, etc.).</li> <li>\u2705 Per l\u00ednia de comandes, per exemple:</li> </ul> <p><pre><code>mysql -u root -p\nCREATE DATABASE nom_base_de_dades;\n</code></pre> Una vegada creada, Laravel ja podr\u00e0 accedir-hi i comen\u00e7ar a treballar amb ella (creant taules, inserint dades...).</p>"},{"location":"04dades_Laravel.html#migracions-a-laravel-12","title":"\ud83d\udd04 Migracions a Laravel 12","text":"<p>Les migracions s\u00f3n un sistema de control de versions per a la base de dades. Permeten mantindre un registre dels canvis estructurals que es fan (crear, modificar o eliminar taules i camps), i facilitar que tot l\u2019equip de treball tinga la base de dades sincronitzada. Les migracions funcionen conjuntament amb l\u2019eina Schema Builder per definir l\u2019estructura de la base de dades utilitzant codi PHP.</p>"},{"location":"04dades_Laravel.html#1estructura-i-funcionament","title":"\ud83d\udcc1 1.Estructura i funcionament","text":"<p>Les migracions es troben a la carpeta <code>database/migrations</code>. Cada fitxer inclou un timestamp en el nom, que indica l\u2019ordre d\u2019execuci\u00f3. Cada migraci\u00f3 cont\u00e9 dues funcions:</p> <ul> <li><code>up</code>: per aplicar canvis (crear o modificar taules).</li> <li><code>down</code>: per revertir els canvis aplicats.</li> </ul> <p>Els fitxers de migraci\u00f3 es creen mitjan\u00e7ant Artisan. \u00c9s habitual trobar migracions per defecte en nous projectes Laravel (com la dels usuaris). Aquestes es poden modificar o eliminar segons les necessitats del projecte.</p>"},{"location":"04dades_Laravel.html#2tipus-de-columnes-i-modificadors","title":"\ud83d\udd27 2.Tipus de columnes i modificadors","text":"<p>A l\u2019hora de definir les taules, Laravel proporciona molts tipus de columnes (<code>id</code>, <code>string</code>, <code>text</code>, <code>boolean</code>, <code>timestamp</code>...) i modificadors (<code>nullable</code>, <code>unique</code>, <code>default</code>, <code>after</code>, etc.).</p> <p>Els camps <code>id</code> i <code>timestamps</code> solen afegir-se per defecte:</p> <ul> <li><code>id</code>: clau prim\u00e0ria auto-incremental.</li> <li><code>timestamps</code>: afegeix <code>created_at</code> i <code>updated_at</code>, gestionats autom\u00e0ticament per Laravel.</li> </ul> <p>Per columnes de text llarg, es recomana <code>text</code> o <code>longText</code> en lloc de <code>string</code>, que est\u00e0 limitat a 255 car\u00e0cters.</p> <p>Per a definir claus prim\u00e0ries compostes, es pot utilitzar el m\u00e8tode <code>primary</code>.</p>"},{"location":"04dades_Laravel.html#3crear-una-nova-migracio","title":"\ud83d\udee0\ufe0f 3.Crear una nova migraci\u00f3","text":"<p>Per a generar un fitxer de migraci\u00f3 s\u2019utilitza:</p> <pre><code>php artisan make:migration nom_de_la_migracio\n</code></pre> <p>Laravel analitza el nom de la migraci\u00f3 i, si detecta patrons com <code>create_XXX_table</code> o <code>add_XXX_to_YYY_table</code>, assumeix el tipus d\u2019operaci\u00f3.</p> <p>Tamb\u00e9 es poden especificar directament les opcions:</p> <pre><code>php artisan make:migration crear_tabla_equips --create=equips\nphp artisan make:migration afegir_telefon_a_usuaris --table=usuaris\n</code></pre>"},{"location":"04dades_Laravel.html#4modificar-una-taula-existent","title":"\ud83d\udd01 4.Modificar una taula existent","text":"<p>Per a afegir o llevar camps d\u2019una taula ja creada, es fa una nova migraci\u00f3 indicant que s\u2019est\u00e0 treballant sobre una taula existent. Tamb\u00e9 es pot controlar l\u2019ordre dels camps nous utilitzant modificadors com <code>after</code>.</p>"},{"location":"04dades_Laravel.html#5executar-migracions","title":"\ud83d\ude80 5.Executar migracions","text":"<pre><code>    // Per aplicar les migracions \n    php artisan migrate\n    // Si es vol revertir l\u2019\u00faltima migraci\u00f3\n    php artisan migrate:rollback\n    // Si volem desfer totes les migracions\n    php artisan migrate:reset\n    // Un comanament interessant quan estem desenvolupant un nou lloc web \u00e9s **migrate:refresh**, el qual desfar\u00e0 tots els canvis i tornar a aplicar les migracions:\n    php artisan migrate:fresh\n</code></pre>"},{"location":"04dades_Laravel.html#6schema-builder","title":"\ud83d\udcd0 6.Schema Builder","text":"<p>Una vegada creada una migraci\u00f3 hem de completar els seus m\u00e8todes up i down per a indicar la taula que volem crear o el camp que volem modificar. En el m\u00e8tode down sempre haurem d'afegir l'operaci\u00f3 inversa, eliminar la taula que s'ha creat en el m\u00e8tode up o eliminar la columna que s'ha afegit.</p> <p>A\u00e7\u00f2 ens permetr\u00e0 desfer migracions deixant la base de dades en el mateix estat en el qual es trobaven abans que s'afegiren.</p> <p>Per a especificar la taula a crear o modificar, aix\u00ed com les columnes i tipus de dades de les mateixes, s'utilitza la classe Schema. Aquesta classe t\u00e9 una s\u00e8rie de m\u00e8todes que ens permetr\u00e0 especificar l'estructura de les taules independentment del sistema de base de dades que utilitzem.</p>"},{"location":"04dades_Laravel.html#crear-i-esborrar-una-taula","title":"Crear i esborrar una taula","text":"<p>Per a afegir una nova taula a la base de dades s'utilitza el seg\u00fcent constructor:</p> <pre><code>    Schema::create('users', function (Blueprint $table)     { \n        $table-&gt;increments('id');\n    });\n</code></pre> <p>On el primer argument \u00e9s el nom de la taula i el segon \u00e9s una funci\u00f3 que rep com a par\u00e0metre un objecte del tipus Blueprint que utilitzarem per a configurar les columnes de la taula.</p> <p>En la secci\u00f3 down de la migraci\u00f3 haurem d'eliminar la taula que hem creat, per a a\u00e7\u00f2 usarem algun dels seg\u00fcents m\u00e8todes:</p> <p><pre><code>    Schema::drop('users');\n    Schema::dropIfExists('users');\n</code></pre> En crear una migraci\u00f3 amb el comando de Artisan make:migration ja ens ve aquest codi afegit per defecte, la creaci\u00f3 i eliminaci\u00f3 de la taula que s'ha indicat i a m\u00e9s s'afigen un parell de columnes per defecte (id i timestamps).</p>"},{"location":"04dades_Laravel.html#afegir-columnes","title":"Afegir columnes","text":"<p>El constructor Schema::create rep com a segon par\u00e0metre una funci\u00f3 que ens permet especificar les columnes que va a tenir aquesta taula.</p> <p>En aquesta funci\u00f3 podem anar afegint tots els camps que vulguem, indicant per a cadascun d'ells el seu tipus i nom, i a m\u00e9s si volem tamb\u00e9 podrem indicar una s\u00e8rie de modificadors com a valor per defecte, \u00edndexs, etc. Per exemple:</p> <pre><code>    Schema::create('users', function($table) {\n        $table-&gt;increments('id'); \n        $table-&gt;string('username', 32); \n        $table-&gt;string('password'); \n        $table-&gt;smallInteger('vots'); \n        $table-&gt;string('direccion'); \n        $table-&gt;boolean('confirmat')-&gt;default(false);\n        $table-&gt;timestamps();\n    });\n</code></pre> <p>Schema defineix molts tipus de dades que podem utilitzar per a definir les columnes d'una taula, alguns dels principals s\u00f3n:</p> Comando Tipus de camp $table-&gt;boolean('confirmed'); BOOLEAN $table-&gt;enum('choices', array('foo', 'bar')); ENUM $table-&gt;float('amount'); FLOAT $table-&gt;increments('id'); Clau principal tipus INTEGER amb Acte-Increment $table-&gt;integer('votes'); INTEGER $table-&gt;mediumInteger('numbers'); MEDIUMINT $table-&gt;smallInteger('votes'); SMALLINT $table-&gt;tinyInteger('numbers'); TINYINT $table-&gt;string('email'); VARCHAR $table-&gt;string('name', 100); VARCHAR amb la longitud indicada TEXT $table-&gt;text('description'); TEXT $table-&gt;timestamp('added_on'); $table-&gt;timestamps(); Afig els timestamps \"created_at\" i \"updated_at\" -&gt;nullable() Indicar que la columna permet valors NULL -&gt;default($value) Declara un valor per defecte per a una columna -&gt;unsigned() Afig UNSIGNED a les columnes tipus INTEGER <p>Els tres \u00faltims es poden combinar amb la resta de tipus per a crear, per exemple, una columna que permeta nuls, amb un valor per defecte i de tipus unsigned.</p> <p>Per a consultar tots els tipus de dades que podem utilitzar podeu consultar la documentaci\u00f3 de Laravel en:</p>"},{"location":"04dades_Laravel.html#afegir-indexs","title":"Afegir \u00edndexs","text":"<p>Schema suporta els seg\u00fcents tipus d'\u00edndexs:</p> Comanament Descripci\u00f3 $table-&gt;id(); Afegir un clau prim\u00e0ria id $table-&gt;primary('id'); Afegir una clau prim\u00e0ria $table-&gt;primary(array('first', 'last')); Definir una clau prim\u00e0ria composta $table-&gt;unique('email'); Definir el camp com UNIQUE $table-&gt;index('state'); Afegir un \u00edndex a una columna <p>En la taula s'especifica com afegir aquests \u00edndexs despr\u00e9s de crear el camp, per\u00f2 tamb\u00e9 permet indicar aquests \u00edndexs alhora que es crea el camp:</p> <pre><code>    $table-&gt;string('email')-&gt;unique();\n</code></pre>"},{"location":"04dades_Laravel.html#claus-alienes","title":"Claus alienes","text":"<p>Amb Schema tamb\u00e9 podem definir claus alienes entre taules:</p> <pre><code>    $table-&gt;foreignId('module_id')-&gt;constrained('modules');\n    $table-&gt;foreign('module_id')-&gt;references('code')-&gt;on('modules');\n</code></pre> <p>En el primer exemple, a m\u00e9s de crear el camp crea la rel\u00b7lacio, i serveix si la clau a la que faig refer\u00e8ncia s'ha creat utilitzant $table-&gt;id();</p> <p>En cas contrari he d'especificar el camp ja creat i on es rel\u00b7laciona.</p> <p>La columna amb la clau aliena ha de ser del mateix tipus que la columna a la qual apunta. Si per exemple vam crear una columna a un \u00edndex auto-incremental haurem d'especificar que la columna siga unsigned per que no es produ\u00efsquen errors.</p> <p>Tamb\u00e9 podem especificar les accions que s'han de realitzar per a \"on delete\" i \"on update\":</p> <pre><code>    $table-&gt;foreign('user_id')-&gt;references('id')-&gt;on('users')-&gt;onDelete('cascade');\n</code></pre>"},{"location":"04dades_Laravel.html#models-de-dades-amb-eloquent-orm-laravel-12","title":"\ud83e\udde9 Models de dades amb Eloquent ORM (Laravel 12)","text":"<p>L\u2019Object-Relational Mapping (ORM) \u00e9s una t\u00e8cnica que permet treballar amb una base de dades relacional utilitzant objectes en lloc de consultes SQL directes. Laravel inclou el seu propi ORM anomenat Eloquent, que permet fer operacions sobre la base de dades de forma molt intu\u00eftiva.</p> <p>Amb Eloquent, cada model representa una taula de la base de dades, i cada inst\u00e0ncia del model representa un registre d\u2019aquesta taula.</p>"},{"location":"04dades_Laravel.html#creacio-dun-model","title":"\ud83d\udd27 Creaci\u00f3 d\u2019un model","text":"<p>Els models es creen dins la carpeta <code>app/Models</code>. Per generar-ne un:</p> <pre><code>     //  crear\u00e0 una classe `Movie` associada, per defecte, a la taula `movies`. Si la taula t\u00e9 un nom diferent, podem indicar-ho al model amb la propietat `$table`.\n    php artisan make:model Movie\n     // Model + migraci\u00f3 \n    php artisan make:model Movie -m\n     // Model + migraci\u00f3 + controlador buit \n    php artisan make:model Movie -mc\n     // Model + migraci\u00f3 + controlador de recursos \n    php artisan make:model Movie -mcr\n</code></pre>"},{"location":"04dades_Laravel.html#bones-practiques-de-nomenclatura","title":"\ud83d\udcd0 Bones pr\u00e0ctiques de nomenclatura","text":"<p>\u00c9s recomanable mantindre una coher\u00e8ncia entre:</p> <ul> <li>Model \u2192 <code>Movie</code></li> <li>Controlador \u2192 <code>MovieController</code></li> <li>Taula \u2192 <code>movies</code></li> <li>Vistes \u2192 <code>resources/views/movies/index.blade.php</code>, etc.</li> </ul>"},{"location":"04dades_Laravel.html#propietats-especials-dels-models","title":"\ud83d\udd11 Propietats especials dels models","text":"<ul> <li><code>$primaryKey</code>: per indicar una clau prim\u00e0ria diferent de <code>id</code>.</li> <li><code>$timestamps = false</code>: si la taula no t\u00e9 camps <code>created_at</code> i <code>updated_at</code>.</li> </ul> <p>Exemple de definici\u00f3 completa:</p> <pre><code>class User extends Model\n{\n    protected $table = 'my_users';\n    protected $primaryKey = 'my_id';\n    public $timestamps = false;\n}\n</code></pre>"},{"location":"04dades_Laravel.html#us-dels-models-per-a-consultar-dades","title":"\ud83d\udce5 \u00das dels models per a consultar dades","text":"<p>Una vegada creat el model, es pot utilitzar en els controladors per consultar la base de dades i passar la informaci\u00f3 a les vistes.</p>"},{"location":"04dades_Laravel.html#consultes-basiques","title":"Consultes b\u00e0siques","text":"<pre><code>// Tots els registres \n$movies = Movie::all();\n// Condicionals \n$movies = Movie::where('precio', '&lt;', 10)-&gt;get();\n // Ordre\n$movies = Movie::orderBy('titulo', 'desc')-&gt;get();\n// Funcions agregades \n$total = Movie::count();\n$max = Movie::max('preu');\n$min = Movie::min('preu');\n$avg = Movie::avg('preu');\n$sum = Movie::sum('preu');\n</code></pre>"},{"location":"04dades_Laravel.html#seeders-i-factories-en-laravel-12","title":"\ud83c\udf31 Seeders i \ud83c\udfed Factories en Laravel 12","text":"<p>Qun estem desenvolupant una aplicaci\u00f3, sovint necessitem disposar de dades de prova per poder treballar amb consultes, validacions, formularis, etc. Laravel ens ofereix dues eines molt \u00fatils per generar aquestes dades: els seeders i els factories.</p>"},{"location":"04dades_Laravel.html#seeders-sembradors-de-dades","title":"\ud83c\udf31 Seeders (Sembradors de dades)","text":"<p>Els seeders s\u00f3n classes que permeten inserir dades inicials a la base de dades de forma programada.</p>"},{"location":"04dades_Laravel.html#crear-un-seeder","title":"Crear un seeder","text":"<p>Per crear un seeder:</p> <pre><code>    ./vendor/bin/bash artisan make:seeder NomDelSeeder\n</code></pre> <p>Es crear\u00e0 una classe dins <code>database/seeders</code>. Dins del m\u00e8tode <code>run()</code> podrem escriure les instruccions per crear els registres.</p>"},{"location":"04dades_Laravel.html#registrar-el-seeder","title":"Registrar el seeder","text":"<p>Perqu\u00e8 s\u2019execute, cal registrar-lo al <code>DatabaseSeeder.php</code>:</p> <pre><code>$this-&gt;call(NomDelSeeder::class); \n</code></pre>"},{"location":"04dades_Laravel.html#executar-els-seeders","title":"Executar els seeders","text":"<p>Per executar tots els seeders registrats:</p> <pre><code>php artisan db:seed\n</code></pre> <p>Per netejar i tornar a sembrar la base de dades:</p> <pre><code>php artisan migrate:fresh --seed\n</code></pre>"},{"location":"04dades_Laravel.html#factories-fabriques-de-dades","title":"\ud83c\udfed Factories (F\u00e0briques de dades)","text":"<p>Els factories permeten generar dades falses de manera automatitzada i en gran quantitat.</p>"},{"location":"04dades_Laravel.html#crear-una-factory","title":"Crear una factory","text":"<p>Per crear una factory:</p> <p><pre><code>php artisan make:factory NomDelModelFactory\n</code></pre> Es crear\u00e0 dins database/factories una classe associada autom\u00e0ticament al model corresponent.</p>"},{"location":"04dades_Laravel.html#definir-la-factory","title":"Definir la factory","text":"<p>En el m\u00e8tode definition(), s\u2019utilitza el sistema faker per generar dades aleat\u00f2ries (noms, correus, dates...). Els models han d\u2019incloure el trait HasFactory per poder utilitzar les factories.</p>"},{"location":"04dades_Laravel.html#exemple-de-seeder-amb-factory","title":"\ud83e\uddea Exemple de seeder amb factory","text":"<p>Un seeder pot usar una factory per generar m\u00faltiples registres:</p> <pre><code>User::factory()-&gt;count(10)-&gt;create();\n</code></pre> <p>Per generar dades relacionades:</p> <pre><code>$usuaris = User::all();\n$usuaris-&gt;each(function($usuari) {\nPost::factory()-&gt;count(2)-&gt;create([\n'user_id' =&gt; $usuari-&gt;id\n]);\n});\n</code></pre>"},{"location":"04dades_Laravel.html#resum","title":"\ud83e\uddf0 Resum","text":"Eina Finalitat Seeder Inserir dades espec\u00edfiques o inicials Factory Generar dades aleat\u00f2ries amb estructura definida Faker Generador integrat per crear valors falsos"},{"location":"04dades_Laravel.html#referencia","title":"\ud83d\udcda Refer\u00e8ncia","text":"<ul> <li>Laravel Docs \u2013 Database Seeding</li> <li>Laravel Docs \u2013 Model Factories</li> </ul>"},{"location":"04dades_Laravel.html#sa-42-primeres-operacions-amb-eloquent-laravel-12","title":"SA 4.2 Primeres operacions amb Eloquent (Laravel 12)","text":"<p>Aquesta secci\u00f3 introdueix les operacions b\u00e0siques que podem realitzar amb models Eloquent: crear, llegir, actualitzar i esborrar registres, aix\u00ed com treballar amb relacions entre models, c\u00e0rrega eficient de dades i paginaci\u00f3.</p>"},{"location":"04dades_Laravel.html#inserir-dades","title":"\u2795\ud83d\uddc4\ufe0f Inserir dades","text":"<p>Per a inserir dades en una taula associada a un model, podem crear una inst\u00e0ncia del model, assignar els valors i guardar-los. Tamb\u00e9 es pot utilitzar el m\u00e8tode <code>create</code>, per\u00f2 en aquest cas cal definir pr\u00e8viament la propietat <code>$fillable</code> al model per evitar insercions no autoritzades de topa.</p> <pre><code>//  Crear i desar una nova inst\u00e0ncia \n$movie = new Movie();\n$movie-&gt;titulo = \"La guerra de las galaxias\";\n$movie-&gt;director = \"George Lucas\";\n$movie-&gt;precio = 3.95;\n$movie-&gt;save();\n\n// Obtenir l'ID assignat\n$insertedId = $movie-&gt;id;\n\n// \u00das del m\u00e8tode create\nMovie::create([\n'titulo'   =&gt; $request-&gt;titulo,\n'director' =&gt; $request-&gt;director,\n'precio'   =&gt; $request-&gt;precio,\n]);\n//Cada camp de la petici\u00f3 ha de tindre associat un camp del mateix nom en el model.\n\n// Hem de definir en el model una propietat anomenada **\\$fillable** amb els noms dels camps\n// de la petici\u00f3 que ens interessa processar (la resta es descarten). Aix\u00f2 \u00e9s obligatori especificar-ho,\n// encara que ens interessen tots els camps, per a evitar insercions massives malintencionades (per exemple\n//, editant el codi font per a afegir altres camps i modificar dades inesperades).\n</code></pre> <pre><code>// requereix $fillable al model\nclass Movie extends Model\n{\nprotected $fillable = ['titulo', 'director', 'precio'];\n}\n</code></pre>"},{"location":"04dades_Laravel.html#modificar-dades","title":"\u270f\ufe0f\ud83d\uddc4\ufe0f Modificar dades","text":"<p>Per actualitzar un registre, primer el localitzem (per exemple amb <code>findOrFail</code>), modifiquem les propietats necess\u00e0ries i cridem a <code>save</code>. Tamb\u00e9 existeix el m\u00e8tode <code>update</code>, que permet fer-ho m\u00e9s r\u00e0pidament si la propietat <code>$fillable</code> est\u00e0 definida correctament.</p> <pre><code>// Localitzar i modificar un registre \n$movie = Movie::findOrFail($id);\n$movie-&gt;titulo = \"Nou t\u00edtol\";\n$movie-&gt;save();\n\n// O b\u00e9, de forma concisa\n\nMovie::findOrFail($id)-&gt;update($request-&gt;only(['titulo', 'director', 'precio']));\n</code></pre>"},{"location":"04dades_Laravel.html#esborrar-dades","title":"\ud83d\uddd1\ufe0f Esborrar dades","text":"<p>Per eliminar un registre, es pot utilitzar el m\u00e8tode <code>delete</code> aplicat sobre una inst\u00e0ncia del model. Cal considerar que aquesta operaci\u00f3 s\u2019ha de fer des de formularis o accions protegides, no mitjan\u00e7ant enlla\u00e7os directes, per evitar vulnerabilitats (com les peticions GET per esborrar). En Laravel aix\u00f2 es resol amb formularis que especifiquen el m\u00e8tode HTTP <code>DELETE</code> i el token <code>@csrf</code>.</p> <pre><code>// Eliminar un registre\nMovie::findOrFail($id)-&gt;delete();\n\n// En un controlador, simplemente en el m\u00e8tode destroy\n\npublic function destroy($id)\n{\n    Movie::findOrFail($id)-&gt;delete();\n    return redirect()-&gt;route('movies.index')-&gt;with('success', 'Eliminat correctament');\n}\n</code></pre> <p>!!! Important: Fer servir formularis amb @method('DELETE') i @csrf per garantir seguretat i evitar peticions GET.</p> <pre><code>&lt;form action=\"{{ \"{{  route('movies.destroy', $movie) \" }}}}\" method=\"POST\"&gt;\n    @method('DELETE')\n    @csrf\n    &lt;button&gt;Borrar&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"04dades_Laravel.html#relacions-basiques-entre-models","title":"\ud83d\udd17 Relacions b\u00e0siques entre models","text":"<p>Eloquent facilita la definici\u00f3 de relacions entre models com a m\u00e8todes dins de les classes:</p> Tipus de relaci\u00f3 Descripci\u00f3 breu Un a u Relacions 1:1, com <code>hasOne</code> i <code>belongsTo</code> Un a molts Relacions 1:N, com <code>hasMany</code> i <code>belongsTo</code> Molts a molts Relacions N:N amb <code>belongsToMany</code>, utilitzant taules pivot <p>Eloquent tamb\u00e9 permet enlla\u00e7ar f\u00e0cilment les consultes a aquestes relacions i recuperar els models relacionats com si fossin propietats d\u2019un objecte.</p>"},{"location":"04dades_Laravel.html#un-a-u-11","title":"UN A U (1:1)","text":"<pre><code>// en Usuari\npublic function telefon()\n{\nreturn $this-&gt;hasOne(Telefon::class);\n}\n// en Telefon:\npublic function usuari()\n{\nreturn $this-&gt;belongsTo(Usuari::class);\n}\n\n// Accedir a la relaci\u00f3\n\n$telefono = Usuario::findOrFail($id)-&gt;telefon;\n</code></pre>"},{"location":"04dades_Laravel.html#un-a-molts-1m","title":"Un a Molts (1:M)","text":"<pre><code>// en Autor\npublic function libros()\n{\nreturn $this-&gt;hasMany(Libro::class);\n}\n// En Libro \npublic function autor()\n{\nreturn $this-&gt;belongsTo(Autor::class);\n}\n\n// Accedir a la relaci\u00f3\n$libros = Autor::findOrFail($id)-&gt;libros;\n</code></pre>"},{"location":"04dades_Laravel.html#molts-a-molts","title":"Molts a molts","text":"<pre><code>// en User\npublic function roles()\n{\n    return $this-&gt;belongsToMany(Role::class)-&gt;withTimestamps();\n}\n// en  Role:\npublic function users()\n{\n    return $this-&gt;belongsToMany(User::class);\n}\n// per accedir-hi \n$roles = User::findOrFail($id)-&gt;roles;\nforeach ($roles as $rol) {\n    echo $rol-&gt;pivot-&gt;created_at;\n}\n</code></pre>"},{"location":"04dades_Laravel.html#acces-eficient-eager-loading","title":"\u26a1\ud83d\udd17 Acc\u00e9s eficient: Eager Loading","text":"<p>Quan obtenim registres amb relacions, Eloquent pot fer consultes addicionals per cada relaci\u00f3 accedida de manera diferida. Amb Eager loading (<code>with</code>) podem indicar les relacions que volem carregar de manera anticipada, reduint considerablement el nombre de consultes i millorant el rendiment.</p> <pre><code>//Evita el problema N+1 amb with():\n$posts = Post::with('comments')-&gt;get();\n//Aquest exemple carrega tots els posts i els seus comments associats amb nom\u00e9s dues consultes a la base de dades.\n</code></pre>"},{"location":"04dades_Laravel.html#paginacio","title":"\ud83d\udcd1\u25c0\ufe0f\u25b6\ufe0f Paginaci\u00f3","text":"<p>Per gestionar resultats de manera co\u0140lapsible, Laravel ofereix m\u00e8todes de paginaci\u00f3 integrats (com <code>paginate()</code> i <code>simplePaginate()</code>), que faciliten la navegaci\u00f3 entre grans llistats.</p> <pre><code>public function index()\n    {\n        $movies = Movie::paginate(5);\n        return view('movies.index', compact('moviemovies'));\n    }\n</code></pre> <p>Despr\u00e9s, en la vista associada ( movies.index en l'exemple anterior), podem emprar el m\u00e8tode links perqu\u00e8 mostre els botons de paginaci\u00f3 en el lloc desitjat:</p> <pre><code>    @forelse($movies as $movie)\n        {{  $movie-&gt;titulo \" }}\n    @endforelse\n    {{   $movies-&gt;links() }}\n</code></pre>"},{"location":"04dades_Laravel.html#resum-visual-de-42-primeres-operacions-amb-eloquent","title":"\ud83e\uddf0 Resum visual de 4.2 \u2013 Primeres operacions amb Eloquent","text":"Acci\u00f3 M\u00e8tode Notes \ud83d\udd04 Llegir tot <code>Model::all()</code> Recupera tots els registres \ud83d\udd0d Buscar per ID <code>Model::find($id)</code> Retorna o <code>null</code> si no troba \u2705 Crear <code>Model::create([...])</code> Cal definir <code>$fillable</code> \u270f\ufe0f Actualitzar <code>Model::find($id)-&gt;update([...])</code> Tamb\u00e9 necessita <code>$fillable</code> \ud83d\uddd1\ufe0f Esborrar <code>Model::find($id)-&gt;delete()</code> Recomanat usar <code>findOrFail()</code>"},{"location":"04dades_Laravel.html#tipus-de-relacions","title":"\ud83d\udd17 Tipus de relacions","text":"Relaci\u00f3 Definici\u00f3 Model A Inversa Model B Un a u (1:1) <code>hasOne(ModelB::class)</code> <code>belongsTo(ModelA::class)</code> Un a molts <code>hasMany(ModelB::class)</code> <code>belongsTo(ModelA::class)</code> Molts a molts <code>belongsToMany(ModelB::class)</code> <code>belongsToMany(ModelA::class)</code>"},{"location":"04dades_Laravel.html#altres-utilitats","title":"\u26a1\ufe0f Altres utilitats","text":"Funcionalitat M\u00e8tode Finalitat Eager loading <code>Model::with('relacio')-&gt;get()</code> Evita consultes N+1 Paginaci\u00f3 <code>Model::paginate(10)</code> Llista paginada amb 10 resultats per p\u00e0gina Taula pivot extra <code>-&gt;withPivot('camp')</code> Accedir a camps extra en relaci\u00f3 N:N Timestamp pivot <code>-&gt;withTimestamps()</code> Afegix <code>created_at</code> i <code>updated_at</code> a pivot"},{"location":"04dades_Laravel.html#introduccio-al-query-builder","title":"\ud83d\udd0d Introducci\u00f3 al Query Builder","text":"<p>Laravel proporciona una altra manera d\u2019interactuar amb la base de dades a trav\u00e9s del Query Builder, una eina que permet construir consultes SQL de forma m\u00e9s directa i eficient, per\u00f2 encara dins del marc de Laravel.</p>"},{"location":"04dades_Laravel.html#quan-usar-lo","title":"\ud83d\udccc Quan usar-lo?","text":"<ul> <li>Quan necessites consultes m\u00e9s complexes (joins, agregacions, subconsultes).</li> <li>Quan no calen models Eloquent complets.</li> <li>Per a consultes amb millor rendiment o m\u00e9s espec\u00edfiques.</li> </ul>"},{"location":"04dades_Laravel.html#exemple-basic","title":"\ud83e\uddf1 Exemple b\u00e0sic","text":"<pre><code>$movies = DB::table('movies')-&gt;get();\n//A\u00e7\u00f2 retorna totes les files de la taula movies com a objectes est\u00e0ndard (no inst\u00e0ncies d\u2019Eloquent).\n</code></pre>"},{"location":"04dades_Laravel.html#amb-condicions","title":"\ud83d\udd0d Amb condicions","text":"<pre><code>$cheapMovies = DB::table('movies')\n                -&gt;where('precio', '&lt;', 5)\n                -&gt;orderBy('precio')\n                -&gt;get();\n```php\n#### \ud83d\udcca Agregats\n\n```php\n$total = DB::table('movies')-&gt;count();\n$max = DB::table('movies')-&gt;max('precio');\n</code></pre>"},{"location":"04dades_Laravel.html#joins","title":"\ud83e\udde9 Joins","text":"<pre><code>$peliculas = DB::table('movies')\n    -&gt;join('directores', 'movies.director_id', '=', 'directores.id')\n    -&gt;select('movies.*', 'directores.nom as director')\n    -&gt;get();\n</code></pre>"},{"location":"04dades_Laravel.html#diferencies-amb-eloquent","title":"\u26a0\ufe0f Difer\u00e8ncies amb Eloquent","text":"Eloquent Query Builder Retorna models Eloquent complets Retorna objectes est\u00e0ndard (stdClass) Suporta relacions autom\u00e0tiques Cal fer joins manualment Permet guardar, modificar i esborrar registres Nom\u00e9s per a consultes (lectura) Sintaxi m\u00e9s expressiva i OO Sintaxi m\u00e9s propera a SQL Ideal per a CRUD b\u00e0sics i mitjans Ideal per a consultes complexes Pot ser m\u00e9s lent en consultes grans M\u00e9s eficient per a grans volums"},{"location":"04dades_Laravel.html#referencia_1","title":"Refer\u00e8ncia","text":"<ul> <li>Documentaci\u00f3 oficial: Eloquent ORM \u2013 Laravel 12</li> <li>V\u00eddeo d\u2019introducci\u00f3 a les operacions amb Eloquent</li> </ul>"},{"location":"04dades_Laravel.html#sa43-patrons-de-disseny-orientats-a-objectes","title":"SA4.3  Patrons de disseny orientats a objectes","text":""},{"location":"04dades_Laravel.html#principis-solid-microresum","title":"Principis SOLID (microresum)","text":"<ul> <li>Single Responsibility: cada classe, una responsabilitat.</li> <li>Open/Closed: oberta a extensi\u00f3, tancada a modificaci\u00f3.</li> <li>Liskov: substituci\u00f3 segura de tipus base per derivats.</li> <li>Interface Segregation: interf\u00edcies xicotetes i espec\u00edfiques.</li> <li>Dependency Inversion: depend\u00e8ncies d\u2019abstraccions, no implementacions.</li> </ul>"},{"location":"04dades_Laravel.html#patrons-utils-en-laravel","title":"Patrons \u00fatils en Laravel","text":"<ul> <li>DAO / Repository: a\u00eflla l\u2019acc\u00e9s a dades.</li> <li>Service (Domini / Aplicaci\u00f3): cont\u00e9 la l\u00f2gica de negoci (regles).</li> <li>Factory: creaci\u00f3 d\u2019objectes (ja l\u2019uses amb Models Factory).</li> </ul> <p>Arquitectura recomanada</p> <p>Controller  -&gt;  Service  -&gt;  Repository  -&gt;  Eloquent Model (presentaci\u00f3)   (negoci)      (acc\u00e9s dades)    (ORM)</p>"},{"location":"04dades_Laravel.html#exemple-repository-service","title":"Exemple: Repository + Service","text":"<p>Interf\u00edcie del Repositori // app/Repositories/ProducteRepository.php <pre><code>namespace App\\Repositories;\n\nuse App\\Models\\Producte;\nuse Illuminate\\Support\\Collection;\n\ninterface ProducteRepository {\n    public function tots(): Collection;\n    public function crear(array $dades): Producte;\n    public function actualitzar(Producte $p, array $dades): Producte;\n    public function esborrar(Producte $p): void;\n}\n</code></pre></p> <p>Implementaci\u00f3 Eloquent // app/Repositories/EloquentProducteRepository.php</p> <pre><code>namespace App\\Repositories;\n\nuse App\\Models\\Producte;\nuse Illuminate\\Support\\Collection;\n\nclass EloquentProducteRepository implements ProducteRepository\n{\n    public function tots(): Collection   { return Producte::latest()-&gt;get(); }\n    public function crear(array $d): Producte { return Producte::create($d); }\n    public function actualitzar(Producte $p, array $d): Producte { $p-&gt;update($d); return $p; }\n    public function esborrar(Producte $p): void { $p-&gt;delete(); }\n}\n</code></pre> <p>Servei de negoci // app/Services/ProducteService.php <pre><code>namespace App\\Services;\n\nuse App\\Models\\Producte;\nuse App\\Repositories\\ProducteRepository;\n\nclass ProducteService\n{\npublic function __construct(private ProducteRepository $repo) {}\n\n    public function llistar() { return $this-&gt;repo-&gt;tots(); }\n\n    public function crear(array $dades): Producte\n    {\n        // Ex. l\u00f2gica: descompte, normalitzaci\u00f3...\n        if (isset($dades['preu'])) {\n            $dades['preu'] = max(0, (float)$dades['preu']);\n        }\n        return $this-&gt;repo-&gt;crear($dades);\n    }\n\n    public function actualitzar(Producte $p, array $dades): Producte\n    {\n        return $this-&gt;repo-&gt;actualitzar($p, $dades);\n    }\n\n    public function esborrar(Producte $p): void\n    {\n        $this-&gt;repo-&gt;esborrar($p);\n    }\n}\n</code></pre></p> <p>Binding al contenidor (Service Provider)</p> <p>// app/Providers/AppServiceProvider.php <pre><code>use App\\Repositories\\ProducteRepository;\nuse App\\Repositories\\EloquentProducteRepository;\n\npublic function register(): void\n{\n$this-&gt;app-&gt;bind(ProducteRepository::class, EloquentProducteRepository::class);\n}\n</code></pre></p> <p>Controlador depenent del Servei // app/Http/Controllers/ProducteController.php <pre><code>use App\\Models\\Producte;\nuse App\\Services\\ProducteService;\nuse Illuminate\\Http\\Request;\n\nclass ProducteController extends Controller\n{\npublic function __construct(private ProducteService $svc) {}\n\n    public function index()  { return view('productes.index', ['productes'=&gt;$this-&gt;svc-&gt;llistar()]); }\n    public function store(Request $r)   { $this-&gt;svc-&gt;crear($r-&gt;validate(['nom'=&gt;'required','preu'=&gt;'required|numeric|min:0'])); return back()-&gt;with('ok','Creat'); }\n    public function update(Request $r, Producte $producte) { $this-&gt;svc-&gt;actualitzar($producte, $r-&gt;validate(['nom'=&gt;'required','preu'=&gt;'required|numeric|min:0'])); return back()-&gt;with('ok','Actualitzat'); }\n    public function destroy(Producte $producte) { $this-&gt;svc-&gt;esborrar($producte); return back()-&gt;with('ok','Esborrat'); }\n}\n</code></pre></p>"},{"location":"04dades_Laravel.html#beneficis-dutilitzar-repository-service-en-laravel","title":"\u2705 Beneficis d'utilitzar Repository + Service en Laravel","text":"Benefici Descripci\u00f3 \ud83d\udd01 Reutilitzaci\u00f3 de codi El codi de consultes i l\u00f2gica de negoci es pot reutilitzar en diferents llocs. \ud83e\uddfc Separaci\u00f3 de responsabilitats Cada capa fa una sola cosa: controlador presenta, servei decideix, repositori consulta. \ud83e\uddea Facilita els tests Es poden substituir f\u00e0cilment per mocks en proves unit\u00e0ries. \ud83d\udd04 Facilita el manteniment Si canvies la BBDD o la l\u00f2gica, no cal tocar controlador ni vistes. \ud83e\uddf1 Escalabilitat Permet cr\u00e9ixer el projecte sense que el codi es torne incontrolable. \ud83d\udc65 Col\u00b7laboraci\u00f3 m\u00e9s clara Equips poden treballar en capes diferents sense solapar-se. \ud83e\udde9 Canvi de backend o font de dades Pots canviar MySQL per API externa o Mongo sense canviar la l\u00f2gica. \ud83d\udcc1 Organitzaci\u00f3 clara del projecte Estructura neta i coherent per a projectes grans."},{"location":"04dades_Laravel.html#decisio-dus-de-repository-i-service-en-laravel","title":"\ud83e\udde9 Decisi\u00f3 d'\u00fas de Repository i Service en Laravel","text":"Cas Repository Service Explicaci\u00f3 CRUD simple (index, show, store, update, delete) \u274c \u274c Eloquent cobreix tot Consultes reutilitzables i complexes \u2705 \u274c Repository encapsula consultes Vols canviar el backend (API, MongoDB, etc.) \u2705 \u274c Separaci\u00f3 de depend\u00e8ncies amb interface L\u00f2gica de negoci espec\u00edfica (ex: descomptes, validacions especials) \u274c \u2705 La l\u00f2gica no ha d'anar al controlador Validacions de negocis en diverses rutes \u2705 \u2705 Reutilitzaci\u00f3 i separaci\u00f3 de responsabilitats Necessites mockejar dades en tests \u2705 \u2705 Dependency Injection facilita proves Controlador massa llarg o amb massa responsabilitats \u2705 \u2705 Desacobles i neteges el codi Backend ja madur, busques escalabilitat \u2705 \u2705 Segueixes arquitectura neta i escalable"},{"location":"04dades_Laravel.html#exercicis","title":"Exercicis","text":""},{"location":"04dades_Laravel.html#exercici-guiat-reestructurar-projecte-futbol-femeni-amb-bd-repository-service","title":"\ud83c\udfdf\ufe0f Exercici guiat: Reestructurar projecte Futbol Femen\u00ed amb BD + Repository + Service","text":""},{"location":"04dades_Laravel.html#objectiu","title":"\ud83c\udfaf Objectiu","text":"<p>Reestructurar l\u2019aplicaci\u00f3 de futbol femen\u00ed (feta sense persist\u00e8ncia) cap a una arquitectura escalable amb: - Model Eloquent - Migraci\u00f3 i base de dades - Repository + Service</p>"},{"location":"04dades_Laravel.html#1-migracio-i-model-branca-bdd","title":"1. \ud83e\uddf1 Migraci\u00f3 i model (branca bdd)","text":"<p>Crear migraci\u00f3</p> <p><pre><code>./vendor/bin/sail artisan make:migration create_equips_table\n./vendor/bin/sail artisan make:migration create_estadis_table\n</code></pre> Afegir els camps necessaris</p> <ul> <li>Equips </li> <li>Estadis </li> </ul> <p>Crear els models</p> <p><pre><code>./vendor/bin/sail artisan make:model Equip\n./vendor/bin/sail artisan make:model Estadi\n</code></pre> Definir els camps i les rel\u00b7lacions</p> <ul> <li>Equip </li> <li>Estadi </li> </ul> <p>Executar migraci\u00f3</p> <pre><code>./vendor/bin/sail artisan migrate\n</code></pre>"},{"location":"04dades_Laravel.html#2-seeders-i-factories","title":"\ud83c\udf31\ud83c\udfed 2. Seeders i Factories","text":"<p>Crear Seeders i Factories</p> <pre><code>./vendor/bin/sail artisan make:Seeder EquipsSeeder\n./vendor/bin/sail artisan make:Seeder EstadisSeeder\n./vendor/bin/sail artisan make:Factory EquipFactory\n./vendor/bin/sail artisan make:Factory EstadiFactory\n</code></pre> <p>Completar Seeders i Factories</p> <ul> <li>EquipsSeeder</li> <li>EstadisSeeder</li> <li>EquipFactory</li> <li>EstadiFactory</li> <li>DatabaseSeeder</li> </ul> <p>Executar els seeder i els factories</p> <pre><code>./vendor/bin/sail artisan db:seed\n./vendor/bin/sail artisan migrate:fresh --seed // Ho fa tot migracions des de 0 i seeders\n</code></pre>"},{"location":"04dades_Laravel.html#3-crud-amb-eloquent","title":"3.  \u2699\ufe0f CRUD amb Eloquent","text":"<p>Crear el estadi controller</p> <pre><code>./vendor/bin/sail artisan make:controller EstadiController --resource\n</code></pre> <p>Afegir les rutes</p> <pre><code>Route::resource('/estadis', EstadisController::class)\n</code></pre> <p>Modificar el controlador</p> <p>EstadiController</p> <p>Crear les vistes</p> <p>Vistes estadi</p>"},{"location":"04dades_Laravel.html#4-repository-i-controlador-per-a-equips","title":"4. \ud83d\udce6  Repository i controlador per a equips","text":"<p>Crear Interface</p> <p>BaseRepository</p> <p>Crear Repository</p> <p>EquipRepository</p> <p>Registrar repository</p> <p>ServiceProvider</p>"},{"location":"04dades_Laravel.html#5-crear-service","title":"5. \ud83e\udde0 Crear Service","text":"<p>EquipService</p>"},{"location":"04dades_Laravel.html#6-validacio-amb-formrequest","title":"6. \ud83e\uddea Validaci\u00f3 amb FormRequest","text":"<p>Crear Validaci\u00f3</p> <pre><code>./vendor/bin/sail artisan make:request StoreEquipRequest\n./vendor/bin/sail artisan make:request UpdateEquipRequest\n</code></pre> <p>Modificar els fitxers</p> <p>StoreEquipRequest UpdateEquipRequest</p>"},{"location":"04dades_Laravel.html#7-controlador-final","title":"7. \ud83d\udca1 Controlador final","text":"<p>EquipController</p> <p>Adaptar les vistes</p>"},{"location":"04dades_Laravel.html#exercici-final-guia-de-futbol-femeni-ii","title":"\ud83c\udfc1 Exercici Final: Guia de Futbol Femen\u00ed II","text":""},{"location":"04dades_Laravel.html#objectiu_1","title":"\ud83c\udfaf Objectiu","text":"<p>Transformar i ampliar l\u2019aplicaci\u00f3 del projecte anterior per a incorporar: - Persist\u00e8ncia en base de dades amb Laravel Eloquent - Arquitectura escalable: <code>Controller \u2192 Service \u2192 Repository \u2192 Model</code></p>"},{"location":"04dades_Laravel.html#1-crear-migracions-i-models-relacionats","title":"1. Crear migracions i models relacionats","text":"<ul> <li>Jugadores amb: <code>equip_id</code>, <code>data_naixement</code>, <code>dorsal</code>, <code>foto</code></li> <li>Partits amb: <code>local_id</code>, <code>visitant_id</code>, <code>estadi_id</code>, <code>arbitre_id</code>, <code>data</code>, <code>jornada</code>, <code>gols</code></li> <li>Defineix relacions entre models:<ul> <li><code>equip \u2192 jugadores</code> (1:N)</li> <li><code>equip \u2192 partits com local/visitant</code> (1:N)</li> <li><code>partit \u2192 equip local/visitant</code> (N:1)</li> <li><code>partit \u2192 estadi</code>, <code>partit \u2192 arbitre</code></li> </ul> </li> </ul>"},{"location":"04dades_Laravel.html#2-completa-el-crud-de-jugadores-amb-arquitectura-escalable","title":"2. Completa el CRUD de Jugadores amb Arquitectura Escalable","text":"<ul> <li>Implementa <code>JugadoraRepository</code> i <code>JugadoraService</code></li> <li>Completa els m\u00e8todes <code>create</code>, <code>store</code>, <code>edit</code>, <code>update</code>, <code>destroy</code> a <code>EstadiController</code></li> <li>Valida les dades</li> <li>Mostra els equips que hi juguen dins la vista <code>show</code></li> </ul>"},{"location":"04dades_Laravel.html#3-factories-i-seeders-amb-calendari-automatic","title":"3. Factories i Seeders amb Calendari Autom\u00e0tic","text":"<ul> <li>18 equips, 30 \u00e0rbitres</li> <li>Generar calendari (anada + tornada) usant Faker i Carbon</li> <li>Resultats aleatoris si la data ja ha passat</li> </ul>"},{"location":"04dades_Laravel.html#4-vistes-i-components-visuals","title":"4. Vistes i components visuals","text":"<ul> <li>Components Blade per:<ul> <li>Mostrar jugadores d\u2019un equip</li> <li>Fitxa completa d\u2019un partit</li> </ul> </li> <li>Selects per a estadis i equips</li> <li>Vista de jornades amb partits filtrats per \u00e0rbitre</li> </ul>"},{"location":"04dades_Laravel.html#5-formularis-amb-formrequest","title":"5. Formularis amb FormRequest","text":"<ul> <li>Crea <code>EstadiRequest</code>, <code>JugadoraRequest</code>, <code>PartitRequest</code></li> <li>Valida:</li> <li><code>data_naixement</code> m\u00ednima de 16 anys</li> <li><code>foto</code> (tipus .png i mida m\u00e0xima)</li> <li><code>dorsal</code>, <code>capacitat</code>, <code>gols</code> (num\u00e8rics positius)</li> </ul>"},{"location":"04dades_Laravel.html#6-millores-dequip","title":"6. Millores d\u2019equip","text":"<ul> <li>Calcula i mostra:<ul> <li>Edat mitjana de les jugadores</li> <li>\u00daltims 5 partits jugats</li> </ul> </li> </ul>"},{"location":"04dades_Laravel.html#annex-i-installacio-de-phpmyadmin-amb-docker-opcional","title":"\ud83d\udcce  Annex I: Instal\u00b7laci\u00f3 de phpMyAdmin amb Docker (opcional)","text":"<p>Si volem que funcione el phpmyadmin haurien d'afegir un altre contenidor docker, o farem incluint el seg\u00fcent codi en el docker-compose.yml</p> <p><pre><code>myadmin:\n image: 'phpmyadmin:latest'\n ports:\n - 8080:80\n environment:\n MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'\n links:\n - \"mysql:db\"\n depends_on:\n - mysql\n networks:\n - sail\n</code></pre> I ara, ja podem accedir a http://localhost:8080 amb les credencials del .env.</p>"},{"location":"04phpoo.html","title":"Desenvolupament d'Aplicacions Web: POO, Separaci\u00f3 de L\u00f2gica i Presentaci\u00f3, Gesti\u00f3 d'Errors i Proves","text":"Duraci\u00f3 i criteris d'avaluaci\u00f3 <p>Duraci\u00f3 estimada: 20 hores</p> Resultat d'aprenentatge Criteris d'avaluaci\u00f3 5. Desenvolupa aplicacions Web identificant i aplicant mecanismes per a separar el codi de presentaci\u00f3 de la l\u00f2gica de negoci. a) S'han identificat els avantatges de separar la l\u00f2gica de negoci dels aspectes de presentaci\u00f3 de l'aplicaci\u00f3.  b) S'han analitzat tecnologies i mecanismes que permeten realitzar aquesta separaci\u00f3 i les seues caracter\u00edstiques principals.  c) S'han utilitzat objectes i controls en el servidor per a generar l'aspecte visual de l'aplicaci\u00f3 Web en el client.  d) S\u2019han utilitzat formularis generats de forma din\u00e0mica per a respondre als esdeveniments de l'aplicaci\u00f3 Web.  e) S'han identificat i aplicat els par\u00e0metres relatius a la configuraci\u00f3 de l'aplicaci\u00f3 Web.  f) S'han escrit aplicacions Web amb manteniment d'estat i separaci\u00f3 de la l\u00f2gica de negoci.  g) S'han aplicat els principis de la programaci\u00f3 orientada a objectes.  g) S'ha provat i documentat el codi."},{"location":"04phpoo.html#1-concepte-de-classes-i-objectes","title":"1. Concepte de classes i Objectes","text":"<p>PHP segueix un paradigma de programaci\u00f3 orientada a objectes (POO) basada en classes.</p> <p>Un classe \u00e9s un plantilla que defineix les propietats i m\u00e8todes per a poder crear objectes. D'aquest manera, un objecte \u00e9s una inst\u00e0ncia d'una classe.</p> <p>Tant les propietats com els m\u00e8todes es defineixen amb una visibilitat (qui pot accedir)</p> <ul> <li>Privat - <code>private</code>: Nom\u00e9s pot accedir la pr\u00f2pia classe.</li> <li>Protegit - <code>protected</code>: Nom\u00e9s pot accedir la pr\u00f2pia classe o els seus descendents.</li> <li>P\u00fablico - <code>public</code>: Pot accedir qualsevol altra classe.</li> </ul> <p>Per a declarar una classe, s'utilitza la paraula clau <code>class</code> seguit del nom de la classe. Per a instanciar un objecte a partir de la classe, s'utilitza <code>new</code>:</p> <pre><code>&lt;?php\nclass NomClase {\n// propiedades\n// y m\u00e9todos\n}\n\n$ob = new NomClase();\n</code></pre> <p>Classes amb maj\u00fascula</p> <p>Totes les classes comencen per lletra maj\u00fascula.</p> <p>Quan un projecte creix, \u00e9s normal modelar les classes mitjan\u00e7ant UML (recordeu Entorns de Desenvolupament?). La classes es representen mitjan\u00e7ant un quadrat, separant el nom, de les propietats i els m\u00e8todes:</p> <p></p> <p>Una vegada que hem creat un objecte, s'utilitza l'operador <code>-&gt;</code> per a accedir a una propietat o un m\u00e8tode:</p> <pre><code>$objeto-&gt;propiedad;\n$objeto-&gt;m\u00e9todo(par\u00e1metros);\n</code></pre> <p>Si des de dins de la classe, volem accedir a una propietat o m\u00e8tode de la mateixa classe, utilitzarem la refer\u00e8ncia <code>$this</code>;</p> <pre><code>$this-&gt;propiedad;\n$this-&gt;m\u00e9todo(par\u00e1metros);  \n</code></pre> <p>Aix\u00ed doncs, com a exemple, codificar\u00edem una persona en el fitxer <code>Persona.php</code> com:</p> <pre><code>&lt;?php\nclass\u00a0Persona\u00a0{\n    private\u00a0string $nombre;\n\n    public\u00a0function\u00a0setNombre(string $nom)\u00a0{\n        $this-&gt;nombre=$nom;\n    }\n\n    public\u00a0function\u00a0imprimir(){\n        echo\u00a0$this-&gt;nombre;\n        echo\u00a0'&lt;br&gt;';\n    }\n}\n\n$bruno\u00a0=\u00a0new\u00a0Persona(); // creamos un objeto\n$bruno-&gt;setNombre(\"Bruno\u00a0D\u00edaz\");\n$bruno-&gt;imprimir();\n</code></pre> <p>Encara que es poden declarar diverses classes en el mateix arxiu, \u00e9s una mala pr\u00e0ctica. Aix\u00ed doncs, cada fitxer contedr\u00e1 una sola classe, i es nomenar\u00e0 amb el nom de la classe.</p>"},{"location":"04phpoo.html#2-principis-de-la-poo","title":"2. Principis de la POO","text":""},{"location":"04phpoo.html#encapsulacio","title":"Encapsulaci\u00f3","text":"<p>Les propietats es defineixen privades o protegides (si volem que les classes heretades puguen accedir).</p> <p>Per a cada propietat, s'afigen m\u00e8todes p\u00fablics (getter/setter):</p> <pre><code>public setPropiedad(tipo $param)\npublic getPropiedad() : tipo\n</code></pre> <p>Les constants es defineixen p\u00fabliques perqu\u00e8 siguen accessibles per tots els recursos.</p> <pre><code>&lt;?php\nclass\u00a0MayorMenor\u00a0{\n    private\u00a0int $mayor;\n    private\u00a0int $menor;\n\n    public\u00a0function\u00a0setMayor(int\u00a0$may)\u00a0{\n        $this-&gt;mayor\u00a0=\u00a0$may;\n    }\n\n    public\u00a0function\u00a0setMenor(int\u00a0$men)\u00a0{\n        $this-&gt;menor\u00a0=\u00a0$men;\n    }\n\n    public\u00a0function\u00a0getMayor()\u00a0:\u00a0int\u00a0{\n        return\u00a0$this-&gt;mayor;\n    }\n\n    public\u00a0function\u00a0getMenor()\u00a0:\u00a0int\u00a0{\n        return\u00a0$this-&gt;menor;\n    }\n}\n</code></pre>"},{"location":"04phpoo.html#rebent-i-enviant-objectes","title":"Rebent i enviant objectes","text":"<p>\u00c9s recomanable indicar-ho en la mena de par\u00e0metres. Si l'objecte pot retornar nuls es posa <code>?</code> davant del nom de la classe.</p> <p>Objectes per refer\u00e8ncia</p> <p>Els objectes que s'envien i reben com a par\u00e0metres sempre es passen per refer\u00e8ncia.</p> <pre><code>&lt;?php\nfunction\u00a0maymen(array\u00a0$numeros)\u00a0:\u00a0?MayorMenor\u00a0{\n    $a\u00a0=\u00a0max($numeros);\n    $b\u00a0=\u00a0min($numeros);\n\n    $result\u00a0=\u00a0new\u00a0MayorMenor();\n    $result-&gt;setMayor($a);\n    $result-&gt;setMenor($b);\n\n    return\u00a0$result;\n}\n\n$resultado\u00a0=\u00a0\u00a0maymen([1,76,9,388,41,39,25,97,22]);\necho\u00a0\"&lt;br&gt;Mayor:\u00a0\".$resultado-&gt;getMayor();\necho\u00a0\"&lt;br&gt;Menor:\u00a0\".$resultado-&gt;getMenor();\n</code></pre>"},{"location":"04phpoo.html#constructor","title":"Constructor","text":"<p>El constructor dels objectes es defineix mitjan\u00e7ant el m\u00e8tode m\u00e0gic <code>__construct</code>. Pot o no tindre par\u00e0metres, per\u00f2 nom\u00e9s pot haver-hi un \u00fanic constructor.</p> <pre><code>&lt;?php\nclass\u00a0Persona\u00a0{\n    private\u00a0string $nombre;\n\n    public\u00a0function\u00a0__construct(string $nom)\u00a0{\n        $this-&gt;nombre = $nom;\n    }\n\n    public\u00a0function\u00a0imprimir(){\n    \u00a0\u00a0echo\u00a0$this-&gt;nombre;\n    \u00a0\u00a0echo\u00a0'&lt;br&gt;';\n    }\n}\n\n$bruno\u00a0=\u00a0new\u00a0Persona(\"Bruno\u00a0D\u00edaz\");\n$bruno-&gt;imprimir();\n</code></pre>"},{"location":"04phpoo.html#constructors-en-php-8","title":"Constructors en PHP 8","text":"<p>Una de les grans novetats que ofereix PHP 8 \u00e9s la simplificaci\u00f3 dels constructors amb par\u00e0metres, la qual cosa es coneix com a promoci\u00f3 de les propietats del constructor*.</p> <p>Per a aix\u00f2, en comptes d'haver de declarar les propietats com a privades o protegides, i despr\u00e9s dins del constructor haver d'assignar els par\u00e0metres a est\u00e0s propietats, el propi constructor promociona les propietats.</p> <p>Vegem-ho millor amb un exemple. Imaginem una classe <code>Punt</code> on vulguem emmagatzemar les seues coordenades:</p> <pre><code>&lt;?php\nclass Punto {\n    protected float $x;\n    protected float $y;\n    protected float $z;\n\n    public function __construct(\n        float $x = 0.0,\n        float $y = 0.0,\n        float $z = 0.0\n    ) {\n        $this-&gt;x = $x;\n        $this-&gt;y = $y;\n        $this-&gt;z = $z;\n    }\n}\n</code></pre> <p>En PHP 8, quedaria de la seg\u00fcent manera (molt m\u00e9s curt, la qual cosa facilita la seua llegibilitat):</p> <pre><code>&lt;?php\nclass Punto {\n    public function __construct(\n        protected float $x = 0.0,\n        protected float $y = 0.0,\n        protected float $z = 0.0,\n    ) {}\n}\n</code></pre> <p>L'ordre importa</p> <p>A l'hora de codificar l'ordre dels elements ha de ser:</p> <pre><code>&lt;?php\ndeclare(strict_types=1);\n\nclass NombreClase {\n    // propiedades\n\n    // constructor\n\n    // getters - setters\n\n    // resto de m\u00e9todos\n}\n?&gt;\n</code></pre>"},{"location":"04phpoo.html#classes-estatiques","title":"Classes est\u00e0tiques","text":"<p>S\u00f3n aquelles que tenen propietats i/o m\u00e8todes est\u00e0tics (tamb\u00e9 es coneixen com de classe, perqu\u00e8 el seu valor es comparteix entre totes les inst\u00e0ncies de la mateixa classe).</p> <p>Es declaren amb <code>static</code> i es referencien amb <code>::</code>.</p> <ul> <li>Si volem accedir a un m\u00e8tode est\u00e0tic, s'anteposa el nom de la classe: <code>Producte::nuevoProducto()</code>.</li> <li>Si des d'un m\u00e8tode volem accedir a una propietat est\u00e0tica de la mateixa classe, s'utilitza la refer\u00e8ncia <code>self</code>: <code>self::$numProductos</code></li> </ul> <pre><code>&lt;?php\nclass Producto {\n    const IVA = 0.23;\n    private static $numProductos = 0; \n\n    public static function nuevoProducto() {\n        self::$numProductos++;\n    }\n}\n\nProducto::nuevoProducto();\n$impuesto = Producto::IVA;\n</code></pre> <p>Tamb\u00e9 podem tindre classes normals que tinguen alguna propietat est\u00e0tica:</p> <pre><code>&lt;?php\nclass\u00a0Producto\u00a0{\n    const\u00a0IVA\u00a0=\u00a00.23;\n    private\u00a0static\u00a0$numProductos\u00a0=\u00a00;\u00a0\n    private\u00a0$codigo;\n\n    public\u00a0function\u00a0__construct(string\u00a0$cod)\u00a0{\n        self::$numProductos++;\n        $this-&gt;codigo\u00a0=\u00a0$cod;\n    }\n\n    public\u00a0function\u00a0mostrarResumen()\u00a0:\u00a0string\u00a0{\n        return\u00a0\"El\u00a0producto\u00a0\".$this-&gt;codigo.\" es\u00a0el\u00a0n\u00famero\u00a0\".self::$numProductos;\n    }\n}\n\n$prod1\u00a0=\u00a0new\u00a0Producto(\"PS5\");\n$prod2\u00a0=\u00a0new\u00a0Producto(\"XBOX\u00a0Series\u00a0X\");\n$prod3\u00a0=\u00a0new\u00a0Producto(\"Nintendo\u00a0Switch\");\necho\u00a0$prod3-&gt;mostrarResumen();\n</code></pre>"},{"location":"04phpoo.html#introspeccio","title":"Introspecci\u00f3","text":"<p>En treballar amb classes i objectes, existeixen un conjunt de funcions ja definides pel llenguatge que permeten obtindre informaci\u00f3 sobre els objectes:</p> <ul> <li><code>instanceof</code>: permet comprovar si un objecte \u00e9s d'una determinada classe</li> <li><code>get_class</code>: retorna el nom de la classe</li> <li><code>get_declared_class</code>: retorna un array amb els noms de les classes definides</li> <li><code>class_\u00e0lies</code>: crea un \u00e0lies</li> <li><code>class_exists</code> / <code>method_exists</code> / <code>property_exists</code>: <code>true</code> si la classe / m\u00e8tode / propietat est\u00e0 definida</li> <li><code>get_class_methods</code> / <code>get_class_vars</code> / <code>get_object_vars</code>: Retorna un array amb els noms dels m\u00e8todes / propietats d'una classe / propietats d'un objecte que s\u00f3n accessibles des d'on es fa la crida.</li> </ul> <p>Un exemple d'aquestes funcions pot ser el seg\u00fcent:</p> <pre><code>&lt;?php\n$p\u00a0=\u00a0new\u00a0Producto(\"PS5\");\nif\u00a0($p\u00a0instanceof\u00a0Producto)\u00a0{\n    echo\u00a0\"Es\u00a0un\u00a0producto\";\n    echo\u00a0\"La\u00a0clase\u00a0es\u00a0\".get_class($p);\n\n    class_alias(\"Producto\",\u00a0\"Articulo\");\n    $c\u00a0=\u00a0new\u00a0Articulo(\"Nintendo\u00a0Switch\");\n    echo\u00a0\"Un\u00a0articulo\u00a0es\u00a0un\u00a0\".get_class($c);\n\n    print_r(get_class_methods(\"Producto\"));\n    print_r(get_class_vars(\"Producto\"));\n    print_r(get_object_vars($p));\n\n    if\u00a0(method_exists($p,\u00a0\"mostrarResumen\"))\u00a0{\n        $p-&gt;mostrarResumen();\n    }\n}\n</code></pre> <p>Clonat</p> <p>En assignar dos objectes no es copien, es crea una nova refer\u00e8ncia. Si volem una c\u00f2pia, cal clonar-ho mitjan\u00e7ant el m\u00e8tode <code>clone(object) : object</code></p> <p>Si volem modificar el clonat per defecte, cal definir el m\u00e8tode m\u00e0gic <code>__clone()</code> que es dir\u00e0 despr\u00e9s de copiar totes les propietats.</p> <p>M\u00e9s informaci\u00f3 en https://www.php.net/manual/es/language.oop5.cloning.php</p>"},{"location":"04phpoo.html#herencia","title":"Her\u00e8ncia","text":"<p>PHP suporta her\u00e8ncia simple, de manera que una classe nom\u00e9s pot heretar d'una altra, no de dues classes alhora. Per a aix\u00f2 s'utilitza la paraula clau <code>extends</code>. Si volem que la classe A hereta de la classe B farem:</p> <pre><code>class A extends B\n</code></pre> <p>El fill hereta els atributs i m\u00e8todes p\u00fablics i protegits.</p> <p>Cada classe en un arxiu</p> <p>Com ja hem comentat, haur\u00edem de col\u00b7locar cada classe en un arxiu diferent per a posteriorment utilitzar-lo mitjan\u00e7ant <code>include</code>. En els seg\u00fcent exemple els hem col\u00b7locats junt per a facilitar la seua llegibilitat.</p> <p>Per exemple, tenim una classe <code>Producte</code> i una <code>Tv</code> que hereta de <code>Producte</code>:</p> <pre><code>&lt;?php\nclass Producto {\n    public $codigo;\n    public $nombre;\n    public $nombreCorto;\n    public $PVP;\n\n    public function mostrarResumen() {\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codigo.\"&lt;/p&gt;\";\n    }\n}\n\nclass Tv extends Producto {\n    public $pulgadas;\n    public $tecnologia;\n}\n</code></pre> <p>Podemos utilizar las siguientes funciones para averiguar si hay relaci\u00f3n entre dos clases:</p> <ul> <li><code>get_parent_class(object): string</code></li> <li><code>is_subclass_of(object, string): bool</code></li> </ul> <pre><code>&lt;?php\n$t = new Tv();\n$t-&gt;codigo = 33;\nif ($t instanceof Producto) {\n    echo $t-&gt;mostrarResumen();\n}\n\n$padre = get_parent_class($t);\necho \"&lt;br&gt;La clase padre es: \" . $padre;\n$objetoPadre = new $padre;\necho $objetoPadre-&gt;mostrarResumen();\n\nif (is_subclass_of($t, 'Producto')) {\n    echo \"&lt;br&gt;Soy un hijo de Producto\";\n}\n</code></pre>"},{"location":"04phpoo.html#polimorfisme","title":"Polimorfisme","text":"<p>Podem crear m\u00e8todes en els fills amb el mateix nom que el pare, canviant el seu comportament. Per a invocar als m\u00e8todes del pare -&gt; <code>parent::nombreMetodo()</code></p> <pre><code>&lt;?php\nclass Tv extends Producto {\n   public $pulgadas;\n   public $tecnologia;\n\n   public function mostrarResumen() {\n      parent::mostrarResumen();\n      echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n   }\n}\n</code></pre>"},{"location":"04phpoo.html#constructor-en-fills","title":"Constructor en fills","text":"<p>En els fills no es crea cap constructor de manera autom\u00e0tica. Pel que si no n'hi ha, s'invoca autom\u00e0ticament al del pare. En canvi, si el definim en el fill, hem d'invocar al del pare de manera expl\u00edcita.</p> PHP7PHP8 <pre><code>&lt;?php\nclass Producto {\n    public string $codigo;\n\n    public\u00a0function\u00a0__construct(string $codigo) {\n        $this-&gt;codigo =\u00a0$codigo;\n    }\n\n    public function mostrarResumen() {\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codigo.\"&lt;/p&gt;\";\n    }\n}\n\nclass Tv extends Producto {\n    public $pulgadas;\n    public $tecnologia;\n\n    public\u00a0function\u00a0__construct(string\u00a0$codigo,\u00a0int\u00a0$pulgadas,\u00a0string\u00a0$tecnologia)\u00a0{\n        parent::__construct($codigo);\n        $this-&gt;pulgadas\u00a0=\u00a0$pulgadas;\n        $this-&gt;tecnologia\u00a0=\u00a0$tecnologia;\n    }\n\n    public function mostrarResumen() {\n        parent::mostrarResumen();\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n    }\n}\n</code></pre> <pre><code>&lt;?php\nclass Producto {\n    public\u00a0function\u00a0__construct(private string $codigo) { }\n\n    public function mostrarResumen() {\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codigo.\"&lt;/p&gt;\";\n    }        \n}\n\nclass Tv extends Producto {\n\n    public\u00a0function\u00a0__construct(\n        string\u00a0$codigo,\n        private int\u00a0$pulgadas,\n        private string\u00a0$tecnologia)\n    {\n        parent::__construct($codigo);\n    }\n\n    public function mostrarResumen() {\n        parent::mostrarResumen();\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n    }\n}\n</code></pre>"},{"location":"04phpoo.html#abstraccio","title":"Abstracci\u00f3","text":"<p>Les classes abstractes obliguen a heretar d'una classe, ja que no es permet la seua instanciaci\u00f3n. Es defineix mitjan\u00e7ant <code>abstract class NombreClase {</code>. Una classe abstracta pot contindre propietats i m\u00e8todes no-abstractes, i/o m\u00e8todes abstractes.</p> <pre><code>&lt;?php\n//\u00a0Clase\u00a0abstracta\nabstract\u00a0class\u00a0Producto\u00a0{\n    private\u00a0$codigo;\n    public\u00a0function\u00a0getCodigo()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;codigo;\n    }\n    //\u00a0M\u00e9todo\u00a0abstracto\n    abstract\u00a0public\u00a0function\u00a0mostrarResumen();\n}\n</code></pre> <p>Quan una classe hereta d'una classe abstracta, obligat\u00f2riament ha d'implementar els m\u00e8todes que t\u00e9 el pare marcats com a abstractes.</p> <pre><code>&lt;?php\nclass Tv extends Producto {\n    public $pulgadas;\n    public $tecnologia;\n\n    public function mostrarResumen() { //obligado a implementarlo\n        echo \"&lt;p&gt;C\u00f3digo \".$this-&gt;getCodigo().\"&lt;/p&gt;\";\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n    }\n}\n\n$t = new Tv();\necho $t-&gt;getCodigo();\n</code></pre>"},{"location":"04phpoo.html#classes-finals","title":"Classes finals","text":"<p>S\u00f3n classes oposades a abstractes, ja que eviten que es puga heretar una classe o m\u00e8tode per a sobreescriure-ho.</p> <pre><code>&lt;?php\nclass\u00a0Producto\u00a0{\n    private\u00a0$codigo;\n\n    public\u00a0function\u00a0getCodigo()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;codigo;\n    }\n\n    final\u00a0public\u00a0function\u00a0mostrarResumen()\u00a0:\u00a0string\u00a0{\n        return\u00a0\"Producto\u00a0\".$this-&gt;codigo;\n    }\n}\n\n// No podremos heredar de Microondas\nfinal\u00a0class\u00a0Microondas\u00a0extends\u00a0Producto\u00a0{\n    private\u00a0$potencia;\n\n    public\u00a0function\u00a0getPotencia()\u00a0:\u00a0int\u00a0{\n        return\u00a0$this-&gt;potencia;\n    }\n\n    // No podemos implementar mostrarResumen()\n}\n</code></pre>"},{"location":"04phpoo.html#interficies","title":"Interf\u00edcies","text":"<p>Permet definir un contracte amb les signatures dels m\u00e8todes a complir. Aix\u00ed doncs, nom\u00e9s cont\u00e9 declaracions de funcions i totes han de ser p\u00fabliques.</p> <p>Es declaren amb la paraula clau <code>interface</code> i despr\u00e9s les classes que complisquen el contracte el realitzen mitjan\u00e7ant la paraula clau <code>implements</code>.</p> <pre><code>&lt;?php\ninterface Nombreable {\n// declaraci\u00f3n de funciones\n}\nclass NombreClase implements NombreInterfaz {\n// c\u00f3digo de la clase\n</code></pre> <p>Es permet l'her\u00e8ncia d'interf\u00edcies. A m\u00e9s, una classe pot implementar diverses interf\u00edcies (en aquest cas, s\u00ed que suporta l'her\u00e8ncia m\u00faltiple, per\u00f2 nom\u00e9s d'interf\u00edcies).</p> <pre><code>&lt;?php\ninterface\u00a0Mostrable\u00a0{\n    public\u00a0function\u00a0mostrarResumen()\u00a0:\u00a0string;\n}\n\ninterface\u00a0MostrableTodo\u00a0extends\u00a0Mostrable\u00a0{\n    public\u00a0function\u00a0mostrarTodo()\u00a0:\u00a0string;\n}\n\ninterface\u00a0Facturable\u00a0{\n    public\u00a0function\u00a0generarFactura()\u00a0:\u00a0string;\n}\n\nclass\u00a0Producto\u00a0implements\u00a0MostrableTodo,\u00a0Facturable\u00a0{\n    //\u00a0Implementaciones\u00a0de\u00a0los\u00a0m\u00e9todos\n    // Obligatoriamente deber\u00e1 implementar public\u00a0function\u00a0mostrarResumen, mostrarTodo y generarFactura\n}\n</code></pre>"},{"location":"04phpoo.html#metodes-encadenats","title":"M\u00e8todes encadenats","text":"<p>Segueix el plantejament de la programaci\u00f3 funcional, i tamb\u00e9 es coneix com method chaining. Planteja que sobre un objecte es realitzen diverses crides.</p> <pre><code>&lt;?php\n$p1\u00a0=\u00a0new\u00a0Libro();\n$p1-&gt;setNombre(\"Harry\u00a0Potter\");\n$p1-&gt;setAutor(\"JK\u00a0Rowling\");\necho\u00a0$p1;\n\n// Method chaining\n$p2\u00a0=\u00a0new\u00a0Libro();\n$p2-&gt;setNombre(\"Patria\")-&gt;setAutor(\"Aramburu\");\necho\u00a0$p2;\n</code></pre> <p>Per a facilitar-ho, modificarem tots els seus m\u00e8todes mutants (que modifiquen dades, setters*, ...) perqu\u00e8 retornen una refer\u00e8ncia a <code>$this</code>:</p> <pre><code>&lt;?php\nclass\u00a0Libro\u00a0{\n    private\u00a0string\u00a0$nombre;\n    private\u00a0string\u00a0$autor;\n\n    public\u00a0function\u00a0getNombre()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;nombre;\n    }\n    public\u00a0function\u00a0setNombre(string\u00a0$nombre)\u00a0:\u00a0Libro\u00a0{\u00a0\n        $this-&gt;nombre\u00a0=\u00a0$nombre;\n        return\u00a0$this;\n    }\n\n    public\u00a0function\u00a0getAutor()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;autor;\n    }\n    public\u00a0function\u00a0setAutor(string\u00a0$autor)\u00a0:\u00a0Libro\u00a0{\n        $this-&gt;autor\u00a0=\u00a0$autor;\n        return\u00a0$this;\n    }\n\n    public\u00a0function\u00a0__toString()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;nombre.\"\u00a0de\u00a0\".$this-&gt;autor;\n    }\n}\n</code></pre>"},{"location":"04phpoo.html#metodes-magics","title":"M\u00e8todes m\u00e0gics","text":"<p>Totes les classes PHP ofereixen un conjunt de m\u00e8todes, tamb\u00e9 coneguts com magic methods que es poden sobreescriure per a substituir el seu comportament. Alguns d'ells ja els hem utilitzats.</p> <p>Davant qualsevol dubte, \u00e9s convenient consultar la documentaci\u00f3 oficial.</p> <p>Els m\u00e9s destacables s\u00f3n:</p> <ul> <li><code>__construct()</code></li> <li><code>__destruct()</code> \u2192 s'invoca en perdre la refer\u00e8ncia. S'utilitza per a tancar una connexi\u00f3 a la BD, tancar un fitxer, ...</li> <li><code>__toString()</code> \u2192 representaci\u00f3 de l'objecte com a cadena. \u00c9s a dir, quan fem <code>echo $objecte</code> s'executa autom\u00e0ticament aquest m\u00e8tode.</li> <li><code>__get(propietat)</code>, <code>__set(propietat, valor)</code> \u2192 Permetria accedir a les propietat privades, encara que sempre \u00e9s m\u00e9s llegible/mantenible codificar els getter/setter.</li> <li><code>__isset(propietat)</code>, <code>__unset(propietat)</code> \u2192 Permet esbrinar o llevar el valor a una propietat.</li> <li><code>__sleep()</code>, <code>__wakeup()</code> \u2192 S'executen en recuperar (unserialize^) o emmagatzemar un objecte que se serialitza (serialize), i s'utilitzen per a permet definir quines propietats se serialitzen.</li> <li><code>__call()</code>, <code>__callStatic()</code> \u2192 S'executen en cridar a un m\u00e8tode que no \u00e9s p\u00fablic. Permeten sobrecarreguen m\u00e8todes.</li> </ul>"},{"location":"04phpoo.html#3-espai-de-noms","title":"3. Espai de noms","text":"<p>Des de PHP 5.3 i tamb\u00e9 coneguts com Namespaces, permeten organitzar les classes/interf\u00edcies, funcions i/o constants de manera similar als paquets a Java.</p> <p>Recomanaci\u00f3</p> <p>Un nom\u00e9s namespace per arxiu i crear una estructura de carpetes respectant els nivells/subnivells (igual que es fa a Java)</p> <p>Es declaren en la primera l\u00ednia mitjan\u00e7ant la paraula clau <code>namespace</code> seguida del nom de l'espai de noms assignat (cada subnivell se separa amb la barra invertida <code>\\</code>):</p> <p>Per exemple, per a col\u00b7locar la classe <code>Producte</code> dins del namespace <code>Dwes\\Exemples</code> ho far\u00edem aix\u00ed:</p> <pre><code>&lt;?php\nnamespace\u00a0Dwes\\Exemples;\n\nconst\u00a0IVA\u00a0=\u00a00.21;\n\nclass\u00a0Producte\u00a0{\n    public\u00a0$nombre;\n    \u00a0\u00a0\n    public\u00a0function\u00a0muestra()\u00a0:\u00a0void\u00a0{\n        echo\"&lt;p&gt;Prod:\"\u00a0.\u00a0$this-&gt;nombre\u00a0.\u00a0\"&lt;/p&gt;\";\n    }\n}\n</code></pre>"},{"location":"04phpoo.html#acces","title":"Acc\u00e9s","text":"<p>Per a referenciar a un recurs que cont\u00e9 un namespace, primer hem de tindre'l disponible fent \u00fas de <code>include</code> o <code>require</code>. Si el recurs est\u00e0 en el mateix namespace, es realitza un acc\u00e9s directe (es coneix com a acc\u00e9s sense qualificar).</p> <p>Realment hi ha tres tipus d'acc\u00e9s:</p> <ul> <li>sense qualificar: <code>recurs</code></li> <li>qualificat: <code>rutaRelativa\\recurs</code> \u2192 no fa falta posar el namespace complet</li> <li>totalment qualificat: <code>\\rutaAbsoluta\\recurs</code></li> </ul> <pre><code>&lt;?php\nnamespace\u00a0Dwes\\Ejemplos;\n\ninclude_once(\"Producto.php\");\n\necho\u00a0IVA;\u00a0//\u00a0sin\u00a0cualificar\necho\u00a0Utilidades\\IVA;\u00a0// acceso cualificado. Dar\u00eda error, no existe \\Dwes\\Ejemplos\\Utilidades\\IVA\necho\u00a0\\Dwes\\Ejemplos\\IVA;\u00a0//\u00a0totalmente\u00a0cualificado\n\n$p1\u00a0=\u00a0new\u00a0Producto();\u00a0//\u00a0lo busca en el mismo namespace y encuentra \\Dwes\\Ejemplos\\Producto\n$p2\u00a0=\u00a0new\u00a0Model\\Producto(); // dar\u00eda error, no existe el namespace Model. Est\u00e1 buscando \\Dwes\\Ejemplos\\Model\\Producto\n$p3\u00a0=\u00a0new\u00a0\\Dwes\\Ejemplos\\Producto(); //\u00a0\\Dwes\\Ejemplos\\Producto\n</code></pre>"},{"location":"04phpoo.html#acces_1","title":"Acc\u00e9s","text":"<p>Per a evitar la refer\u00e8ncia qualificada podem declarar l'\u00fas mitjan\u00e7ant <code>use</code> (similar a fer <code>import</code> a Java). Es fa en la cap\u00e7alera, despr\u00e9s del <code>namespace</code>:</p> <p>Els tipus Posibles s\u00f3n:</p> <ul> <li><code>use const nombreCualificadoConstante</code></li> <li><code>use function nombreCualificadoFuncion</code></li> <li><code>use nombreCualificadoClase</code></li> <li><code>use nombreCualificadoClase as NuevoNombre</code> // per a canviar de nom elements</li> </ul> <p>Per exemple, si volem utilitzar la classe <code>\\Dwes\\Exemples\\Producte</code> des d'un recurs que es troba en l'arrel, per exemple en <code>inici.php</code>, far\u00edem:</p> <pre><code>&lt;?php\ninclude_once(\"Dwes\\Exemples\\Producte.php\");\n\nuse\u00a0const\u00a0Dwes\\Exemples\\IVA;\nuse\u00a0\\Dwes\\Exemples\\Producte;\n\necho\u00a0IVA;\n$p1\u00a0=\u00a0new\u00a0Producte();\n</code></pre> <p>To <code>use</code> or not to <code>use</code></p> <p>En resum, <code>use</code> permet accedir sense qualificar a recursos que estan en un altre namespace. Si estem en el mateix espai de nom, no necessitem <code>use</code>.</p>"},{"location":"04phpoo.html#organitzacio","title":"Organitzaci\u00f3","text":"<p>Tot projecte, conforme creix, necessita organitzar el seu codi font. Es planteja una organitzaci\u00f3 en la qual els arxius que interactuan amb el navegador es col\u00b7loquen en l'arrel, i les classes que definim van dins d'un namespace (i dins de la seua pr\u00f2pia carpeta <code>src</code> o <code>app</code>).</p> Organitzaci\u00f3 del codi font <p>Organitzaci\u00f3, includes i usos</p> <ul> <li>Col\u00b7locarem cada recurs en un fitxer a part.</li> <li>En la primera l\u00ednia indicarem la seua namespace (si no est\u00e0 en l'arrel).</li> <li>Si utilitzem altres recursos, farem un <code>include_once</code> d'aqueixos recursos (classes, interf\u00edcies, etc...).</li> <li>Cada recurs ha d'incloure tots els altres recursos que referencie: la classe de la qual hereta, interf\u00edcies que implementa, classes utilitzades/rebudes com a par\u00e0metres, etc...</li> <li>Si els recursos estan en un espai de noms diferent al que estem, emprarem <code>use</code> amb la ruta completa per a despr\u00e9s utilitzar refer\u00e8ncies sense qualificar.</li> </ul>"},{"location":"04phpoo.html#autoload","title":"Autoload","text":"<p>No \u00e9s tedi\u00f3s haver de fer el <code>include</code> de les classes? El autoload ve al rescat.</p> <p>Aix\u00ed doncs, permet carregar les classes (no les constants ni les funcions) que s'utilitzaran i evitar haver de fer el <code>include_once</code> de cadascuna d'elles. Per a aix\u00f2, es pot utilitzar el composer.</p>"},{"location":"04phpoo.html#4-composer","title":"4. Composer","text":"Logo Composer <p>Eina per excel\u00b7l\u00e8ncia en PHP per a la gesti\u00f3 de llibreries i depend\u00e8ncies, de manera que instal\u00b7la i les actualitza assegurant que tot l'equip de desenvolupament t\u00e9 el mateix entorn i versions. A m\u00e9s, ofereix autoloading del nostre codi, de manera que no h\u00e0gem de fer-lo nosaltres \"a m\u00e0\".</p> <p>Est\u00e0 escrit en PHP, i podeu consultar tota la seua documentaci\u00f3 en https://getcomposer.org/.</p> <p>Utilitza Packagist com a repositori de llibreries.</p> <p>Funcionalment, \u00e9s similar a Maven (Java) / npm (JS).</p>"},{"location":"04phpoo.html#installacio","title":"Instal\u00b7laci\u00f3","text":"<p>Si estem usant XAMPP, hem d'instal\u00b7lar Composer en el propi sistema operatiu. Es recomana seguir les instruccions oficials segons el sistema operatiu a emprar.</p> <p>En canvi, si usem Docker, necessitem modificar la configuraci\u00f3 del nostre contenidor. En el nostre cas, hem decidit modificar l'arxiu <code>Dockerfile</code> i afegir el seg\u00fcent comando:</p> <pre><code>COPY --from=composer:2.0 /usr/bin/composer /usr/local/bin/composer\n</code></pre> <p>\u00c9s important que dins del contenidor comprovem que tenim la v2:</p> <pre><code>composer -V\n</code></pre>"},{"location":"04phpoo.html#primers-passos","title":"Primers passos","text":"<p>Quan creem un projecte per primera vegada, hem d'inicialitzar el repositori. Per a aix\u00f2, executarem el comando <code>composer init</code> on:</p> <ul> <li>Configurem el nom del paquet, descripci\u00f3, autor (nom ), tipus de paquet (project), etc... <li>Definim les depend\u00e8ncies del projecte (<code>require</code>) i les de desenvolupament (<code>require-dev</code>) de manera interactiva.</li> <li>En les de desenvolupament s'indica aquelles que no s'instal\u00b7laran a l'entorn de producci\u00f3, per exemple, les llibreries de proves.</li> <p>Despr\u00e9s de la seua configuraci\u00f3, es crear\u00e0 autom\u00e0ticament l'arxiu <code>composer.json</code> amb les dades introdu\u00efdes i desc\u00e0rrega les llibreries en la carpeta <code>vendor</code>. La instal\u00b7laci\u00f3 de les llibreries sempre es realitza de manera local per a cada projecte.</p> <pre><code>{\n    \"name\": \"dwes/log\",\n    \"description\": \"Pruebas con Monolog\",\n    \"type\": \"project\",\n    \"require\": {\n        \"monolog/monolog\": \"^2.1\"\n    },\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Aitor Medrano\",\n            \"email\": \"a.medrano@edu.gva.es\"\n        }\n    ]\n}\n</code></pre> <p>A l'hora d'indicar cada llibreria introduirem:</p> <ul> <li>el nom de la llibreria, composta tant pel creador o \"vendor\", com pel nom del projecte. Exemples: <code>monolog/monolog</code> o <code>laravel/installer</code>.</li> <li> <p>la versi\u00f3 de cada llibreria. Tenim diverses opcions per a indicar-la:</p> <ul> <li>Directament: 1.4.2</li> <li>Amb comodins: 1.</li> <li>A partir de: &gt;= 2.0.3</li> <li>Sense trencament de canvis: ^1.3.2 // &gt;=1.3.2 &lt;2.0.0</li> </ul> </li> </ul>"},{"location":"04phpoo.html#actualitzar-llibreries","title":"Actualitzar llibreries","text":"<p>Podem definir les depend\u00e8ncies via l'arxiu <code>composer.json</code> o mitjan\u00e7ant comandos amb el format <code>composer require vendor/package:version</code>. Per exemple, si volem afegir phpUnit com a llibreria de desenvolupament, farem:</p> <pre><code>composer require phpunit/phpunit \u2013dev\n</code></pre> <p>Despr\u00e9s d'afegir noves llibreries, hem d'actualitzar el nostre projecte:</p> <pre><code>composer update\n</code></pre> <p>Si creem l'arxiu <code>composer.json</code> nosaltres directament sense inicialitzar el repositori, hem d'instal\u00b7lar les depend\u00e8ncies:</p> <pre><code>composer install\n</code></pre> <p>En fer aquest pas (tant instal\u00b7lar com actualitzar), com ja hem comentat, es descarreguen les llibreries en dins de la carpeta <code>vendor</code>. \u00c9s molt important afegir aquesta carpeta a l'arxiu <code>.gitignore</code> per a no pujar-les a GitHub.</p> <p>A m\u00e9s es crea l'arxiu <code>composer.lock</code>, que emmagatzema la versi\u00f3 exacta que s'ha instal\u00b7lat de cada llibreria (aquest arxiu no es toca).</p>"},{"location":"04phpoo.html#autoloadphp","title":"<code>autoload.php</code>","text":"<p>Composer crea de manera autom\u00e0tica en <code>vendor/autoload.php</code> el codi per a incloure de manera autom\u00e0tica totes les llibreries que tinguem configurades en <code>composer.json</code>.</p> <p>Per a utilitzar-ho, en la cap\u00e7alera del nostre arxius posarem:</p> <pre><code>&lt;?php\nrequire 'vendor/autoload.php';\n</code></pre> <p>En el nostre cas, de moment nom\u00e9s el podrem en els arxius on provem les classes</p> <p>Si volem que Composer tamb\u00e9 s'encarregue de carregar de manera autom\u00e0tica les nostres classes de domini, dins de l'arxiu <code>composer.json</code>, definirem la propietat <code>autoload</code>:</p> <pre><code>\"autoload\": {\n    \"psr-4\": {\"Dwes\\\\\": \"app/Dwes\"}\n},\n</code></pre> <p>Posteriorment, hem de tornar a generar el autoload de Composer mitjan\u00e7ant l'opci\u00f3 <code>dump-autoload</code> (o <code>du</code>):</p> <pre><code>composer dump-autoload\n</code></pre>"},{"location":"04phpoo.html#5-logger-amb-monolog","title":"5. Logger amb Monolog","text":"<p>Provarem Composer afegint la llibreria de Monolog al nostre projecte. Es tracta d'un llibreria per a la gesti\u00f3 de logs de les nostres aplicacions, suportant diferents nivells (info, warning, etc...), eixides (fitxers, sockets, BBDD, Web Services, email, etc) i formats (text pla, HTML, JSON, etc...).</p> <p>Per a aix\u00f2, inclourem la llibreria en el nostre projecte amb:</p> <pre><code>composer require monolog/monolog\n</code></pre> <p>Monolog 2 requereix almenys PHP 7.2, compleix amb el estandar de logging PSR-3, i \u00e9s la llibreria emprada per Laravel i Symfony per a la gesti\u00f3 de logs.</p> <p>Quan utilitzar un log</p> <ul> <li>Seguir les acciones/moviments dels usuaris</li> <li>Registrar les transaccions</li> <li>Rastrejar els errors d'usuari</li> <li>Fallades/avisos a nivell de sistema</li> <li>Interpretar i col\u00b7leccionar dades per a posterior investigaci\u00f3 de patrons</li> </ul>"},{"location":"04phpoo.html#nivells","title":"Nivells","text":"<p>A continuaci\u00f3 vam mostrar els diferents nivells de menys a m\u00e9s restrictiu:</p> <pre><code>* debug -100: Informaci\u00f3 detallada amb prop\u00f2sits de debug. No usar en entorns de producci\u00f3.\n* info - 200: Esdeveniments interessants com l'inici de sessi\u00f3 d'usuaris.\n* notice - 250: Esdeveniments normals per\u00f2 significatius.\n* warning - 300: Ocurr\u00e8ncies excepcionals que no arriben a ser error.\n* error - 400: Errors d'execuci\u00f3 que permeten continuar amb l'execuci\u00f3 de l'aplicaci\u00f3 per\u00f2 que han de ser monitorats.\n* critical - 500: Situacions importants on es generen excepcions no esperades o no hi ha disponible un component.\n* alert - 550: S'han de prendre mesures immediatament.\n  Caiguda completa de la web, base de dades no disponible, etc... A m\u00e9s, se solen enviar missatges per email.\n* emergency - 600: \u00c9s l'error m\u00e9s greu i indica que tot el sistema est\u00e0 inutilitzable.\n</code></pre>"},{"location":"04phpoo.html#hola-monolog","title":"Hola Monolog","text":"<p>Per exemple, en l'arxiu <code>pruebaLog.php</code> que col\u00b7locar\u00edem en l'arrel, primer incloem el autoload, importem els classes a utilitzar per a finalment usar els m\u00e8todes de Monolog:</p> <pre><code>&lt;?php\ninclude __DIR__ .\"/vendor/autoload.php\";\n\nuse Monolog\\Level;\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\n\n$log = new Logger(\"MiLogger\");\n$log-&gt;pushHandler(new StreamHandler(\"logs/milog.log\", Level::Debug));\n\n$log-&gt;debug(\"Esto es un mensaje de DEBUG\");\n$log-&gt;info(\"Esto es un mensaje de INFO\");\n$log-&gt;warning(\"Esto es un mensaje de WARNING\");\n$log-&gt;error(\"Esto es un mensaje de ERROR\");\n$log-&gt;critical(\"Esto es un mensaje de CRITICAL\");\n$log-&gt;alert(\"Esto es un mensaje de ALERT\");\n</code></pre> <p>En tots els m\u00e8todes de registre de missatges (<code>debug</code>, <code>info</code>, ...), a m\u00e9s del propi missatge, li podem passar informaci\u00f3 com el contingut d'alguna variable, usuari de l'aplicaci\u00f3, etc.. com a segon par\u00e0metre dins d'un array, el qual es coneix com array de contexte. \u00c9s convenient fer-ho mitjan\u00e7ant un array associatiu per a facilitar la lectura del log.</p> <pre><code>&lt;?php\n$log-&gt;warning(\"Producto no encontrado\", [$producto]);\n$log-&gt;warning(\"Producto no encontrado\", [\"datos\" =&gt; $producto]);\n</code></pre>"},{"location":"04phpoo.html#funcionament","title":"Funcionament","text":"<p>Cada inst\u00e0ncia <code>Logger</code> t\u00e9 un nom de canal i una pila de manejadores (handler). Cada missatge que manem al log travessa la pila de manejadores, i cadascun decideix si ha de registrar la informaci\u00f3, i si es dona el cas, finalitzar la propagaci\u00f3. Per exemple, un <code>StreamHandler</code> en el fons de la pila que ho escriga tot en disc, i en el topall afig un <code>MailHandler</code> que envie un mail nom\u00e9s quan hi haja un error.</p> <p>Els manejadores m\u00e9s utilitzats s\u00f3n:</p> <ul> <li><code>StreamHandler(ruta, nivel)</code></li> <li><code>RotatingFileHandler(ruta, maxFiles, nivel)</code></li> <li><code>NativeMailerHandler(para, asunto, desde, nivel)</code></li> <li><code>FirePHPHandler(nivel)</code></li> </ul> <p>Per exemple: Si volem que els missatges de l'aplicaci\u00f3 isquen pel log del servidor, en el nostre cas l'arxiu <code>error.log</code> de Apatxe utilitzarem com a ruta l'eixida d'error:</p> <pre><code>&lt;?php\n// error.log\n$log-&gt;pushHandler(new StreamHandler(\"php://stderr\", Level::Debug));\n</code></pre> <p>FirePHP</p> <p>Per exemple, mitjan\u00e7ant <code>FirePHPHandler</code>, podem utilitzar <code>FirePHP</code>, la qual \u00e9s una eina per a fer debug en la consola de Firefox. Despr\u00e9s d'instal\u00b7lar l'extensi\u00f3 en Firefox, habilitar les opcions i configurar el Handler*, podem veure els missatges acolorits amb les seues dades:</p> <pre><code>&lt;?php\n$log = new Logger(\"MiFirePHPLogger\");\n$log-&gt;pushHandler(new FirePHPHandler(Level::INFO));\n\n$datos = [\"real\" =&gt; \"Bruce Wayne\", \"personaje\" =&gt; \"Batman\"];\n$log-&gt;debug(\"Esto es un mensaje de DEBUG\", $datos);\n$log-&gt;info(\"Esto es un mensaje de INFO\", $datos);\n$log-&gt;warning(\"Esto es un mensaje de WARNING\", $datos);\n// ...\n</code></pre> <p> Ejemplo de uso de FirePHP </p>"},{"location":"04phpoo.html#manejadors","title":"Manejadors","text":"<p>Si no s'indica cap, se li assigna un per defecte. L'\u00faltim manejador inserit ser\u00e0 el primer a executar-se. Despr\u00e9s es van executant conforme a la pila.</p>"},{"location":"04phpoo.html#processadors","title":"Processadors","text":"<p>Els processadors permeten afegir informaci\u00f3 als missatges. Per a aix\u00f2, s'apilen despr\u00e9s de cada manejador mitjan\u00e7ant el m\u00e8tode <code>pushProcessor($processador)</code>.</p> <p>Alguns processadors coneguts s\u00f3n <code>IntrospectionProcessor</code> (mostren la l\u00ednia, fitxer, classe i metodo des del qual s'invoca el log), <code>WebProcessor</code> (afig la URI, m\u00e8tode i IP) o <code>GitProcessor</code> (afig la branca i el commit).</p> PHPConsola en format text <pre><code>&lt;?php\n$log = new Logger(\"MiLogger\");\n$log-&gt;pushHandler(new RotatingFileHandler(\"logs/milog.log\", 0, Level::DEBUG));\n$log-&gt;pushProcessor(new IntrospectionProcessor());\n$log-&gt;pushHandler(new StreamHandler(\"php://stderr\", Level::WARNING));\n// no usa Introspection pq lo hemos apilado despu\u00e9s, le asigno otro\n$log-&gt;pushProcessor(new WebProcessor());\n</code></pre> <pre><code>[2020-11-26T13:35:31.076138+01:00] MiLogger.DEBUG: Esto es un mensaje de DEBUG [] {\"file\":\"C:\\\\xampp\\\\htdocs\\\\log\\\\procesador.php\",\"line\":12,\"class\":null,\"function\":null}\n[2020-11-26T13:35:31.078344+01:00] MiLogger.INFO: Esto es un mensaje de INFO [] {\"file\":\"C:\\\\xampp\\\\htdocs\\\\log\\\\procesador.php\",\"line\":13,\"class\":null,\"function\":null}\n</code></pre>"},{"location":"04phpoo.html#formatadors","title":"Formatadors","text":"<p>S'associen als manejadores amb <code>setFormatter</code>. Els formateadores m\u00e9s utilitzats s\u00f3n <code>LineFormatter</code>, <code>HtmlFormatter</code> o <code>JsonFormatter</code>.</p> PHPConsola en JSON <pre><code>&lt;?php\n$log = new Logger(\"MiLogger\");\n$rfh = new RotatingFileHandler(\"logs/milog.log\", Level::Debug);\n$rfh-&gt;setFormatter(new JsonFormatter());\n$log-&gt;pushHandler($rfh);\n</code></pre> <pre><code>{\"message\":\"Esto es un mensaje de DEBUG\",\"context\":{},\"level\":100,\"level_name\":\"DEBUG\",\"channel\":\"MiLogger\",\"datetime\":\"2020-11-27T15:36:52.747211+01:00\",\"extra\":{}}\n{\"message\":\"Esto es un mensaje de INFO\",\"context\":{},\"level\":200,\"level_name\":\"INFO\",\"channel\":\"MiLogger\",\"datetime\":\"2020-11-27T15:36:52.747538+01:00\",\"extra\":{}}\n</code></pre> <p>M\u00e9s informaci\u00f3</p> <p>M\u00e9s informaci\u00f3 sobre manejadores, formateadores i processadors en https://github.com/Seldaek/monolog/blob/master/doc/02-handlers-formatters-processors.md</p>"},{"location":"04phpoo.html#6-generacio-de-pdf-amb-dompdf","title":"6.  Generaci\u00f3 de PDF amb DOMPDF","text":"<p>Amb PHP podem manejar tot tipus d'arxius com ja hem vist per\u00f2, qu\u00e8 passa si volem generar fitxers PDF amb dades tretes d'una base de dades?</p> <p>Gr\u00e0cies a una classe escrita en PHP, podem generar arxius PDF sense necessitat d'instal\u00b7lar llibreries addicionals en el nostre servidor. Per\u00f2 anem a utilitzar una llibreria que permet transformar codi html en pdf.</p>"},{"location":"04phpoo.html#dompdf","title":"DOMPDF","text":"<p>Afegirem la llibreria de DOMPDF al nostre projecte. Per a aix\u00f2, inclourem la llibreria en el nostre projecte amb:</p> <p><pre><code>composer require dompdf/dompdf\n</code></pre> Una vegada que DOMPDF est\u00e0 instal\u00b7lat, el proc\u00e9s per generar PDFs des de HTML \u00e9s bastant directe. Els passos b\u00e0sics s\u00f3n:</p> <p>Pas 1: Incloent DOMPDF Primer, necessitarem incloure DOMPDF en el script PHP. Si estem utilitzant Composer, aix\u00f2 es fa autom\u00e0ticament a trav\u00e9s de l'auto-c\u00e0rrega de Composer. Nom\u00e9s cal afegir la seg\u00fcent l\u00ednia al principi del'script:</p> <pre><code>require 'vendor/autoload.php';\n</code></pre> <p>Pas 2: Creaci\u00f3 d'una Inst\u00e0ncia de DOMPDF A continuaci\u00f3, creem una nova inst\u00e0ncia de la classe DOMPDF:</p> <pre><code>use Dompdf\\Dompdf;\n\n$dompdf = new Dompdf();\n</code></pre> <p>Pas 3: Carregar HTML Despr\u00e9s, carregem l'HTML en l'objecte DOMPDF. Aix\u00f2 es pot fer directament com una cadena o carregant un fitxer HTML:</p> <pre><code>$html = \"&lt;html&gt;&lt;body&gt;Hola, aix\u00f2 \u00e9s una prova.&lt;/body&gt;&lt;/html&gt;\";\n$dompdf-&gt;loadHtml($html);\n</code></pre> <p>O b\u00e9 carregar un fitxer HTML:</p> <pre><code>$dompdf-&gt;loadHtml(file_get_contents('path/to/your/file.html'));\n</code></pre> <p>Pas 4: Configuraci\u00f3 de la Mida del Paper i l'Orientaci\u00f3 Podem configurar la mida del paper i l'orientaci\u00f3 si \u00e9s necessari:</p> <pre><code>$dompdf-&gt;setPaper('A4', 'portrait'); // o 'landscape'\n</code></pre> <p>Pas 5: Renderitzaci\u00f3 del PDF Ara, demanem a DOMPDF que renderitze el PDF:</p> <pre><code>$dompdf-&gt;render();\n</code></pre> <p>Pas 6: Eixida del PDF Finalment, podem enviar el PDF al navegador, guardar-lo en un fitxer o fer amb ell el que necessitem:</p> <p>Per mostrar-lo al navegador:</p> <pre><code>$dompdf-&gt;stream(\"document.pdf\", array(\"Attachment\" =&gt; false));\n</code></pre> <p>Per desar-lo en un fitxer:</p> <pre><code>$output = $dompdf-&gt;output();\nfile_put_contents('path/to/save/document.pdf', $output);\n</code></pre>"},{"location":"04phpoo.html#consells-addicionals","title":"Consells Addicionals","text":"<p>Cal assegurar-se que l'HTML \u00e9s v\u00e0lid i ben format. DOMPDF intenta ser tolerant amb l'HTML, per\u00f2 l'HTML mal format pot causar problemes. El CSS que s'utilitze pot afectar significativament com es veu el PDF. DOMPDF suporta una bona part de CSS 2.1, per\u00f2 no tot. Si necessitem incloure imatges, cal assegurar-se que les rutes s\u00f3n absolutes i accessibles des del servidor on s'executa DOMPDF. Aquesta \u00e9s una guia b\u00e0sica per comen\u00e7ar amb DOMPDF. Per a casos d'\u00fas m\u00e9s avan\u00e7ats i opcions de configuraci\u00f3, cal consultar la documentaci\u00f3 oficial de DOMPDF.</p>"},{"location":"04phpoo.html#7-documentacion-con-phpdocumentor","title":"7. Documentaci\u00f3n con phpDocumentor","text":"<p>phpDocumentor \u00e9s l'eina per a documentar el codi PHP. \u00c9s similar en prop\u00f2sit i funcionament a Javadoc.</p> <p>Aix\u00ed doncs, \u00e9s un eina que facilita la documentaci\u00f3 del codi PHP, creant un lloc web amb l'API de l'aplicaci\u00f3.</p> <p>Es basa en l'\u00fas d'anotacions sobre els docblocks. Per a posar-ho en marxa, en el nostre cas ens decantarem per utilitzar la imatge que ja existeix de Docker.</p>"},{"location":"04phpoo.html#installacio_1","title":"Instal\u00b7laci\u00f3","text":""},{"location":"04phpoo.html#pas-1-installacio-amb-docker","title":"Pas 1: Instal\u00b7laci\u00f3 amb Docker","text":"<p>Primer, cal assegurar-se tenir Docker instal\u00b7lat i funcionant al  sistema. Despr\u00e9s, s'ha de descarregar i executar el contenidor de phpDocumentor utilitzant la seg\u00fcent comanda:</p> <pre><code>docker pull phpdoc/phpdoc\n</code></pre>"},{"location":"04phpoo.html#pas-2-generacio-de-documentacio","title":"Pas 2: Generaci\u00f3 de Documentaci\u00f3","text":"<p>Un cop tinguem la imatge, podem utilitzar-la per generar la documentaci\u00f3. El proc\u00e9s b\u00e0sic implica muntar els fitxers de codi dins del contenidor Docker i executar phpDocumentor sobre aquests fitxers.</p> <p>Ac\u00ed hi ha un exemple de com fer-ho:</p> <p>En el cas d'usar Docker, usarem el seg\u00fcent comando per a executar-lo (crea el contenidor, executa el comando que li demanem, i autom\u00e0ticament l'esborra):</p> <p><pre><code>docker run --rm -v $(pwd):/data phpdoc/phpdoc:latest run -d /data/src -t /data/src/docs\n</code></pre> Aquesta comanda fa el seg\u00fcent:</p> <pre><code>    * -rm: Aix\u00f2 elimina el contenidor despr\u00e9s d'executar-lo, aix\u00ed no es queden contenidors inactius.\n    * -v $(pwd):/data: Munta el directori actual del teu sistema ($(pwd)) al directori /data dins del contenidor. Haur\u00e0s de reempla\u00e7ar $(pwd) amb el cam\u00ed on est\u00e0 el teu codi font si no est\u00e0s executant aquesta comanda des del directori del teu projecte.\n    * -d /data/src: Especifica el directori dins del contenidor on es troba el teu codi font. Reempla\u00e7a /data/src amb el cam\u00ed corresponent dins del contenidor si \u00e9s diferent.\n    * -t /data/src/docs: Especifica on vols que es generi la documentaci\u00f3 dins del contenidor. En aquest cas, es generar\u00e0 dins de /data/docs.\n</code></pre>"},{"location":"04phpoo.html#pas-3-acces-a-la-documentacio-generada","title":"Pas 3: Acc\u00e9s a la Documentaci\u00f3 Generada","text":"<p>Una vegada generada, la documentaci\u00f3 estar\u00e0 dins del directori que especificat (en aquest cas, <code>docs</code> dins del directori docs de projecte). Pots obrir els fitxers HTML amb qualsevol navegador per veure la documentaci\u00f3.</p>"},{"location":"04phpoo.html#docblock","title":"DocBlock","text":"<p>Un docblock \u00e9s el bloc de codi que es col\u00b7loca damunt d'un recurs. El seu format \u00e9s:</p> <pre><code>&lt;?php\n/**\n* Sumari*, una sola l\u00ednia\n\n* Descripci\u00f3* que pot utilitzar diverses l\u00ednies\n* i que ofereix detalls de l'element o refer\u00e8ncies\n* per a ampliar la informaci\u00f3\n\n* @param string $miArgumento amb una descripci\u00f3* de l'argument\n* que pot usar diverses l\u00ednies.\n\n* @return void\n*/\nfunction miFuncion(tipo $miArgumento)\n{\n}\n</code></pre> <p>Visual Studio Code</p> <p>Per tal que us ajude a documentar podeu utilitzar l'extensi\u00f3  PHP DocBlocker.</p>"},{"location":"04phpoo.html#documentant-el-codi","title":"Documentant el codi","text":"<p>En tots els elements, ademas del sumari i/o descripci\u00f3, posarem:</p> <ul> <li>En les classes:<ul> <li><code>@author</code> nom  <li><code>@package</code> ruta del namespace</li> <li>En les propietats:<ul> <li><code>@var</code> tipus descripci\u00f3</li> </ul> </li> <li>En els m\u00e8todes:<ul> <li><code>@param</code> tipus $nomene descripci\u00f3</li> <li><code>@throws</code> ClaseException descripci\u00f3</li> <li><code>@return</code> tipus descripci\u00f3</li> </ul> </li> <p>Vegem-ho amb un exemple. Suposem que tenim una classe que representa un client:</p> <pre><code>&lt;?php\n/**\n* Classe que representa un client\n* \n* El client s'encarrega d'emmagatzemar els suports que t\u00e9 llogat,\n* de manera que podem llogar i retornar productes mitjan\u00e7ant les operacions\n* hom\u00f2nimes.\n* \n* @package Dwes\\Videoclub\\Model\n* @author Aitor Medrano &lt;a.medrano@edu.gva.es&gt;\n*/\nclass Cliente {\n\n    public string $nombre; \n    private string $numero;\n\n    /**\n    * Colecci\u00f3 de soports alquilats\n    * @var array&lt;Soporte&gt; \n    */\n    private $soportesAlquilados[];\n\n    /*\n    * Comprova si el suport rebut ja el t\u00e9 llogat el client\n    * @param Suport $suporte Suport a comprovar\n    * @return bool true si ho t\u00e9 llogat\n    /\n    public function tieneAlquilado(Soporte $soporte) : bool { \n        // ...\n    }\n</code></pre> <p>Si generem la documentaci\u00f3 i obrim amb un navegador l'arxiu <code>docs/api/index.html</code> podrem navegar fins a la classe `Client:</p> phpDocumentor de Cliente"},{"location":"04phpoo.html#8-separar-la-logica-de-negoci-dels-aspectes-de-presentacio-de-laplicacio","title":"8. Separar la l\u00f2gica de negoci dels aspectes de presentaci\u00f3 de l'aplicaci\u00f3","text":""},{"location":"04phpoo.html#logica-de-negoci","title":"L\u00f2gica de Negoci","text":"<ul> <li>Regles i procediments que defineixen el funcionament de l'aplicaci\u00f3.</li> <li>Inclou processament de dades, c\u00e0lculs, interaccions amb la base de dades, etc.</li> </ul>"},{"location":"04phpoo.html#aspectes-de-presentacio","title":"Aspectes de Presentaci\u00f3","text":"<ul> <li>Manera en qu\u00e8 es mostra la informaci\u00f3 a l'usuari.</li> <li>Inclou la interf\u00edcie d'usuari, disseny, navegaci\u00f3, etc.</li> </ul>"},{"location":"04phpoo.html#avantatges","title":"Avantatges","text":"<ol> <li> <p>Mantenibilitat</p> <ul> <li>Facilita la modificaci\u00f3 de la l\u00f2gica de negoci sense afectar la presentaci\u00f3.</li> <li>Permet actualitzar la interf\u00edcie d'usuari sense modificar la l\u00f2gica subjacent.</li> </ul> </li> <li> <p>Reutilitzaci\u00f3</p> <ul> <li>La l\u00f2gica de negoci pot ser reutilitzada en diferents aplicacions amb interf\u00edcies variades.</li> <li>Els components de presentaci\u00f3 poden ser reutilitzats amb diferents l\u00f2giques de negoci.</li> </ul> </li> <li> <p>Escalabilitat</p> <ul> <li>Ajuda a escalar l'aplicaci\u00f3 separant les preocupacions, permetent millorar una part sense impactar l'altra.</li> </ul> </li> <li> <p>Prova i Depuraci\u00f3</p> <ul> <li>Facilita les proves unit\u00e0ries i la depuraci\u00f3 en permetre provar la l\u00f2gica de negoci per separat de la interf\u00edcie.</li> </ul> </li> <li> <p>Col\u00b7laboraci\u00f3</p> <ul> <li>Permet que desenvolupadors de backend i frontend treballen de manera independent en les seues \u00e0rees respectives.</li> </ul> </li> </ol>"},{"location":"04phpoo.html#tecnologies-i-mecanismes-per-a-la-separacio","title":"Tecnologies i Mecanismes per a la Separaci\u00f3","text":"<p>A continuaci\u00f3 es presenten diverses tecnologies i mecanismes que faciliten la separaci\u00f3 de la l\u00f2gica de negoci i la presentaci\u00f3 en una aplicaci\u00f3 web:</p>"},{"location":"04phpoo.html#frameworks-php","title":"Frameworks PHP:","text":"<p>Laravel: Framework que segueix el patr\u00f3 MVC (Model-View-Controller). Laravel facilita la creaci\u00f3 de codi net i ben organitzat, separant clarament la l\u00f2gica de negoci de la presentaci\u00f3. Symfony: Altres frameworks populars que tamb\u00e9 segueixen el patr\u00f3 MVC i ofereixen eines per a la separaci\u00f3 de la l\u00f2gica i la presentaci\u00f3.</p>"},{"location":"04phpoo.html#patro-mvc","title":"Patr\u00f3 MVC:","text":"<p>Model-View-Controller: Patr\u00f3 de disseny que divideix una aplicaci\u00f3 en tres components interconnectats: Model: Gestiona la l\u00f2gica de negoci i les dades. Vista: Gestiona la presentaci\u00f3 de la informaci\u00f3. Controlador: Gestiona la comunicaci\u00f3 entre el Model i la Vista.</p>"},{"location":"04phpoo.html#plantilles","title":"Plantilles:","text":"<p>Blade (Laravel): Motor de plantilles que permet separar el codi HTML de la l\u00f2gica de negoci. Twig (Symfony): Motor de plantilles similar a Blade, utilitzat per separar la l\u00f2gica de negoci del codi de presentaci\u00f3.</p>"},{"location":"04phpoo.html#api-rest","title":"API REST:","text":"<p>Permet crear serveis web que exposen funcionalitats i dades a trav\u00e9s de punts finals d'API, mantenint la l\u00f2gica de negoci separada de la presentaci\u00f3.</p>"},{"location":"04phpoo.html#exemple-mvc","title":"Exemple MVC","text":"<p><pre><code>// Model: Product.php\nclass Product {\n    private string $name;\n    private float $price;\n\n    public function __construct(string $name, float $price) {\n        $this-&gt;name = $name;\n        $this-&gt;price = $price;\n    }\n\n    public function getName(): string {\n        return $this-&gt;name;\n    }\n\n    public function getPrice(): float {\n        return $this-&gt;price;\n    }\n}\n\n// Controller: ProductController.php\nclass ProductController {\n    public function showProduct() {\n        $product = new Product(\"Laptop\", 1200.00);\n        include 'views/productView.php';\n    }\n}\n\n// View: productView.php\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Product Information&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Product: &lt;?php echo htmlspecialchars($product-&gt;getName()); ?&gt;&lt;/h1&gt;\n    &lt;p&gt;Price: $&lt;?php echo htmlspecialchars($product-&gt;getPrice()); ?&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> La separaci\u00f3 de la l\u00f2gica de negoci dels aspectes de presentaci\u00f3 \u00e9s crucial per al desenvolupament d'aplicacions web eficients, mantenibles i escalables.</p>"},{"location":"04phpoo.html#9-gestio-dexempcions","title":"9. Gesti\u00f3 d'Exempcions","text":"<p>La gesti\u00f3 d'excepcions forma part des de PHP 5. El seu funcionament \u00e9s similar a Java*, fent \u00fas d'un bloc <code>try / catch / finally</code>. Si detectem una situaci\u00f3 an\u00f2mala i volem llan\u00e7ar una excepci\u00f3, haurem de realitzar <code>throw new Exception</code> (adjuntant el missatge que l'ha provocat).</p> <pre><code>&lt;?php\ntry\u00a0{\n    if\u00a0($divisor\u00a0==\u00a00) {\n        throw\u00a0new\u00a0Exception(\"Divisi\u00f3n\u00a0por\u00a0cero.\");\n    }\n    $resultado\u00a0=\u00a0$dividendo\u00a0/\u00a0$divisor;\n}\u00a0catch\u00a0(Exception\u00a0$e)\u00a0{\n    echo\u00a0\"Se\u00a0ha\u00a0producido\u00a0el\u00a0siguiente\u00a0error:\u00a0\".$e-&gt;getMessage();\n}\n</code></pre> <p>La classe <code>Exception</code> \u00e9s la classe pare de totes les excepcions. El seu constructor rep <code>missatge[,codigoError][,excepcionPrevia]</code>.</p> <p>A partir d'un objecte <code>Exception</code>, podem accedir als m\u00e8todes <code>getMessage()</code>i <code>getCode()</code> per a obtindre el missatge i el codi d'error de l'excepci\u00f3 capturada.</p> <p>El propi llenguatge ofereix un conjunt d'excepcions ja definides, les quals podem capturar (i llan\u00e7ar des de PHP 7). Es recomana la seua consulta en la documentaci\u00f3 oficial.</p>"},{"location":"04phpoo.html#creant-exempcions","title":"Creant exempcions","text":"<p>Per a crear una excepci\u00f3, la forma m\u00e9s curta \u00e9s crear una classe que \u00fanicament herete de <code>Exception</code>.</p> <pre><code>&lt;?php\nclass\u00a0HolaExcepcion\u00a0extends\u00a0Exception\u00a0{}\n</code></pre> <p>Si volem, i \u00e9s recomanable depenent dels requisits, podem sobrecarregar els m\u00e8todes m\u00e0gics, per exemple, sobrecarregant el constructor i cridant al constructor del pare, o reescriure el m\u00e8tode <code>__toString</code> per a canviar el seu missatge:</p> <pre><code>&lt;?php\nclass\u00a0MiExcepcion\u00a0extends\u00a0Exception\u00a0{\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0__construct($msj,\u00a0$codigo\u00a0=\u00a00,\u00a0Exception\u00a0$previa\u00a0=\u00a0null)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0c\u00f3digo\u00a0propio\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0parent::__construct($msj,\u00a0$codigo,\u00a0$previa);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0__toString()\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0__CLASS__\u00a0.\u00a0\":\u00a0[{$this-&gt;code}]:\u00a0{$this-&gt;message}\\n\";\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0miFuncion()\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Una\u00a0funci\u00f3n\u00a0personalizada\u00a0para\u00a0este\u00a0tipo\u00a0de\u00a0excepci\u00f3n\\n\";\n\u00a0\u00a0\u00a0\u00a0}\n}\n</code></pre> <p>Si definim una excepci\u00f3 d'aplicaci\u00f3 dins d'un namespace, quan referenciem a <code>Exception</code>, haurem de referenciar-la mitjan\u00e7ant el seu nom totalment qualificat (<code>\\Exception</code>), o utilitzant <code>use</code>:</p> Mitjan\u00e7ant nom totalment qualificatMitjan\u00e7ant <code>use</code> <pre><code>&lt;?php\nnamespace \\Dwes\\Ejemplos;\n\nclass\u00a0AppExcepcion\u00a0extends\u00a0\\Exception\u00a0{}\n</code></pre> <pre><code>&lt;?php\nnamespace \\Dwes\\Ejemplos;\n\nuse Exception;\n\nclass\u00a0AppExcepcion\u00a0extends\u00a0Exception\u00a0{}\n</code></pre>"},{"location":"04phpoo.html#exempcions-multiples","title":"Exempcions m\u00faltiples","text":"<p>Es poden usar excepcions m\u00faltiples per a comprovar diferents condicions. A l'hora de capturar-les, es fa de m\u00e9s espec\u00edfica a m\u00e9s general.</p> <pre><code>&lt;?php\n$email\u00a0=\u00a0\"ejemplo@ejemplo.com\";\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0Comprueba\u00a0si\u00a0el\u00a0email\u00a0es\u00a0v\u00e1lido\n\u00a0\u00a0\u00a0\u00a0if(filter_var($email,\u00a0FILTER_VALIDATE_EMAIL)\u00a0===\u00a0FALSE)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0MiExcepcion($email);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0//\u00a0Comprueba\u00a0la\u00a0palabra\u00a0ejemplo\u00a0en\u00a0la\u00a0direcci\u00f3n\u00a0email\n\u00a0\u00a0\u00a0\u00a0if(strpos($email,\u00a0\"ejemplo\")\u00a0!==\u00a0FALSE)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0Exception(\"$email\u00a0es\u00a0un\u00a0email\u00a0de\u00a0ejemplo no v\u00e1lido\");\n\u00a0\u00a0\u00a0\u00a0}\n}\u00a0catch\u00a0(MiExcepcion\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0$e-&gt;miFuncion();\n}\u00a0catch(Exception\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0$e-&gt;getMessage();\n}\n</code></pre> <p>Autoevaluaci\u00f3n</p> <p>\u00bfQu\u00e9 pasar\u00eda al ejectuar el siguiente c\u00f3digo? <pre><code>&lt;?php\nclass\u00a0MainException\u00a0extends\u00a0Exception\u00a0{}\nclass\u00a0SubException\u00a0extends\u00a0MainException\u00a0{}\n\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0SubException(\"Lanzada\u00a0SubException\");\n}\u00a0catch\u00a0(MainException\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0MainException\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n}\u00a0catch\u00a0(SubException\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0SubException\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n}\u00a0catch\u00a0(Exception\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0Exception\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n}\n</code></pre></p> <p>Si en el mateix <code>catch</code> volem capturar diverses excepcions, hem d'utilitzar l'operador <code>|</code>:</p> <pre><code>&lt;?php\nclass\u00a0MainException\u00a0extends\u00a0Exception\u00a0{}\nclass\u00a0SubException\u00a0extends\u00a0MainException\u00a0{}\n\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0SubException(\"Lanzada\u00a0SubException\");\n}\u00a0catch\u00a0(MainException\u00a0|\u00a0SubException\u00a0$e\u00a0)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0Exception\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n}\n</code></pre> <p>Des de PHP 7, existeix el tipus <code>Throwable</code>, el qual \u00e9s una interf\u00edcie que implementen tant els errors com les excepcions, i ens permet capturar els dos tipus alhora:</p> <pre><code>&lt;?php\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0tu\u00a0codigo\n}\u00a0catch\u00a0(Throwable\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0'Forma\u00a0de\u00a0capturar\u00a0errores\u00a0y\u00a0excepciones\u00a0a\u00a0la\u00a0vez';\n}\n</code></pre> <p>Si nom\u00e9s volem capturar els errors fatals, podem fer \u00fas de la classe <code>Error</code>:</p> <pre><code>&lt;?php\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0Genera\u00a0una\u00a0notificaci\u00f3n\u00a0que\u00a0no\u00a0se\u00a0captura\n\u00a0\u00a0\u00a0\u00a0echo\u00a0$variableNoAsignada;\n\u00a0\u00a0\u00a0\u00a0//\u00a0Error\u00a0fatal\u00a0que\u00a0se\u00a0captura\n\u00a0\u00a0\u00a0\u00a0funcionQueNoExiste();\n}\u00a0catch\u00a0(Error\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Error\u00a0capturado:\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n}\n</code></pre>"},{"location":"04phpoo.html#rellancar-exempcions","title":"Rellan\u00e7ar exempcions","text":"<p>En les aplicacions reals, \u00e9s molt comuna capturar una excepci\u00f3 de sistema i llan\u00e7ar una d'aplicaci\u00f3 que hem definit nostros. Tamb\u00e9 podem llan\u00e7ar les excepcions sense necessitat d'estar dins d'un <code>try/catch</code>.</p> <pre><code>&lt;?php\nclass\u00a0AppException\u00a0extends\u00a0Exception\u00a0{}\n\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0C\u00f3digo\u00a0de\u00a0negocio\u00a0que\u00a0falla\n}\u00a0catch\u00a0(Exception\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0AppException(\"AppException:\u00a0\".$e-&gt;getMessage(), $e-&gt;getCode(),\u00a0$e);\n}\n</code></pre>"},{"location":"04phpoo.html#10-proves-amb-phpunit","title":"10. Proves amb PHPUNIT","text":"<p>El curs passat, dins del m\u00f2dul de Entorns de Desenvolupament, estudiarieu la import\u00e0ncia de la realitzaci\u00f3 de proves, aix\u00ed com les proves unit\u00e0ries mitjan\u00e7ant JUnit.</p> Test Driven Development <p>Hui dia \u00e9s de gran import\u00e0ncia seguir una bona metodologia de proves, sent el desenvolupament dirigit per les proves (Test Driven Development / TDD) un dels enfocaments m\u00e9s emprats, el qual consisteix en:</p> <ol> <li>Escriure el test, i com no hi ha codi implementat, la prova falle (roig).</li> <li>Escriure el codi d'aplicaci\u00f3 perqu\u00e8 la prova funcione (verda).</li> <li>refactoritzar el codi de l'aplicaci\u00f3 amb l'ajuda de la prova per a comprovar que no trenquem res (refactor).</li> </ol> <p>En el cas de PHP, l'eina que s'utilitza \u00e9s PHPUnit (https://phpunit.de/), que com el seu nom indica, est\u00e0 basada en JUnit. La versi\u00f3 actual \u00e9s la 11.</p>"},{"location":"04phpoo.html#introduccio-a-phpunit","title":"Introducci\u00f3 a PHPUnit","text":"<p>PHPUnit \u00e9s un framework de proves popular per a PHP que suporta tant proves unit\u00e0ries com proves d'integraci\u00f3. \u00c9s \u00e0mpliament utilitzat en la comunitat PHP per la seua simplicitat i efic\u00e0cia. Les proves unit\u00e0ries es centren en provar components o m\u00e8todes individuals, mentre que les proves d'integraci\u00f3 asseguren que les diferents parts del sistema funcionen conjuntament com s'espera.</p>"},{"location":"04phpoo.html#installacio_2","title":"Instal\u00b7laci\u00f3","text":"<p>Per comen\u00e7ar a utilitzar PHPUnit, cal instal\u00b7lar-lo. La manera recomanada \u00e9s a trav\u00e9s de Composer. Executa la seg\u00fcent comanda en el terminal:</p> <pre><code>composer require --dev phpunit/phpunit\n</code></pre> <p>Aquesta comanda afegir\u00e0 PHPUnit com a depend\u00e8ncia de desenvolupament en el teu projecte.</p> <p>Llibreries de desenvolupament</p> <p>Les llibreries que es col\u00b7loquen en <code>require-dev</code> s\u00f3n les de desenvolupament i testing, de manera que no s'instal\u00b7laran en un entorn de producci\u00f3.</p> <p>Una vegada instal\u00b7lat, podem configurar PHPUnit creant un fitxer phpunit.xml en l'arrel del projecte per especificar la configuraci\u00f3 de les proves:</p> <pre><code>&lt;phpunit bootstrap=\"vendor/autoload.php\"&gt;\n    &lt;testsuites&gt;\n        &lt;testsuite name=\"Application Test Suite\"&gt;\n            &lt;directory&gt;tests&lt;/directory&gt;\n        &lt;/testsuite&gt;\n    &lt;/testsuites&gt;\n&lt;/phpunit&gt;\n</code></pre>"},{"location":"04phpoo.html#estructura-dun-test","title":"Estructura d\u2019un test","text":"<p>Els tests en PHPUnit s\u00f3n classes PHP que hereten de PHPUnit\\Framework\\TestCase. Cada m\u00e8tode dins d'aquestes classes que comence amb test ser\u00e0 executat com una prova.</p> <pre><code>use PHPUnit\\Framework\\TestCase;\nuse App\\Models\\Empleado;\n\n\nclass EmpleadoTest extends TestCase {\n    private $empleado;\n\n    protected function setUp(): void {\n        $this-&gt;empleado = new Empleado('John', 'Doe', 4000, 30);\n    }\n\n    public function testGetSou() {\n        $this-&gt;assertEquals(4000, $this-&gt;empleado-&gt;getSou());\n    }\n\n    public function testSetSou() {\n        $this-&gt;empleado-&gt;setSou(4500);\n        $this-&gt;assertEquals(4500, $this-&gt;empleado-&gt;getSou());\n    }\n\n    public function testGetTelefonos() {\n        $this-&gt;assertIsArray($this-&gt;empleado-&gt;getTelefonos());\n        $this-&gt;assertEmpty($this-&gt;empleado-&gt;getTelefonos());\n    }\n\n    public function testSetTelefono() {\n        $this-&gt;empleado-&gt;setTelefono('123456789');\n        $this-&gt;assertCount(1, $this-&gt;empleado-&gt;getTelefonos());\n        $this-&gt;assertEquals('123456789', $this-&gt;empleado-&gt;getTelefonos()[0]);\n    }\n\n    public function testListarTelefonos() {\n        $this-&gt;empleado-&gt;setTelefono('123456789');\n        $this-&gt;empleado-&gt;setTelefono('987654321');\n        $this-&gt;assertEquals('123456789, 987654321', $this-&gt;empleado-&gt;listarTelefonos());\n    }\n\n    public function testVaciarTelefonos() {\n        $this-&gt;empleado-&gt;setTelefono('123456789');\n        $this-&gt;empleado-&gt;vaciarTelefonos();\n        $this-&gt;assertEmpty($this-&gt;empleado-&gt;getTelefonos());\n    }\n\n    public function testDebePagarImpuestos() {\n        $this-&gt;assertTrue($this-&gt;empleado-&gt;debePagarImpuestos());\n        $this-&gt;empleado-&gt;setSou(3000);\n        $this-&gt;assertFalse($this-&gt;empleado-&gt;debePagarImpuestos());\n    }\n}\n</code></pre>"},{"location":"04phpoo.html#execucio-de-proves","title":"Execuci\u00f3 de Proves","text":"<p>Per executar les proves, podem utilitzar la seg\u00fcent comanda:</p> <p>vendor/bin/phpunit</p> <p>Aquesta comanda cercar\u00e0 els arxius de prova en el directori especificat (per defecte tests) i executar\u00e0 totes les proves.</p>"},{"location":"04phpoo.html#tipus-de-proves","title":"Tipus de  proves","text":"<p>Amb PHPUnit, podem realitzar diversos tipus de proves, entre elles:</p> <ul> <li>Proves Unit\u00e0ries : Verifiquen el funcionament d'una unitat de codi individual, com una funci\u00f3 o m\u00e8tode.</li> <li>Proves Funcionals: Verifiquen que un conjunt de m\u00f2duls funciona correctament conjuntament. Aquestes proves poden simular interaccions de l'usuari en un sistema web, encara que aix\u00f2 es fa millor amb frameworks especialitzats per a proves funcionals.</li> <li>Proves d'Integraci\u00f3: Comproven que diferents m\u00f2duls o serveis funcionen correctament quan es combinen.</li> </ul> <p>Exemple de prova unit\u00e0ria:</p> <pre><code>public function testResta() {\n    $calculadora = new Calculadora();\n    $resultat = $calculadora-&gt;resta(5, 3);\n    $this-&gt;assertEquals(2, $resultat);\n}\n</code></pre>"},{"location":"04phpoo.html#assercions","title":"Assercions","text":"<p>Les assercions permeten comprovar el resultat dels m\u00e8todes que volem provar. Les assercions esperen que el predicat sempre siga vertader.</p> <p>PHPUnit ofereix les seg\u00fcent assercions:</p> <ul> <li><code>assertTrue</code> / <code>assertFalse</code>: Comprova que la condici\u00f3 donada siga avaluada com true / false</li> <li><code>assertEquals</code> / <code>assertSame</code>: Comprova que dues variables siguen iguals</li> <li><code>assertNotEquals</code> / <code>assertNotSame</code>: Comprova que dues variables NO siguen iguals</li> <li><code>assertNull</code>: Comprova que un valor \u00e9s null.</li> <li><code>Same</code> \u2192 comprova els tipus. Si no coincideixen els tipus i els valors, l'asserci\u00f3 fallar\u00e0</li> <li><code>Equals</code> \u2192 sense comprovaci\u00f3 estricta</li> <li><code>assertArrayHasKey</code> / <code>assertArrayNotHasKey</code>: Comprova que un array posse\u00efsca un key determinat / o NO ho posse\u00efsca</li> <li><code>assertArraySubset</code>: Comprova que un array posse\u00efsca un altre array com subset del mateix</li> <li><code>assertAttributeContains</code> / <code>assertAttributeNotContains</code>: Comprova que un atribut d'una classe continga una variable determinada / o NO continga una variable determinada</li> <li><code>assertAttributeEquals</code>: Comprova que un atribut d'una classe siga igual a una variable determinada.</li> </ul>"},{"location":"04phpoo.html#proves-amb-dades","title":"Proves amb dades","text":"<p>Les proves en PHPUnit poden utilitzar data providers per executar el mateix test amb diferents dades:</p> <pre><code>/**\n * @dataProvider proveidorDeDades\n */\npublic function testMultiplica($a, $b, $esperat) {\n    $calculadora = new Calculadora();\n    $this-&gt;assertEquals($esperat, $calculadora-&gt;multiplica($a, $b));\n}\n\npublic function proveidorDeDades() {\n    return [\n        [2, 3, 6],\n        [0, 5, 0],\n        [-1, 5, -5],\n    ];\n}\n</code></pre>"},{"location":"04phpoo.html#mocks","title":"Mocks","text":"<p>Un mock \u00e9s un objecte simulat que imita el comportament d'un objecte real en un entorn de proves. S'utilitza per simular la funcionalitat de certs components o depend\u00e8ncies d'una classe, sense necessitat d'executar el codi real d'aquests components. Aix\u00f2 permet provar una classe de manera a\u00efllada i controlar el comportament de les seves depend\u00e8ncies.</p> <p>Els mocks s\u00f3n \u00fatils quan:</p> <ul> <li>No volem o no podem dependre del comportament real d'un component extern, com una connexi\u00f3 a una base de dades o una API.</li> <li>Necessitem verificar la interacci\u00f3 entre la classe provada i una depend\u00e8ncia externa (per exemple, comprovar que un m\u00e8tode s'ha cridat amb uns certs arguments).</li> <li>Volem millorar la velocitat i la fiabilitat de les proves en eliminar la depend\u00e8ncia de sistemes externs.</li> </ul> <p>Com funciona un mock</p> <p>Quan utilitzem un mock, en lloc de cridar el m\u00e8tode real d'una depend\u00e8ncia, definim el comportament esperat manualment. Tamb\u00e9 podem verificar que certs m\u00e8todes del mock s'hagin cridat, amb certs arguments, un nombre determinat de vegades, etc.</p> <p>Exemple senzill de mock amb PHPUnit</p> <p>Suposem que tenim una classe UserService que dep\u00e8n d'una classe EmailService per enviar correus electr\u00f2nics quan es crea un nou usuari. No volem enviar correus electr\u00f2nics durant les proves, per\u00f2 s\u00ed que volem assegurar-nos que el m\u00e8tode d'enviament de correus es crida quan es crea un usuari nou.</p> <pre><code>&lt;?php\n\nclass EmailService\n{\n    public function sendEmail($to, $subject, $message)\n    {\n        // L\u00f2gica per enviar un correu electr\u00f2nic\n    }\n}\n\nclass UserService\n{\n    private $emailService;\n\n    public function __construct(EmailService $emailService)\n    {\n        $this-&gt;emailService = $emailService;\n    }\n\n    public function createUser($user)\n    {\n        // Crear usuari...\n\n        // Enviar un correu electr\u00f2nic al nou usuari\n        $this-&gt;emailService-&gt;sendEmail($user-&gt;email, 'Welcome!', 'Benvingut a la nostra plataforma!');\n    }\n}\n</code></pre> <pre><code>&lt;?php\n\nuse PHPUnit\\Framework\\TestCase;\n\nclass UserServiceTest extends TestCase\n{\n    public function testCreateUserSendsEmail()\n    {\n        // Creem un mock de la classe EmailService\n        $emailServiceMock = $this-&gt;createMock(EmailService::class);\n\n        // Definim l'expectativa: esperem que el m\u00e8tode sendEmail sigui cridat una vegada\n        // amb els arguments concrets que especifiquem.\n        $emailServiceMock-&gt;expects($this-&gt;once())\n                         -&gt;method('sendEmail')\n                         -&gt;with(\n                             $this-&gt;equalTo('test@example.com'),\n                             $this-&gt;equalTo('Welcome!'),\n                             $this-&gt;stringContains('Benvingut a la nostra plataforma!')\n                         );\n\n        // Creem una inst\u00e0ncia de UserService passant el mock d'EmailService\n        $userService = new UserService($emailServiceMock);\n\n        // Simulem la creaci\u00f3 d'un nou usuari\n        $user = new stdClass();\n        $user-&gt;email = 'test@example.com';\n        $userService-&gt;createUser($user);\n\n        // El m\u00e8tode sendEmail del mock hauria de ser cridat una vegada amb els par\u00e0metres especificats\n    }\n}\n</code></pre>"},{"location":"04phpoo.html#provant-excepcions","title":"Provant excepcions","text":"<p>Les proves a m\u00e9s de comprovar que les classes funcionen com s'espera, han de cobrir tots els casos possibles. Aix\u00ed doncs, hem de poder fer proves que esperen que es llance una exempci\u00f3 (i que el missatge continga una certa informaci\u00f3):</p> <p>Per a aix\u00f2, s'utilitzen les seg\u00fcent expectatives:</p> <ul> <li><code>expectException(Excepcion::class)</code></li> <li><code>expectExceptionCode(codigoExcepcion)</code></li> <li><code>expectExceptionMessage(missatge)</code></li> </ul> <p>De la mateixa manera que abans, primer es posa l'expectativa, i despr\u00e9s es provoca que es llance l'exempci\u00f3:</p> <pre><code>&lt;?php\npublic function testExcepcio() {\n    $this-&gt;expectException(InvalidArgumentException::class);\n\n    $calculadora = new Calculadora();\n    $calculadora-&gt;divideix(5, 0);\n}\n</code></pre>"},{"location":"04phpoo.html#conclusio","title":"Conclusi\u00f3","text":"<p>Les proves s\u00f3n crucials per a assegurar que el nostre codi PHP \u00e9s fiable i mant\u00e9 la seua funcionalitat al llarg del temps. Utilitzar PHPUnit ens proporciona les eines necess\u00e0ries per a escriure proves eficaces i mantenir el nostre projecte en un estat saludable.</p>"},{"location":"04phpoo.html#12-referencies-bibliografiques","title":"12. Refer\u00e8ncies Bibliogr\u00e0fiques","text":""},{"location":"04phpoo.html#programacio-orientada-a-objectes-en-php","title":"Programaci\u00f3 Orientada a Objectes en PHP","text":"<ul> <li> <p>\"PHP Objects, Patterns, and Practice\"   per M. Zandstra. Apress, 2017. ISBN: 978-1-4842-1361-3. Aquest llibre \u00e9s un recurs essencial per entendre els fonaments de la programaci\u00f3 orientada a objectes en PHP, aix\u00ed com patrons de disseny.</p> </li> <li> <p>\"Learning PHP, MySQL &amp; JavaScript: With jQuery, CSS &amp; HTML5\"   per Robin Nixon. O'Reilly Media, 2018. ISBN: 978-1-4919-2070-2. Ofereix una introducci\u00f3 completa a la programaci\u00f3 amb PHP, incloent-hi el model d'objectes de PHP.</p> </li> </ul>"},{"location":"04phpoo.html#constructors-i-destructors","title":"Constructors i Destructors","text":"<ul> <li>PHP Manual: Constructors and Destructors   Documentaci\u00f3 oficial de PHP sobre constructors i destructors en la programaci\u00f3 orientada a objectes. Disponible a https://www.php.net/manual/en/language.oop5.decon.php.</li> </ul>"},{"location":"04phpoo.html#encapsulacio-i-visibilitat","title":"Encapsulaci\u00f3 i Visibilitat","text":"<ul> <li>PHP Manual: Visibility   Secci\u00f3 del manual oficial de PHP que explica les paraules clau <code>public</code>, <code>protected</code>, i <code>private</code>, aix\u00ed com el concepte d'encapsulaci\u00f3. Accessible a https://www.php.net/manual/en/language.oop5.visibility.php.</li> </ul>"},{"location":"04phpoo.html#herencia-i-polimorfisme","title":"Her\u00e8ncia i Polimorfisme","text":"<ul> <li> <p>\"Programming PHP\"   per Kevin Tatroe, Peter MacIntyre, i Rasmus Lerdorf. O'Reilly Media, 2013. ISBN: 978-1-4493-5053-6. Aquest llibre cobreix \u00e0mpliament els conceptes d'her\u00e8ncia i polimorfisme en PHP, proporcionant exemples pr\u00e0ctics.</p> </li> <li> <p>PHP Manual: Inheritance   Documentaci\u00f3 oficial de PHP que tracta sobre l'her\u00e8ncia en classes, incloent el polimorfisme. Disponible a https://www.php.net/manual/en/language.oop5.inheritance.php.</p> </li> </ul>"},{"location":"04phpoo.html#classes-abstractes-i-interficies","title":"Classes Abstractes i Interf\u00edcies","text":"<ul> <li>PHP Manual: Interfaces and Abstract Classes   Explicaci\u00f3 oficial de les classes abstractes i les interf\u00edcies en PHP. Disponible a https://www.php.net/manual/en/language.oop5.interfaces.php.</li> </ul>"},{"location":"04phpoo.html#nombres-magics-i-metodes-magics","title":"Nombres m\u00e0gics i Metodes m\u00e0gics","text":"<ul> <li>PHP Manual: Magic Methods   Guia completa sobre els m\u00e8todes m\u00e0gics en PHP, com <code>__construct()</code>, <code>__destruct()</code>, <code>__get()</code>, <code>__set()</code>, entre altres. Disponible a https://www.php.net/manual/en/language.oop5.magic.php.</li> </ul>"},{"location":"04phpoo.html#trait-en-php","title":"Trait en PHP","text":"<ul> <li>PHP Manual: Traits   Documentaci\u00f3 sobre traits en PHP, que permeten reutilitzar codi entre diferents classes. Disponible a https://www.php.net/manual/en/language.oop5.traits.php.</li> </ul>"},{"location":"04phpoo.html#excepcions-en-php","title":"Excepcions en PHP","text":"<ul> <li> <p>\"The Pragmatic Programmer: Your Journey to Mastery\"   per David Thomas i Andrew Hunt. Addison-Wesley Professional, 2019. ISBN: 978-0-1359-5202-8. Inclou bones pr\u00e0ctiques per a la gesti\u00f3 d'excepcions, aplicables tamb\u00e9 a PHP.</p> </li> <li> <p>PHP Manual: Exceptions   Secci\u00f3 del manual de PHP dedicada a les excepcions, explicant com llen\u00e7ar i capturar excepcions en PHP. Accessible a https://www.php.net/manual/en/language.exceptions.php.</p> </li> </ul>"},{"location":"04phpoo.html#proves-amb-phpunit","title":"Proves amb PHPUnit","text":"<ul> <li> <p>\"Modern PHP: New Features and Good Practices\"   per Josh Lockhart. O'Reilly Media, 2015. ISBN: 978-1-4919-2904-0. Aquest llibre inclou una secci\u00f3 sobre proves amb PHPUnit.</p> </li> <li> <p>PHPUnit Documentation   Documentaci\u00f3 oficial de PHPUnit, que cobreix com escriure i executar proves unit\u00e0ries en PHP. Accessible a https://phpunit.de/documentation.html.</p> </li> </ul>"},{"location":"04phpoo.html#eines-de-desenvolupament-i-autocarrega","title":"Eines de Desenvolupament i Autoc\u00e0rrega","text":"<ul> <li> <p>Composer Documentation   Accessible des de https://getcomposer.org/doc/. Composer \u00e9s l'eina est\u00e0ndard per a la gesti\u00f3 de depend\u00e8ncies en PHP, i inclou suport per a l'autoc\u00e0rrega de classes.</p> </li> <li> <p>PHP Manual: Autoloading Classes   Guia sobre el mecanisme d'autoc\u00e0rrega en PHP, que facilita la inclusi\u00f3 autom\u00e0tica de classes en els teus projectes. Disponible a https://www.php.net/manual/en/language.oop5.autoload.php.</p> </li> </ul>"},{"location":"04phpoo.html#poo-avancada-patrons-de-disseny","title":"POO Avan\u00e7ada: Patrons de Disseny","text":"<ul> <li> <p>\"Head First Design Patterns\"   per Eric Freeman i Elisabeth Robson. O'Reilly Media, 2020. ISBN: 978-1-4919-7175-9. Un recurs excel\u00b7lent per aprendre patrons de disseny aplicables a PHP.</p> </li> <li> <p>\"PHP Design Patterns\"   per Stephan Schmidt. Publicat per Packt Publishing, 2008. ISBN: 978-1-84719-255-3. Aquest llibre explora com aplicar patrons de disseny en projectes PHP.</p> </li> </ul>"},{"location":"04phpoo.html#webs-de-referencia-addicionals","title":"Webs de Refer\u00e8ncia Addicionals","text":"<ul> <li> <p>PHP: The Right Way https://phptherightway.com/. Una guia per a desenvolupar aplicacions PHP seguint les millors pr\u00e0ctiques de la ind\u00fastria.</p> </li> <li> <p>Stack Overflow https://stackoverflow.com/questions/tagged/php. Una font d'informaci\u00f3 valuosa per resoldre problemes espec\u00edfics de PHP i discutir amb altres desenvolupadors.</p> </li> </ul>"},{"location":"04phpoo.html#13-exercicis","title":"13. Exercicis","text":""},{"location":"04phpoo.html#bateria-dexercicis-solucionats-per-a-la-unitat-de-programacio-orientada-a-objectes","title":"Bateria d'Exercicis Solucionats per a la Unitat de Programaci\u00f3 Orientada a Objectes","text":""},{"location":"04phpoo.html#exercici-1-crear-una-classe-basica","title":"Exercici 1: Crear una Classe B\u00e0sica","text":"<ol> <li>Crea una classe <code>Cotxe</code> que tinga les propietats <code>marca</code> i <code>model</code>. Afegeix un m\u00e8tode <code>mostraInformacio</code> que retorne un string amb la marca i el model del cotxe.</li> <li>Crea una inst\u00e0ncia de la classe <code>Cotxe</code>, assigna-li una marca i un model, i mostra la informaci\u00f3 utilitzant el m\u00e8tode <code>mostraInformacio</code>.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nclass Cotxe {\n    public $marca;\n    public $model;\n\n    public function mostraInformacio() {\n        return \"Marca: \" . $this-&gt;marca . \", Model: \" . $this-&gt;model;\n    }\n}\n\n$cotxe = new Cotxe();\n$cotxe-&gt;marca = \"Toyota\";\n$cotxe-&gt;model = \"Corolla\";\necho $cotxe-&gt;mostraInformacio(); // Output: Marca: Toyota, Model: Corolla\n</code></pre>"},{"location":"04phpoo.html#exercici-2-afegir-un-constructor-i-destructor","title":"Exercici 2. Afegir un Constructor i destructor","text":"<ol> <li>Modifica la classe <code>Cotxe</code> per afegir un constructor que prenga com a par\u00e0metres la <code>marca</code> i el <code>model</code>, i que establisca aquestes propietats autom\u00e0ticament.</li> <li>Afegeix un destructor a la classe <code>Cotxe</code> que mostre un missatge quan l'objecte \u00e9s destru\u00eft. Crea un objecte i permet que es destru\u00efsca al final del programa.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nclass Cotxe {\n    public $marca;\n    public $model;\n\n    public function __construct($marca, $model) {\n        $this-&gt;marca = $marca;\n        $this-&gt;model = $model;\n    }\n    public function __destruct() {\n        echo \"L'objecte Cotxe ha estat destru\u00eft.\\n\";\n    }\n\n    public function mostraInformacio() {\n        return \"Marca: \" . $this-&gt;marca . \", Model: \" . $this-&gt;model;\n    }\n}\n</code></pre>"},{"location":"04phpoo.html#exercici-3-encapsulacio-de-propietats","title":"Exercici 3. Encapsulaci\u00f3 de Propietats","text":"<ol> <li>Modifica la classe <code>Cotxe</code> per a que les propietats <code>marca</code> i <code>model</code> siguen privades. Afegeix m\u00e8todes p\u00fablics <code>getMarca</code>, <code>setMarca</code>, <code>getModel</code>, i <code>setModel</code> per accedir i modificar aquestes propietats.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nclass Cotxe {\n    private $marca;\n    private $model;\n\n    public function __construct($marca, $model) {\n        $this-&gt;marca = $marca;\n        $this-&gt;model = $model;\n    }\n\n    public function getMarca() {\n        return $this-&gt;marca;\n    }\n\n    public function setMarca($marca) {\n        $this-&gt;marca = $marca;\n    }\n\n    public function getModel() {\n        return $this-&gt;model;\n    }\n\n    public function setModel($model) {\n        $this-&gt;model = $model;\n    }\n\n    public function mostraInformacio() {\n        return \"Marca: \" . $this-&gt;getMarca() . \", Model: \" . $this-&gt;getModel();\n    }\n}\n\n$cotxe = new Cotxe(\"Ford\", \"Fiesta\");\necho $cotxe-&gt;mostraInformacio(); // Output: Marca: Ford, Model: Fiesta\n</code></pre>"},{"location":"04phpoo.html#exercici-4-herencia-i-polimorfisme","title":"Exercici 4. Her\u00e8ncia i Polimorfisme","text":"<ol> <li>Crea una classe <code>Vehicle</code> amb una propietat <code>tipus</code>. A continuaci\u00f3, crea una classe <code>Motocicleta</code> que herete de <code>Vehicle</code> i tinga una propietat <code>cilindrada</code>. Afegeix un m\u00e8tode a <code>Motocicleta</code> que retorne el tipus i la cilindrada.</li> <li>Crea una funci\u00f3 <code>mostraDetallsVehicle</code> que accepte un objecte de tipus <code>Vehicle</code> i mostre les seues propietats. Prova aquesta funci\u00f3 amb objectes de <code>Cotxe</code> i <code>Motocicleta</code>.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nclass Vehicle {\n    protected $tipus;\n\n    public function __construct($tipus) {\n        $this-&gt;tipus = $tipus;\n    }\n\n    public function mostraDetalls() {\n        return \"Tipus: \" . $this-&gt;tipus;\n    }\n}\n\nclass Cotxe extends Vehicle {\n    private $marca;\n    private $model;\n\n    public function __construct($marca, $model) {\n        parent::__construct(\"Cotxe\");\n        $this-&gt;marca = $marca;\n        $this-&gt;model = $model;\n    }\n\n    public function mostraDetalls() {\n        return parent::mostraDetalls() . \", Marca: \" . $this-&gt;marca . \", Model: \" . $this-&gt;model;\n    }\n}\n\nclass Motocicleta extends Vehicle {\n    private $cilindrada;\n\n    public function __construct($cilindrada) {\n        parent::__construct(\"Motocicleta\");\n        $this-&gt;cilindrada = $cilindrada;\n    }\n\n    public function mostraDetalls() {\n        return parent::mostraDetalls() . \", Cilindrada: \" . $this-&gt;cilindrada;\n    }\n}\n\nfunction mostraDetallsVehicle(Vehicle $vehicle) {\n    echo $vehicle-&gt;mostraDetalls() . \"\\n\";\n}\n\n$cotxe = new Cotxe(\"Toyota\", \"Corolla\");\n$moto = new Motocicleta(600);\n\nmostraDetallsVehicle($cotxe); // Output: Tipus: Cotxe, Marca: Toyota, Model: Corolla\nmostraDetallsVehicle($moto);  // Output: Tipus: Motocicleta, Cilindrada: 600\n</code></pre>"},{"location":"04phpoo.html#exercici-5-implementacio-del-patro-mvc-amb-vehicles","title":"Exercici 5. Implementaci\u00f3 del Patr\u00f3 MVC amb Vehicles","text":"<p>Continuant amb l'exercici anterior on has creat les classes <code>Vehicle</code>, <code>Cotxe</code>, i <code>Motocicleta</code>, ara refactoritzar\u00e0s el codi per seguir el patr\u00f3 Model-Vista-Controlador (MVC). El teu objectiu \u00e9s separar la l\u00f2gica de negoci (models) de la presentaci\u00f3 (vistes) i gestionar la interacci\u00f3 entre aquestes capes mitjan\u00e7ant un controlador.</p> <ol> <li> <p>Crear el Model:</p> <ul> <li>Refactoritza les classes <code>Vehicle</code>, <code>Cotxe</code>, i <code>Motocicleta</code> perqu\u00e8 representen el model de negoci i nom\u00e9s contenen la l\u00f2gica relacionada amb la gesti\u00f3 de vehicles.</li> <li>Assegura't que els models no contenen cap codi de presentaci\u00f3.</li> </ul> </li> <li> <p>Crear les Vistes:</p> <ul> <li>Crea vistes separades per mostrar els detalls dels vehicles:<ul> <li>Una vista HTML que mostre la informaci\u00f3 dels vehicles en format HTML.</li> <li>Una vista en text simple que mostre els detalls dels vehicles en un format de text senzill.</li> </ul> </li> </ul> </li> <li> <p>Crear el Controlador:</p> <ul> <li>Implementa un controlador que gestione la interacci\u00f3 entre els models i les vistes.</li> <li>El controlador ha de ser capa\u00e7 de rebre una sol\u00b7licitud per mostrar un vehicle i triar la vista adequada per mostrar-ne els detalls.</li> </ul> </li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Models\n\nclass Vehicle {\n    protected $tipus;\n\n    public function __construct($tipus) {\n        $this-&gt;tipus = $tipus;\n    }\n\n    public function getTipus() {\n        return $this-&gt;tipus;\n    }\n}\n\nclass Cotxe extends Vehicle {\n    private $marca;\n    private $model;\n\n    public function __construct($marca, $model) {\n        parent::__construct(\"Cotxe\");\n        $this-&gt;marca = $marca;\n        $this-&gt;model = $model;\n    }\n\n    public function getMarca() {\n        return $this-&gt;marca;\n    }\n\n    public function getModel() {\n        return $this-&gt;model;\n    }\n}\n\nclass Motocicleta extends Vehicle {\n    private $cilindrada;\n\n    public function __construct($cilindrada) {\n        parent::__construct(\"Motocicleta\");\n        $this-&gt;cilindrada = $cilindrada;\n    }\n\n    public function getCilindrada() {\n        return $this-&gt;cilindrada;\n    }\n}\n\n// Vistes\n\nclass VehicleView {\n    public function renderHtml(Vehicle $vehicle) {\n        $output = \"&lt;p&gt;Tipus: \" . $vehicle-&gt;getTipus() . \"&lt;/p&gt;\";\n        if ($vehicle instanceof Cotxe) {\n            $output .= \"&lt;p&gt;Marca: \" . $vehicle-&gt;getMarca() . \"&lt;/p&gt;\";\n            $output .= \"&lt;p&gt;Model: \" . $vehicle-&gt;getModel() . \"&lt;/p&gt;\";\n        } elseif ($vehicle instanceof Motocicleta) {\n            $output .= \"&lt;p&gt;Cilindrada: \" . $vehicle-&gt;getCilindrada() . \" cc&lt;/p&gt;\";\n        }\n        return $output;\n    }\n\n    public function renderText(Vehicle $vehicle) {\n        $output = \"Tipus: \" . $vehicle-&gt;getTipus() . \"\\n\";\n        if ($vehicle instanceof Cotxe) {\n            $output .= \"Marca: \" . $vehicle-&gt;getMarca() . \"\\n\";\n            $output .= \"Model: \" . $vehicle-&gt;getModel() . \"\\n\";\n        } elseif ($vehicle instanceof Motocicleta) {\n            $output .= \"Cilindrada: \" . $vehicle-&gt;getCilindrada() . \" cc\\n\";\n        }\n        return $output;\n    }\n}\n\n// Controlador\n\nclass VehicleController {\n    private $view;\n\n    public function __construct(VehicleView $view) {\n        $this-&gt;view = $view;\n    }\n\n    public function mostrarVehicle(Vehicle $vehicle, $format = 'html') {\n        if ($format === 'html') {\n            echo $this-&gt;view-&gt;renderHtml($vehicle);\n        } else {\n            echo $this-&gt;view-&gt;renderText($vehicle);\n        }\n    }\n}\n\n// Exemple d'\u00fas\n\n$view = new VehicleView();\n$controller = new VehicleController($view);\n\n$cotxe = new Cotxe(\"Toyota\", \"Corolla\");\n$moto = new Motocicleta(600);\n\n// Mostrar en HTML\n$controller-&gt;mostrarVehicle($cotxe, 'html');\n$controller-&gt;mostrarVehicle($moto, 'html');\n\n// Mostrar en Text\n$controller-&gt;mostrarVehicle($cotxe, 'text');\n$controller-&gt;mostrarVehicle($moto, 'text');\n</code></pre>"},{"location":"04phpoo.html#exercici-5-classes-abstractes-i-interficies","title":"Exercici 5. Classes Abstractes i Interf\u00edcies","text":"<ol> <li>Crea una classe abstracta <code>Figura</code> amb un m\u00e8tode abstracte <code>calculaArea</code>. Despr\u00e9s, crea classes <code>Cercle</code> i <code>Rectangle</code> que estiguen basades en <code>Figura</code> i implementen el m\u00e8tode <code>calculaArea</code>.</li> <li>Defineix una interf\u00edcie <code>OperacionsB\u00e0siques</code> amb els m\u00e8todes <code>suma</code> i <code>resta</code>. Implementa aquesta interf\u00edcie en una classe <code>CalculadoraSimple</code>.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nabstract class Figura {\n    abstract public function calculaArea();\n}\n\nclass Cercle extends Figura {\n    private $radi;\n\n    public function __construct($radi) {\n        $this-&gt;radi = $radi;\n    }\n\n    public function calculaArea() {\n        return pi() * $this-&gt;radi * $this-&gt;radi;\n    }\n}\n\nclass Rectangle extends Figura {\n    private $ample;\n    private $llarg;\n\n    public function __construct($ample, $llarg) {\n        $this-&gt;ample = $ample;\n        $this-&gt;llarg = $llarg;\n    }\n\n    public function calculaArea() {\n        return $this-&gt;ample * $this-&gt;llarg;\n    }\n}\n\n$cercle = new Cercle(5);\n$rectangle = new Rectangle(4, 6);\n\necho \"\u00c0rea del cercle: \" . $cercle-&gt;calculaArea() . \"\\n\"; // Output: \u00c0rea del cercle: 78.5398\necho \"\u00c0rea del rectangle: \" . $rectangle-&gt;calculaArea() . \"\\n\"; // Output: \u00c0rea del rectangle: 24\n</code></pre> <pre><code>&lt;?php\ninterface OperacionsB\u00e0siques {\n    public function suma($a, $b);\n    public function resta($a, $b);\n}\n\nclass CalculadoraSimple implements OperacionsB\u00e0siques {\n    public function suma($a, $b) {\n        return $a + $b;\n    }\n\n    public function resta($a, $b) {\n        return $a - $b;\n    }\n}\n\n$calculadora = new CalculadoraSimple();\necho \"Suma: \" . $calculadora-&gt;suma(5, 3) . \"\\n\"; // Output: Suma: 8\necho \"Resta: \" . $calculadora-&gt;resta(5, 3) . \"\\n\"; // Output: Resta: 2\n</code></pre>"},{"location":"04phpoo.html#exercici-6-utilitzar-traits","title":"Exercici 6.  Utilitzar Traits","text":"<ol> <li>Crea un trait <code>Informacio</code> amb un m\u00e8tode <code>mostraInformacio</code>. Inclou aquest trait en les classes <code>Cotxe</code> i <code>Motocicleta</code>, i utilitza'l per mostrar informaci\u00f3 addicional.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\ntrait Informacio {\n    public function mostraInformacio() {\n        return \"Aquest \u00e9s un objecte de tipus \" . get_class($this);\n    }\n}\n\nclass Cotxe {\n    use Informacio;\n}\n\nclass Motocicleta {\n    use Informacio;\n}\n\n$cotxe = new Cotxe();\n$moto = new Motocicleta();\n\necho $cotxe-&gt;mostraInformacio() . \"\\n\"; // Output: Aquest \u00e9s un objecte de tipus Cotxe\necho $moto-&gt;mostraInformacio() . \"\\n\"; // Output: Aquest \u00e9s un objecte de tipus Motocicleta\n</code></pre>"},{"location":"04phpoo.html#exercici-7-gestionar-excepcions","title":"Exercici 7.  Gestionar Excepcions","text":"<ol> <li>Escriu una funci\u00f3 <code>divideix</code> que prenga dos nombres com a par\u00e0metres i retorne el resultat de la divisi\u00f3. Si el segon nombre \u00e9s zero, llen\u00e7a una excepci\u00f3 amb un missatge adequat. Captura aquesta excepci\u00f3 quan crides a la funci\u00f3 i mostra un missatge d'error.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nfunction divideix($a, $b) {\n    if ($b == 0) {\n        throw new Exception(\"No es pot dividir per zero.\");\n    }\n    return $a / $b;\n}\n\ntry {\n    echo divideix(10, 2) . \"\\n\"; // Output: 5\n    echo divideix(10, 0) . \"\\n\"; // Aquesta l\u00ednia llan\u00e7ar\u00e0 una excepci\u00f3\n} catch (Exception $e) {\n    echo \"Error: \" . $e-&gt;getMessage() . \"\\n\"; // Output: Error: No es pot dividir per zero.\n}\n</code></pre>"},{"location":"04phpoo.html#exercici-8-proves-amb-phpunit","title":"Exercici 8. Proves amb PHPUnit","text":"<ol> <li>Crea una classe <code>Calculadora</code> amb els m\u00e8todes <code>suma</code> i <code>resta</code>. Escriu una prova unit\u00e0ria amb PHPUnit per verificar que aquests m\u00e8todes funcionen correctament.</li> <li>Afegeix un m\u00e8tode <code>divideix</code> a la classe <code>Calculadora</code> que llance una excepci\u00f3 quan es divideix per zero. Escriu una prova unit\u00e0ria que assegure que aquesta excepci\u00f3 es llan\u00e7a correctament.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Arxiu: tests/CalculadoraTest.php\nuse PHPUnit\\Framework\\TestCase;\n\nclass Calculadora {\n    public function suma($a, $b) {\n        return $a + $b;\n    }\n\n    public function resta($a, $b) {\n        return $a - $b;\n    }\n}\n\nclass CalculadoraTest extends TestCase {\n    public function testSuma() {\n        $calculadora = new Calculadora();\n        $resultat = $calculadora-&gt;suma(2, 3);\n        $this-&gt;assertEquals(5, $resultat);\n    }\n\n    public function testResta() {\n        $calculadora = new Calculadora();\n        $resultat = $calculadora-&gt;resta(5, 3);\n        $this-&gt;assertEquals(2, $resultat);\n    }\n}\n</code></pre> <pre><code>// Arxiu: tests/CalculadoraTest.php\nuse PHPUnit\\Framework\\TestCase;\n\nclass Calculadora {\n    public function divideix($a, $b) {\n        if ($b == 0) {\n            throw new InvalidArgumentException(\"No es pot dividir per zero.\");\n        }\n        return $a / $b;\n    }\n}\n\nclass CalculadoraTest extends TestCase {\n    public function testDivideix() {\n        $this-&gt;expectException(InvalidArgumentException::class);\n\n        $calculadora = new Calculadora();\n        $calculadora-&gt;divideix(5, 0);\n    }\n}\n</code></pre>"},{"location":"04phpoo.html#exercici-9-espais-de-noms-namespaces","title":"Exercici 9. Espais de Noms (Namespaces)","text":"<ol> <li>Crea un espai de noms <code>App\\Models</code> i defineix una classe <code>Usuari</code> dins d'aquest espai de noms. Afegeix un m\u00e8tode <code>getNomComplet</code> que retorne el nom complet de l'usuari.</li> <li>En un fitxer separat, importa la classe <code>Usuari</code> de l'espai de noms <code>App\\Models</code> i crea una inst\u00e0ncia d'aquesta classe. Utilitza el m\u00e8tode <code>getNomComplet</code> per mostrar el nom complet d'un usuari.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Arxiu: src/Models/Usuari.php\nnamespace App\\Models;\n\nclass Usuari {\n    private $nom;\n    private $cognom;\n\n    public function __construct($nom, $cognom) {\n        $this-&gt;nom = $nom;\n        $this-&gt;cognom = $cognom;\n    }\n\n    public function getNomComplet() {\n        return $this-&gt;nom . \" \" . $this-&gt;cognom;\n    }\n}\n</code></pre> <pre><code>// Arxiu: index.php\nrequire 'vendor/autoload.php';\n\nuse App\\Models\\Usuari;\n\n$usuari = new Usuari(\"Joan\", \"Garcia\");\necho $usuari-&gt;getNomComplet(); // Output: Joan Garcia\n</code></pre>"},{"location":"04phpoo.html#exercici-10-autoloading-i-composer","title":"Exercici 10. Autoloading i Composer","text":"<ol> <li>Configura un projecte PHP amb Composer que utilitze l'autoloading PSR-4. Crea l'estructura de directoris <code>src/Models</code> i col\u00b7loca una classe <code>Producte</code> dins de <code>src/Models</code>. Verifica que l'autoloading funcione correctament instanciant la classe <code>Producte</code> en un fitxer separat.</li> <li>Afegeix la llibreria <code>monolog/monolog</code> al projecte utilitzant Composer. Crea una inst\u00e0ncia de <code>Logger</code> i afegeix una entrada al registre de logs.</li> </ol> Soluci\u00f3  1. Crea l'estructura de directoris src/Models i col\u00b7loca el seg\u00fcent codi a src/Models/Producte.php:  <pre><code>&lt;?php\nnamespace App\\Models;\n\nclass Producte {\n    private $nom;\n\n    public function __construct($nom) {\n        $this-&gt;nom = $nom;\n    }\n\n    public function getNom() {\n        return $this-&gt;nom;\n    }\n}\n</code></pre>  2. Configura l'autoloading en composer.json:  <pre><code>{\n    \"autoload\": {\n        \"psr-4\": {\n            \"App\\\\\": \"src/\"\n        }\n    }\n}\n</code></pre>  3. Executa composer dump-autoload per generar els fitxers d'autoload. 4. Utilitza la classe producte:  <pre><code>&lt;?php\n// Arxiu: index.php\nrequire 'vendor/autoload.php';\n\nuse App\\Models\\Producte;\n\n$producte = new Producte(\"Ordinador\");\necho $producte-&gt;getNom(); // Output: Ordinador\n</code></pre> 5. Afegeix Monolog a composer.json:  <pre><code>composer require monolog/monolog\n</code></pre> 6. Utilitza Monolog per crear un logger:  <pre><code>&lt;?php\nrequire 'vendor/autoload.php';\n\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\n\n$log = new Logger('nom_aplicacio');\n$log-&gt;pushHandler(new StreamHandler('app.log', Logger::WARNING));\n\n// Afegeix una entrada al log\n$log-&gt;warning('Aquesta \u00e9s una entrada d'advert\u00e8ncia');\n$log-&gt;error('Aquesta \u00e9s una entrada d'error');\n</code></pre>"},{"location":"04phpoo.html#exercici-11-logger","title":"Exercici 11. Logger","text":"<ol> <li>Utilitzant la llibreria <code>Monolog</code>, crea un logger que escriga missatges a un fitxer <code>app.log</code>. Configura el logger per registrar missatges d'informaci\u00f3 i d'error.</li> <li>Configura un logger que escriga missatges de registre tant a un fitxer com a la consola. Prova el logger registrant missatges d'error.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nrequire 'vendor/autoload.php';\n\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\n\n$log = new Logger('nom_aplicacio');\n$log-&gt;pushHandler(new StreamHandler('app.log', Logger::INFO));\n$log-&gt;pushHandler(new StreamHandler('app.log', Logger::ERROR));\n\n// Registra missatges d'informaci\u00f3 i d'error\n$log-&gt;info('Aquesta \u00e9s una entrada d\u2019informaci\u00f3');\n$log-&gt;error('Aquesta \u00e9s una entrada d\u2019error');\n</code></pre> <pre><code>&lt;?php\nrequire 'vendor/autoload.php';\n\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\nuse Monolog\\Handler\\ErrorLogHandler;\n\n$log = new Logger('nom_aplicacio');\n$log-&gt;pushHandler(new StreamHandler('app.log', Logger::WARNING));\n$log-&gt;pushHandler(new ErrorLogHandler());\n\n// Registra missatges d\u2019error al fitxer i a la consola\n$log-&gt;error('Aquesta \u00e9s una entrada d\u2019error');\n</code></pre>"},{"location":"04phpoo.html#exercici-12-documentacio","title":"Exercici 12. Documentaci\u00f3","text":"<ol> <li>Documenta la classe <code>Producte</code> creada en l'exercici anterior utilitzant comentaris PHPDoc. Assegura't d'incloure la descripci\u00f3 de la classe, les propietats, i els m\u00e8todes.</li> <li>Utilitza una eina com <code>phpDocumentor</code> per generar la documentaci\u00f3 autom\u00e0tica del codi PHP del projecte, incloent-hi la classe <code>Producte</code>.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nnamespace App\\Models;\n\n/**\n * Classe Producte\n *\n * Representa un producte amb un nom.\n */\nclass Producte {\n    /**\n     * @var string El nom del producte\n     */\n    private $nom;\n\n    /**\n     * Constructor de la classe Producte\n     *\n     * @param string $nom El nom del producte\n     */\n    public function __construct($nom) {\n        $this-&gt;nom = $nom;\n    }\n\n    /**\n     * Obt\u00e9 el nom del producte\n     *\n     * @return string El nom del producte\n     */\n    public function getNom() {\n        return $this-&gt;nom;\n    }\n}\n</code></pre>  1. Instal\u00b7la phpDocumentor globalment o com a depend\u00e8ncia de desenvolupament:  <pre><code>composer require --dev phpdocumentor/phpdocumentor\n</code></pre>  2. Genera la documentaci\u00f3:  <pre><code>vendor/bin/phpdoc -d src -t docs\n</code></pre>  Aquest comandament generar\u00e0 la documentaci\u00f3 a la carpeta docs."},{"location":"04phpoo.html#exercici-13-generacio-de-pdfs-amb-dompdf","title":"Exercici 13. Generaci\u00f3 de PDFs amb DomPDF","text":"<ol> <li>Instal\u00b7la la llibreria <code>dompdf/dompdf</code> amb Composer. Crea un script PHP que genere un PDF senzill amb un t\u00edtol i un par\u00e0graf de text.</li> <li>Crea un PDF utilitzant DomPDF que incloga una taula amb dades i una imatge. Assegura't que el PDF es renderitze correctament i que la imatge s'incloga en el document.</li> </ol> Soluci\u00f3  1. Instal\u00b7la DomPDF amb Composer:  <pre><code>composer require dompdf/dompdf\n</code></pre>  2. Crea un script PHP que generi un PDF senzill:  <pre><code>&lt;?php\nrequire 'vendor/autoload.php';\n\nuse Dompdf\\Dompdf;\n\n$dompdf = new Dompdf();\n$html = '&lt;h1&gt;Informe de Vendes&lt;/h1&gt;&lt;p&gt;Aquest \u00e9s un informe de les vendes.&lt;/p&gt;';\n\n$dompdf-&gt;loadHtml($html);\n$dompdf-&gt;setPaper('A4', 'landscape');\n$dompdf-&gt;render();\n$dompdf-&gt;stream('informe.pdf');\n</code></pre>  3. Crea un PDF amb una taula i una imatge:  <pre><code>&lt;?php\nrequire 'vendor/autoload.php';\n\nuse Dompdf\\Dompdf;\n\n$dompdf = new Dompdf();\n$html = '\n    &lt;h1&gt;Informe de Productes&lt;/h1&gt;\n    &lt;table border=\"1\" cellpadding=\"10\"&gt;\n        &lt;thead&gt;\n            &lt;tr&gt;\n                &lt;th&gt;Producte&lt;/th&gt;\n                &lt;th&gt;Preu&lt;/th&gt;\n            &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n            &lt;tr&gt;\n                &lt;td&gt;Ordinador&lt;/td&gt;\n                &lt;td&gt;500\u20ac&lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td&gt;Teclat&lt;/td&gt;\n                &lt;td&gt;20\u20ac&lt;/td&gt;\n            &lt;/tr&gt;\n        &lt;/tbody&gt;\n    &lt;/table&gt;\n    &lt;img src=\"https://example.com/imatge.png\" alt=\"Imatge de Producte\" /&gt;\n';\n\n$dompdf-&gt;loadHtml($html);\n$dompdf-&gt;setPaper('A4', 'portrait');\n$dompdf-&gt;render();\n$dompdf-&gt;stream(\"informe_productes.pdf\");\n</code></pre>"},{"location":"04phpoo.html#exercicis-proposats","title":"Exercicis proposats","text":""},{"location":"04phpoo.html#exercici-1-creacio-de-la-classe-basica-i-gestio-de-propietats","title":"Exercici 1. Creaci\u00f3 de la Classe B\u00e0sica i Gesti\u00f3 de Propietats","text":"<ul> <li> <p>Crea una classe <code>Persona</code> amb les propietats privades <code>nom</code>, <code>cognoms</code>, i <code>edat</code>. Encapsula aquestes propietats mitjan\u00e7ant getters i setters. Afig els seg\u00fcents m\u00e8todes:</p> <ul> <li><code>getNomComplet(): string</code> \u2013 Retorna el nom complet de la persona.</li> <li><code>estaJubilat(): bool</code> \u2013 Retorna <code>true</code> si l'edat \u00e9s major o igual a 65, <code>false</code> en cas contrari.</li> </ul> </li> <li> <p>Modifica la classe <code>Persona</code> afegint un constructor que assigna nom i cognoms. Si es proporciona un tercer par\u00e0metre, assigna l'edat; en cas contrari, assigna una edat per defecte de 25 anys.</p> </li> <li> <p>Modifica la classe <code>Persona</code> per utilitzar una constant <code>LIMITE_EDAT</code> amb el valor de 66 anys i utilitza-la en el m\u00e8tode <code>estaJubilat</code>.</p> </li> </ul>"},{"location":"04phpoo.html#exercici-2-herencia-i-polimorfisme","title":"Exercici 2. Her\u00e8ncia i Polimorfisme","text":"<ul> <li> <p>Crea una classe <code>Empleado</code> que herete de <code>Persona</code>. Afig les seg\u00fcents propietats i m\u00e8todes:</p> <ul> <li><code>private float $sou</code></li> <li><code>private array $telefons</code></li> <li><code>anyadirTelefono(int $telefon): void</code> \u2013 Afig un n\u00famero de tel\u00e8fon a l'array.</li> <li><code>listarTelefonos(): string</code> \u2013 Retorna els n\u00fameros de tel\u00e8fon separats per comes.</li> <li><code>vaciarTelefonos(): void</code> \u2013 Buida l'array de tel\u00e8fons.</li> <li><code>debePagarImpuestos(): bool</code> \u2013 Retorna <code>true</code> si el sou \u00e9s superior a 3333\u20ac, <code>false</code> en cas contrari.</li> </ul> </li> <li> <p>Afig un m\u00e8tode est\u00e0tic <code>toHtml(Empleado $emp): string</code> que genere un codi HTML que mostre el nom complet de l'empleat dins d'un par\u00e0graf i els seus tel\u00e8fons dins d'una llista ordenada.</p> </li> <li>Afig un m\u00e8tode est\u00e0tic <code>toHtml(Persona $p)</code> a la classe Persona que mostre el nom complet de la persona dins d'un par\u00e0graf. Modifica el m\u00e8tode <code>toHtml</code> de <code>Empleado</code> per rebre una <code>Persona</code> com a par\u00e0metre i comprovar si es tracta d'un <code>Empleado</code> amb <code>instanceof</code>.</li> <li>Transforma <code>Persona</code> en una classe abstracta. Redefineix el m\u00e8tode est\u00e0tic <code>toHtml(Persona $p)</code> en totes les seues subclasses. </li> </ul>"},{"location":"04phpoo.html#exercici-3-integracio-despais-de-noms-autoloading-i-composer","title":"Exercici 3. Integraci\u00f3 d'Espais de Noms, Autoloading, i Composer","text":"<ul> <li> <p>Crea una classe <code>Empresa</code> que incloga una propietat amb un array de <code>Empleados</code> . Implementa:</p> <ul> <li><code>public function addWorker(Empleado $t)</code></li> <li><code>public function listWorkersHtml(): string</code> \u2013 Genera la llista de treballadors en format HTML.</li> <li><code>public function getCosteNominas(): float</code> \u2013 Calcula el cost total de les n\u00f2mines.</li> </ul> </li> <li> <p>Configura el projecte PHP amb Composer que utilitze l'autoloading PSR-4.  </p> </li> </ul>"},{"location":"04phpoo.html#exercici-4-logger-i-documentacio","title":"Exercici 4. Logger i Documentaci\u00f3","text":"<ul> <li> <p>Utilitza la llibreria <code>Monolog</code> per configurar un logger que escriga missatges a un fitxer <code>app.log</code>. Afig funcionalitat perqu\u00e8 el logger registre missatges d'informaci\u00f3 i d'error en diferents arxius segons la gravetat.</p> </li> <li> <p>Configura un logger que escriga missatges de registre tant a un fitxer com a la consola. Prova el logger registrant missatges d'error i advert\u00e8ncia.</p> </li> <li> <p>Documenta la classe <code>Empleado</code> creada en exercicis anteriors utilitzant comentaris PHPDoc. Inclou la descripci\u00f3 de la classe, les propietats, i els m\u00e8todes. Utilitza una eina com <code>phpDocumentor</code> per generar documentaci\u00f3 autom\u00e0tica.</p> </li> <li> <p>Escriu proves unit\u00e0ries per als m\u00e8todes de les classes <code>Persona</code>, <code>Empleado</code>, i <code>Empresa</code> utilitzant PHPUnit. Prova els m\u00e8todes <code>getNomComplet</code>, <code>estaJubilat</code>, <code>addWorker</code>, i <code>getCosteNominas</code>. Assegura't que les proves cobreixen diferents escenaris, incloent errors potencials.</p> </li> <li> <p>Escriu una prova unit\u00e0ria que comprove que el logger est\u00e0 registrant correctament els missatges d'error a l'arxiu corresponent. Utilitza un mock per assegurar-te que el logger funciona sense necessitat d'escriure en un fitxer real durant la prova.</p> </li> </ul>"},{"location":"04phpoo.html#exercici-5-generacio-de-pdfs-amb-dompdf","title":"Exercici 5. Generaci\u00f3 de PDFs amb DomPDF","text":"<ul> <li> <p>Instal\u00b7la la llibreria <code>dompdf/dompdf</code> amb Composer. Crea un script PHP que genere un PDF senzill amb un t\u00edtol i un par\u00e0graf de text.</p> </li> <li> <p>Crea un PDF utilitzant DomPDF que incloga una taula amb dades i una imatge. Assegura't que el PDF es renderitze correctament i que la imatge s'incloga en el document.</p> </li> <li> <p>Utilitzant la classe <code>Empresa</code> i <code>Empleado</code>, genera un informe en PDF amb la llista de treballadors i el seu sou. Utilitza DomPDF per generar aquest informe.</p> </li> </ul>"},{"location":"04phpoo.html#exercici-6-serialitzacio-i-json","title":"Exercici 6. Serialitzaci\u00f3 i JSON","text":"<ul> <li> <p>Crea una interf\u00edcie <code>JSerializable</code> que incloga els m\u00e8todes:</p> <ul> <li><code>toJSON(): string</code> \u2013 Converteix l'objecte a un JSON utilitzant <code>json_encode()</code>.</li> <li><code>toSerialize(): string</code> \u2013 Serialitza l'objecte utilitzant <code>serialize()</code>.</li> </ul> </li> <li> <p>Modifica les classes <code>Persona</code>, <code>Empleado</code>, i <code>Empresa</code> per implementar aquesta interf\u00edcie. Assegura't que les propietats privades es puguen serialitzar correctament.</p> </li> <li> <p>Escriu m\u00e8todes per deserialitzar un objecte a partir d'una cadena JSON o d'una cadena serialitzada. Prova aquests m\u00e8todes amb PHPUnit per assegurar-te que la deserialitzaci\u00f3 funciona correctament.</p> </li> </ul>"},{"location":"04phpoo.html#exercici-7-separacio-del-model-de-negoci-i-la-presentacio-mvc","title":"Exercici 7. Separaci\u00f3 del Model de Negoci i la Presentaci\u00f3 (MVC)","text":"<p>Fins ara, has creat diverses classes que gestionen la l\u00f2gica del joc i les dades (models), com <code>Persona</code>, <code>Empleado</code>, i <code>Empresa</code>, i has generat sortides HTML i PDFs amb DomPDF. Ara \u00e9s el moment de refactoritzar la teua aplicaci\u00f3 per assegurar una separaci\u00f3 clara entre la l\u00f2gica del negoci i la presentaci\u00f3, seguint el patr\u00f3 Model-Vista-Controlador (MVC).</p> <ul> <li> <p>Crear el Model:</p> <ul> <li>Refactoritza les classes <code>Persona</code>, <code>Empleado</code>, i <code>Empresa</code> per assegurar que nom\u00e9s gestionen la l\u00f2gica de negoci (per exemple, c\u00e0lcul de n\u00f2mines, gesti\u00f3 d'empleats, etc.).</li> <li>Assegura't que aquestes classes no contenen codi relacionat amb la presentaci\u00f3 (HTML o PDF).</li> </ul> </li> <li> <p>Crear les Vistes:</p> <ul> <li>Crea vistes separades per presentar la informaci\u00f3 als usuaris:<ul> <li>Una vista HTML per mostrar la informaci\u00f3 de <code>Empleado</code> i <code>Empresa</code> com a llistats.</li> <li>Una vista PDF per generar informes amb DomPDF, basant-se en les dades proporcionades pel model.</li> </ul> </li> </ul> </li> <li> <p>Crear el Controlador:</p> <ul> <li>Implementa un controlador que reba les sol\u00b7licituds dels usuaris, interactue amb el model (<code>Persona</code>, <code>Empleado</code>, <code>Empresa</code>), i tria la vista adequada per mostrar els resultats (HTML o PDF).</li> <li>El controlador ha d'encapsular tota la l\u00f2gica necess\u00e0ria per a gestionar la interacci\u00f3 entre la vista i el model, assegurant que el model no estiga lligat a la capa de presentaci\u00f3.</li> </ul> </li> </ul>"},{"location":"04phpoo.html#exercici-8-creacio-de-proves-unitaries-per-al-patro-mvc","title":"Exercici 8. Creaci\u00f3 de Proves Unit\u00e0ries per al Patr\u00f3 MVC","text":"<p>Despr\u00e9s de refactoritzar l'aplicaci\u00f3 per separar la l\u00f2gica del negoci de la presentaci\u00f3 seguint el patr\u00f3 Model-Vista-Controlador (MVC), \u00e9s fonamental assegurar-se que tots els components funcionen correctament i que la interacci\u00f3 entre ells es realitza tal com s'espera. Per aix\u00f2, has de crear una s\u00e8rie de proves unit\u00e0ries utilitzant PHPUnit per verificar el funcionament del model, les vistes i els controladors.</p> <ul> <li> <p>Proves del Model:</p> <ul> <li>Escriu proves unit\u00e0ries per verificar el funcionament dels m\u00e8todes de les classes <code>Persona</code>, <code>Empleado</code>, i <code>Empresa</code>.</li> <li>Assegura't que els m\u00e8todes funcionen correctament, com ara:<ul> <li><code>getNomComplet()</code></li> <li><code>debePagarImpuestos()</code></li> <li><code>addWorker()</code> i <code>getCosteNominas()</code></li> </ul> </li> <li>Prova que els c\u00e0lculs es realitzen correctament i que les dades es gestionen segons el que s'espera.</li> </ul> </li> <li> <p>Proves del Controlador:</p> <ul> <li>Escriu proves unit\u00e0ries per assegurar-te que els controladors interactuen correctament amb els models i que seleccionen la vista adequada per a cada situaci\u00f3.</li> <li>Prova que les dades es passen correctament del model a la vista a trav\u00e9s del controlador.</li> <li>Implementa proves per verificar que el controlador respon correctament a diferents sol\u00b7licituds de l'usuari, per exemple:<ul> <li>Mostrar una llista d'empleats en HTML.</li> <li>Generar un informe en PDF utilitzant DomPDF.</li> </ul> </li> </ul> </li> <li> <p>Proves de les Vistes:</p> <ul> <li>Escriu proves unit\u00e0ries per comprovar que les vistes reben i mostren correctament la informaci\u00f3 proporcionada pel controlador.</li> <li>Prova que la generaci\u00f3 de contingut HTML o PDF es realitza correctament a partir de les dades proporcionades pel model.</li> </ul> </li> </ul>"},{"location":"04phpoo.html#14-enunciat-dels-projectes","title":"14. Enunciat dels projectes","text":""},{"location":"04phpoo.html#projecte-4-en-ratlla","title":"Projecte \"4 en Ratlla\"","text":""},{"location":"04phpoo.html#1-crear-lentorn-del-4-en-ratlla","title":"1. Crear l'entorn del 4 en ratlla","text":"<ul> <li>Dins de php crear les carpetes App,Views i Helpers.</li> <li>Dins de la carpeta App crea les carpetes Models, Controllers , Services i Exceptions. </li> <li>Dins de la carpeta src tindrem el index.php i el css.</li> </ul>"},{"location":"04phpoo.html#2-integracio-de-composer-i-autoloading","title":"2. Integraci\u00f3 de Composer i Autoloading","text":"<ul> <li>Configuraci\u00f3 de Composer: Defineix un <code>composer.json</code> per al projecte, configurant l'autoloading PSR-4 per carregar autom\u00e0ticament les classes de <code>Joc4enRatlla</code>.</li> <li>Estructura del Projecte:<ul> <li>Organitza el codi en directoris com <code>App/Models</code> per a les classes del joc i <code>App/Controllers</code> per a la gesti\u00f3 del flux del joc.</li> <li>Configura Composer per gestionar les depend\u00e8ncies del projecte.</li> </ul> </li> </ul>"},{"location":"04phpoo.html#3-refactoritzacio-amb-programacio-orientada-a-objectes-poo-i-amb-mvc","title":"3. Refactoritzaci\u00f3 amb Programaci\u00f3 Orientada a Objectes (POO) i amb MVC","text":""},{"location":"04phpoo.html#models","title":"Models","text":"<ul> <li> <p>Dins de la carpeta Models:</p> </li> <li> <p>Classe <code>Board</code>: Crea una classe <code>Board</code> per representar la graella del joc. Aquesta classe ha de gestionar la configuraci\u00f3 inicial de la graella, els moviments dels jugadors, i la comprovaci\u00f3 de si hi ha un guanyador.</p> </li> </ul> <pre><code>namespace Joc4enRatlla\\Models;\n\nclass Board\n{\n    public const FILES = 6;\n    public const COLUMNS = 7;\n    public const DIRECTIONS = [\n        [0, 1],   // Horizontal derecha\n        [1, 0],   // Vertical abajo\n        [1, 1],   // Diagonal abajo-derecha\n        [1, -1]   // Diagonal abajo-izquierda\n    ];\n\n    private array $slots; // graella\n\n    public function __construct(){\n      // TODO: Ha d'inicializar $slots\n    }\n\n    // TODO: Getters i Setters \n\n    private static function initializeBoard(): array{\n        // TODO: Inicialitza la graella amb valors buits\n    }\n    public function setMovementOnBoard(int $column, int $player): array {\n        // TODO: Realitza un moviment en la graella\n    }\n    public function checkWin(array $coord): bool {\n        // TODO: Comprova si hi ha un guanyador\n    }\n    public function isValidMove(int $column): bool {\n        // TODO: Comprova si el moviment \u00e9s v\u00e0lid\n    }\n\n    public function isFull(): bool {\n        // TODO: El tauler est\u00e0 ple?\n    }\n\n\n\n}\n</code></pre> <ul> <li>Classe  <code>Jugador</code>: Crea una classe <code>Player</code> per representar els jugadors del joc, amb propietats com el <code>name</code>, el <code>color</code> de les fitxes, forma de jugar <code>isAutomatic</code>.</li> </ul> <pre><code>namespace Joc4enRatlla\\Models;\n\n\nclass Player {\n    private $name;      // Nom del jugador\n    private $color;     // Color de les fitxes\n    private $isAutomatic; // Forma de jugar (autom\u00e0tica/manual)\n\n    public function __construct( $name, $color, $isAutomatic = false) {\n        // TODO: Inicialitzar variables \n    }\n\n    // TODO: Getters i Setters \n\n}\n</code></pre> <ul> <li>Classe <code>Game</code>: Refactoritza la l\u00f2gica del joc en una classe <code>Game</code> que gestione la graella, el torn del jugador, i la l\u00f2gica per determinar el guanyador, la puntuaci\u00f3.</li> </ul> <p><pre><code>namespace Joc4enRatlla\\Models;\n\nuse Joc4enRatlla\\Models\\Board;\nuse Joc4enRatlla\\Models\\Player;\n\nclass Game\n{\n    private Board $board;\n    private int $nextPlayer;\n    private array $players;\n    private ?Player $winner;\n    private array $scores = [1 =&gt; 0, 2 =&gt; 0];\n\n    public function __construct( Player $jugador1, Player $jugador2){\n        // TODO: S'han d'inicialitzar les variables tenint en compte que el array de jugador ha de comen\u00e7ar amb l'index 1 \n    }\n\n    // TODO: getters i setters\n\n    public function reset(): void{\n        // TODO: Reinicia el joc\n    }\n    public function play($columna){\n        // TODO: Realitza un moviment\n    }\n    /**\n    * Realitza moviment autom\u00e0tic\n    * @return void\n    */                                          \n    public function playAutomatic(){\n        $opponent = $this-&gt;nextPlayer === 1 ? 2 : 1;\n\n        for ($col = 1; $col &lt;= Board::COLUMNS; $col++) {\n            if ($this-&gt;board-&gt;isValidMove($col)) {\n                $tempBoard = clone($this-&gt;board);\n                $coord = $tempBoard-&gt;setMovementOnBoard($col, $this-&gt;nextPlayer);\n\n                if ($tempBoard-&gt;checkWin($coord)) {\n                    $this-&gt;play($col);\n                    return;\n                }\n            }\n        }\n\n        for ($col = 1; $col &lt;= Board::COLUMNS; $col++) {\n            if ($this-&gt;board-&gt;isValidMove($col)) {\n                $tempBoard = clone($this-&gt;board);\n                $coord = $tempBoard-&gt;setMovementOnBoard($col, $opponent);\n                if ($tempBoard-&gt;checkWin($coord )) {\n                    $this-&gt;play($col);\n                    return;\n                }\n            }\n        }\n\n        $possibles = array();\n        for ($col = 1; $col &lt;= Board::COLUMNS; $col++) {\n            if ($this-&gt;board-&gt;isValidMove($col)) {\n                $possibles[] = $col;\n            }\n        }\n        if (count($possibles)&gt;2) {\n            $random = rand(-1,1);\n        }\n        $middle = (int) (count($possibles) / 2)+$random;\n        $inthemiddle = $possibles[$middle];\n        $this-&gt;play($inthemiddle);\n    }\n    public function save(){\n        // TODO: Guarda l'estat del joc a les sessions\n    }\n    public static function restore(){\n        // TODO: Restaura l'estat del joc de les sessions\n    }\n\n}\n</code></pre>   - Documentaci\u00f3:     - Totes les classes i m\u00e8todes han d'estar documentats amb comentaris PHPDoc.</p>"},{"location":"04phpoo.html#controladors","title":"Controladors","text":"<ul> <li> <p>Dins de la carpeta Controllers:</p> <ul> <li>Classe <code>JocController</code>: Crea un controlador <code>JocController</code> que gestione el  joc. Aquest controlador ha de permetre als jugadors realitzar moviments, comprovar l'estat del joc, i gestionar les vistes.</li> </ul> </li> </ul> <p>```php   namespace Joc4enRatlla\\Controllers;</p> <pre><code>use Joc4enRatlla\\Models\\Player;\nuse Joc4enRatlla\\Models\\Game;\n\n\nclass GameController\n{\nprivate Game $game;\n\n// Request \u00e9s l'array $_POST\n\npublic function __construct($request=null)\n{\n    // TODO: Inicialitzaci\u00f3 del joc.Ha d'inicializar el Game si \u00e9s la primera vegada o agafar les dades de la sessi\u00f3 si ja ha estat inicialitzada\n\n    $this-&gt;play($request);\n\n}\n\npublic function play(Array $request)  \n{\n    // TODO : Gesti\u00f3 del joc. Ac\u00ed es on s'ha de vore si hi ha guanyador, si el que juga es autom\u00e0tic  o manual, s'ha polsat reiniciar...\n\n\n\n    $board = $this-&gt;game-&gt;getBoard();\n    $players = $this-&gt;game-&gt;getPlayers();\n    $winner = $this-&gt;game-&gt;getWinner();\n    $scores = $this-&gt;game-&gt;getScores();\n\n    loadView('index',compact('board','players','winner','scores'));\n }\n</code></pre> <p>} ``` </p>"},{"location":"04phpoo.html#serveis-i-funcions","title":"Serveis i funcions","text":"<ul> <li>Dins de la carpeta Services: <ul> <li>Funci\u00f3 <code>loadView</code>: Crea una funci\u00f3 <code>loadView</code> que carregue les vistes del joc. Aquesta funci\u00f3 ha de rebre el nom de la vista i les dades a passar a la vista, i ha de mostrar la vista amb les dades proporcionades.  <code>php &lt;?php  namespace Joc4enRatlla\\Services;  class Service { public static function loadView($view, $data = []) {     $viewPath = str_replace('.', '/', $view);     extract($data);      include  $_SERVER['DOCUMENT_ROOT'] . \"/../Views/$viewPath.view.php\";  } }</code></li> </ul> </li> </ul> <p>i la funci\u00f3 <code>loadView</code> en un fitxer de funcions</p> <pre><code>  function loadView($view, $data = [])\n    {\n       Joc4enRatlla\\Services\\Service::loadView($view, $data);\n    }\n\n    function dd(...$data )\n    {\n        echo \"&lt;pre&gt;\";\n        foreach ($data as $d) {\n            var_dump($d);\n        }\n\n        echo \"&lt;/pre&gt;\";\n        die();\n    }\n</code></pre>"},{"location":"04phpoo.html#vistes","title":"Vistes","text":"<ul> <li> <p>Dins de la carpeta Views:</p> <ul> <li>Vista <code>index.php</code>: Crea una vista <code>index.php</code> que mostre la graella del joc, el torn actual del jugador, i els resultats finals (guanyador o empat). Aquesta vista ha de permetre als jugadors realitzar moviments en la graella.</li> </ul> </li> </ul> <pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;link rel=\"stylesheet\" href=\"4ratlla.css?v=&lt;?php echo time(); ?&gt;\"&gt;\n    &lt;title&gt;4 en ratlla&lt;/title&gt;\n    &lt;style&gt;\n        .player1 {\n            background-color: &lt;?= $players[1]-&gt;getColor() ?&gt; ; /* Color   per un dels jugadors */\n        }\n\n        .player2 {\n            background-color:  &lt;?= $players[2]-&gt;getColor() ?&gt;; /* Color   per l'altre jugador */\n        }\n\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;?php include_once $_SERVER['DOCUMENT_ROOT'].'/../Views/partials/error.view.php'  ?&gt;\n &lt;form action=\"&lt;?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?&gt;\" method=\"post\"&gt;\n    &lt;?php include_once $_SERVER['DOCUMENT_ROOT'].'/../Views/partials/board.view.php'  ?&gt;\n     &lt;input type=\"submit\" name=\"reset\" value=\"Reiniciar joc\"&gt;\n     &lt;input type=\"submit\" name=\"exit\" value=\"Acabar joc\"&gt;\n&lt;/form&gt;\n &lt;?php include_once $_SERVER['DOCUMENT_ROOT'].'/../Views/partials/panel.view.php'  ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>board.view.php</p> <pre><code>&lt;div class=\"board\"&gt;\n    &lt;table&gt;\n     &lt;tr&gt;\n       &lt;?php if (!$winner ):\n        for ($j=1;$j&lt;= $board::COLUMNS ;$j++): ?&gt;\n         &lt;td&gt;&lt;input type='submit' name='columna' value='&lt;?=$j ?&gt;' /&gt;&lt;/td&gt;\";\n      &lt;?php endfor ; else: ?&gt;\n        &lt;h1&gt;El guanyador es el jugador &lt;?=  $winner -&gt;getName() ?&gt;&lt;/h1&gt;\n      &lt;?php endif ?&gt;\n     &lt;/tr&gt;\n      &lt;?php for ($i=1;$i&lt;= $board::FILES ;$i++):  ?&gt;\n          &lt;tr&gt;\n         &lt;?php for ($j=1;$j&lt;= $board::COLUMNS ;$j++):  ?&gt;\n             &lt;?php echo match ($board-&gt;getSlots()[$i][$j]){\n                0 =&gt; '&lt;td class=\"buid\"&gt;&lt;/td&gt;',\n                1 =&gt; '&lt;td class=\"player1\"&gt;&lt;/td&gt;',\n                2 =&gt; '&lt;td class=\"player2\"&gt;&lt;/td&gt;'};\n                endfor ;\n            endfor   ?&gt;\n         &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"04phpoo.html#spa","title":"SPA","text":"<p>Creen la p\u00e0gina index.php que carregar\u00e0 el joc 4 en ratlla.</p> <pre><code>&lt;?php\nsession_start();\nrequire_once $_SERVER['DOCUMENT_ROOT'] . '/../vendor/autoload.php';\nrequire_once $_SERVER['DOCUMENT_ROOT'] . '/../Helpers/functions.php';\nuse Joc4enRatlla\\Controllers\\GameController;\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $gameController = new GameController($_POST); \n} else {\n    loadView('jugador');\n}\n</code></pre>"},{"location":"04phpoo.html#4-proves-amb-phpunit","title":"4. Proves amb PHPUnit","text":"<ul> <li>Escriu Proves Unit\u00e0ries: Crea proves unit\u00e0ries per a la classe <code>Joc4enRatlla</code> utilitzant PHPUnit. Les proves poden incloure:<ul> <li>Verificaci\u00f3 de la configuraci\u00f3 inicial de la graella.</li> <li>Proves per assegurar que un moviment s'aplica correctament a la graella.</li> <li>Proves per assegurar que el joc detecta correctament un guanyador o un empat.</li> </ul> </li> <li>Proves de Gesti\u00f3 de Sessions: Afig proves per assegurar que l'estat del joc i el torn del jugador es mantenen correctament a trav\u00e9s de les sessions.</li> </ul>"},{"location":"04phpoo.html#5-logger-amb-monolog_1","title":"5. Logger amb Monolog","text":"<ul> <li>Configuraci\u00f3 de Logger: Utilitza <code>Monolog</code> per registrar esdeveniments importants del joc, com quan un jugador fa un moviment, quan s'inicia una nova partida, o quan es produeixen errors.</li> <li>Diversos Handlers:<ul> <li>Registra els moviments dels jugadors i els resultats del joc en un fitxer <code>game.log</code>.</li> <li>Registra errors greus o problemes amb les sessions en un fitxer d'errors separat.</li> </ul> </li> </ul>"},{"location":"04phpoo.html#consideracions-addicionals-pel-projecte","title":"Consideracions Addicionals pel  Projecte","text":""},{"location":"04phpoo.html#1-documentacio-amb-phpdoc","title":"1. Documentaci\u00f3 amb PHPDoc","text":"<ul> <li>Documentaci\u00f3 Completa: Documenta totes les classes i m\u00e8todes amb comentaris PHPDoc. Aix\u00f2 inclou les descripcions dels par\u00e0metres i els valors de retorn per a cada m\u00e8tode.</li> <li>Generaci\u00f3 Autom\u00e0tica: Utilitza <code>phpDocumentor</code> o una eina similar per generar la documentaci\u00f3 autom\u00e0ticament. Afig la documentaci\u00f3 generada al projecte per facilitar el manteniment i la comprensi\u00f3 del codi.</li> </ul>"},{"location":"04phpoo.html#2-implementacio-dinterficies","title":"2. Implementaci\u00f3 d'Interf\u00edcies","text":"<ul> <li>Interf\u00edcie <code>JocInterface</code>: Crea una interf\u00edcie que definisca els m\u00e8todes b\u00e0sics que qualsevol joc  ha de tindre (<code>iniciarJoc</code>, <code>ferMoviment</code>, <code>comprovaGuanyador</code>, etc.). Assegura't que la  <code>Joc4enRatlla</code> implemente  aquesta interf\u00edcie.</li> </ul>"},{"location":"04phpoo.html#3-serialitzacio-i-persistencia","title":"3. Serialitzaci\u00f3 i Persist\u00e8ncia","text":"<ul> <li>Serialitzaci\u00f3 de l'Estat del Joc: Implementa funcionalitats per serialitzar l'estat del joc (usant JSON o <code>serialize()</code>) i deserialitzar-lo per mantenir la persist\u00e8ncia entre sessions o guardar l'estat per a reprendre la partida posteriorment.</li> </ul>"},{"location":"04phpoo.html#4-exempcions","title":"4. Exempcions","text":"<ul> <li>Gesti\u00f3 d'Excepcions: Utilitza excepcions per gestionar el que un jugador jugue una columna que ja estiga plena. Afig el missatge  d'error al jocs.</li> </ul>"},{"location":"04phpoo.html#5-fes-que-el-jugador-puga-triar-nom-i-color","title":"5. Fes que el jugador puga triar nom i color","text":"<ul> <li>Triar Nom i Color: Permet als jugadors triar el seu nom i el color de les fitxes al comen\u00e7ar una partida. Aquesta informaci\u00f3 ha de ser guardada en les sessions i mostrada en la vista del joc.</li> </ul>"},{"location":"04phpoo.html#rubrica-de-lavaluacio","title":"R\u00fabrica de l'Avaluaci\u00f3","text":""},{"location":"04phpoo.html#funcionalitat-del-joc","title":"Funcionalitat del Joc","text":"Punts Descripci\u00f3 0 El joc no \u00e9s funcional o est\u00e0 incomplet. 1 El joc \u00e9s funcional, per\u00f2 cont\u00e9 errors significatius. 2 El joc est\u00e0 majorit\u00e0riament funcional amb errors m\u00ednims. 3 El joc est\u00e0 completament funcional i sense errors."},{"location":"04phpoo.html#implementacio-de-programacio-orientada-a-objectes-poo","title":"Implementaci\u00f3 de Programaci\u00f3 Orientada a Objectes (POO)","text":"Punts Descripci\u00f3 0 No s'han utilitzat classes o s'ha fet de forma poc coherent. 1 Tots els models tenen la seua classe i \u00e9s operativa. 2 L'aplicatiu funciona amb classes."},{"location":"04phpoo.html#separacio-del-model-de-negoci-de-la-presentacio-mvc","title":"Separaci\u00f3 del Model de Negoci de la Presentaci\u00f3 (MVC)","text":"Punts Descripci\u00f3 0 No s'ha implementat la separaci\u00f3 de model i presentaci\u00f3; el codi de l\u00f2gica i presentaci\u00f3 est\u00e0 mesclat. 1 Hi ha una separaci\u00f3 parcial, per\u00f2 algunes parts de la l\u00f2gica del negoci es barregen amb la presentaci\u00f3 o a l'inrev\u00e9s. 2 La separaci\u00f3 entre model, vista i controlador est\u00e0 ben implementada, per\u00f2 podria millorar en alguns aspectes. 3 Excel\u00b7lent separaci\u00f3 entre el model, vista i controlador, seguint els principis del patr\u00f3 MVC i mantenint un codi net."},{"location":"04phpoo.html#integracio-de-composer-i-autoloading","title":"Integraci\u00f3 de Composer i Autoloading","text":"Punts Descripci\u00f3 0 No. 1 S\u00ed."},{"location":"04phpoo.html#implementacio-de-proves-amb-phpunit","title":"Implementaci\u00f3 de Proves amb PHPUnit","text":"Punts Descripci\u00f3 0 No s'han creat proves, o les proves creades s\u00f3n m\u00ednimes i no adequades per a verificar la funcionalitat. 1 Es presenten proves b\u00e0siques amb PHPUnit, per\u00f2 cobreixen parcialment les funcionalitats requerides. 2 Proves unit\u00e0ries completes que cobreixen la majoria dels casos, incloent proves de gesti\u00f3 de sessions i l\u00f2gica de joc. 3 Proves exhaustives que cobreixen totes les funcionalitats i consideren casos l\u00edmit, amb \u00fas de mocks quan necessari."},{"location":"04phpoo.html#us-de-logger-amb-monolog","title":"\u00das de Logger amb Monolog","text":"Punts Descripci\u00f3 0 No s'ha implementat el logger o no s'utilitza de manera efectiva per registrar esdeveniments importants. 1 Logger implementat, per\u00f2 amb \u00fas limitat o incorrecte en la registraci\u00f3 d'esdeveniments i errors. 2 Logger ben implementat, amb esdeveniments i errors registrats adequadament en diferents fitxers o canals."},{"location":"04phpoo.html#documentacio-amb-phpdoc","title":"Documentaci\u00f3 amb PHPDoc","text":"Punts Descripci\u00f3 0 Falta documentaci\u00f3 o \u00e9s insuficient per comprendre les classes i m\u00e8todes del projecte. 1 Documentaci\u00f3 b\u00e0sica amb PHPDoc, per\u00f2 amb omisions o descripcions poc clares. 2 Documentaci\u00f3 completa amb PHPDoc per a totes les classes i m\u00e8todes, amb descripcions clares i detallades."},{"location":"04phpoo.html#exempcions","title":"Exempcions","text":"Punts Descripci\u00f3 0 No hi ha. 1 Si hi ha per\u00f2 no es mostra missatge d'error. 2 Es tracta perfectament i hi ha missatge d'error."},{"location":"04phpoo.html#interficie","title":"Interf\u00edcie","text":"Punts Descripci\u00f3 0 No hi ha. 1 Implementada."},{"location":"04phpoo.html#eleccio-color-jugador-i-panell-de-resultats","title":"Elecci\u00f3 color Jugador i panell de resultats","text":"Punts Descripci\u00f3 0 No. 1 Un dels dos. 2 Els dos."},{"location":"04phpoo.html#qualitat-del-codi-i-bones-practiques","title":"Qualitat del Codi i Bones Pr\u00e0ctiques","text":"Punts Descripci\u00f3 0 Codi desordenat i sense comentaris. 1 Codi desorganitzat, amb molts errors de sintaxi, mala nomenclatura, o sense bones pr\u00e0ctiques de codi. 2 Codi ben escrit, seguint les convencions de nomenclatura i bones pr\u00e0ctiques de desenvolupament."},{"location":"04phpoo.html#innovacio-i-creativitat","title":"Innovaci\u00f3 i Creativitat","text":"Punts Descripci\u00f3 0 Cap creativitat o innovaci\u00f3 en el projecte. 1 Algunes idees creatives han estat implementades. 2 El projecte mostra innovaci\u00f3 significativa."},{"location":"04phpoo.html#15-autoavaluacio-programacio-orientada-a-objectes-en-php","title":"15. Autoavaluaci\u00f3: Programaci\u00f3 Orientada a Objectes en PHP","text":""},{"location":"04phpoo.html#exercici-1-constructors-en-php","title":"Exercici 1: Constructors en PHP","text":""},{"location":"04phpoo.html#pregunta","title":"Pregunta:","text":"<p>Quina \u00e9s la funci\u00f3 principal d'un constructor en una classe PHP?</p>"},{"location":"04phpoo.html#opcions","title":"Opcions:","text":"a) Destruir els objectes de la classe quan ja no s\u00f3n necessaris. b) Inicialitzar les propietats de l'objecte quan es crea. c) Executar una funci\u00f3 arbitr\u00e0ria abans de cada m\u00e8tode. d) Crear m\u00e8todes m\u00e0gics autom\u00e0ticament."},{"location":"04phpoo.html#exercici-2-herencia-en-php","title":"Exercici 2: Her\u00e8ncia en PHP","text":""},{"location":"04phpoo.html#pregunta_1","title":"Pregunta:","text":"<p>Quina \u00e9s l'avantatge principal de l'her\u00e8ncia en la programaci\u00f3 orientada a objectes?</p>"},{"location":"04phpoo.html#opcions_1","title":"Opcions:","text":"a) Permet reutilitzar codi definint classes noves basades en classes existents. b) Permet ocultar totes les propietats i m\u00e8todes de la classe. c) Permet definir funcions globals sense necessitat de classes. d) Permet cridar a funcions de JavaScript des de PHP."},{"location":"04phpoo.html#exercici-3-polimorfisme","title":"Exercici 3: Polimorfisme","text":""},{"location":"04phpoo.html#pregunta_2","title":"Pregunta:","text":"<p>Qu\u00e8 permet el polimorfisme en el context de la POO?</p>"},{"location":"04phpoo.html#opcions_2","title":"Opcions:","text":"a) Permet que una funci\u00f3 tinga m\u00faltiples implementacions depenent de l'objecte que la cride. b) Permet la creaci\u00f3 d'objectes a partir de funcions an\u00f2nimes. c) Permet la connexi\u00f3 entre PHP i bases de dades relacionals. d) Permet executar m\u00faltiples scripts PHP alhora."},{"location":"04phpoo.html#exercici-4-espais-de-noms","title":"Exercici 4: Espais de Noms","text":""},{"location":"04phpoo.html#pregunta_3","title":"Pregunta:","text":"<p>Per a qu\u00e8 s'utilitzen els espais de noms (namespaces) en PHP?</p>"},{"location":"04phpoo.html#opcions_3","title":"Opcions:","text":"a) Per executar codi PHP de forma asincr\u00f2nica. b) Per evitar conflictes entre noms de classes, funcions o constants en diferents parts del codi. c) Per definir variables globals accessibles des de qualsevol punt del codi. d) Per importar codi d'altres llenguatges de programaci\u00f3 com JavaScript."},{"location":"04phpoo.html#exercici-5-traits-en-php","title":"Exercici 5: Traits en PHP","text":""},{"location":"04phpoo.html#pregunta_4","title":"Pregunta:","text":"<p>Quin avantatge ofereixen els traits en PHP?</p>"},{"location":"04phpoo.html#opcions_4","title":"Opcions:","text":"a) Permet escriure codi reutilitzable que es pot incloure en m\u00faltiples classes, independentment de la jerarquia d'her\u00e8ncia. b) Permet la creaci\u00f3 de funcions globals en PHP. c) Permet la comunicaci\u00f3 entre diferents servidors web. d) Permet executar codi PHP dins de plantilles HTML."},{"location":"04phpoo.html#exercici-6-excepcions-en-php","title":"Exercici 6: Excepcions en PHP","text":""},{"location":"04phpoo.html#pregunta_5","title":"Pregunta:","text":"<p>Quina \u00e9s la finalitat d'utilitzar excepcions en PHP?</p>"},{"location":"04phpoo.html#opcions_5","title":"Opcions:","text":"a) Evitar l'execuci\u00f3 de codi mal format. b) Gestionar errors i condicions excepcionals de manera controlada dins d'una aplicaci\u00f3. c) Declarar funcions dins d'una classe. d) Garantir que totes les variables estiguen inicialitzades abans del seu \u00fas."},{"location":"04phpoo.html#exercici-7-autoloading-en-php","title":"Exercici 7: Autoloading en PHP","text":""},{"location":"04phpoo.html#pregunta_6","title":"Pregunta:","text":"<p>Quin avantatge ofereix l'autoloading en PHP?</p>"},{"location":"04phpoo.html#opcions_6","title":"Opcions:","text":"a) Permet que les classes es carreguen autom\u00e0ticament quan s'utilitzen, sense necessitat de fer incloure manualment cada fitxer. b) Permet l'execuci\u00f3 de m\u00faltiples scripts alhora. c) Permet la manipulaci\u00f3 de fitxers en el servidor. d) Permet la connexi\u00f3 amb bases de dades."},{"location":"05accesoDatos.html","title":"Desenvolupament d'aplicacions web: Acc\u00e9s a Dades.","text":"Duraci\u00f3 i criteris d'avaluaci\u00f3 <p>Duraci\u00f3 estimada: 10 hores</p> Resultat d'aprenentatge Criteris d'avaluaci\u00f3 6. Desenvolupa aplicacions web d'acc\u00e9s a magatzems de dades, aplicant mesures per a mantindre la seguretat i la integritat de la informaci\u00f3. a) S'han analitzat les tecnologies que permeten l'acc\u00e9s mitjan\u00e7ant programaci\u00f3 a la informaci\u00f3 disponible en magatzems de dades.  b) S'han creat aplicacions que establisquen connexions amb bases de dades.  c) S'ha recuperat informaci\u00f3 emmagatzemada en bases de dades.  d) S'ha publicat en aplicacions web la informaci\u00f3 recuperada.  e) S'han utilitzat conjunts de dades per a emmagatzemar la informaci\u00f3.  f) S'han creat aplicacions web que permeten l'actualitzaci\u00f3 i l'eliminaci\u00f3  d'informaci\u00f3 disponible en una base de dades. g) S'han provat i documentat les aplicacions web. <p>En aquesta unitat aprendrem a accedir a dades que es troben en un servidor; recuperant, editant i creant aquestes dades a trav\u00e9s d'una base de dades.</p> <p>A trav\u00e9s de les diferents capes o nivells, de les quals 2 d'elles ja coneixem (Nginx, PHP) i MySQL la que estudiarem en aquest tema.</p>"},{"location":"05accesoDatos.html#1-introduccio-a-les-tecnologies-per-accedir-a-dades","title":"1. Introducci\u00f3 a les tecnologies per accedir a dades","text":""},{"location":"05accesoDatos.html#bases-de-dades-relacionals-sql","title":"Bases de dades relacionals (SQL)","text":"<p>Les bases de dades relacionals utilitzen llenguatge SQL per emmagatzemar i recuperar dades de taules relacionades. En PHP, les tecnologies m\u00e9s utilitzades per accedir-hi s\u00f3n PDO i MySQLi. PDO suporta m\u00faltiples sistemes de bases de dades (MySQL, PostgreSQL, etc.), mentre que MySQLi est\u00e0 dissenyat espec\u00edficament per a MySQL.</p>"},{"location":"05accesoDatos.html#bases-de-dades-nosql","title":"Bases de dades NoSQL","text":"<p>Les bases de dades NoSQL, com MongoDB o Firebase, emmagatzemen dades en formats no estructurats, com JSON. Aquestes s\u00f3n ideals per a aplicacions que gestionen grans volums de dades o dades no estructurades. MongoDB \u00e9s un sistema orientat a documents, mentre que Firebase \u00e9s conegut per les seves capacitats en temps real.</p>"},{"location":"05accesoDatos.html#acces-a-apis","title":"Acc\u00e9s a APIs","text":"<p>Les APIs REST permeten accedir a dades de serveis web externs utilitzant sol\u00b7licituds HTTP i respostes en formats com JSON o XML. GraphQL \u00e9s una alternativa moderna que permet sol\u00b7licituds m\u00e9s espec\u00edfiques, nom\u00e9s retornant les dades necess\u00e0ries, en contrast amb les sol\u00b7licituds REST, que poden ser m\u00e9s generals.</p>"},{"location":"05accesoDatos.html#web-scraping","title":"Web Scraping","text":"<p>El web scraping \u00e9s el proc\u00e9s d'extracci\u00f3 autom\u00e0tica de dades de p\u00e0gines web. Aquesta t\u00e8cnica es pot utilitzar per recuperar informaci\u00f3 d'una p\u00e0gina web quan no hi ha una API disponible. En PHP, es poden utilitzar diverses biblioteques per descarregar i analitzar contingut HTML, com ara cURL i DOMDocument.</p>"},{"location":"05accesoDatos.html#consideracions-de-seguretat","title":"Consideracions de seguretat","text":"<p>\u00c9s fonamental garantir la seguretat quan es treballa amb l'acc\u00e9s a dades. Aix\u00f2 inclou protegir les aplicacions contra vulnerabilitats comunes, com les injeccions SQL, i assegurar les connexions utilitzant SSL/TLS quan es comuniqui amb bases de dades remotes o APIs externes.</p>"},{"location":"05accesoDatos.html#2-bases-de-dades-relacionals-sql","title":"2. Bases de dades relacionals (SQL)","text":""},{"location":"05accesoDatos.html#installacio","title":"Instal\u00b7laci\u00f3","text":"<p>A trav\u00e9s de XAMPP \u00e9s molt senzill, simplement ens descarregar\u00edem el programa i l'activar\u00edem. Per a descarregar XAMPP prem ac\u00ed.</p> <p>Amb Docker utilitzarem un altre  repositori que inclou el mysql i el phpMyAdmin i llancem <pre><code>docker-compose up -d\n</code></pre></p> <p>Si tot ha eixit b\u00e9 i el contenidor est\u00e0 en marxa, podrem visitar la p\u00e0gina de phpMyAdmin de la seg\u00fcent manera <pre><code>http://localhost:8000\n</code></pre></p> <p>Per a accedir hem d'utilitzar les seg\u00fcents credencials que venen configurades en el arxiu <code>docker-compose.yml</code></p> <pre><code>usuario: root\ncontrase\u00f1a: 1234\n</code></pre>"},{"location":"05accesoDatos.html#estructura-duna-base-de-dades","title":"Estructura d'una base de dades","text":"<p>Sabem que una base de dades t\u00e9 molts camps amb els seus noms i valors, per\u00f2 a m\u00e9s sabem que la base de dades ha de tindre un nom. per tant tindr\u00edem la seg\u00fcent estructura per a una base de dades:</p> <pre><code>NombreBaseDeDatos\n    |__Tabla-#1\n    |       |__DatosTabla-#1\n    |\n    |__Tabla-#2\n    |       |__DatosTabla-#2\n    |\n    |__Tabla-#3\n    |       |__DatosTabla-#3\n    [...]\n</code></pre> <p>Vegem-ho en un exemple real</p> <pre><code>Ryanair\n    |__pasajero\n    |    |__id[*]\n    |    |__nombre\n    |    |__apellidos\n    |    |__edad\n    |    |__id_vuelo[^]\n    |\n    |__vuelo\n    |    |__id[*]\n    |    |__n_plazas\n    |    |__disponible\n    |    |__id_pais[^]\n    |\n    |__pais\n         |__id[*]\n         |__nombre\n</code></pre>      [*] Clau prim\u00e0ria [^] Clave For\u00e0nia"},{"location":"05accesoDatos.html#sql","title":"SQL","text":"<p>Aquest llenguatge de consulta estructurada (Structured Query Language) \u00e9s el que utilitzarem per a realitzar les consultes a les nostres bases de dades per a mostrar el contingut en les diferents interf\u00edcies web que creem al llarg de la unitat. Si vols saber m\u00e9s detalls visita Wiki SQL</p> <p>Exemple d'una sent\u00e8ncia SQL on seleccionem totes les files i columnes de la nostra taula anomenada 'pais'</p> <pre><code>SELECT * FROM pais\n</code></pre> <p>Estas sentencias pueden invocarse desde la consola de comandos mediante el int\u00e9rprete mysql (previamente instalado en el sistema) o a trav\u00e9s de la herramienta phpMyAdmin.</p> <p>Las sentencias SQL tambi\u00e9n las podemos usar dentro de nuestro c\u00f3digo php, de tal manera que cuando se cargue nuestra interfaz web, lance una sentecia SQL para mostrar los datos que queramos.</p> <pre><code>&lt;?php\n    // Llistat de clients, adre\u00e7ats per DNI de manera ASCendent\n    $clientesOrdenadosPorDNI = \"SELECT * FROM `pasajero` ORDER BY `dni`\" ASC;\n?&gt;\n</code></pre>"},{"location":"05accesoDatos.html#phpmyadmin","title":"phpMyAdmin","text":"<p>Aquest programari funciona sota Ngingx i PHP i \u00e9s m\u00e9s que res una interf\u00edcie web per a gestionar les bases de dades que tinguem disponibles en el nostre servidor local. Molts *hostings ofereixen aquesta eina per defecte per a poder gestionar les BBDD que tinguem configurades sota el nostre compte.</p>"},{"location":"05accesoDatos.html#creant-una-base-de-dades-dins-de-phpmyadmin","title":"Creant una base de dades dins de phpMyAdmin","text":"<ol> <li> <p>Per a crear una nova base de dades hem d'entrar en phpMyAdmin com a usuari root i punxar en l'opci\u00f3 Nova del men\u00fa de l'esquerra.</p> </li> <li> <p>En la nova finestra de creaci\u00f3 posarem un nom a nostra bbdd.</p> </li> <li> <p>Tamb\u00e9 establirem el cotejamiento utf8m4_unicode_ci perqu\u00e8 nostra bbdd suporte tot tipus de car\u00e0cters (com els asi\u00e0tics) i fins i tot emojis ;)</p> </li> <li> <p>Li donem al bot\u00f3 de Crear per a crear la bbdd i comen\u00e7ar a escriure les diferents taules que anem a introduir en ella.</p> </li> </ol> <p>El sistema generar\u00e0 el codi SQL per a crear tot el que li hem posat i crear\u00e0 la base de dades amb les taules que li h\u00e0gem ficat. <pre><code>CREATE TABLE `persona`. ( `id` INT NOT NULL AUTO_INCREMENT , `nombre` TINYTEXT NOT NULL , `apellidos` TEXT NOT NULL , `telefono` TINYTEXT NOT NULL , PRIMARY KEY (`id`)) ENGINE = InnoDB;\n</code></pre></p>"},{"location":"05accesoDatos.html#opcions-en-phpmyadmin","title":"Opcions en phpMyAdmin","text":"<p>Quan seleccionem una base de dades de la llista, el sistema ens mostra diverses pestanyes amb les quals interactuar amb la base de dades en q\u00fcesti\u00f3:</p> <ul> <li> <p><code>Estructura</code>: Podem veure les diferents taules que consoliden la nostra base de dades</p> </li> <li> <p><code>SQL</code>: Per si volem injectar codi SQL perqu\u00e8 el sistema l'interprete</p> </li> <li> <p><code>Buscar</code>: Serveix per a buscar per termes, en la nostra base de dades, aplicant diferents filtres de cerca</p> </li> <li> <p><code>Generar consulta</code>: semblan\u00e7a a SQL per\u00f2 d'una manera m\u00e9s gr\u00e0fica, sense haver de saber res del llenguatge</p> </li> <li> <p><code>Exportar i importar</code>: Com el seu nom indica, per a fer qualsevol de les 2 operacions sobre la base de dades</p> </li> <li> <p><code>Operacions</code>: Diferents opcions avan\u00e7ades per a realitzar en la nostra base de dades, de la qual destacarem l'opci\u00f3 Cotejamiento on podrem canviar el cotejamiento de la nostra taula per\u00f2 ULL AMB AC\u00d4 perqu\u00e8 podem eliminar dades sense voler, ja que en canviar el cotejamiento podem suprimir car\u00e0cters no suportats pel nou cotejamiento</p> </li> </ul> <p>No aprofundirem en la resta d'opcions per\u00f2, en la pestanya M\u00e9s existeix l'opci\u00f3 Dissenyador per a poder editar les relacions entre taules d'una manera gr\u00e0fica (punxant i arrossegant) que veurem m\u00e9s endavant.</p>"},{"location":"05accesoDatos.html#3-php-data-objects-pdo","title":"3. PHP Data Objects :: PDO","text":"<p>La classe PDO de PHP s'utilitza per connectar-se a una base de dades i executar consultes SQL de manera segura. Quan construeixes una inst\u00e0ncia de PDO, pots passar-li diferents atributs en el constructor i opcions per configurar el comportament de la connexi\u00f3. Aqu\u00ed tens els atributs principals i el seu prop\u00f2sit:</p>"},{"location":"05accesoDatos.html#constructor-de-la-classe-pdo","title":"Constructor de la classe PDO","text":"<p>El constructor de la classe PDO accepta tres par\u00e0metres obligatoris i un opcional:</p> <pre><code>&lt;?php\n    $pdo = new PDO(string $dsn, string $username, string $password, array $options);\n</code></pre> <ul> <li>$dsn (Data Source Name): \u00c9s una cadena que especifica el tipus de base de dades i la informaci\u00f3 necess\u00e0ria per connectar-s'hi.</li> <li>Format per tipus de base de dades i configuraci\u00f3, per exemple:<ul> <li>Mysql:host=localhost;dbname=testdb (per a MySQL).</li> <li>pgsql:host=localhost;port=5432;dbname=testdb (per a PostgreSQL).</li> <li>sqlite:/path/to/database.db (per a SQLite).</li> </ul> </li> <li>$username: El nom d'usuari per a la connexi\u00f3 a la base de dades.</li> <li>$password: La contrasenya associada al nom d'usuari.</li> <li>$options (Opcional): Un array d'opcions per definir el comportament de la connexi\u00f3. Aquests s\u00f3n alguns dels valors m\u00e9s comuns que es poden definir en aquest array:<ul> <li>PDO::ATTR_ERRMODE: Controla com es gestionen els errors. Alguns valors comuns s\u00f3n:</li> <li>PDO::ERRMODE_SILENT: Els errors no generen cap missatge.</li> <li>PDO::ERRMODE_WARNING: Els errors generen un av\u00eds.</li> <li>PDO::ERRMODE_EXCEPTION: Els errors generen una excepci\u00f3, que \u00e9s el m\u00e9s recomanable per controlar errors.</li> <li>PDO::ATTR_DEFAULT_FETCH_MODE: Defineix el mode de recuperaci\u00f3 de dades per defecte, com ara:</li> <li>PDO::FETCH_ASSOC: Retorna les dades com un array associatiu.</li> <li>PDO::FETCH_OBJ: Retorna les dades com un objecte.</li> <li>PDO::FETCH_BOTH: Retorna les dades com un array associatiu i num\u00e8ric.</li> <li>PDO::ATTR_PERSISTENT: Habilita connexions persistents. Una connexi\u00f3 persistent pot millorar el rendiment mantenint la connexi\u00f3 activa per m\u00faltiples peticions en lloc de crear-ne una nova cada vegada.</li> <li>PDO::ATTR_TIMEOUT: Defineix un temps l\u00edmit per a la connexi\u00f3 en segons.</li> </ul> </li> </ul>"},{"location":"05accesoDatos.html#exemple-de-connexio-amb-pdo","title":"Exemple de connexi\u00f3 amb PDO","text":"<pre><code>$dsn = \"mysql:host=localhost;dbname=testdb\";\n$username = \"usuari\";\n$password = \"contrasenya\";\n$options = [\n    PDO::ATTR_ERRMODE =&gt; PDO::ERRMODE_EXCEPTION,\n    PDO::ATTR_DEFAULT_FETCH_MODE =&gt; PDO::FETCH_ASSOC,\n    PDO::ATTR_PERSISTENT =&gt; true,\n    PDO::MYSQL_ATTR_INIT_COMMAND =&gt; \"SET NAMES utf8\"\n];\n\ntry {\n    $pdo = new PDO($dsn, $username, $password, $options);\n    echo \"Connexi\u00f3 establerta amb \u00e8xit!\";\n} catch (PDOException $e) {\n    echo \"Error de connexi\u00f3: \" . $e-&gt;getMessage();\n}\n</code></pre> <p>Aquest codi estableix una connexi\u00f3 a una base de dades MySQL amb un joc de car\u00e0cters utf8, una connexi\u00f3 persistent, i llan\u00e7a excepcions en cas d'errors.</p> <p>Qualsevol error que es llance a trav\u00e9s de PDO, el sistema llan\u00e7ar\u00e0 una  PDOException .</p>"},{"location":"05accesoDatos.html#fitxer-de-configuracio-de-la-bd","title":"Fitxer de configuraci\u00f3 de la BD","text":"<p>De la mateixa manera que podem tenir el nostre arxiu de funcions <code>funciones.php</code> i alberguem totes les funcions que s'usen de manera global en l'aplicaci\u00f3, podem establir un arxiu de constants on definim els par\u00e0metres de connexi\u00f3 amb la base de dades. <pre><code>&lt;?php\n\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 conexion.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    constDSN = \"mysql:host=localhost;dbname=dwes\";\n    constUSUARIO = \"dwes\";\n    constPASSWORD = \"abc123\";\n\n    /*  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n        \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 NO SUBAS ESTE ARCHIVO A git \u2592\u2592\u2592\u2592\u2592\n\n        \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 */\n</code></pre></p> <p>Aquest arxiu cont\u00e9 informaci\u00f3 molt sensible aix\u00ed que no \u00e9s recomanable que puges aquest arxiu a git.</p>"},{"location":"05accesoDatos.html#sentencies-preparades","title":"Sent\u00e8ncies preparades","text":"<p>Es tracta de sent\u00e8ncies que s'estableixen com si foren plantilles de la SQL que llan\u00e7arem, acceptant par\u00e0metres que s\u00f3n establits a posteriori de la declaraci\u00f3 de la sent\u00e8ncia preparada.</p> <p>Les sent\u00e8ncies preparades eviten la injecci\u00f3 de SQL (SQL Injection) i milloren el rendiment de nostres aplicacions o p\u00e0gines web.</p> <pre><code>&lt;?php\n    $sql = \"INSERT INTO Clientes VALUES (?, ?, ?, ?)\";\n</code></pre> <p>Cada interrogant \u00e9s un par\u00e0metre que establirem despr\u00e9s, unes quantes l\u00ednies m\u00e9s a baix.</p> <p>Una vegada tenim la plantilla de la nostra consulta, hem de seguir amb la preparaci\u00f3 juntament amb 3 m\u00e8todes m\u00e9s de PHP per a la seua completa execuci\u00f3:</p> <ul> <li><code>prepare:</code> prepara la sentencia abans de ser executada.</li> <li><code>bind</code>: el tipus d'uni\u00f3 (*bind^) de dada que pot ser mitjan\u00e7ant ' ? ' o ' :parametre '</li> <li><code>execute</code> s'executa la consulta unint la plantilla amb les variables o par\u00e0metres que hem establit.</li> </ul>"},{"location":"05accesoDatos.html#exemple-parametros","title":"Exemple par\u00e0metros","text":"<pre><code>&lt;?php\n\n\n    include \"config/database.inc.php\";\n\n    $conexion = null;\n\n    try { \n        $cantidad = $_GET[\"cantidad\"];\n\n        $conexion = new PDO(DSN, USUARIO, PASSWORD);\n        $conexion -&gt; setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        $sql = \"DELETE FROM stock WHERE unidades = ?\";\n        $sentencia = $conexion -&gt; prepare($sql);\n\n        $isOk = $sentencia -&gt; execute([$cantidad]);\n        $cantidadAfectada = $sentencia -&gt; rowCount();\n\n        echo $cantidadAfectada;\n    } catch (PDOException $e) {\n        echo $e -&gt; getMessage();\n    }\n\n    $conexion = null\n</code></pre>"},{"location":"05accesoDatos.html#exemple-bindparam","title":"Exemple bindParam","text":"<p>Molt semblant a utilitzar par\u00e0metres per\u00f2 aquesta vegada la variable est\u00e0 dins de la sent\u00e8ncia SQL, en aquest cas l'hem anomenada <code>:cant</code></p> <pre><code>&lt;?php\n    include \"config/database.inc.php\";\n\n    $conexion=null;\n\n    try {\n        $cantidad = $_GET[\"cantidad\"] ?? 0;\n\n        $conexion = new PDO(DSN, USUARIO, PASSWORD);\n        $conexion -&gt; setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        $sql = \"DELETE FROM stock WHERE unidades = :cant\";\n\n        $sentencia = $conexion -&gt; prepare($sql);\n        $sentencia -&gt; bindParam(\":cant\", $cantidad);\n\n        $isOk = $sentencia -&gt; execute();\n\n        $cantidadAfectada = $sentencia -&gt; rowCount();\n\n        echo $cantidadAfectada;\n    } catch (PDOException $e) {\n        echo $e -&gt; getMessage();\n    }\n\n    $conexion = null;\n</code></pre>"},{"location":"05accesoDatos.html#bindparam-vs-bindvalue","title":"bindParam VS bindValue","text":"<p>Utilitzarem <code>bindValue()</code> quan h\u00e0gem d'inserir dades nom\u00e9s una vegada, en canvi, haurem d'usar <code>bindParam()</code> quan h\u00e0gem de passar dades m\u00faltiples, com per exemple, un array.</p> <pre><code>&lt;?php\n    // se asignan nombre a los par\u00e1metros\n    $sql = \"DELETE FROM stock WHERE unidades = :cant\";\n    $sentencia = $conexion -&gt; prepare($sql);\n\n    // bindParam enlaza por referencia\n    $cantidad = 0;\n\n    $sentencia -&gt; bindParam(\":cant\", $cantidad);\n    $cantidad = 1;\n\n    // se eliminan con cant = 1\n    $isOk = $sentencia -&gt; execute();\n\n    // bindValue enlaza por valor\n    $cantidad = 0;\n\n    $sentencia -&gt; bindValue(\":cant\", $cantidad);\n    $cantidad = 1;\n\n    // se eliminan con cant = 0\n    $isOk = $sentencia-&gt;execute();\n</code></pre> <p>Per a m\u00e9s informaci\u00f3 i \u00fas de les variables PDO consulta el manual de PHP.</p>"},{"location":"05accesoDatos.html#inserint-registres","title":"Inserint registres","text":"<p>A l'hora d'inserir registres en una base de dades, hem de tindre en compte que en la taula pot haver-hi valors autoincrementats. Per a salvaguardar a\u00e7\u00f2, el que hem de fer \u00e9s deixar aqueix camp autoincrementat buit, per\u00f2 a l'hora de fer la connexi\u00f3, hem de recuperar-ho amb el m\u00e8tode <code>lastInsertId()</code>.</p> <pre><code>&lt;?php\n    $nombre = $_GET[\"nombre\"] ?? \"SUCURSAL X\";\n    $telefono = $_GET[\"telefono\"] ?? \"636123456\";\n\n    $sql=\"INSERT INTO tienda(nombre, tlf) VALUES (:nombre, :telefono)\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; bindParam(\":nombre\", $nombre);\n    $sentencia -&gt; bindParam(\":telefono\", $telefono);\n\n    $isOk = $sentencia -&gt; execute();\n    $idGenerado = $conexion -&gt; lastInsertId();\n\n    echo $idGenerado;\n</code></pre>"},{"location":"05accesoDatos.html#consultant-registres","title":"Consultant registres","text":"<p>A l'hora de recuperar els resultats d'una consulta, bastar\u00e0 amb invocar al m\u00e8tode <code>PDOStatement::fetch</code> per a llistar les files generades per la consulta.</p> <p>Per\u00f2 hem de triar el tipus de dada que volem rebre entre els 3 que hi ha disponibles:</p> <ul> <li><code>PDO::FETCH_ASSOC:</code> array indexat que els seus keys s\u00f3n el nom de les columnes.</li> <li><code>PDO::FETCH_NUM:</code> array indexat que els seus keys s\u00f3n n\u00fameros.</li> <li><code>PDO::FETCH_BOTH:</code> valor per defecte. Retorna un array indexat que els seus keys s\u00f3n tant el nom de les columnes com n\u00fameros.</li> </ul> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 consulta con array asociativo.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    include \"config/database.inc.php\";\n\n    $conexion = null;\n\n    try{\n        $conexion = new PDO(DSN, USUARIO, PASSWORD);\n        $conexion -&gt; setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        $sql = \"select * from tienda\";\n\n        $sentencia = $conexion -&gt; prepare($sql);\n        $sentencia -&gt; setFetchMode(PDO::FETCH_ASSOC);\n        $sentencia -&gt; execute();\n\n        while($fila = $sentencia -&gt; fetch()){\n            echo \"Codigo:\" . $fila[\"cod\"] . \"&lt;br /&gt;\";\n            echo \"Nombre:\" . $fila[\"nombre\"] . \"&lt;br /&gt;\";\n            echo \"Tel\u00e9fono:\" . $fila[\"tlf\"] . \"&lt;br /&gt;\";\n        }\n\n    }catch(PDOException $e) {\n        echo $e -&gt; getMessage();\n    }\n\n    $conexion = null;\n</code></pre> <p>Recuperant dades amb una matriu com a resultat de la nostra consulta</p> <p><pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 consulta con array asociativo \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql=\"SELECT * FROM tienda\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_ASSOC);\n    $sentencia -&gt; execute();\n\n    $tiendas = $sentencia -&gt; fetchAll();\n\n    foreach($tiendasas$tienda) {\n        echo\"Codigo:\" . $tienda[\"cod\"] . \"&lt;br /&gt;\";\n        echo\"Nombre:\" . $tienda[\"nombre\"] . \"&lt;br /&gt;\";\n    }\n</code></pre> Per\u00f2 si el que volem \u00e9s llegir dades amb forma d'objecte utilitzant <code>PDO::FETCH_OBJ</code>, hem de crear un objecte amb propietats p\u00fabliques amb el mateix nom que les columnes de la taula que anem a consultar.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 consulta con formato de objeto \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql=\"SELECT * FROM tienda\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_OBJ);\n    $sentencia -&gt; execute();\n\n    while($t = $sentencia -&gt; fetch()) {\n        echo\"Codigo:\" . $t -&gt; cod . \"&lt;br /&gt;\";\n        echo\"Nombre:\" . $t -&gt; nombre . \"&lt;br /&gt;\";\n        echo\"Tel\u00e9fono:\" . $t -&gt; tlf . \"&lt;br /&gt;\";\n    }\n</code></pre>"},{"location":"05accesoDatos.html#consultes-amb-models","title":"Consultes amb models","text":"<p>Portem temps creant classes en PHP i les consultes tamb\u00e9 admeten aquest tipus de dades mitjan\u00e7ant l'\u00fas de <code>PDO::FETCH_CLASS</code></p> <p>Si usem aquest m\u00e8tode, hem de tindre en compte que els noms dels atributs privats han de coincidir amb els noms de les columnes de la taula que anem a manejar.</p> <p>Aix\u00ed doncs, si pel que siga canviem l'estructura de la taula HEM DE CANVIAR la nostra classe perqu\u00e8 tot continue funcionant.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 clase Tienda \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    classTienda {\n        private int $cod;\n        private string $nombre;\n        private ? string $tlf;\n\n        public function getCodigo() : int {\n            return $this -&gt; cod;\n        }\n\n        public function getNombre() : string {\n            return $this -&gt; nombre;\n        }\n\n        public function getTelefono() : ?string {\n            return $this -&gt; tlf;\n        }\n    }\n</code></pre> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Consultando a trav\u00e9s de la clase Tienda \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql = \"SELECT * FROM tienda\";\n    $sentencia = $conexion -&gt; prepare($sql);\n\n    // Aqu\u00ed 'Tienda' es el nombre de nuestra clase\n    $sentencia -&gt; setFetchMode(PDO::FETCH_CLASS, Tienda::class);\n    $sentencia -&gt; execute();\n\n    while($t = $sentencia -&gt; fetch()) {\n        echo \"Codigo: \" . $t -&gt; getCodigo() . \"&lt;br /&gt;\";\n        echo \"Nombre: \" . $t -&gt; getNombre() . \"&lt;br /&gt;\";\n        echo \"Tel\u00e9fono: \" . $t -&gt; getTelefono() . \"&lt;br /&gt;\";\n\n        var_dump($t);\n    }\n</code></pre> <p>Per\u00f2 qu\u00e8 passa si les nostres classes tenen constructor? doncs que hem d'indicar-li, al m\u00e8tode FECTH, que emplene les propietats despr\u00e9s de cridar al constructor i per a aix\u00f2 fem \u00fas de <code>PDO::FETCH_PROPS_LATE</code>. <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Consulta para una clase con constructor \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql = \"SELECT * FROM tienda\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_CLASS | PDO::FETCH_PROPS_LATE, Tienda::class);\n    $sentencia -&gt; execute();\n\n    $tiendas = $sentencia -&gt; fetchAll();\n</code></pre></p>"},{"location":"05accesoDatos.html#consultes-amb-like","title":"Consultes amb LIKE","text":"<p>Per a utilitzar el comod\u00ed LIKE o altres comodins, hem d'associar-lo a la dada i MAI en la pr\u00f2pia consulta.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Utilizando comodines :: LIKE \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql = \"SELECT * FROM tienda where nombre like :nombre or tlf like :tlf\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_CLASS | PDO::FETCH_PROPS_LATE, Tienda::class);\n\n    $cadBuscar = \"%\" . $busqueda . \"%\";\n\n    $sentencia -&gt; execute([\"nombre\" =&gt; $cadBuscar,\"tlf\" =&gt; $cadBuscar]);\n\n    $result = $sentencia -&gt; fetchAll();\n</code></pre> <p>Teniu una llista d'exemples molt completa en la documentaci\u00f3 oficial.</p>"},{"location":"05accesoDatos.html#4-login-password","title":"4. Login &amp; Password","text":"<p>Per a manejar un sistema complet de login i password amb contrasenyes xifrades, necessitem un m\u00e8tode que xifre aqueixos strings que l'usuari introdueix com a contrasenya; tant en el formulari de registre com en el del login, ja que en codificar una contrasenya, despr\u00e9s hem de descodificar-la per a comprovar que totes dues *contrasenyes (la que introdueix l'usuari en el login i la que tenim en la base de dades) coincidisquen.</p> <p>Necessitem doncs:</p> <ul> <li><code>password_hash()</code> per a emmagatzemar la contrasenya en la base de dades a l'hora de fer el INSERT</li> <li> <p><code>PASSWORD_DEFAULT</code> emmagatzemem la contrasenya usant el m\u00e8tode d'encriptaci\u00f3 bcrypt</p> </li> <li> <p><code>PASSWORD_BCRYPT</code> emmagatzemem la contrasenya usant l'algorisme CRYPT_BLOWFISH compatible amb crypt()</p> </li> <li> <p><code>password_verify()</code> per a verificar l'usuari i la contrasenya</p> </li> </ul> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Almacenando usuario y password en BD \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $usu = $_POST[\"usuario\"];\n    $pas = $_POST[\"password\"];\n\n    $sql = \"INSERT INTO usuarios(usuario, password) VALUES (:usuario, :password)\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n\n    $isOk = $sentencia -&gt; execute([\n        \"usuario\" =&gt; $usu,\n        \"password\" =&gt; password_hash($pas,PASSWORD_DEFAULT)\n    ]);\n</code></pre> <p>Ara que tenim l'usuari codificat i guardat en la base de dades, el recuperarem per a poder loguejar-lo correctament. <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Recuperando usuario y password en BD \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $usu = $_POST[\"login\"] ?? \"\";\n\n    $sql = \"select * from usuarios where usuario = ?\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; execute([$usu]);\n\n    $usuario = $sentencia -&gt; fetch();\n\n    if($usuario &amp;&amp; password_verify($_POST['pass'], $usuario['password'])) {\n        echo\"OK!\";\n    } else {\n        echo\"KO\";\n    }\n</code></pre></p>"},{"location":"05accesoDatos.html#5-querybuilder","title":"5. QueryBuilder","text":"<p>Un Query Builder (Constructor de Consultes) \u00e9s una eina o classe que facilita la creaci\u00f3, execuci\u00f3 i manipulaci\u00f3 de consultes SQL en un programa. L'objectiu principal \u00e9s proporcionar una interf\u00edcie m\u00e9s intu\u00eftiva i segura per interactuar amb bases de dades, sense haver d'escriure consultes SQL en brut.</p> <p>A continuaci\u00f3, detallo algunes de les principals avantatges i caracter\u00edstiques d'un Query Builder com el que has compartit anteriorment:</p> <ul> <li> <ol> <li>Abstracci\u00f3 de la Base de Dades:</li> </ol> </li> <li> <p>El Query Builder proporciona una capa d'abstracci\u00f3 que permet interactuar amb diferents tipus de bases de dades (MySQL, PostgreSQL, SQLite, etc.) sense canviar el codi de la teva aplicaci\u00f3. Aix\u00f2 facilita la portabilitat i l'escalabilitat del codi.</p> </li> <li> <ol> <li>Seguretat:</li> </ol> </li> <li> <p>Prev\u00e9 injeccions SQL: Gr\u00e0cies a l'\u00fas de sent\u00e8ncies preparades i enlla\u00e7ament de par\u00e0metres, el Query Builder ajuda a prevenir atacs d'injecci\u00f3 SQL, una de les amenaces m\u00e9s comunes en desenvolupament web.</p> </li> <li> <ol> <li>Sintaxi M\u00e9s Neta i M\u00e9s F\u00e0cil:</li> </ol> </li> <li> <p>Els Query Builders solen proporcionar una sintaxi m\u00e9s neta i f\u00e0cil d'entendre que les cadenes SQL pures. Aix\u00f2 fa que el codi sigui m\u00e9s llegible i f\u00e0cil de mantenir.</p> </li> <li> <ol> <li>Reutilitzaci\u00f3 de Codi:</li> </ol> </li> <li> <p>Les funcions del Query Builder es poden reutilitzar a tot el projecte, reduint la duplicaci\u00f3 de codi i facilitant el manteniment.</p> </li> <li> <ol> <li>Flexibilitat:</li> </ol> </li> <li> <p>Permet realitzar consultes complexes amb una sintaxi simplificada, facilitant l'adaptaci\u00f3 del codi a canvis en els requeriments de l'aplicaci\u00f3.</p> </li> <li> <ol> <li>Desenvolupament M\u00e9s R\u00e0pid:</li> </ol> </li> <li> <p>Ajuda a accelerar el proc\u00e9s de desenvolupament, ja que els desenvolupadors no necessiten recordar la sintaxi SQL exacta per a cada tipus de base de dades.</p> </li> <li> <ol> <li>F\u00e0cil de Depurar:</li> </ol> </li> <li> <p>El codi generat pel Query Builder \u00e9s m\u00e9s f\u00e0cil de depurar en comparaci\u00f3 amb les llargues cadenes SQL.</p> </li> <li> <ol> <li>Suport per a Operacions CRUD:</li> </ol> </li> <li>Els Query Builders solen incloure suport integrat per a operacions CRUD (Crear, Llegir, Actualitzar, Esborrar), fent m\u00e9s f\u00e0cil la manipulaci\u00f3 de dades.</li> </ul> <p>En resum, un Query Builder serveix per simplificar la interacci\u00f3 amb bases de dades, proporcionant una interf\u00edcie m\u00e9s segura, neta i f\u00e0cil d'utilitzar que les cadenes SQL pures. Ajuda a accelerar el desenvolupament, facilita el manteniment i millora la seguretat de l'aplicaci\u00f3. Ac\u00ed en tenim un exemple de construcci\u00f3 casera:</p> <pre><code>&lt;?php\n\nnamespace BatBook;\n\nuse PDO;\n\nclass QueryBuilder\n{\n    // Aquesta funci\u00f3 serveix per a construir i executar consultes SQL de tipus SELECT.\n    // Es pot filtrar per valors, limitar la quantitat de resultats i establir un offset.\n    public static function sql($class, $values=null, $limit = null, $offset = null)\n    {\n        // Obt\u00e9 el nom de la taula a partir de la propietat est\u00e0tica $nameTable de la classe passada com argument.\n        $table = $class::$nameTable;\n\n        // Obt\u00e9 una connexi\u00f3 a la base de dades.\n        $conn = Connection::get();\n\n        // Construeix la consulta SQL b\u00e0sica.\n        $sql = \"SELECT * FROM $table\";\n\n        // Afegeix condicions WHERE si es proporcionen valors per a filtrar.\n        if ($values) {\n            $sql .= \" WHERE \";\n            foreach (array_keys($values) as $key =&gt; $id) {\n                if ($key != 0) {\n                    $sql .= \" AND $id=:$id\";\n                } else {\n                    $sql .= \"$id=:$id\";\n                }\n            }\n        }\n\n        // Afegeix les cl\u00e0usules LIMIT i OFFSET si s\u00f3n necess\u00e0ries.\n        if (isset($limit) &amp;&amp; isset($offset)) {\n            $sql .= \" LIMIT $limit OFFSET $offset\";\n        }\n\n        // Prepara la sent\u00e8ncia SQL.\n        $sentence = $conn-&gt;prepare($sql);\n\n        // Enlla\u00e7a els valors a la sent\u00e8ncia.\n        foreach ($values??[] as $key =&gt; $value) {\n            $sentence-&gt;bindValue(\":$key\", $value);\n        }\n\n        // Estableix el mode de recuperaci\u00f3 a objectes de la classe especificada.\n        $sentence -&gt; setFetchMode(PDO::FETCH_CLASS | PDO::FETCH_PROPS_LATE , $class);\n\n        // Executa la consulta.\n        $sentence -&gt; execute();\n\n        // Retorna tots els resultats obtinguts.\n        return  $sentence-&gt;fetchAll();\n    }\n\n    // Aquesta funci\u00f3 serveix per a trobar una fila en una taula basant-se en el seu ID.\n    public static function find($class, $id)\n    {\n        //TODO\n    }\n\n    // Aquesta funci\u00f3 serveix per a insertar una fila en una taula.\n    public static function insert($class, $values)\n    {\n        $table = $class::$nameTable;\n        $conn = Connection::get();\n        $sql = \"INSERT INTO $table (\";\n        foreach (array_keys($values) as $key =&gt; $id) {\n            if ($key != 0) {\n                $sql .= ','.$id;\n            } else {\n                $sql .= $id;\n            }\n        }\n        $sql .= \") VALUES (\";\n        foreach (array_keys($values) as $key =&gt; $id) {\n            if ($key != 0) {\n                $sql .= ',:'.$id;\n            } else {\n                $sql .= ':'.$id;\n            }\n        }\n        $sql .= \")\";\n        $sentence = $conn-&gt;prepare($sql);\n        foreach ($values as $key =&gt; $value) {\n            $sentence-&gt;bindValue(\":$key\", $value);\n        }\n        $sentence -&gt; execute();\n        return $conn-&gt;lastInsertId();\n    }\n\n    // Aquesta funci\u00f3 serveix per a actualitzar una fila en una taula.\n    public static function update($class, $values, $id)\n    {\n        $table = $class::$nameTable;\n        $conn = Connection::get();\n        $sql = \"UPDATE $table SET \";\n        foreach (array_keys($values) as $key =&gt; $value) {\n            if ($key != 0) {\n                $sql .= ','.$value.'=:'.$value;\n            } else {\n                $sql .= $value.'=:'.$value;\n            }\n        }\n        $sql .= \" WHERE id=:id\";\n        $sentence = $conn-&gt;prepare($sql);\n        foreach ($values as $key =&gt; $value) {\n            $sentence-&gt;bindValue(\":$key\", $value);\n        }\n        $sentence-&gt;bindValue(\":id\", $id);  \n        $sentence -&gt; execute();\n        return $id;\n    }\n\n    // Aquesta funci\u00f3 serveix per a eliminar una fila en una taula basant-se en el seu ID.\n    public static function delete($class, $id)\n    {\n        //TODO\n    }\n}\n</code></pre> <p>En resum, aquesta classe proporciona funcions est\u00e0tiques per a la construcci\u00f3 i execuci\u00f3 de consultes SQL b\u00e0siques com SELECT, INSERT, UPDATE, i DELETE. Utilitza l'extensi\u00f3 PDO per a la connexi\u00f3 a bases de dades i la preparaci\u00f3 de sent\u00e8ncies SQL, la qual cosa ajuda a prevenir injeccions SQL. Tamb\u00e9 permet la manipulaci\u00f3 f\u00e0cil de files en bases de dades, tot retornant objectes de la classe especificada.</p>"},{"location":"05accesoDatos.html#respotes-derror","title":"Respotes d'error","text":"<p>Quan no trebem un recurs en al nostra web, podem mostrar a l'usuari una p\u00e0gina espec\u00edfica d'error utilitzant la funci\u00f3 header. Una t\u00edpica seria:</p> <pre><code>&lt;!-- not-found.php --&gt;\n&lt;?php http_response_code(404); ?&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;No trobat&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;404 - P\u00e0gina no trobada&lt;/h1&gt;\n    &lt;p&gt;Ho sentim, la p\u00e0gina que est\u00e0s buscant no s'ha pogut trobar.&lt;/p&gt;\n    &lt;a href=\"index.php\"&gt;Torna a l'inici&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>I per a utilitzar-la:</p> <pre><code>&lt;?php\nheader(\"Location: not-found.php\");\nexit;\n?&gt;\n</code></pre>"},{"location":"05accesoDatos.html#6-acces-a-fitxers","title":"6. Acc\u00e8s a fitxers","text":"<p>Gr\u00e0cies a la funci\u00f3 fopen() des de PHP podem obrir arxius que es troben en els nostres servidor o una URL.</p> <p>A aquesta funci\u00f3 cal passar-li 2 par\u00e0metres; el nom de l'arxiu que volem obrir i la manera en qu\u00e8 s'obrir\u00e0</p> <pre><code>$fp = fopen(\"miarchivo.txt\", \"r\");\n</code></pre> <p>Moltes vegades no podem obrir l'arxiu perqu\u00e8 aquest no es troba o no tenim acc\u00e9s a ell, per aix\u00f2 \u00e9s recomanable comprovar que podem fer-ho</p> <pre><code>if (!$fp = fopen(\"miarchivo.txt\", \"r\")){\n    echo \"No se ha podido abrir el archivo\";\n}\n</code></pre>"},{"location":"05accesoDatos.html#maneres-dobertura-de-fitxers","title":"Maneres d'obertura de fitxers","text":"<ul> <li><code>r</code>: Manera lectura. Punter al principi de l'arxiu.</li> <li><code>r+</code>: Obertura per a lectura i escriptura. Punter al principi de l'arxiu</li> <li><code>w</code>: Obertura per a escriptura. Punter al principi de l'arxiu i el sobreescriu. Si no existeix s'intenta crear.</li> <li><code>w+</code>: Obertura per a lectura i escriptura. Punter al principi de l'arxiu i el sobreescriu. Si no existeix s'intenta crear.</li> <li><code>a</code>: Obertura per a escriptura. Punter al final de l'arxiu. Si no existeix s'intenta crear.</li> <li><code>a+</code>: Obertura per a lectura i escriptura. Punter al final de l'arxiu. Si no existeix s'intenta crear.</li> <li><code>x</code>: Creaci\u00f3 i obertura per a nom\u00e9s escriptura. Punter al principi de l'arxiu. Si l'arxiu ja existeix donar\u00e0 error E_*WARNING. Si no existeix s'intenta crear.</li> <li><code>x+</code>: Creaci\u00f3 i obertura per a lectura i escriptura. Mateix comportament que x.</li> <li><code>c</code>: Obertura per a escriptura. Si no existeix es crea. Si existeix no se sobreescriu ni dona cap error. Punter al principi de l'arxiu.</li> <li><code>c+</code>: Obertura per a lectura i escriptura. Mateix comportament que C.</li> <li><code>b</code>: Quan es treballa amb arxius binaris com jpg, pdf, png i altres. Se sol col\u00b7locar al final de la manera, \u00e9s a dir rb, r+b, x+b, wb...</li> </ul>"},{"location":"05accesoDatos.html#operacions-amb-arxius","title":"Operacions amb arxius","text":"<p>Per a poder llegir un arxiu necessitem usar la funci\u00f3 fread() de PHP</p> <pre><code>//  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Abriendo un archivo y leyendo su contenido \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n$file = \"miarchivo.txt\";\n$fp = fopen($file, \"r\");\n\n// filesize() nos devuelve el tama\u00f1o del archivo en cuesti\u00f3n\n$contents = fread($fp, filesize($file));\n\n// Cerramos la conexi\u00f3n con el archivo\nfclose();\n</code></pre> <p>Si el que volem \u00e9s escriure en un arxiu, haurem de fer \u00fas de la funci\u00f3 fwrite()</p> <pre><code>//  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Escribiendo en un archivo \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n$file = \"miarchivo.txt\";\n$texto = \"Hola que tal\";\n\n$fp = fopen($file, \"w\");\n\nfwrite($fp, $texto);\nfclose($fp);\n</code></pre>"},{"location":"05accesoDatos.html#informacio-dun-fitxer","title":"Informaci\u00f3 d'un fitxer","text":"<p>Amb PHP i el seu m\u00e8tode stat() podem obtindre informaci\u00f3 sobre els arxius que li indiquem. Aquest m\u00e8tode retorna fins a un total de 12 elements amb informaci\u00f3 sobre el nostre arxiu.</p> <p>0   dev    n\u00famero de dispositiu 1   ino    n\u00famero d'i-node 2   mode   manera de protecci\u00f3 de l'i-node 3   nlink  nombre d'enlla\u00e7os 4   uid    ID d'usuari del propietari 5   gid    ID de grup del propietari 6   rdev   tipus de dispositiu, si \u00e9s un dispositiu i-node 7   size   grand\u00e0ria en bytes 8   atime  moment de l'\u00faltim acc\u00e9s (temps Unix) 9   mtime  moment de l'\u00faltima modificaci\u00f3 (temps Unix) 10  ctime  moment de l'\u00faltima modificaci\u00f3 de l'i-node (temps Unix) 11  blksize    grand\u00e0ria del bloc E/S del sistema de fitxers 12  blocks     nombre de blocs de 512 bytes assignats</p> <p>Uns exemples...</p> <pre><code>&lt;?php\n\n//  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Informaci\u00f3n del archivo \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n$file = \"miarchivo.txt\";\n$texto = \"Todos somos muy ignorantes, lo que ocurre es que no todos ignoramos las mismas cosas.\";\n\n$fp = fopen($file, \"w\");\nfwrite($fp, $texto);\n\n$datos = stat($file);\n\necho $datos[3] . \"&lt;br&gt;\"; // N\u00famero de enlaces, 1\necho $datos[7] . \"&lt;br&gt;\"; // Tama\u00f1o en bytes, 85\necho $datos[8] . \"&lt;br&gt;\"; // Momento de \u00faltimo acceso, 1444138104\necho $datos[9] . \"&lt;br&gt;\"; // Momento de \u00faltima modificaci\u00f3n, 1444138251\n\n?&gt;\n</code></pre> <p>Dona una ullada a les funcions de directoris que t\u00e9 PHP, \u00e9s molt interessant.</p>"},{"location":"05accesoDatos.html#7-web-scraping","title":"7. Web Scraping","text":"<p>Consisteix a navegar a una p\u00e0gina web i extraure informaci\u00f3 autom\u00e0ticament, a partir del codi HTML generat, i organitzar la informaci\u00f3 p\u00fablica disponible en Internet. Aquesta pr\u00e0ctica requereix l'\u00fas d'una llibreria que facilite la desc\u00e0rrega de la informaci\u00f3 desitjada imitant la interacci\u00f3 d'un navegador web. Aquest \"robot\" pot accedir a diverses p\u00e0gines simult\u00e0niament.</p> <p>\u00bf\u00c9s legal?</p> <p>Si el lloc web indica que t\u00e9 el contingut protegit per drets d'autor o en les normes d'acc\u00e9s via usuari/contrasenya ens avisa de la seua prohibici\u00f3, estar\u00edem incorrent en un delicte. \u00c9s recomanable estudiar l'arxiu <code>robots.txt</code> que es troba en l'arrel de cada lloc web. M\u00e9s informaci\u00f3 en l'article El manual complet per al web scraping legal i \u00e8tic en 2021</p>"},{"location":"05accesoDatos.html#goutte","title":"Goutte","text":"<p>Goutte \u00e9s un senzill client HTTP per a PHP creat espec\u00edficament per a fer web scraping. Ho va desenvolupar el mateix autor del framework Symfony i ofereix un API senzilla per a extraure dades de les respostes HTML/XML dels llocs web.</p> <p>Els components principals que abstrau Goutte sobre Symfony s\u00f3n:</p> <ul> <li><code>BrowserKit</code>: simula el comportament d'un navegador web.</li> <li><code>CssSelector</code>: tradueix consultes CSS en consultes XPath.</li> <li><code>DomCrawler</code>: facilita l'\u00fas del DOM i XPath.</li> </ul> <p>Per a poder utilitzar Goutte en el nostre projecte, executarem el seg\u00fcent comando en el terminal:</p> <pre><code>composer require fabpot/goutte\n</code></pre>"},{"location":"05accesoDatos.html#goutte-con-selectores-css","title":"Goutte con selectores CSS","text":"<p>A continuaci\u00f3 farem un exemple molt senzill utilitzant els selectors CSS, extraient informaci\u00f3 de la web <code>https://books.toscrape.com/</code>, la qual \u00e9s una p\u00e0gina per a proves que no rebutjar\u00e0 les nostres peticions.</p> <p>Despr\u00e9s de crear un client amb Goutte, hem de realitzar un petici\u00f3 a una URL. Amb la resposta obtinguda, podem utilitzar el m\u00e8tode <code>filter</code> per a indicar-li la ruta CSS que volem rec\u00f3rrer i iterar sobre els resultats mitjan\u00e7ant una funci\u00f3 an\u00f2nima. Una vegada estem dins d'un determinat node, el m\u00e8tode <code>text()</code> ens retornar\u00e0 el contingut del propi node.</p> <p>En concret, ficarem en un array associatiu el t\u00edtol i el preu de tots els llibres de la categoria Classics.</p> <pre><code>&lt;?php\nrequire '../vendor/autoload.php';\n\n$httpClient = new \\Goutte\\Client();\n$response = $httpClient-&gt;request('GET', 'https://books.toscrape.com/catalogue/category/books/classics_6/index.html');\n// colocamos los precios en un array\n$precios = [];\n$response-&gt;filter('.row li article div.product_price p.price_color')-&gt;each(\n    // le pasamos $precios por referencia para poder editarla dentro del closure\n    function ($node) use (&amp;$precios) {\n        $precios[] = $node-&gt;text();\n    }\n);\n\n// colocamos el nombre y el precio en un array asociativo\n$contadorPrecios = 0;\n$libros = [];\n$response-&gt;filter('.row li article h3 a')-&gt;each(\n    function ($node) use ($precios, &amp;$contadorPrecios, &amp;$libros) {\n        $libros[$node-&gt;text()] = $precios[$contadorPrecios];\n        $contadorPrecios++;\n    }\n);\n</code></pre>"},{"location":"05accesoDatos.html#crawler","title":"Crawler","text":"<p>Un cas molt com\u00fa \u00e9s obtindre la informaci\u00f3 d'una p\u00e0gina que t\u00e9 els resultats paginados, de manera que anem recorrent els enlla\u00e7os i accedint a cadascun dels resultats.</p> <p>En aquest cas agafarem tots els preus dels llibres de fantasia, i els sumarem:</p> <pre><code>&lt;?php\nrequire '../vendor/autoload.php';\n\nuse Goutte\\Client;\nuse Symfony\\Component\\HttpClient\\HttpClient;\n\n$client = new Client(HttpClient::create(['timeout' =&gt; 60]));\n$crawler = $client-&gt;request('GET', 'https://books.toscrape.com/catalogue/category/books/fantasy_19/index.html');\n\n$salir = false;\n\n$precios = [];\nwhile (!$salir) {\n    $crawler-&gt;filter('.row li article div.product_price p.price_color')-&gt;each(\n        function ($node) use (&amp;$precios) {\n            $texto = $node-&gt;text();\n            $cantidad = substr($texto, 2); // Le quitamos las libras \u00bf2 posiciones?\n            $precios[] = floatval($cantidad);\n        }\n    );\n\n    $enlace = $crawler-&gt;selectLink('next');\n    if ($enlace-&gt;count() != 0) {\n        // el enlace next existe\n        $sigPag = $crawler-&gt;selectLink('next')-&gt;link();\n        $crawler = $client-&gt;click($sigPag); // hacemos click\n    } else {\n        // ya no hay enlace next\n        $salir = true;\n    }\n}\n\n$precioTotal = array_sum($precios);\necho $precioTotal;\n</code></pre>"},{"location":"05accesoDatos.html#8-exercisis","title":"8. Exercisis","text":""},{"location":"05accesoDatos.html#bateria-dexercicis-solucionats","title":"Bateria d'exercicis solucionats","text":""},{"location":"05accesoDatos.html#exercici-1-connexio-basica","title":"Exercici 1. Connexi\u00f3 b\u00e0sica","text":"<ol> <li>Crea un fitxer PHP que fa\u00e7a una connexi\u00f3 a una base de dades MySQL utilitzant PDO.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\ntry {\n    $dsn = 'mysql:host=db;dbname=pruebadb';\n    $usuari = 'root';\n    $contrasenya = '1234';\n    $pdo = new PDO($dsn, $usuari, $contrasenya);\n    echo \"Connexi\u00f3 establerta!\";\n} catch (PDOException $e) {\n    echo \"Error de connexi\u00f3: \" . $e-&gt;getMessage();\n}\n</code></pre>"},{"location":"05accesoDatos.html#exercici-2-inserir-un-registre","title":"Exercici 2. Inserir un registre","text":"<ol> <li>Escriu una funci\u00f3 que insereixi un nou usuari a la taula <code>users</code> amb el nom i correu electr\u00f2nic passats per par\u00e0metre.</li> </ol> Soluci\u00f3 <pre><code>function inserirUsuari($nom, $correu) {\n    global $pdo;\n    $sql = \"INSERT INTO users (nom, correu) VALUES (:nom, :correu)\";\n    $stmt = $pdo-&gt;prepare($sql);\n    $stmt-&gt;bindParam(':nom', $nom);\n    $stmt-&gt;bindParam(':correu', $correu);\n    $stmt-&gt;execute();\n    echo \"Usuari inserit!\";\n}\n</code></pre>"},{"location":"05accesoDatos.html#exericici-3-recuperar-dades","title":"Exericici 3. Recuperar dades","text":"<ol> <li>Fes una consulta SQL que mostri tots els usuaris registrats a la taula <code>users</code> i mostra'ls en una taula HTML.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nfunction mostrarUsuaris() {\n    global $pdo;\n    $sql = \"SELECT * FROM users\";\n    $stmt = $pdo-&gt;query($sql);\n    echo \"&lt;table&gt;\";\n    while ($fila = $stmt-&gt;fetch(PDO::FETCH_ASSOC)) {\n        echo \"&lt;tr&gt;&lt;td&gt;{$fila['nom']}&lt;/td&gt;&lt;td&gt;{$fila['correu']}&lt;/td&gt;&lt;/tr&gt;\";\n    }\n    echo \"&lt;/table&gt;\";\n}\n</code></pre>"},{"location":"05accesoDatos.html#exercici-4-actualitzar-dades","title":"Exercici 4. Actualitzar dades","text":"<ol> <li>Escriu una funci\u00f3 que actualitzi el correu electr\u00f2nic d'un usuari segons el seu identificador (<code>id</code>).</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nfunction actualitzarCorreu($id, $nouCorreu) {\n    global $pdo;\n    $sql = \"UPDATE users SET correu = :correu WHERE id = :id\";\n    $stmt = $pdo-&gt;prepare($sql);\n    $stmt-&gt;execute([':correu' =&gt; $nouCorreu, ':id' =&gt; $id]);\n    echo \"Correu actualitzat!\";\n}\n</code></pre>"},{"location":"05accesoDatos.html#exercici-5-eliminar-un-registre","title":"Exercici 5. Eliminar un registre","text":"<ol> <li>Implementa un script que esborri un usuari per identificador (<code>id</code>).</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nfunction eliminarUsuari($id) {\n    global $pdo;\n    $sql = \"DELETE FROM users WHERE id = :id\";\n    $stmt = $pdo-&gt;prepare($sql);\n    $stmt-&gt;execute([':id' =&gt; $id]);\n    echo \"Usuari eliminat!\";\n}\n</code></pre>"},{"location":"05accesoDatos.html#exercici-6-tractament-derrors","title":"Exercici 6. Tractament d'errors","text":"<ol> <li>Modifica el codi anterior per gestionar els errors amb <code>try-catch</code> i mostrar missatges d'error clars.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n try {\n    actualitzarCorreu(5, 'noucorreu@example.com');\n} catch (PDOException $e) {\n    echo \"Error en actualitzar: \" . $e-&gt;getMessage();\n}\n</code></pre>"},{"location":"05accesoDatos.html#exercici-7-us-de-query-builder","title":"Exercici 7. \u00das de Query Builder","text":"<ol> <li>Utilitza un Query Builder per fer consultes a la base de dades de manera m\u00e9s f\u00e0cil i segura sense escriure SQL expl\u00edcitament.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n#  \u00das de Query Builder (amb Laravel com a exemple)\nuse Illuminate\\Support\\Facades\\DB;\n\nfunction obtenirUsuaris() {\n    $usuaris = DB::table('users')-&gt;get();\n    foreach ($usuaris as $usuari) {\n        echo $usuari-&gt;nom . ' - ' . $usuari-&gt;correu . \"&lt;br&gt;\";\n    }\n}\n</code></pre>"},{"location":"05accesoDatos.html#exercici-8-tractament-de-fitxers","title":"Exercici 8. Tractament de fitxers","text":"<ol> <li>Crea un script que llegeixi un fitxer CSV i insereixi les dades en una taula de la base de dades.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n\nfunction llegirCSV($fitxerCSV) {\n    global $pdo;\n    if (($gestor = fopen($fitxerCSV, \"r\")) !== FALSE) {\n        while (($dades = fgetcsv($gestor, 1000, \",\")) !== FALSE) {\n            $sql = \"INSERT INTO users (nom, correu) VALUES (:nom, :correu)\";\n            $stmt = $pdo-&gt;prepare($sql);\n            $stmt-&gt;execute([':nom' =&gt; $dades[0], ':correu' =&gt; $dades[1]]);\n        }\n        fclose($gestor);\n        echo \"Dades inserides des del CSV!\";\n    }\n}\n</code></pre>"},{"location":"05accesoDatos.html#exercici-9-web-scraping","title":"Exercici 9. Web Scraping","text":"<ol> <li>Utilitza Goutte per a fer web scraping a la p\u00e0gina <code>https://books.toscrape.com/</code> i extreu el t\u00edtol i preu de tots els llibres de la categoria <code>Classics</code>.</li> <li>Mostra els resultats en una taula HTML.</li> <li>Suma tots els preus i mostra el preu total.</li> <li>Modifica el codi per a rec\u00f3rrer totes les p\u00e0gines de resultats.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n     require '../vendor/autoload.php';\n\n\n     use Goutte\\Client;\n     use Symfony\\Component\\HttpClient\\HttpClient;\n\n     $client = new Client(HttpClient::create(['timeout' =&gt; 60]));\n     $crawler = $client-&gt;request('GET', 'https://books.toscrape.com/catalogue/category/books/classics_6/index.html');\n\n     $salir = false;\n\n     $precios = [];\n     while (!$salir) {\n         $crawler-&gt;filter('.row li article div.product_price p.price_color')-&gt;each(\n             function ($node) use (&amp;$precios) {\n                 $texto = $node-&gt;text();\n                 $cantidad = substr($texto, 2); // Le quitamos las libras \u00bf2 posiciones?\n                 $precios[] = floatval($cantidad);\n             }\n         );\n\n         $enlace = $crawler-&gt;selectLink('next');\n         if ($enlace-&gt;count() != 0) {\n             // el enlace next existe\n             $sigPag = $crawler-&gt;selectLink('next')-&gt;link();\n             $crawler = $client-&gt;click($sigPag); // hacemos click\n         } else {\n             // ya no hay enlace next\n             $salir = true;\n         }\n     }    \n\n     $precioTotal = array_sum($precios);\n     echo $precioTotal;\n</code></pre>"},{"location":"05accesoDatos.html#exercicis-proposats","title":"Exercicis proposats","text":""},{"location":"05accesoDatos.html#exercici-1-creacio-duna-base-de-dades","title":"Exercici 1: Creaci\u00f3 d'una base de dades","text":"<ol> <li> <p>Descripci\u00f3:    Crea una base de dades amb una taula <code>empleats</code> que tinga els camps <code>id</code>, <code>nom</code>, <code>cognom</code> i <code>sou</code>.</p> </li> <li> <p>Requisits:</p> <ul> <li>Crear la base de dades i la taula.</li> <li>Definir els tipus de dades adequats per als camps.</li> </ul> </li> </ol>"},{"location":"05accesoDatos.html#exercici-2-llistat-dempleats","title":"Exercici 2: Llistat d'empleats","text":"<ol> <li> <p>Descripci\u00f3:    Crea un script PHP que mostre tots els empleats de la taula <code>empleats</code> en una taula HTML.</p> </li> <li> <p>Requisits:</p> <ul> <li>Connectar-se a la base de dades.</li> <li>Recuperar els empleats i mostrar-los en una taula HTML.</li> </ul> </li> </ol>"},{"location":"05accesoDatos.html#exercici-3-formulari-per-a-afegir-empleats","title":"Exercici 3: Formulari per a afegir empleats","text":"<ol> <li> <p>Descripci\u00f3:    Afegeix un formulari HTML que permeta afegir nous empleats a la taula <code>empleats</code>.</p> </li> <li> <p>Requisits:</p> <ul> <li>Crear un formulari per a introduir el <code>nom</code>, <code>cognom</code> i <code>sou</code> de l'empleat.</li> <li>Crear un script PHP per a gestionar la inserci\u00f3 de nous empleats en la taula.</li> </ul> </li> </ol>"},{"location":"05accesoDatos.html#exercici-4-formulari-per-a-actualitzar-el-sou-dun-empleat","title":"Exercici 4: Formulari per a actualitzar el sou d'un empleat","text":"<ol> <li> <p>Descripci\u00f3:    Afegeix un formulari per a modificar el sou d'un empleat existent.</p> </li> <li> <p>Requisits:</p> <ul> <li>Crear un formulari per a seleccionar l'empleat i introduir el nou sou.</li> <li>Escriure un script PHP per a actualitzar el sou en la base de dades.</li> </ul> </li> </ol>"},{"location":"05accesoDatos.html#exercici-5-formulari-per-a-eliminar-un-empleat","title":"Exercici 5: Formulari per a eliminar un empleat","text":"<ol> <li> <p>Descripci\u00f3:    Afegeix un formulari per a eliminar un empleat de la taula <code>empleats</code>.</p> </li> <li> <p>Requisits:</p> <ul> <li>Crear un formulari per a seleccionar l'empleat a eliminar.</li> <li>Escriure un script PHP per a eliminar l'empleat de la base de dades.</li> </ul> </li> </ol>"},{"location":"05accesoDatos.html#exercici-6-creacio-de-la-classe-empleat","title":"Exercici 6: Creaci\u00f3 de la classe <code>Empleat</code>","text":"<ol> <li> <p>Descripci\u00f3:    Crea una classe <code>Empleat</code> en PHP amb els atributs <code>id</code>, <code>nom</code>, <code>cognom</code> i <code>sou</code> i utilitza-la per a representar els empleats.</p> </li> <li> <p>Requisits:</p> <ul> <li>Definir la classe <code>Empleat</code> amb els seus atributs.</li> <li>Modificar els exercicis anteriors per a utilitzar aquesta classe en lloc de variables simples.</li> </ul> </li> </ol>"},{"location":"05accesoDatos.html#exercici-7completa-el-query-builder-seleccionat","title":"Exercici 7:Completa el Query Builder seleccionat","text":"<ol> <li> <p>Descripci\u00f3:    Completa el QueryBuilder seleccionat.</p> </li> <li> <p>Requisits:    - Implementar el Query Builder en les operacions de consulta,   i eliminaci\u00f3.</p> </li> </ol>"},{"location":"05accesoDatos.html#exercici-8-us-dun-query-builder","title":"Exercici 8: \u00das d'un Query Builder","text":"<ol> <li> <p>Descripci\u00f3:    Modifica els exercicis anteriors per a utilitzar un Query Builder per a fer les consultes a la base de dades.</p> </li> <li> <p>Requisits:</p> <ul> <li>Implementar el Query Builder en les operacions de consulta, inserci\u00f3, actualitzaci\u00f3 i eliminaci\u00f3.</li> </ul> </li> </ol>"},{"location":"05accesoDatos.html#exercici-9-poblar-la-taula-amb-dades-de-webscraping","title":"Exercici 9: Poblar la taula amb dades de webscraping","text":"<ol> <li> <p>Descripci\u00f3:    Modifica l'exercici de webscraping per a poblar una taula de la base de dades amb els llibres de la categoria <code>Classics</code> de la p\u00e0gina <code>https://books.toscrape.com/</code>.</p> </li> <li> <p>Requisits:</p> <ul> <li>Realitzar el webscraping de la p\u00e0gina esmentada.</li> <li>Inserir els llibres en una taula de la base de dades.</li> </ul> </li> </ol>"},{"location":"05accesoDatos.html#9-enunciat-dels-projectes","title":"9. Enunciat dels projectes","text":""},{"location":"05accesoDatos.html#projecte-4-en-ratlla","title":"Projecte  \"4 en Ratlla\"","text":""},{"location":"05accesoDatos.html#1-autenticacio-dusuaris-i-gestio-de-partides-guardades","title":"1. Autenticaci\u00f3 d'Usuaris i Gesti\u00f3 de Partides Guardades","text":"<ol> <li> <p>Registre d'Usuari:    - Crea un formulari de login perqu\u00e8 el usuaris s'hagen de validar .    - Si l'usuari no est\u00e0 registrat es donar\u00e0 d'alta autom\u00e0ticament i se li permetr\u00e0 entrar.    - Despr\u00e9s de validar-se o registrar-se es mostrar\u00e0 la pantalla de triar nom i color.</p> </li> <li> <p>Opcions noves </p> </li> </ol> <ul> <li>Guardar Partida: Es guardar\u00e0 l'estat actual de la partida en la BBDD (nom\u00e9s una per usuari, la darrera). Si guardem un altra substituir\u00e0 a l'anterior. </li> <li>Carregar Partida: Es carregar\u00e0 l'estat de la partida guardada per a l'usuari.</li> <li>Tancar sessi\u00f3: Afig una opci\u00f3 perqu\u00e8 l\u2019usuari puga tancar sessi\u00f3 i finalitzar la seua sessi\u00f3 activa.</li> </ul>"},{"location":"05accesoDatos.html#3-consideracions-addicionals","title":"3. Consideracions Addicionals","text":"<ol> <li> <p>Seguretat:    - Utilitza hashing de contrasenyes amb <code>password_hash()</code> per emmagatzemar-les de forma segura.</p> </li> <li> <p>Millores de la Interf\u00edcie d'Usuari:    - Proporciona missatges clars d'error en cas de contrasenyes incorrectes o usuaris inexistents.    - Implementa una navegaci\u00f3 senzilla per iniciar una nova partida o continuar una partida guardada.</p> </li> <li> <p>Proves:    - Realitza proves per assegurar que l\u2019autenticaci\u00f3 d\u2019usuaris funciona correctament.    - Verifica que les partides es guarden i es recuperen adequadament.</p> </li> </ol>"},{"location":"05accesoDatos.html#exemple-destructura-de-la-base-de-dades","title":"Exemple d'Estructura de la Base de Dades:","text":"<pre><code>CREATE TABLE `partides` (\n                           `usuari_id` int NOT NULL,\n                           `game` text CHARACTER  \n);\n\nCREATE TABLE `usuaris` (\n                          `id` int NOT NULL,\n                          `nom_usuari` varchar(50) NOT NULL,\n                          `contrasenya` varchar(255) NOT NULL\n);\n\nALTER TABLE `partides`\n   ADD PRIMARY KEY (`usuari_id`);\n\nALTER TABLE `usuaris`\n   ADD PRIMARY KEY (`id`),\n  ADD UNIQUE KEY `nom_usuari` (`nom_usuari`);\n\nALTER TABLE `usuaris`\n   MODIFY `id` int NOT NULL AUTO_INCREMENT;\n\nALTER TABLE `partides`\n   ADD CONSTRAINT `partides_ibfk_1` FOREIGN KEY (`usuari_id`) REFERENCES `usuaris` (`id`) ON DELETE CASCADE;\nCOMMIT;\n</code></pre>"},{"location":"05seguretat_Laravel.html","title":"SA5. Aplicacions segures i reactives en Laravel","text":"Duraci\u00f3 i criteris d'avaluaci\u00f3 <p>Duraci\u00f3 estimada: 24 hores</p> Resultat d'aprenentatge Criteris d'avaluaci\u00f3 RA6.-Genera p\u00e0gines web din\u00e0miques analitzant i utilitzant tecnologies i frameworks del servidor web que afigen codi al llenguatge de marques. a) S'han identificat les difer\u00e8ncies entre l'execuci\u00f3 de codi en el servidor i en el client web.    b) S'han reconegut els avantatges d'unir totes dues tecnologies en el proc\u00e9s de desenvolupament de programes.    c) S'han identificat les tecnologies i frameworks relacionades amb la generaci\u00f3 per part del servidor de p\u00e0gines web amb guions embeguts. d) S'han utilitzat aquestes tecnologies i frameworks per a generar p\u00e0gines web que incloguen interacci\u00f3 amb l'usuari. e) S'han utilitzat aquestes tecnologies i frameworks, per a generar p\u00e0gines web que incloguen verificaci\u00f3 de formularis.  f) S'han utilitzat aquestes tecnologies i frameworks per a generar p\u00e0gines web que incloguen modificaci\u00f3 din\u00e0mica del seu contingut i la seua estructura. g) S'han aplicat aquestes tecnologies i frameworks en la programaci\u00f3 d'aplicacions web."},{"location":"05seguretat_Laravel.html#sa-51-autenticacio-hashing-i-autoritzacio","title":"SA 5.1 Autenticaci\u00f3, hashing i autoritzaci\u00f3","text":""},{"location":"05seguretat_Laravel.html#laravel-breeze-registre-login-logout","title":"\ud83c\udf2c\ufe0f\ud83c\udf43 Laravel Breeze: registre, login, logout","text":"<p>Laravel Breeze \u00e9s el starter kit oficial m\u00e9s simple per implementar autenticaci\u00f3 en Laravel. Inclou rutes, controladors i vistes per a registre, login i logout.</p> <p>Per instal\u00b7lar-lo, cal usar els comandos corresponents per a afegir el paquet, generar el frontend i aplicar les migracions.</p> <p><pre><code>./vendor/bin/sail shell\ncomposer require laravel/breeze --dev\nphp artisan breeze:install blade\nnpm install &amp;&amp; npm run dev\nphp artisan migrate\n</code></pre> Recuperaci\u00f3 de l'usuari autenticat Un cop l'usuari ha fet login, podem accedir a les seues dades: <pre><code>use Illuminate\\Support\\Facades\\Auth;\n\n// Usuari autenticat\n$user = Auth::user();\n\n// ID de l'usuari autenticat\n$id = Auth::id();\n</code></pre></p> <p>Tamb\u00e9 podem obtenir l\u2019usuari des d'una petici\u00f3 injectada al controlador: <pre><code>public function dashboard(Request $request)\n{\n    $user = $request-&gt;user(); // Equivalent a Auth::user()\n}\n</code></pre></p> <p>Logout Laravel Breeze inclou logout preconfigurat: <pre><code>&lt;form method=\"POST\" action=\"{{ route('logout') }}\"&gt;\n    @csrf\n    &lt;button type=\"submit\"&gt;Logout&lt;/button&gt;\n&lt;/form&gt;\n</code></pre></p> <p>Restabliment de contrasenya Laravel Breeze genera autom\u00e0ticament els formularis i la l\u00f2gica necess\u00e0ria, soles has de configurar el correu SMTP al fitxer <code>.env</code>. - </p> <p>Hashing autom\u00e0tic de contrasenyes</p> <p>Laravel utilitza el sistema <code>Hash</code> per a encriptar contrasenyes abans de guardar-les a la base de dades. Breeze ja ho implementa autom\u00e0ticament en el registre.</p> <pre><code>use Illuminate\\Support\\Facades\\Hash;\n\n$user = User::create([\n    'name' =&gt; $request-&gt;name,\n    'email' =&gt; $request-&gt;email,\n    'password' =&gt; Hash::make($request-&gt;password),\n]);\n</code></pre>"},{"location":"05seguretat_Laravel.html#proteccio","title":"\ud83d\udd12 Protecci\u00f3","text":""},{"location":"05seguretat_Laravel.html#proteccio-de-rutes-amb-auth","title":"\ud83d\udee3\ufe0f Protecci\u00f3 de rutes amb <code>auth</code>","text":"<p>Per a protegir rutes perqu\u00e8 nom\u00e9s siguen accessibles per usuaris autenticats, es fa \u00fas del middleware <code>auth</code>. Aquest es pot aplicar tant a grups de rutes:</p> <pre><code>Route::middleware(['auth'])-&gt;group(function () {\n    Route::resource('equips', EquipController::class);\n});\n</code></pre> <p>com a rutes individuals:</p> <pre><code>Route::get('/dashboard', function () {\n    return view('dashboard');\n})-&gt;middleware('auth');\n</code></pre>"},{"location":"05seguretat_Laravel.html#proteccio-amb-middlewares","title":"\ud83d\udea6Protecci\u00f3 amb middlewares","text":""},{"location":"05seguretat_Laravel.html#1que-es-un-middleware","title":"\ud83d\udd0d 1.Qu\u00e8 \u00e9s un middleware?","text":"<p>Un middleware \u00e9s una classe que actua com a intermediari entre una sol\u00b7licitud HTTP i la seua resposta. Permet executar l\u00f2gica abans o despr\u00e9s d\u2019arribar al controlador.</p> <p>S\u2019usa per a:</p> <ul> <li>\ud83d\udd10 Autenticaci\u00f3 d\u2019usuaris</li> <li>\ud83d\udee1\ufe0f Validaci\u00f3 de rols i permisos</li> <li>\ud83e\uddfc Neteja o modificaci\u00f3 de peticions/respostes</li> </ul> <p>\u2699\ufe0f Exemple senzill de middleware</p> <pre><code>public function handle($request, Closure $next)\n{\n    if (Auth::check()) {\n        return $next($request); // Continua amb la sol\u00b7licitud\n    }\n    return redirect('login'); // Redirigeix si no est\u00e0 autenticat\n}\n</code></pre>"},{"location":"05seguretat_Laravel.html#2-rols-i-permisos","title":"\ud83e\udde9 2. Rols i permisos","text":"<p>Primer, hem d'afegir camp role a la taula users</p> <ol> <li>Crear una migraci\u00f3:    <pre><code>php artisan make:migration add_role_to_users_table --table=users\n</code></pre></li> <li>Afegir el camp <code>role</code>:    <pre><code>Schema::table('users', function (Blueprint $table) {\n    $table-&gt;string('role')-&gt;default('user'); // Opcions: 'user', 'admin', etc.\n});\n</code></pre></li> <li>Actualitzar el model <code>User</code>:    <pre><code>class User extends Authenticatable\n{\n    protected $fillable = ['name', 'email', 'password', 'role'];\n}\n</code></pre></li> </ol>"},{"location":"05seguretat_Laravel.html#3-middleware-personalitzat-per-a-rols","title":"\ud83d\udee1\ufe0f 3. Middleware personalitzat per a rols","text":"<ol> <li>Crear el middleware:    <pre><code>php artisan make:middleware RoleMiddleware\n</code></pre></li> <li>Definir la l\u00f2gica:    <pre><code>namespace App\\Http\\Middleware;\n\n use Closure;\n use Illuminate\\Support\\Facades\\Auth;\n\n class RoleMiddleware\n {\n     public function handle($request, Closure $next, $role)\n     {\n         if (Auth::check() &amp;&amp; Auth::user()-&gt;role === $role) {\n             return $next($request);\n           }\n         abort(403, 'Acc\u00e9s no autoritzat');\n     }\n }\n</code></pre></li> <li>Registrar-lo a <code>Kernel.php</code>:    <pre><code>protected $routeMiddleware = [\n    'role' =&gt; \\App\\Http\\Middleware\\RoleMiddleware::class,\n];\n</code></pre></li> <li>Aplicar-lo a una ruta:</li> </ol> <p><pre><code>Route::get('/admin', function () {\n    return view('admin.dashboard');\n})-&gt;middleware('role:admin');\n</code></pre>    o en laravel 12, directament al controlador:</p> <pre><code>  use Illuminate\\Routing\\Attributes\\Middleware;\n\n  #[Middleware('role:admin')]\n  class AdminController extends Controller\n  {\n    public function dashboard()\n    {\n      return view('admin.dashboard');\n    }\n  }\n</code></pre>"},{"location":"05seguretat_Laravel.html#politiques-policy-per-autoritzacions","title":"\ud83d\udee1\ufe0f  Pol\u00edtiques (<code>Policy</code>) per  autoritzacions","text":"<p>Les policies en Laravel permeten controlar l\u2019acc\u00e9s a recursos de manera precisa i reutilitzable. Es poden aplicar autom\u00e0ticament als models o expl\u00edcitament mitjan\u00e7ant m\u00e8todes com <code>authorize()</code>.</p>"},{"location":"05seguretat_Laravel.html#1-crear-una-policy","title":"\ud83d\udee0\ufe0f 1. Crear una Policy","text":"<p>Es genera una pol\u00edtica associada a un model per controlar qui pot realitzar accions sobre aquest recurs.</p> <pre><code>./vendor/bin/sail artisan make:policy PostPolicy --model=Post\n</code></pre> <p>Es crea a app/Policies/PostPolicy.php.</p>"},{"location":"05seguretat_Laravel.html#2-definir-les-regles-dautoritzacio","title":"\ud83e\udde0 2. Definir les regles d\u2019autoritzaci\u00f3","text":"<p>Dins la policy es defineixen m\u00e8todes com <code>view</code>, <code>create</code>, <code>update</code> o <code>delete</code> que retornen si un usuari pot realitzar o no eixa acci\u00f3.</p> <pre><code>public function update(User $user, Post $post)\n{\n  return $user-&gt;id === $post-&gt;user_id;\n}\n</code></pre> <p>Cada m\u00e8tode pot retornar: - true (perm\u00e9s) - false (denegat) - O fins i tot llan\u00e7ar excepcions o missatges personalitzats</p>"},{"location":"05seguretat_Laravel.html#3-registrar-la-policy","title":"\ud83e\uddfe 3. Registrar la Policy","text":"<p>Cal registrar la pol\u00edtica al prove\u00efdor d\u2019autenticaci\u00f3 (<code>AuthServiceProvider</code>) per vincular el model amb la seua policy corresponent.</p> <pre><code>use App\\Models\\Post;\nuse App\\Policies\\PostPolicy;\n\nprotected $policies = [\nPost::class =&gt; PostPolicy::class,\n];\n</code></pre>"},{"location":"05seguretat_Laravel.html#4-utilitzar-la-en-controladors","title":"\ud83e\uddea 4. Utilitzar-la en controladors","text":"<p>Dins dels controladors, s\u2019utilitza la funci\u00f3 <code>authorize()</code> per verificar si l\u2019usuari pot executar una acci\u00f3 determinada sobre un recurs.</p> <pre><code>public function edit(Post $post)\n{\n  $this-&gt;authorize('update', $post);\n  return view('posts.edit', compact('post'));\n}\n</code></pre>"},{"location":"05seguretat_Laravel.html#5-us-en-vistes-blade","title":"\u2705 5. \u00das en vistes Blade","text":"<p>Amb la directiva <code>@can</code>, podem controlar l\u2019acc\u00e9s a botons o seccions visuals segons la pol\u00edtica definida.</p> <pre><code>@can('update', $post)\n&lt;a href=\"{{ route('posts.edit', $post) }}\"&gt;Editar&lt;/a&gt;\n@endcan\n</code></pre>"},{"location":"05seguretat_Laravel.html#6-regles-globals","title":"\ud83d\udd01 6. Regles globals","text":"<p>\u00c9s possible definir regles generals dins la policy (com per exemple donar acc\u00e9s total als usuaris administradors) mitjan\u00e7ant el m\u00e8tode <code>before()</code>.</p> <pre><code>public function before(User $user, $ability)\n{\n  if ($user-&gt;role === 'admin') {\n    return true; // acc\u00e9s total\n  }\n}\n</code></pre>"},{"location":"05seguretat_Laravel.html#sa-52-seguretat-en-formularis-i-feedback","title":"SA 5.2 Seguretat en Formularis  i feedback","text":""},{"location":"05seguretat_Laravel.html#personalitzar-missatges-derror","title":"\u26a0\ufe0f Personalitzar Missatges d'Error","text":"<p>Podem personalitzar els missatges d'error sobreescrivint el m\u00e8tode messages() dins del Form Request: <pre><code>public function messages()\n{\n    return [\n        'title.required' =&gt; 'El camp t\u00edtol \u00e9s obligatori.',\n        'title.min' =&gt; 'El camp t\u00edtol ha de tindre almenys 3 car\u00e0cters.',\n        'year.required' =&gt; 'El camp any \u00e9s obligatori.',\n    ];\n}\n</code></pre></p>"},{"location":"05seguretat_Laravel.html#autoritzacio-dins-de-formrequest-amb-policies","title":"\ud83d\udee1\ufe0f Autoritzaci\u00f3 dins de FormRequest amb Policies","text":"<p>Cada FormRequest inclou un m\u00e8tode  authorize() per controlar si l\u2019usuari t\u00e9 perm\u00eds per a executar l\u2019acci\u00f3 abans de validar les dades. \u00c9s el lloc idoni per invocar una policy.</p> <p>Exemple amb policy: Si tenim una policy EquipPolicy@update, dins el FormRequest:</p> <pre><code>public function authorize(): bool\n{\n    $equip = $this-&gt;route('equip'); // Obtenim el model Equip des de la ruta\n                                    // Nom\u00e9s funcionar\u00e0 si en la definici\u00f3 de rutes has fet binding del model com Route::put('/equips/{equip}', ...).\n    return $this-&gt;user()-&gt;can('update', $equip); // Crida a la policy\n}\n</code></pre> <ul> <li>Si no pot, Laravel llan\u00e7a autom\u00e0ticament un error 403 Forbidden.</li> <li>Si pot, executa la validaci\u00f3.</li> </ul> <p>Alternativa amb Gate::allows()</p> <p>Tamb\u00e9 pots usar:</p> <pre><code>use Illuminate\\Support\\Facades\\Gate;\n\npublic function authorize(): bool\n{\n    return Gate::allows('update', $this-&gt;route('equip'));\n}\n</code></pre>"},{"location":"05seguretat_Laravel.html#elements-basics-en-vistes-amb-formularis","title":"\ud83d\udd04  Elements b\u00e0sics en vistes amb formularis","text":"<ul> <li><code>@csrf</code>: Protecci\u00f3 contra atacs de tipus cross-site request forgery</li> <li><code>@method(\u00b4PUT\u00b4)</code>: Permet enviar formularis amb verbs PUT o DELETE</li> <li><code>old('camp')</code>: Mant\u00e9 les dades introdu\u00efdes en cas d\u2019error de validaci\u00f3, despr\u00e9s d'un error de validaci\u00f3.</li> <li><code>@error('camp')</code>: Mostra els errors de validaci\u00f3 associats a cada camp despr\u00e9s d'un error de validaci\u00f3.</li> </ul>"},{"location":"05seguretat_Laravel.html#missatges-flash-amb-session-flash","title":"Missatges flash amb <code>session()-&gt;flash()</code>","text":"<p>Permeten mostrar missatges temporals (\u00e8xit, error, etc.) despr\u00e9s d\u2019una acci\u00f3, com una redirecci\u00f3 despr\u00e9s de crear o modificar un recurs.</p> <pre><code>return redirect()-&gt;route('equips.index')-&gt;with('ok', 'Equip creat correctament!');\n</code></pre> <p>A la vista Blade:</p> <pre><code>@if (session('ok'))\n    &lt;div class=\"alert alert-success\"&gt;\n        {{ session('ok') }}\n    &lt;/div&gt;\n@endif\n</code></pre>"},{"location":"05seguretat_Laravel.html#ux-i-manteniment-destat","title":"\u2728 UX i manteniment d'estat","text":"<p>L'\u00fas combinat de <code>old()</code>, <code>@error</code>, missatges flash i bones pr\u00e0ctiques de disseny millora significativament l\u2019experi\u00e8ncia d\u2019usuari (UX) en formularis.</p>"},{"location":"05seguretat_Laravel.html#mostrar-errors-de-validacio-a-la-vista","title":"\u2757 Mostrar Errors de Validaci\u00f3 a la Vista","text":"<p>Quan es produeixen errors de validaci\u00f3, Laravel redirigeix autom\u00e0ticament a la vista anterior amb la variable global <code>$errors</code>, que cont\u00e9 els errors de validaci\u00f3.</p> <p>Exemple de com mostrar un llistat d'errors al comen\u00e7ament del formulari: <pre><code>@if ($errors-&gt;any())\n    &lt;ul&gt;\n        @foreach($errors-&gt;all() as $error)\n            &lt;li&gt;{{ $error }}&lt;/li&gt;\n        @endforeach\n    &lt;/ul&gt;\n@endif\n</code></pre></p> <p>A sota de cada camp:</p> <pre><code>&lt;div class=\"form-group\"&gt;\n    &lt;label for=\"title\"&gt;T\u00edtol:&lt;/label&gt;\n    &lt;input type=\"text\" name=\"title\" id=\"title\" class=\"form-control\" value=\"{{ old('title') }}\"&gt;\n    @if ($errors-&gt;has('title'))\n        &lt;div class=\"text-danger\"&gt;{{ $errors-&gt;first('title') }}&lt;/div&gt;\n    @endif\n&lt;/div&gt;\n</code></pre>"},{"location":"05seguretat_Laravel.html#us-didiomes-en-laravel-internalitzacio","title":"\ud83c\udf0d \u00das d'idiomes en Laravel (Internalitzaci\u00f3)","text":"<p>Laravel proporciona eines senzilles i potents per a la localitzaci\u00f3 d'aplicacions, permetent suportar m\u00faltiples idiomes. Aquesta funcionalitat \u00e9s ideal per a desenvolupar aplicacions accessibles a usuaris de diferents regions i lleng\u00fces.</p>"},{"location":"05seguretat_Laravel.html#1-configuracio-inicial","title":"1\ufe0f\u20e3 Configuraci\u00f3 Inicial","text":"<p>L'idioma predeterminat s'estableix al fitxer <code>config/app.php</code> mitjan\u00e7ant el par\u00e0metre <code>locale</code>: <pre><code>'locale' =&gt; 'ca', // o 'es', 'en', etc.\n'fallback_locale' =&gt; 'en', //altenNATIU\n</code></pre></p>"},{"location":"05seguretat_Laravel.html#2-fitxers-de-traduccio","title":"2\ufe0f\u20e3  Fitxers de Traducci\u00f3","text":"<p>Per defecte, Laravel no inclou el directori <code>lang</code>. Per personalitzar els fitxers de llenguatge o crear-ne de nous, executa:</p> <pre><code>php artisan lang:publish\ncomposer require laravel-lang/lang --dev\nphp artisan lang:add es\nphp artisan lang:add ca\n</code></pre> <p>Els fitxers de traducci\u00f3 es guarden al directori <code>lang</code>. Cada idioma t\u00e9 la seua pr\u00f2pia carpeta, amb fitxers <code>.php</code> que contenen arrays clau-valor per a les traduccions:</p> <p>Exemple d'estructura: <pre><code>/lang\n    /en\n        messages.php\n    /es\n        messages.php\n</code></pre></p> <p>Exemples de ftixer <pre><code>// lang/en/messages.php\nreturn [\n    'welcome' =&gt; 'Welcome to our application!',\n];\n</code></pre></p> <p>Per a altres idiomes: <pre><code>// lang/es/messages.php\nreturn [\n    'welcome' =&gt; '\u00a1Bienvenido a nuestra aplicaci\u00f3n!',\n];\n</code></pre></p>"},{"location":"05seguretat_Laravel.html#3-traduccions-amb-fitxers-json","title":"3\ufe0f\u20e3 Traduccions amb Fitxers JSON","text":"<p>Laravel permet utilitzar fitxers JSON per a traduccions simples. Aquest enfocament \u00e9s \u00fatil per a aplicacions amb cadenes de traducci\u00f3 \u00faniques i desordenades.</p> <p>Exemple de Fitxer JSON:</p> <p>// lang/es.json</p> <pre><code>{\n    \"I love programming.\": \"Me encanta programar.\"\n}\n</code></pre> <p>Per accedir a aquestes cadenes: <pre><code>echo __('I love programming.');\n</code></pre></p>"},{"location":"05seguretat_Laravel.html#4-us-de-traduccions-en-el-codi","title":"4\ufe0f\u20e3 \u00das de Traduccions en el Codi","text":"<p>Utilitza la funci\u00f3 auxiliar <code>__()</code> per obtenir les traduccions: <pre><code>echo __('messages.welcome'); // Welcome to our application!\n</code></pre> Amb par\u00e0metres:</p> <p><pre><code>// lang/en/messages.php\nreturn [\n    'greeting' =&gt; 'Hello, :name!',\n];\n</code></pre> <pre><code>echo __('messages.greeting', ['name' =&gt; 'John']); // Hello, John!\n</code></pre></p>"},{"location":"05seguretat_Laravel.html#5-canviar-lidioma-dinamicament","title":"5\ufe0f\u20e3 Canviar l'Idioma Din\u00e0micament","text":"<p>Per canviar l'idioma de l'aplicaci\u00f3 en temps d'execuci\u00f3, utilitza el m\u00e8tode <code>App::setLocale()</code>:</p> <pre><code>use Illuminate\\Support\\Facades\\App;\n\nApp::setLocale('es'); // Canvia a espanyol\n</code></pre> <p>Aquesta configuraci\u00f3 nom\u00e9s afecta la petici\u00f3 actual.</p>"},{"location":"05seguretat_Laravel.html#enviament-de-correus-en-laravel-12","title":"\ud83d\udcec Enviament de Correus en Laravel 12","text":"<p>Laravel proporciona una API elegant per a l\u2019enviament de correus electr\u00f2nics a trav\u00e9s de m\u00faltiples serveis (SMTP, Mailgun, Postmark, Amazon SES...).</p>"},{"location":"05seguretat_Laravel.html#1-configuracio-del-servei-de-correu","title":"1\ufe0f\u20e3 Configuraci\u00f3 del Servei de Correu","text":"<p>Edita el fitxer <code>.env</code>:</p> <p><pre><code>MAIL_MAILER=smtp\nMAIL_HOST=smtp.gmail.com\nMAIL_PORT=587\nMAIL_USERNAME=el_teu_email@gmail.com\nMAIL_PASSWORD=la_teua_contrasenya\nMAIL_ENCRYPTION=tls\nMAIL_FROM_ADDRESS=el_teu_email@gmail.com\nMAIL_FROM_NAME=\"Nom del Projecte\"\n</code></pre> El fitxer config/mail.php carregar\u00e0 autom\u00e0ticament aquests valors.</p>"},{"location":"05seguretat_Laravel.html#2-crear-una-classe-de-correu","title":"2\ufe0f\u20e3 Crear una Classe de Correu","text":"<pre><code>php artisan make:mail WelcomeMail\n</code></pre> <p>Aquest comandament crea una classe al directori <code>App\\Mail</code>. Aquesta classe \u00e9s on es defineix el contingut i el disseny del correu.</p> <p>Exemple</p> <pre><code>namespace App\\Mail;\n\nuse Illuminate\\Bus\\Queueable;\nuse Illuminate\\Mail\\Mailable;\nuse Illuminate\\Queue\\SerializesModels;\n\nclass WelcomeMail extends Mailable\n{\n    use Queueable, SerializesModels;\n\n    public $user;\n\n    public function __construct($user)\n    {\n        $this-&gt;user = $user;\n    }\n\n    public function build()\n    {\n        return $this-&gt;view('emails.welcome')\n                    -&gt;subject('Benvingut a la nostra aplicaci\u00f3');\n    }\n}\n</code></pre>"},{"location":"05seguretat_Laravel.html#3-crear-la-vista-del-correu","title":"3\ufe0f\u20e3 Crear la Vista del Correu","text":"<p>resources/views/emails/benvinguda.blade.php</p> <pre><code>&lt;h1&gt;Hola, {{ $usuari-&gt;name }}!&lt;/h1&gt;\n&lt;p&gt;Gr\u00e0cies per unir-te a la nostra aplicaci\u00f3.&lt;/p&gt;\n</code></pre>"},{"location":"05seguretat_Laravel.html#enviar-el-correu","title":"Enviar el Correu","text":"<p>Des d\u2019un controlador:</p> <pre><code>use App\\Mail\\WelcomeMail;\nuse Illuminate\\Support\\Facades\\Mail;\n\nMail::to('usuari@example.com')-&gt;send(new WelcomeMail($user));\n</code></pre> <p>Enviar correus a m\u00faltiples destinataris</p> <pre><code>Mail::to(['user1@example.com', 'user2@example.com'])-&gt;send(new WelcomeMail($user));\n</code></pre>"},{"location":"05seguretat_Laravel.html#5-correus-amb-markdown","title":"5\ufe0f\u20e3 Correus amb Markdown","text":"<p>Laravel permet crear correus amb components de Markdown. Generem un correu amb components: <pre><code>php artisan make:mail WelcomeMail --markdown=emails.welcome\n</code></pre></p> <p>Aquest comandament crea una plantilla Markdown a <code>resources/views/emails</code>.</p> <p>Exemple de plantilla Markdown:</p> <pre><code>@component('mail::message')\n    # Hola, {{ $usuari-&gt;name }}\n\n    Benvingut/da a la nostra aplicaci\u00f3!\n\n    @component('mail::button', ['url' =&gt; 'https://example.com'])\n    Visita'ns\n    @endcomponent\n\n    Gr\u00e0cies,&lt;br&gt;\n    {{ config('app.name') }}\n@endcomponent\n</code></pre>"},{"location":"05seguretat_Laravel.html#6-correus-en-cua-asincrons","title":"6\ufe0f\u20e3 Correus en cua (as\u00edncrons)","text":"<p>Per millorar el rendiment: <pre><code>Mail::to('usuari@example.com')-&gt;queue(new WelcomeMail($user));\n</code></pre></p> <p>Assegura't que el sistema de cues estiga configurat al fitxer <code>.env</code>: <pre><code>QUEUE_CONNECTION=database\n</code></pre></p>"},{"location":"05seguretat_Laravel.html#gestio-de-fitxers-en-laravel-12","title":"\ud83d\uddc2\ufe0f Gesti\u00f3 de Fitxers en Laravel 12","text":"<p>Laravel proporciona una API senzilla per treballar amb fitxers i directoris a trav\u00e9s del component <code>Storage</code>.</p>"},{"location":"05seguretat_Laravel.html#1-configuracio-del-sistema-de-fitxers","title":"1\ufe0f\u20e3 Configuraci\u00f3 del Sistema de Fitxers","text":"<p>Els \u201cdiscs\u201d es configuren al fitxer <code>config/filesystems.php</code>.</p>"},{"location":"05seguretat_Laravel.html#tipus-comuns","title":"Tipus comuns:","text":"<ul> <li><code>local</code>: emmagatzematge intern (no accessible p\u00fablicament)</li> <li><code>public</code>: fitxers accessibles via navegador</li> <li><code>s3</code>: Amazon S3 o altres serveis compatibles</li> </ul>"},{"location":"05seguretat_Laravel.html#env","title":"<code>.env</code>:","text":"<pre><code>FILESYSTEM_DISK=local\nAWS_ACCESS_KEY_ID=el_teu_access_key\nAWS_SECRET_ACCESS_KEY=el_teu_secret_key\nAWS_DEFAULT_REGION=us-east-1\nAWS_BUCKET=el_teu_bucket\n</code></pre>"},{"location":"05seguretat_Laravel.html#2-operacions-basiques","title":"2\ufe0f\u20e3 Operacions B\u00e0siques","text":"<p>Guardar fitxers</p> <pre><code>use Illuminate\\Support\\Facades\\Storage;\n\n// Text\nStorage::put('documents/info.txt', 'Contingut');\n\n// Arxiu pujat\nStorage::putFile('uploads', $request-&gt;file('document'));\n\n// Amb nom personalitzat\nStorage::putFileAs('uploads', $request-&gt;file('document'), 'factura.pdf');\n</code></pre> <p>*Llegir i verificar fitxers</p> <pre><code>// Obtenir el contingut d'un fitxer\n$content = Storage::get('documents/file.txt');\n\n// Verificar si un fitxer existeix\nif (Storage::exists('documents/file.txt')) {\n    // Fitxer existeix\n}\n</code></pre> <p>Eliminar Fitxers <pre><code>// Eliminar un fitxer\nStorage::delete('documents/file.txt');\n\n// Eliminar m\u00faltiples fitxers\nStorage::delete(['file1.txt', 'file2.txt']);\n</code></pre></p> <p>Llistar Fitxers i carpetes</p> <pre><code>// Llistar tots els fitxers d'un directori\n$files = Storage::files('documents');\n\n// Llistar fitxers recursivament\n$allFiles = Storage::allFiles('documents');\n\n// Llistar carpetes\n$directories = Storage::directories('documents');\n\n// Llistar carpetes recursivament\n$allDirectories = Storage::allDirectories('documents');\n</code></pre>"},{"location":"05seguretat_Laravel.html#3-fitxers-publics","title":"3\ufe0f\u20e3 Fitxers P\u00fablics","text":"<p>Per servir fitxers p\u00fablicament, utilitza el disc public i crea un enlla\u00e7 simb\u00f2lic: <pre><code>php artisan storage:link\n</code></pre></p> <p>Obtenir una URL P\u00fablica</p> <pre><code>$url = Storage::url('documents/file.txt'); // Genera una URL p\u00fablica\n</code></pre>"},{"location":"05seguretat_Laravel.html#4-amazon-s3","title":"4\ufe0f\u20e3 Amazon S3","text":"<p>Inclou les credencials d'Amazon S3 al fitxer <code>.env</code>: <pre><code>AWS_ACCESS_KEY_ID=el_teu_access_key\nAWS_SECRET_ACCESS_KEY=el_teu_secret_key\nAWS_DEFAULT_REGION=us-east-1\nAWS_BUCKET=el_teu_bucket\n</code></pre></p> <p>Exemple <pre><code>use Illuminate\\Support\\Facades\\Storage;\n\n// Guardar un fitxer a S3\nStorage::disk('s3')-&gt;put('documents/file.txt', 'Contingut');\n\n// Obtenir una URL\n$url = Storage::disk('s3')-&gt;url('documents/file.txt');\n</code></pre></p>"},{"location":"05seguretat_Laravel.html#testing-en-laravel-12","title":"\u2705 Testing en Laravel 12","text":"<p>Laravel inclou una infraestructura de proves robusta basada en PHPUnit, que permet realitzar proves unit\u00e0ries, d'integraci\u00f3 i de funcionalitat HTTP.</p>"},{"location":"05seguretat_Laravel.html#tipus-de-proves","title":"\ud83e\uddea Tipus de proves","text":"<ul> <li> <p>Proves Unit\u00e0ries : Validen la l\u00f2gica d\u2019un component a\u00efllat (model, servei, etc.).</p> </li> <li> <p>Proves de Funcionalitat (Feature Tests) : Simulen sol\u00b7licituds HTTP completes i proven controladors, middleware, i rutes.</p> </li> <li> <p>Proves de Base de Dades: Verifiquen la persist\u00e8ncia i integritat de les dades (amb <code>RefreshDatabase</code> o <code>DatabaseTransactions</code>).</p> </li> <li> <p>Proves de Navegaci\u00f3 amb Dusk: Permeten interactuar amb l\u2019aplicaci\u00f3 mitjan\u00e7ant un navegador real o virtual.</p> </li> </ul>"},{"location":"05seguretat_Laravel.html#configuracio","title":"\u2699\ufe0f Configuraci\u00f3","text":""},{"location":"05seguretat_Laravel.html#envtesting","title":"<code>.env.testing</code>","text":"<p>Defineix la configuraci\u00f3 per a l\u2019entorn de proves:</p> <p><pre><code>APP_ENV=testing\nDB_CONNECTION=sqlite\nDB_DATABASE=:memory:\n</code></pre> S\u2019utilitza autom\u00e0ticament en executar php artisan test.</p>"},{"location":"05seguretat_Laravel.html#crear-proves","title":"\u270f\ufe0f Crear proves","text":"<p>Per generar una prova: <pre><code>php artisan make:test EquipServiceTest         # Prova unit\u00e0ria\nphp artisan make:test EquipCrudTest --unit      # Prova unit\u00e0ria (opci\u00f3 expl\u00edcita)\nphp artisan make:test UserFeatureTest           # Prova de feature\n</code></pre></p> <p>Exemple de Prova feature amb Validaci\u00f3 i Autenticaci\u00f3 </p> <pre><code>namespace Tests\\Feature;\n\nuse Tests\\TestCase;\nuse App\\Models\\User;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass EquipFeatureTest extends TestCase\n{\n    use RefreshDatabase;\n\n    public function test_creacio_equip_requereix_autenticacio_i_valida()\n    {\n        $user = User::factory()-&gt;create();\n\n        // Prova redirecci\u00f3 sense login\n        $this-&gt;get(route('equips.create'))\n             -&gt;assertRedirect(route('login'));\n\n        // Prova validaci\u00f3 inv\u00e0lida\n        $this-&gt;actingAs($user)\n             -&gt;post(route('equips.store'), [])\n             -&gt;assertSessionHasErrors(['nom', 'categoria']);\n\n        // Prova validaci\u00f3 v\u00e0lida\n        $data = ['nom' =&gt; 'Nou Equip', 'categoria' =&gt; 'Base'];\n        $this-&gt;actingAs($user)\n             -&gt;post(route('equips.store'), $data)\n             -&gt;assertRedirect(route('equips.index'))\n             -&gt;assertSessionHas('success'); // si s\u2019usa missatge flash\n    }\n}\n</code></pre>"},{"location":"05seguretat_Laravel.html#proves-de-base-de-dades","title":"Proves de Base de Dades","text":""},{"location":"05seguretat_Laravel.html#migracions","title":"Migracions","text":"<p>Utilitza el trait <code>RefreshDatabase</code> per executar les migracions abans de cada prova:</p> <p>Exemple de CRUD complet amb Base de Dades <pre><code>namespace Tests\\Feature;\n\nuse Tests\\TestCase;\nuse App\\Models\\User;\nuse App\\Models\\Equip;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass EquipCrudTest extends TestCase\n{\n    use RefreshDatabase;\n\n    public function test_crud_complet_d_equip()\n    {\n        $user = User::factory()-&gt;create();\n        $this-&gt;actingAs($user);\n\n        // CREATE\n        $equip = Equip::factory()-&gt;create(['nom' =&gt; 'Equip A']);\n        $this-&gt;assertDatabaseHas('equips', ['nom' =&gt; 'Equip A']);\n\n        // UPDATE\n        $equip-&gt;update(['nom' =&gt; 'Equip B']);\n        $this-&gt;assertDatabaseHas('equips', ['nom' =&gt; 'Equip B']);\n\n        // DELETE\n        $equip-&gt;delete();\n        $this-&gt;assertDatabaseMissing('equips', ['nom' =&gt; 'Equip B']);\n    }\n}\n</code></pre></p> <p>Exemple de prova unit\u00e0ria amb Service o Repository <pre><code>namespace Tests\\Unit;\n\nuse Tests\\TestCase;\nuse App\\Models\\Estadi;\nuse App\\Services\\EquipService;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass EquipServiceTest extends TestCase\n{\n    use RefreshDatabase;\n\n    public function test_service_crea_equip_correctament()\n    {\n        $estadi = Estadi::factory()-&gt;create();\n        $service = new EquipService();\n        $equip = $service-&gt;create([\n            'nom' =&gt; 'Val\u00e8ncia CF',\n            'categoria' =&gt; 'Pro',\n            'estadi_id' =&gt; $estadi-&gt;id,\n        ]);\n\n        $this-&gt;assertDatabaseHas('equips', ['nom' =&gt; 'Val\u00e8ncia CF']);\n        $this-&gt;assertEquals('Val\u00e8ncia CF', $equip-&gt;nom);\n    }\n}\n</code></pre></p>"},{"location":"05seguretat_Laravel.html#bones-practiques","title":"Bones pr\u00e0ctiques","text":"<ul> <li>Refactoritzar el codi amb Service, Repository, etc.</li> <li>Usar factories per crear dades de prova.</li> <li>Fer proves independents i narratives (test-first sempre que siga possible).</li> <li>Provar estats de sessi\u00f3, permisos i policies.</li> <li>Executar proves en paral\u00b7lel si ho permet la m\u00e0quina (php artisan test --parallel).</li> </ul>"},{"location":"05seguretat_Laravel.html#laravel-livewire-3-desenvolupament-dinterficies-reactives-amb-php","title":"\ud83c\udf00 Laravel Livewire 3 \u2013 Desenvolupament d\u2019interf\u00edcies reactives amb PHP","text":"<p>Livewire 3 \u00e9s una llibreria per Laravel que permet desenvolupar components interactius i reactius directament amb PHP, sense necessitat d'escriure JavaScript.</p>"},{"location":"05seguretat_Laravel.html#1-installacio-i-configuracio-basica","title":"\u2705 1. Instal\u00b7laci\u00f3 i configuraci\u00f3 b\u00e0sica","text":"<pre><code>composer require livewire/livewire\n</code></pre> <p>Inclou els scripts de Livewire en les teues vistes Blade: <pre><code>@livewireStyles\n@livewireScripts\n</code></pre></p> <p>Opcional per usar vite (Laravel 12):</p> <pre><code>php artisan livewire:configure-vite\n</code></pre>"},{"location":"05seguretat_Laravel.html#2-crear-components","title":"\ud83e\uddf1 2. Crear components","text":"<p>Generar un Component</p> <pre><code>php artisan make:livewire HelloWorld\n</code></pre> <p>Aix\u00f2 genera: - Un fitxer de classe PHP: <code>app/Livewire/HelloWorld.php</code> - Una plantilla Blade: <code>resources/views/livewire/hello-world.blade.php</code></p> <p>Exemple de Component</p> <p>app/Livewire/HelloWorld.php <pre><code>namespace App\\Livewire;\n\nuse Livewire\\Component;\n\nclass HelloWorld extends Component\n{\n    public $message = \"Hola, m\u00f3n!\";\n\n    public function render()\n    {\n        return view('livewire.hello-world');\n    }\n}\n</code></pre></p> <p>resources/views/livewire/hello-world.blade.php <pre><code>&lt;div&gt;\n    &lt;h1&gt;{{ $message }}&lt;/h1&gt;\n&lt;/div&gt;\n</code></pre></p> <p>Inserir component en una vista <pre><code>&lt;livewire:hello-world /&gt;\n</code></pre></p>"},{"location":"05seguretat_Laravel.html#3-propietats-reactives-i-accions","title":"\ud83d\udd01 3. Propietats reactives i accions","text":""},{"location":"05seguretat_Laravel.html#propietats-i-bindings","title":"Propietats i bindings","text":"<p>Les propietats de la classe PHP es poden vincular directament als camps d'un formulari HTML:</p> <pre><code>class Counter extends Component\n{\n    //propietat\n    public $count = 0;\n\n    //m\u00e8tode del component\n    public function increment()\n    {\n        $this-&gt;count++;\n    }\n\n    public function render()\n    {\n        return view('livewire.counter');\n    }\n}\n</code></pre> <pre><code>&lt;div&gt;\n    &lt;button wire:click=\"increment\"&gt;+&lt;/button&gt;\n    &lt;h1&gt;{{ $count }}&lt;/h1&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"05seguretat_Laravel.html#4-validacio","title":"\ud83d\udcac 4. Validaci\u00f3","text":"<p>Livewire permet validar dades a mesura que l'usuari interactua amb el formulari:</p> <p>Tradicional</p> <pre><code>protected $rules = [\n'nom' =&gt; 'required|string|min:3',\n];\n\npublic function guardar() {\n$this-&gt;validate();\n}\n```php\n\n**En temps real**\n\n```php\nprotected $rules = ['nom' =&gt; 'required|min:3'];\n\npublic function updated($propertyName)\n{\n    $this-&gt;validateOnly($propertyName);\n}\n</code></pre>"},{"location":"05seguretat_Laravel.html#5-components-amb-formularis","title":"\ud83d\udce6 5. Components amb formularis","text":"<p><pre><code>public $nom, $email;\n\npublic function enviar()\n{\n$this-&gt;validate([\n'nom' =&gt; 'required',\n'email' =&gt; 'required|email',\n]);\n\n// Guardar o enviar dades...\n}\n</code></pre> <pre><code>&lt;form wire:submit.prevent=\"enviar\"&gt;\n    &lt;input type=\"text\" wire:model=\"nom\"&gt;\n    @error('nom') &lt;span&gt;{{ $message }}&lt;/span&gt; @enderror\n\n    &lt;input type=\"email\" wire:model=\"email\"&gt;\n    @error('email') &lt;span&gt;{{ $message }}&lt;/span&gt; @enderror\n\n    &lt;button&gt;Enviar&lt;/button&gt;\n&lt;/form&gt;\n</code></pre></p>"},{"location":"05seguretat_Laravel.html#6-exemple-complet","title":"\ud83e\udde0 6. Exemple complet","text":"<p>contador.php <pre><code>namespace App\\Livewire;\n\nuse Livewire\\Component;\n\nclass Contador extends Component\n{\n    public $valor = 0;\n\n    public function incrementar() { $this-&gt;valor++; }\n\n    public function render() {\n        return view('livewire.contador');\n    }\n}\n</code></pre> contador.blade.php <pre><code>&lt;div&gt;\n    &lt;button wire:click=\"incrementar\"&gt;+&lt;/button&gt;\n    &lt;span&gt;{{ $valor }}&lt;/span&gt;\n&lt;/div&gt;\n</code></pre></p>"},{"location":"05seguretat_Laravel.html#7-altres-funcionalitats-utils","title":"7. Altres funcionalitats \u00fatils","text":"<p>Hooks</p> <ul> <li>mount(): s\u2019executa en inicialitzar el component.</li> <li>hydrate(): despr\u00e9s de cada request.</li> <li>dehydrate(): abans d\u2019enviar al client.</li> </ul> <p>Flash messages</p> <pre><code>session()-&gt;flash('missatge', 'Guardat!');\n</code></pre> <pre><code>@if (session()-&gt;has('missatge'))\n&lt;div&gt;{{ session('missatge') }}&lt;/div&gt;\n@endif\n</code></pre>"},{"location":"05seguretat_Laravel.html#8-amb-autenticacio-i-autoritzacio","title":"\ud83d\udd10 8. Amb autenticaci\u00f3 i autoritzaci\u00f3","text":"<pre><code>public function mount()\n{\n    if (!auth()-&gt;check()) {\n        abort(403);\n    }\n}\n</code></pre>"},{"location":"05seguretat_Laravel.html#9-proves-de-components-livewire","title":"\ud83e\uddea 9. Proves de components Livewire","text":"<pre><code>namespace Tests\\Feature\\Livewire;\n\nuse Tests\\TestCase;\nuse Livewire\\Livewire;\nuse App\\Livewire\\HistorialPartits;\nuse App\\Models\\Partit;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass HistorialPartitsTest extends TestCase\n{\n    use RefreshDatabase;\n\n    public function test_filtre_livewire_mostra_correctament()\n    {\n        Partit::factory()-&gt;create(['equip_local' =&gt; 'A']);\n        Partit::factory()-&gt;create(['equip_local' =&gt; 'B']);\n\n        Livewire::test(HistorialPartits::class)\n            -&gt;set('equip', 'A')\n            -&gt;call('filtrar')\n            -&gt;assertSee('A')\n            -&gt;assertDontSee('B');\n    }\n}\n</code></pre>"},{"location":"05seguretat_Laravel.html#10-avantatges-de-livewire","title":"\ud83e\udde9 10. Avantatges de Livewire","text":"<ul> <li>Sense JavaScript</li> <li>Integraci\u00f3 directa amb Laravel</li> <li>Ideal per a CRUD i components de UI din\u00e0mics</li> <li>Compatible amb Alpine.js</li> </ul>"},{"location":"05seguretat_Laravel.html#exercicis","title":"Exercicis","text":""},{"location":"05seguretat_Laravel.html#exercici-guiat-reestructurar-projecte-futbol-femeni-amb-bd-repository-service","title":"\ud83c\udfdf\ufe0f Exercici guiat: Reestructurar projecte Futbol Femen\u00ed amb BD + Repository + Service","text":""},{"location":"05seguretat_Laravel.html#objectiu","title":"\ud83c\udfaf Objectiu","text":"<p>Reestructurar l\u2019aplicaci\u00f3 de futbol femen\u00ed (feta sense persist\u00e8ncia) cap a una arquitectura escalable amb:</p> <ul> <li>Validaci\u00f3 amb FormRequest</li> <li>Autenticaci\u00f3</li> </ul> <p>c</p>"},{"location":"05seguretat_Laravel.html#1-afegir-un-escut-a-lequip-branca-escut","title":"1.  \ud83d\udee1\ufe0f Afegir un escut a l'equip  (Branca escut)","text":"<p>Crear una migraci\u00f3 per afegir un camp <code>escut</code> a la taula <code>equips</code></p> <pre><code>./vendor/bin/sail artisan make:migration add_escut_to_equips_table\n</code></pre> <p>Modificar la migraci\u00f3 <code>add_escut_to_equips_table</code></p> <p>Aplicar la migraci\u00f3</p> <pre><code>./vendor/bin/sail artisan migrate\n</code></pre> <p>Modificar el model <code>Equip</code> per incloure el camp <code>escut</code></p> <pre><code>protected $fillable = ['nom', 'estadi_id', 'titols', 'escut'];\n</code></pre> <p>Modificar la vista <code>equips.create</code> per incloure un camp d'arxiu per pujar l'escut de l'equip i incloure enctype=\"multipart/form-data\" al  formulari</p> <pre><code>&lt;form action=\"{{ route('equips.store') }}\" method=\"POST\" enctype=\"multipart/form-data\"&gt;\n\n&lt;div class=\"mb-4\"&gt;\n    &lt;label for=\"escut\" class=\"block text-sm font-medium text-gray-700 mb-1\"&gt;Escut:&lt;/label&gt;\n    &lt;input type=\"file\" name=\"escut\" id=\"escut\"\n        class=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500\"&gt;\n&lt;/div&gt;\n</code></pre> <p>**Crear la  vista <code>equips.edit</code> **</p> <p>Crear un enlla\u00e7 simb\u00f2lic a la carpeta storage</p> <p><pre><code>./vendor/bin/sail artisan storage:link\n</code></pre> Modificar el controlador per passar el fitxer al servei</p> <p>Actualitzar les validacions per incorporar el camp escut Actualitzar el m\u00e8tode store,update i destroy del servei</p> <p>Modificat el component de la vista <code>equips.show</code> per mostrar l'escut de l'equip</p>"},{"location":"05seguretat_Laravel.html#2-configurar-lautenticacio-amb-laravel-breeze","title":"\ud83d\udd11 2. Configurar l'autenticaci\u00f3 amb Laravel Breeze","text":"<ol> <li>Canviar el nom del fitxer app.blade.php de la carpeta resources/views/layouts a equip.blade.php.</li> <li>Guarda les rutes de la Guia d'Equips de Futbol Femen\u00ed en algun fitxer per utilitzar despr\u00e9s.</li> <li>Instal\u00b7la Laravel Breeze:</li> </ol> <p><pre><code>composer require laravel/breeze --dev\nphp artisan breeze:install\nnpm install &amp;&amp; npm run build\nphp artisan migrate\n</code></pre> Triarem blade amb alpine i PHPUNIT</p> <ol> <li>Canviar totes les vistes per a que extenguen de layouts.equip</li> </ol>"},{"location":"05seguretat_Laravel.html#3-afegir-els-rols-al-sistema","title":"\ud83d\udc65 3.  Afegir els rols al sistema","text":"<p>Crea una nova migraci\u00f3 per afegir el camp <code>role</code> a usuaris</p> <p><pre><code>php artisan make:migration add_role_to_users_table --table=users\n</code></pre>    Afegeix el camp i aplica-la:    <pre><code>Schema::table('users', function (Blueprint $table) {\n    $table-&gt;string('role')-&gt;default('arbitre');\n});\n</code></pre>    Aplica la migraci\u00f3:    <pre><code>php artisan migrate\n</code></pre></p> <p>Crea el seeders d'usuaris i crea un usuari administrador</p> <pre><code> php artisan make:seeder UserSeeder\n</code></pre> <p>Executa el seeder havent canviat DatabaseSeeder</p>"},{"location":"05seguretat_Laravel.html#3-middleware-per-a-permisos-de-rol-i-manager","title":"\ud83d\udeaa3. Middleware per a permisos de rol i manager","text":"<ul> <li>Genera el middleware <pre><code>php artisan make:middleware RoleMiddleware\n</code></pre></li> <li> <p>Defineix el control dels rols en el metode handle</p> </li> <li> <p>Aplica  Middleware a rutes fent que  les rutes per tal que els equips,estadis soles puguen modificar-los els administradors. </p> </li> </ul>"},{"location":"05seguretat_Laravel.html#4-associar-managers-a-equips","title":"\ud83e\uddd1\u200d\ud83d\udcbc\ud83d\udc65 4. Associar managers a equips","text":"<p>Crea una migraci\u00f3 nova <pre><code>   php artisan make:migration add_team_id_to_users_table --table=users\n</code></pre></p> <p>Afegeix el camp <code>team_id</code>  i aplica la migraci\u00f3 <pre><code>php artisan migrate\n</code></pre></p> <p>Assigna equips als managers, creant u manager per equip i assigna-li </p> <p>EquipsSeeder </p> <p>Defineix la relaci\u00f3 al model <code>User</code></p> <p>Defineix la relaci\u00f3 inversa al model <code>Equip</code></p>"},{"location":"05seguretat_Laravel.html#5-adaptar-les-vistes-al-component-layout-de-breeze","title":"\ud83e\udde9\ud83d\uddbc\ufe0f 5. Adaptar les vistes al component layout de Breeze","text":"<ul> <li> <p>Modificar <code>layouts/equip.blade.php</code> per a utilitzar el layout de Breeze.</p> </li> <li> <p>Modificar el layout de Breeze per a incloure el men\u00fa de navegaci\u00f3 en <code>layouts\\navigation.blade.php</code> .</p> </li> <li> <p>Modificar el menu de navegaci\u00f2 <code>partials/menu.blade.php</code> per acoplar-se. </p> </li> </ul>"},{"location":"05seguretat_Laravel.html#6-el-manager-soles-puga-editar-el-seu-equip","title":"\ud83e\uddd1\u200d\ud83d\udcbc\u270f\ufe0f\ud83d\udd12\ud83d\udc65 6. El manager soles puga editar el seu equip","text":"<ul> <li>Crea la Pol\u00edtica</li> </ul> <pre><code>php artisan make:policy EquipPolicy --model=Equip\n</code></pre> <ul> <li> <p>Defineix la L\u00f2gica a la Pol\u00edtica al fitxer generat <code>app/Policies/EquipPolicy.php</code> per tal d'afegir les regles i permisos.</p> </li> <li> <p>Defineix les regles d'autoritzaci\u00f3' en <code>StoreEquipRequest.php</code>.</p> </li> <li> <p>Fes el mateix amb  <code>UpdateEquipRequest.php</code></p> </li> <li> <p>Permet als manager accedir a les rutes per poder modificar.</p> </li> <li> <p>Utilitza  la Pol\u00edtica al Controlador  <code>EquipController</code>, utilitzant el m\u00e8tode <code>authorize</code> per aplicar la pol\u00edtica abans de permetre accions.</p> </li> <li> <p>Utilitza  les directives <code>@can</code> per verificar els permisos a les vistes <code>equis/index.blade.php</code>.</p> </li> </ul>"},{"location":"05seguretat_Laravel.html#7-internacionalitzacio","title":"\ud83c\udf0d 7. Internacionalitzaci\u00f3","text":""},{"location":"05seguretat_Laravel.html#publicar-els-fitxers-de-llenguatge","title":"Publicar els Fitxers de Llenguatge","text":"<pre><code>php artisan lang:publish\ncomposer require laravel-lang/lang --dev\nphp artisan lang:add es\nphp artisan lang:add ca\n</code></pre>"},{"location":"05seguretat_Laravel.html#configurar-lidioma-predeterminat","title":"Configurar l'Idioma Predeterminat","text":"<p>Al fitxer <code>.env</code>, ajusta l'opcions <code>locale</code> per establir l'idioma predeterminat:</p> <p><pre><code>APP_LOCALE=ca\nAPP_FALLBACK_LOCALE=en\n</code></pre> Definir les Traduccions</p> <ul> <li>ca.json</li> <li>es.json</li> <li>en.json</li> </ul>"},{"location":"05seguretat_Laravel.html#recuperar-cadenes-de-traduccio","title":"Recuperar Cadenes de Traducci\u00f3","text":"<p>Utilitza la funci\u00f3 <code>__()</code> per obtenir les cadenes tradu\u00efdes en les vistes.</p> <p>Per exemple:  equips/index.blade.php</p>"},{"location":"05seguretat_Laravel.html#canviar-lidioma-dinamicament","title":"Canviar l'Idioma Din\u00e0micament","text":"<p>Crea  una ruta per canviar idioma</p> <p>Crea  un Middleware per aplicar el idioma</p> <p><pre><code>./vendor/bin/sail artisan make:middleware SetLocale\n</code></pre> Defineix el middleware Registra el middleware en bootstrap/app.php Utilitza el layout navigation.blade.php per possar els enlla\u00e7os de canviar d'idioma</p>"},{"location":"05seguretat_Laravel.html#8-proves","title":"8. Proves","text":"<ol> <li>Modifica o crea l'entorn de prova:</li> </ol> <ul> <li>.env.testing</li> <li>php.unit.xml</li> </ul> <ol> <li> <p>Crea els fitxers de proves per al CRUD d'equips: <pre><code>php artisan make:test EquipServiceTest --unit\nphp artisan make:test EquipCrudFeatureTest\nphp artisan make:test EquipRepositoryTest --unit\n</code></pre></p> </li> <li> <p>Modifica  els fixer per tal d'incorporar les proves</p> </li> </ol> <ul> <li><code>EquipServiceTest.php</code></li> <li><code>EquipCrudFeatureTest.php</code></li> <li><code>EquipRepositoryTest.php</code></li> </ul>"},{"location":"05seguretat_Laravel.html#9-generar-un-correu-electronic-amb-la-jornada-actual-partits-programats-i-enviar-lo-als-managers-dels-equips","title":"9. Generar un correu electr\u00f2nic amb la jornada actual (partits programats) i enviar-lo als managers dels equips.","text":""},{"location":"05seguretat_Laravel.html#1-crear-una-comanda-artisan","title":"1. Crear una Comanda Artisan","text":"<pre><code>php artisan make:command EnviarJornadaManagers\n</code></pre> <p>Al fitxer <code>app/Console/Commands/EnviarJornadaManagers.php</code>:</p> <pre><code>namespace App\\Console\\Commands;\n\nuse App\\Models\\User;\nuse Carbon\\Carbon;\nuse Illuminate\\Console\\Command;\nuse Illuminate\\Support\\Facades\\Mail;\nuse App\\Models\\Partit;\nuse App\\Mail\\JornadaMail;\n\nclass EnviarJornadaManagers extends Command\n{\n    protected $signature = 'jornada:enviar';\n    protected $description = 'Envia la jornada actual als managers';\n\n    public function handle()\n    {\n        $partit = Partit::whereDate('data', '&gt;', Carbon::now()) // Filtra partits posteriors a avui\n            -&gt;orderBy('data', 'asc') // Ordena per la data m\u00e9s propera\n            -&gt;first();\n        $partits = Partit::with(['equipLocal', 'equipVisitant'])-&gt;where('jornada',$partit-&gt;jornada)-&gt;get();\n\n        // L\u00f2gica per obtenir els correus dels managers\n        $managers = User::where('role','manager')-&gt;get();\n\n\n        foreach ($managers as $manager) {\n            Mail::to($manager-&gt;email)-&gt;send(new JornadaMail($partits));\n            $this-&gt;info($manager-&gt;name . ' ha rebut la jornada.');\n\n        }\n\n        $this-&gt;info('La jornada s\\'ha enviat correctament als managers.');\n    }\n}\n\n#### **2. Crear el Mail**\n```bash\nphp artisan make:mail JornadaMail --markdown=emails.jornada\n</code></pre> <p>Al fitxer <code>app/Mail/JornadaMail.php</code>:</p> <pre><code>namespace App\\Mail;\n\nuse Illuminate\\Bus\\Queueable;\nuse Illuminate\\Contracts\\Queue\\ShouldQueue;\nuse Illuminate\\Mail\\Mailable;\nuse Illuminate\\Mail\\Mailables\\Content;\nuse Illuminate\\Queue\\SerializesModels;\n\nclass JornadaMail extends Mailable\n{\n    use Queueable, SerializesModels;\n\n    public $partits;\n\n    public function __construct($partits)\n    {\n        $this-&gt;partits = $partits;\n    }\n\n\n\n    public function content(): Content\n    {\n        return new Content(\n            markdown: 'emails.jornada',\n            with: [\n                'partits' =&gt; $this-&gt;partits,\n            ],\n        );\n    }\n}\n</code></pre>"},{"location":"05seguretat_Laravel.html#3-crear-la-vista-del-correu_1","title":"3. Crear la Vista del Correu","text":"<p>Al fitxer <code>resources/views/emails/jornada.blade.php</code>:</p> <pre><code>&lt;x-mail::message&gt;\n    # Jornada {{ $partits-&gt;first()-&gt;jornada }}\n\n    ## Partits Programats:\n    @foreach($partits as $partit)\n        - **{{ $partit-&gt;equipLocal-&gt;nom }}** vs **{{ $partit-&gt;equipVisitant-&gt;nom }}** ({{ $partit-&gt;data }})\n    @endforeach\n\n    Gr\u00e0cies,\n    **{{ config('app.name') }}**\n&lt;/x-mail::message&gt;\n</code></pre>"},{"location":"05seguretat_Laravel.html#4-efectuar-lenviament","title":"4. Efectuar l'Enviament","text":"<p>Pots enviar els correus manualment executant la comanda:</p> <pre><code>php artisan jornada:enviar\n</code></pre> <p>Pots programar la comanda al <code>Kernel.php</code>:</p> <pre><code>protected function schedule(Schedule $schedule)\n{\n    $schedule-&gt;command('jornada:enviar')-&gt;weeklyOn(1, '8:00');\n}\n</code></pre>"},{"location":"05seguretat_Laravel.html#pas-11-crear-un-component-livewire-per-a-mostrar-un-historic-de-partits","title":"Pas 11. Crear un component livewire per a mostrar un hist\u00f2ric de partits","text":"<ol> <li> <p>Instal\u00b7la Livewire: <pre><code>composer require livewire/livewire\nphp artisan livewire:publish\n</code></pre></p> </li> <li> <p>Afegeix els scripts de Livewire a la plantilla Blade:</p> </li> </ol> <p><pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"{{ str_replace('_', '-', app()-&gt;getLocale()) }}\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n    &lt;meta name=\"csrf-token\" content=\"{{ csrf_token() }}\"&gt;\n\n    &lt;title&gt;{{ config('app.name', 'Laravel') }}&lt;/title&gt;\n\n    &lt;!-- Fonts --&gt;\n    &lt;link rel=\"preconnect\" href=\"https://fonts.bunny.net\"&gt;\n    &lt;link href=\"https://fonts.bunny.net/css?family=figtree:400,500,600&amp;display=swap\" rel=\"stylesheet\" /&gt;\n\n    &lt;!-- Scripts --&gt;\n    @vite(['resources/css/app.css', 'resources/js/app.js'])\n    @livewireStyles\n&lt;/head&gt;\n&lt;body class=\"font-sans antialiased\"&gt;\n&lt;div class=\"min-h-screen bg-gray-100 dark:bg-gray-900\"&gt;\n    @include('layouts.navigation')\n\n    &lt;!-- Page Heading --&gt;\n    @isset($header)\n    &lt;header class=\"bg-white dark:bg-gray-800 shadow\"&gt;\n        &lt;div class=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\"&gt;\n            {{ $header }}\n        &lt;/div&gt;\n    &lt;/header&gt;\n    @endisset\n\n    &lt;!-- Page Content --&gt;\n    &lt;main&gt;\n        {{ $slot }}\n    &lt;/main&gt;\n&lt;/div&gt;\n@livewireScripts\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> 3. Genera el component Livewire: <pre><code> php artisan make:livewire HistorialPartits\n</code></pre></p> <ol> <li>Modifica el component Livewire <code>app/Livewire/HistorialPartits.php</code>: <pre><code>namespace App\\Livewire;\n\nuse App\\Models\\Partit;\nuse Livewire\\Component;\n\nclass HistorialPartits extends Component\n{\n    public $partits;\n    public $equip = '';\n    public $data = '';\n\n    public function mount()\n    {\n        $this-&gt;partits = Partit::with(['equipLocal', 'equipVisitant', 'estadi', 'arbitre'])-&gt;get();\n    }\n\n\n    public function filtrar()\n    {\n        $this-&gt;partits = Partit::with(['equipLocal', 'equipVisitant', 'estadi', 'arbitre'])\n            -&gt;when($this-&gt;equip, function ($query) {\n                $query-&gt;whereHas('equipLocal', fn($q) =&gt; $q-&gt;where('nom', 'like', \"%{$this-&gt;equip}%\"))\n                    -&gt;orWhereHas('equipVisitant', fn($q) =&gt; $q-&gt;where('nom', 'like', \"%{$this-&gt;equip}%\"));\n            })\n            -&gt;when($this-&gt;data, function ($query) {\n                $query-&gt;whereDate('data', $this-&gt;data);\n            })\n            -&gt;get();\n    }\n\n    public function render()\n    {\n        return view('livewire.historial-partits', ['partits' =&gt; $this-&gt;partits]);\n    }\n}\n</code></pre></li> <li>Modifica la vista del component Livewire <code>resources/views/livewire/historial-partits.blade.php</code>: <pre><code>&lt;div&gt;\n    &lt;div class=\"flex space-x-4\"&gt;\n        &lt;input wire:model=\"equip\" type=\"text\" placeholder=\"Cerca equip\" class=\"border px-4 py-2\"&gt;\n        &lt;input wire:model=\"data\" type=\"date\" class=\"border px-4 py-2\"&gt;\n        &lt;button wire:click=\"filtrar\" class=\"bg-blue-500 text-white px-4 py-2\"&gt;Filtrar&lt;/button&gt;\n    &lt;/div&gt;\n\n    &lt;table class=\"table-auto w-full mt-4\"&gt;\n        &lt;thead&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Data&lt;/th&gt;\n            &lt;th&gt;Equip Local&lt;/th&gt;\n            &lt;th&gt;Equip Visitant&lt;/th&gt;\n            &lt;th&gt;Resultat&lt;/th&gt;\n            &lt;th&gt;Estadi&lt;/th&gt;\n            &lt;th&gt;\u00c0rbitre&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n        @foreach($partits as $partit)\n            &lt;tr&gt;\n                &lt;td&gt;{{ $partit-&gt;data }}&lt;/td&gt;\n                &lt;td&gt;{{ $partit-&gt;equipLocal-&gt;nom }}&lt;/td&gt;\n                &lt;td&gt;{{ $partit-&gt;equipVisitant-&gt;nom }}&lt;/td&gt;\n                &lt;td&gt;{{ $partit-&gt;resultat }}&lt;/td&gt;\n                &lt;td&gt;{{ $partit-&gt;estadi-&gt;nom }}&lt;/td&gt;\n                &lt;td&gt;{{ $partit-&gt;arbitre-&gt;name }}&lt;/td&gt;\n            &lt;/tr&gt;\n        @endforeach\n        &lt;/tbody&gt;\n    &lt;/table&gt;\n&lt;/div&gt;\n</code></pre></li> <li>Crea la vista <code>resources/views/partits/historic.blade.php</code>: <pre><code>@extends('layouts.futbolFemeni')\n\n@section('title', __('Hist\u00f2ric de partits' ))\n\n@section('content')\n\n    &lt;!-- Afegim el component Livewire aqu\u00ed --&gt;\n    &lt;div class=\"mt-8\"&gt;\n        @livewire('historial-partits')\n    &lt;/div&gt;\n@endsection\n</code></pre></li> <li>Modifica la ruta <code>routes/web.php</code>: <pre><code>Route::get('/historic', [PartitController::class, 'historic'])-&gt;name('partits.historic');\n</code></pre></li> <li>Modifica el controlador <code>app/Http/Controllers/PartitController.php</code>: <pre><code>public function historic()\n{\n    return view('partits.historic');\n}\n</code></pre></li> <li>Afegix entrada en el men\u00fa <code>resources/views/layouts/navigation.blade.php</code>: <pre><code>&lt;div class=\"hidden space-x-8 sm:-my-px sm:ms-10 sm:flex\"&gt;\n    &lt;x-nav-link :href=\"route('partits.historic')\" :active=\"request()-&gt;routeIs('partits.historic')\"&gt;\n        {{ __('Hist\u00f2ric Partits') }}\n    &lt;/x-nav-link&gt;\n&lt;/div&gt;\n</code></pre></li> </ol>"},{"location":"05seguretat_Laravel.html#exercici-final-guia-de-futbol-femeni-ii","title":"\ud83c\udfc1 Exercici Final: Guia de Futbol Femen\u00ed II","text":""},{"location":"05seguretat_Laravel.html#objectiu_1","title":"\ud83c\udfaf Objectiu","text":"<p>Transformar i ampliar l\u2019aplicaci\u00f3 del projecte anterior per a incorporar:</p> <ul> <li>Validaci\u00f3 robusta amb FormRequest</li> <li>Autenticaci\u00f3 i autoritzaci\u00f3 amb Laravel Breeze i Policies</li> <li>Components visuals, relacions entre models i funcionalitats avan\u00e7ades</li> </ul>"},{"location":"05seguretat_Laravel.html#1-autenticacio-i-restriccions","title":"1. Autenticaci\u00f3 i restriccions","text":"<ul> <li>Laravel Breeze per login, logout</li> <li>Protegeix rutes amb <code>auth</code> i <code>@auth</code> en vistes</li> <li>Policies per controlar:</li> <li>Jugadores: nom\u00e9s el manager del seu equip</li> <li>Partits: nom\u00e9s l\u2019\u00e0rbitre assignat</li> <li>No es permet crear partits manualment</li> </ul>"},{"location":"05seguretat_Laravel.html#2-formularis-amb-formrequest","title":"2. Formularis amb FormRequest","text":"<ul> <li>Crea <code>EstadiRequest</code>, <code>JugadoraRequest</code>, <code>PartitRequest</code></li> <li>Valida:</li> <li><code>data_naixement</code> m\u00ednima de 16 anys</li> <li><code>foto</code> (tipus .png i mida m\u00e0xima)</li> <li><code>dorsal</code>, <code>capacitat</code>, <code>gols</code> (num\u00e8rics positius)</li> <li>Usa <code>authorize()</code> per controlar acc\u00e9s a modificaci\u00f3 segons rol</li> </ul>"},{"location":"05seguretat_Laravel.html#3-classificacio-en-temps-real-amb-livewire","title":"3. Classificaci\u00f3 en temps real amb Livewire","text":"<ul> <li>Taula amb:</li> <li>Nom de l\u2019equip, punts, gols a favor/en contra, difer\u00e8ncia, etc.</li> <li>Component Livewire que es refresca autom\u00e0ticament</li> <li>Ordenaci\u00f3 per punts i difer\u00e8ncia de gols</li> </ul>"},{"location":"05seguretat_Laravel.html#4-proves","title":"4. Proves","text":"<ul> <li>Crea proves per:</li> <li>EstadiController</li> <li>JugadoraController</li> <li>PartitController</li> <li>FormRequest i Policies</li> </ul>"},{"location":"05seguretat_Laravel.html#5-correu-a-arbitres","title":"5. Correu a \u00e0rbitres","text":"<ul> <li>Enviar correu personalitzat a cada \u00e0rbitre amb:</li> <li>Llistat de partits en qu\u00e8 arbitrar\u00e0</li> <li>Format HTML amigable</li> </ul>"},{"location":"06Nodejs.html","title":"6.- Desenvolupament d'APIs REST amb Node.js","text":""},{"location":"06Nodejs.html#sa-61-introduccio-i-conceptes-previs","title":"SA 6.1 \u2013 Introducci\u00f3 i conceptes previs","text":""},{"location":"06Nodejs.html#1-que-es-nodejs","title":"\ud83e\udde0 1. Qu\u00e8 \u00e9s Node.js?","text":"<p>Node.js \u00e9s un entorn d\u2019execuci\u00f3 de JavaScript fora del navegador. En lloc d\u2019executar-se al client (com en aplicacions web tradicionals), s\u2019executa al servidor, permetent-nos construir aplicacions backend, APIs, serveis web i molt m\u00e9s utilitzant el mateix llenguatge que al frontend: JavaScript.</p> <p>\ud83d\udca1 Per qu\u00e8 \u00e9s interessant</p> <ul> <li>Permet treballar amb un \u00fanic llenguatge tant al client com al servidor.</li> <li>\u00c9s lleuger, r\u00e0pid i molt eficient gr\u00e0cies al motor V8 de Chrome.</li> <li>T\u00e9 un ecosistema immens de paquets a trav\u00e9s de <code>npm</code>.</li> <li>\u00c9s ideal per crear APIs REST, microserveis o aplicacions temps real.</li> </ul> <p>\ud83d\udce6 Exemple b\u00e0sic: <pre><code>// hola.js\nconsole.log('Hola m\u00f3n des de Node.js!');\n</code></pre> Executa\u2019l amb: <pre><code>node hola.js\n</code></pre></p>"},{"location":"06Nodejs.html#2-que-es-express","title":"\ud83d\ude80 2. Qu\u00e8 \u00e9s Express?","text":"<p>Express \u00e9s un framework minimalista per a Node.js que simplifica molt la creaci\u00f3 de servidors web i APIs. Permet definir rutes HTTP, gestionar par\u00e0metres, utilitzar middlewares, enviar respostes i molt m\u00e9s amb molt poques l\u00ednies de codi.</p> <p>\u2705 Funcions clau d\u2019Express:</p> <ul> <li>Crear rutes per als diferents recursos (<code>/users</code>, <code>/products</code>, etc.)</li> <li>Gestionar peticions HTTP (<code>GET</code>, <code>POST</code>, <code>PUT</code>, <code>DELETE</code>, \u2026)</li> <li>Analitzar dades del cos de la petici\u00f3 (<code>req.body</code>)</li> <li>Afegir funcionalitats amb middlewares (validaci\u00f3, logs, errors\u2026)</li> <li>Organitzar l\u00f2gica del servidor de manera clara i escalable</li> </ul> <p>\ud83d\udce6 Exemple m\u00ednim d\u2019un servidor Express:</p> <pre><code>import express from 'express';\n\nconst app = express();\nconst PORT = 3000;\n\napp.get('/', (req, res) =&gt; {\n  res.send('Hola m\u00f3n amb Express!');\n});\n\napp.listen(PORT, () =&gt; {\n  console.log(`Servidor escoltant a http://localhost:${PORT}`);\n});\n</code></pre>"},{"location":"06Nodejs.html#3-que-es-una-api","title":"\ud83c\udf10 3. Qu\u00e8 \u00e9s una API?","text":"<p>Una API (Application Programming Interface) \u00e9s un conjunt de regles i punts d\u2019entrada que permeten que un programa puga comunicar-se amb un altre. En el context web, una API REST \u00e9s un servei que exposa dades o funcionalitats a trav\u00e9s del protocol HTTP.</p> <p>Per exemple, una API de productes pot oferir endpoints com:</p> M\u00e8tode Endpoint Descripci\u00f3 GET <code>/api/v1/products</code> Obt\u00e9 tots els productes GET <code>/api/v1/products/:id</code> Obt\u00e9 un producte per ID POST <code>/api/v1/products</code> Crea un nou producte PUT <code>/api/v1/products/:id</code> Actualitza un producte existent DELETE <code>/api/v1/products/:id</code> Elimina un producte <p>\ud83d\udccc Una API RESTful t\u00e9 unes caracter\u00edstiques concretes:</p> <ul> <li>Usa els m\u00e8todes HTTP correctament (<code>GET</code>, <code>POST</code>, <code>PUT</code>, <code>DELETE</code>, <code>PATCH</code>\u2026)</li> <li>Utilitza URLs clares i orientades a recursos (<code>/users</code>, <code>/orders</code>, <code>/products</code>)</li> <li>Retorna dades en format est\u00e0ndard (normalment <code>JSON</code>)</li> <li>Fa \u00fas dels codis d\u2019estat HTTP (<code>200</code>, <code>201</code>, <code>404</code>, <code>422</code>, <code>500</code>\u2026)</li> </ul>"},{"location":"06Nodejs.html#4-arquitectura-i-estructura-dun-projecte-api","title":"\ud83c\udfd7\ufe0f 4. Arquitectura i estructura d\u2019un projecte API","text":"<p>Una API professional sol tindre una estructura organitzada que facilite el manteniment i l\u2019escalabilitat:</p> <pre><code>api-inventari/\n\u251c\u2500 package.json\n\u251c\u2500 .env\n\u251c\u2500 src/\n\u2502  \u251c\u2500 server.js          # Punt d'entrada: arranca el servidor\n\u2502  \u251c\u2500 app.js             # Configura Express i middlewares\n\u2502  \u251c\u2500 routes/            # Definici\u00f3 de rutes (endpoints)\n\u2502  \u251c\u2500 controllers/       # L\u00f2gica de negoci per a cada ruta\n\u2502  \u251c\u2500 models/            # Definici\u00f3 dels esquemes de dades (Mongo, etc.)\n\u2502  \u251c\u2500 middlewares/       # Validaci\u00f3, errors, autenticaci\u00f3...\n\u2502  \u251c\u2500 validation/        # Regles de validaci\u00f3 d\u2019entrada\n\u2502  \u2514\u2500 lib/               # Connexi\u00f3 a BD i utilitats\n\u2514\u2500 openapi.json          # Especificaci\u00f3 Swagger\n</code></pre> <p>\ud83d\udca1 Avantatge d\u2019aquesta estructura:</p> <ul> <li>Separa clarament responsabilitats  </li> <li>Facilita el testing i el manteniment  </li> <li>Permet escalar el projecte f\u00e0cilment</li> </ul>"},{"location":"06Nodejs.html#5-flux-de-treball-duna-api","title":"\ud83d\udd27 5. Flux de treball d\u2019una API","text":"<p>Quan un client (p. ex. una aplicaci\u00f3 web o m\u00f2bil) fa una petici\u00f3 a l\u2019API:</p> <ol> <li>\ud83d\udef0\ufe0f El client envia una petici\u00f3 HTTP (<code>GET</code>, <code>POST</code>, etc.) a un endpoint.</li> <li>\ud83d\udcec El servidor Express rep la petici\u00f3 i comprova si la ruta existeix.</li> <li>\ud83e\uddf0 Els middlewares processen la petici\u00f3 (validaci\u00f3, autenticaci\u00f3...).</li> <li>\ud83e\udde0 El controlador executa la l\u00f2gica (consultar BD, crear recurs\u2026).</li> <li>\ud83d\udce6 El model interactua amb la base de dades si cal.</li> <li>\ud83d\udce4 El servidor retorna una resposta JSON amb un codi d\u2019estat adequat.</li> </ol> <p>Exemple de resposta:</p> <pre><code>{\n  \"id\": \"64d0c6f5b2e4f1\",\n  \"name\": \"Caf\u00e8 1kg\",\n  \"price\": 12.50,\n  \"stock\": 50,\n  \"active\": true\n}\n</code></pre>"},{"location":"06Nodejs.html#6-eines-utils-per-al-desenvolupament-dapis","title":"\ud83d\udee0\ufe0f 6. Eines \u00fatils per al desenvolupament d\u2019APIs","text":"<ul> <li>Postman / Thunder Client \u2192 per provar endpoints manualment  </li> <li>MongoDB Compass \u2192 per gestionar dades si uses MongoDB  </li> <li>Swagger UI \u2192 per documentar i provar l\u2019API  </li> <li>ESLint + Prettier \u2192 per mantenir un codi net i consistent  </li> <li>dotenv \u2192 per gestionar variables d\u2019entorn</li> </ul>"},{"location":"06Nodejs.html#bones-practiques-des-del-principi","title":"\ud83d\udca1 Bones pr\u00e0ctiques des del principi","text":"<p>\u2705 Nom de rutes RESTful: utilitza noms de recursos en plural (<code>/products</code>, <code>/users</code>) \u2705 Codis d\u2019estat HTTP: respon amb el codi correcte (<code>201</code> en creaci\u00f3, <code>404</code> si no trobat\u2026) \u2705 JSON net i clar: evita informaci\u00f3 innecess\u00e0ria i segueix un format consistent \u2705 Middleware de validaci\u00f3: mai confies en les dades d\u2019entrada \u2705 Control centralitzat d\u2019errors: un \u00fanic lloc per capturar i gestionar errors</p>"},{"location":"06Nodejs.html#sa-62-creacio-del-projecte-pas-a-pas-api-en-memoria","title":"SA 6.2 Creaci\u00f3 del projecte pas a pas (API en mem\u00f2ria)","text":"<p>En aquesta secci\u00f3 construirem una API REST d\u2019inventari amb Express utilitzant ES Modules (<code>import/export</code>) i emmagatzematge en mem\u00f2ria (sense base de dades). L\u2019objectiu \u00e9s entendre clarament el flux: rutes \u2192 middleware \u2192 controladors \u2192 respostes. A la Secci\u00f3 3 connectarem la mateixa API a MongoDB sense canviar la interf\u00edcie p\u00fablica.</p>"},{"location":"06Nodejs.html#1-inicialitzacio-del-projecte","title":"\u2699\ufe0f 1. Inicialitzaci\u00f3 del projecte","text":"<ol> <li> <p>Crea una carpeta i inicialitza <code>npm</code>:    <pre><code>mkdir api-inventari &amp;&amp; cd api-inventari\nnpm init -y\n</code></pre></p> </li> <li> <p>Edita <code>package.json</code> per activar ES Modules i afegir scripts b\u00e0sics:    <pre><code>{\n  \"name\": \"api-inventari\",\n  \"version\": \"1.0.0\",\n  \"type\": \"module\",\n  \"main\": \"src/server.js\",\n  \"scripts\": {\n    \"dev\": \"node --watch src/server.js\",\n    \"start\": \"node src/server.js\"\n  }\n}\n</code></pre></p> </li> <li> <p>Instala depend\u00e8ncies necess\u00e0ries:    <pre><code>npm i express cors helmet morgan express-validator swagger-ui-express dotenv\nnpm i -D eslint\n</code></pre></p> </li> </ol> <p>\u2139\ufe0f <code>swagger-ui-express</code> el farem servir per mostrar la documentaci\u00f3 en la Secci\u00f3 4 (ara deixarem el \u201cganxo\u201d posat).</p>"},{"location":"06Nodejs.html#2-estructura-del-projecte","title":"\ud83d\uddc2\ufe0f 2. Estructura del projecte","text":"<pre><code>api-inventari/\n\u251c\u2500 package.json\n\u251c\u2500 .env                 # opcional (PORT, etc.)\n\u251c\u2500 openapi.json         # la farem a la Secci\u00f3 4\n\u2514\u2500 src/\n   \u251c\u2500 server.js         # arrencada\n   \u251c\u2500 app.js            # configuraci\u00f3 d\u2019Express i rutes\n   \u251c\u2500 routes/\n   \u2502  \u2514\u2500 products.routes.js\n   \u251c\u2500 controllers/\n   \u2502  \u2514\u2500 products.controller.memory.js\n   \u251c\u2500 middlewares/\n   \u2502  \u251c\u2500 not-found.js\n   \u2502  \u2514\u2500 error-handler.js\n   \u2514\u2500 validation/\n      \u2514\u2500 products.rules.js\n</code></pre>"},{"location":"06Nodejs.html#3-app-i-servidor","title":"\ud83d\ude80 3. App i servidor","text":"<p><code>src/app.js</code> <pre><code>import express from 'express';\nimport morgan from 'morgan';\nimport helmet from 'helmet';\nimport cors from 'cors';\n\nimport productsRouter from './routes/products.routes.js';\nimport notFound from './middlewares/not-found.js';\nimport errorHandler from './middlewares/error-handler.js';\n\nconst app = express();\n\n// Middlewares globals\napp.use(helmet());\napp.use(cors());\napp.use(express.json());\napp.use(morgan('dev'));\n\n// Rutes\napp.use('/api/v1/products', productsRouter);\n\n// 404 i errors\napp.use(notFound);\napp.use(errorHandler);\n\nexport default app;\n</code></pre></p> <p><code>src/server.js</code> <pre><code>import 'dotenv/config';\nimport app from './app.js';\n\nconst PORT = process.env.PORT ?? 3000;\napp.listen(PORT, () =&gt; {\n  console.log(`API Inventari escoltant a http://localhost:${PORT}`);\n});\n</code></pre></p>"},{"location":"06Nodejs.html#4-middlewares-de-404-i-errors","title":"\ud83e\udde9 4. Middlewares de 404 i errors","text":"<p><code>src/middlewares/not-found.js</code> <pre><code>export default function notFound(req, res, next) {\n  res.status(404).json({ error: 'Ruta no trobada' });\n}\n</code></pre></p> <p><code>src/middlewares/error-handler.js</code> <pre><code>export default function errorHandler(err, req, res, next) {\n  console.error(err);\n  const status = err.status ?? 500;\n  res.status(status).json({ error: err.message ?? 'Error intern del servidor' });\n}\n</code></pre></p>"},{"location":"06Nodejs.html#5-validacio-dentrada-amb-express-validator","title":"\ud83e\uddea 5. Validaci\u00f3 d\u2019entrada amb <code>express-validator</code>","text":"<p><code>src/validation/products.rules.js</code> <pre><code>import { body, param, query } from 'express-validator';\n\nexport const listQueryRules = [\n  query('q').optional().isString(),\n  query('active').optional().isBoolean().toBoolean(),\n  query('minPrice').optional().isFloat({ min: 0 }).toFloat(),\n  query('maxPrice').optional().isFloat({ min: 0 }).toFloat()\n];\n\nexport const productCreateRules = [\n  body('name').isString().trim().notEmpty().withMessage('name requerit'),\n  body('sku').optional().isString().trim(),\n  body('price').isFloat({ min: 0 }).withMessage('price &gt;= 0'),\n  body('stock').isInt({ min: 0 }).withMessage('stock &gt;= 0'),\n  body('active').optional().isBoolean()\n];\n\nexport const productUpdateRules = [\n  param('id').isString().notEmpty(),\n  body('name').optional().isString().trim().notEmpty(),\n  body('sku').optional().isString().trim(),\n  body('price').optional().isFloat({ min: 0 }),\n  body('stock').optional().isInt({ min: 0 }),\n  body('active').optional().isBoolean()\n];\n\nexport const productStockRules = [\n  param('id').isString().notEmpty(),\n  body('delta').isInt().withMessage('delta integer (positiu o negatiu)')\n];\n</code></pre></p> <p>\ud83d\udca1 Consell did\u00e0ctic: tracteu la validaci\u00f3 com una \u201cporta d\u2019entrada\u201d a la API. Tot passa per ac\u00ed.</p>"},{"location":"06Nodejs.html#6-rutes-i-crud-en-memoria","title":"\ud83d\udd17 6. Rutes i CRUD en mem\u00f2ria","text":"<p><code>src/routes/products.routes.js</code> <pre><code>import { Router } from 'express';\nimport * as controller from '../controllers/products.controller.memory.js';\nimport { listQueryRules, productCreateRules, productStockRules, productUpdateRules } from '../validation/products.rules.js';\nimport { validationResult } from 'express-validator';\n\nconst router = Router();\n\nconst validate = (rules) =&gt; [\n  ...rules,\n  (req, res, next) =&gt; {\n    const result = validationResult(req);\n    if (!result.isEmpty()) return res.status(422).json({ errors: result.array() });\n    next();\n  }\n];\n\nrouter.get('/', validate(listQueryRules), controller.list);\nrouter.get('/:id', controller.getById);\nrouter.post('/', validate(productCreateRules), controller.create);\nrouter.put('/:id', validate(productUpdateRules), controller.update);\nrouter.patch('/:id/stock', validate(productStockRules), controller.adjustStock);\nrouter.delete('/:id', controller.remove);\n\nexport default router;\n</code></pre></p> <p><code>src/controllers/products.controller.memory.js</code> <pre><code>// Almacenament en mem\u00f2ria (per a aprendre el flux)\nlet PRODUCTS = [];\nlet _id = 1;\n\nexport async function list(req, res, next) {\n  try {\n    const { q, active, minPrice, maxPrice } = req.query;\n    let data = [...PRODUCTS];\n\n    if (q) {\n      const needle = String(q).toLowerCase();\n      data = data.filter(p =&gt; p.name.toLowerCase().includes(needle) || (p.sku ?? '').toLowerCase().includes(needle));\n    }\n    if (typeof active === 'boolean') data = data.filter(p =&gt; p.active === active);\n    if (typeof minPrice === 'number') data = data.filter(p =&gt; p.price &gt;= minPrice);\n    if (typeof maxPrice === 'number') data = data.filter(p =&gt; p.price &lt;= maxPrice);\n\n    res.json(data);\n  } catch (err) { next(err); }\n}\n\nexport async function getById(req, res, next) {\n  try {\n    const product = PRODUCTS.find(p =&gt; String(p.id) === String(req.params.id));\n    if (!product) return res.status(404).json({ error: 'No trobat' });\n    res.json(product);\n  } catch (err) { next(err); }\n}\n\nexport async function create(req, res, next) {\n  try {\n    const { name, sku, price, stock, active = true } = req.body;\n    if (sku &amp;&amp; PRODUCTS.some(p =&gt; p.sku === sku)) return res.status(409).json({ error: 'SKU duplicat' });\n\n    const now = new Date().toISOString();\n    const created = { id: String(_id++), name, sku, price: Number(price), stock: Number(stock), active: Boolean(active), createdAt: now, updatedAt: now };\n    PRODUCTS.push(created);\n    res.status(201).json(created);\n  } catch (err) { next(err); }\n}\n\nexport async function update(req, res, next) {\n  try {\n    const idx = PRODUCTS.findIndex(p =&gt; String(p.id) === String(req.params.id));\n    if (idx === -1) return res.status(404).json({ error: 'No trobat' });\n    const prev = PRODUCTS[idx];\n    const { name = prev.name, sku = prev.sku, price = prev.price, stock = prev.stock, active = prev.active } = req.body ?? {};\n\n    if (sku &amp;&amp; sku !== prev.sku &amp;&amp; PRODUCTS.some(p =&gt; p.sku === sku)) return res.status(409).json({ error: 'SKU duplicat' });\n\n    const updated = { ...prev, name, sku, price: Number(price), stock: Number(stock), active: Boolean(active), updatedAt: new Date().toISOString() };\n    PRODUCTS[idx] = updated;\n    res.json(updated);\n  } catch (err) { next(err); }\n}\n\nexport async function adjustStock(req, res, next) {\n  try {\n    const idx = PRODUCTS.findIndex(p =&gt; String(p.id) === String(req.params.id));\n    if (idx === -1) return res.status(404).json({ error: 'No trobat' });\n    const { delta } = req.body;\n    const prev = PRODUCTS[idx];\n    const newStock = Math.max(0, Number(prev.stock) + Number(delta));\n    const updated = { ...prev, stock: newStock, updatedAt: new Date().toISOString() };\n    PRODUCTS[idx] = updated;\n    res.json(updated);\n  } catch (err) { next(err); }\n}\n\nexport async function remove(req, res, next) {\n  try {\n    const idx = PRODUCTS.findIndex(p =&gt; String(p.id) === String(req.params.id));\n    if (idx === -1) return res.status(404).json({ error: 'No trobat' });\n    PRODUCTS.splice(idx, 1);\n    res.status(204).send();\n  } catch (err) { next(err); }\n}\n</code></pre></p>"},{"location":"06Nodejs.html#7-proves-amb-postman-curl","title":"\ud83d\udd0d 7. Proves amb Postman / curl","text":"<ol> <li> <p>Arranca el servidor:    <pre><code>npm run dev\n</code></pre></p> </li> <li> <p>Crea un producte:    <pre><code>curl -X POST http://localhost:3000/api/v1/products      -H \"Content-Type: application/json\"      -d '{\"name\":\"Tassa cer\u00e0mica\",\"sku\":\"TAS-001\",\"price\":4.5,\"stock\":20}'\n</code></pre></p> </li> <li> <p>Llista productes:    <pre><code>curl http://localhost:3000/api/v1/products\n</code></pre></p> </li> <li> <p>Obt\u00e9 per ID:    <pre><code>curl http://localhost:3000/api/v1/products/1\n</code></pre></p> </li> <li> <p>Actualitza:    <pre><code>curl -X PUT http://localhost:3000/api/v1/products/1      -H \"Content-Type: application/json\"      -d '{\"price\":4.9,\"stock\":30}'\n</code></pre></p> </li> <li> <p>Ajusta stock:    <pre><code>curl -X PATCH http://localhost:3000/api/v1/products/1/stock      -H \"Content-Type: application/json\"      -d '{\"delta\": -2}'\n</code></pre></p> </li> <li> <p>Elimina:    <pre><code>curl -X DELETE http://localhost:3000/api/v1/products/1\n</code></pre></p> </li> </ol>"},{"location":"06Nodejs.html#8-proves-des-del-client-javascript-fetch","title":"\ud83e\uddea 8. Proves des del client (JavaScript <code>fetch()</code>)","text":"<p>Pots provar-ho des de la consola del navegador o en un fitxer <code>.html</code> senzill amb <code>&lt;script type=\"module\"&gt;</code>.</p> <pre><code>&lt;script type=\"module\"&gt;\n  const API = 'http://localhost:3000/api/v1/products';\n\n  // Crear\n  const created = await fetch(API, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ name: 'Caf\u00e8 1kg', sku: 'CAF-1000', price: 12.5, stock: 50 })\n  }).then(r =&gt; r.json());\n  console.log('Creat:', created);\n\n  // Llistar\n  const list = await fetch(API).then(r =&gt; r.json());\n  console.log('Llista:', list);\n\n  // Obtenir per ID\n  const one = await fetch(`${API}/${created.id}`).then(r =&gt; r.json());\n  console.log('Un:', one);\n\n  // Actualitzar\n  const updated = await fetch(`${API}/${created.id}`, {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ price: 13.2, stock: 45 })\n  }).then(r =&gt; r.json());\n  console.log('Actualitzat:', updated);\n\n  // Ajustar stock\n  const stocked = await fetch(`${API}/${created.id}/stock`, {\n    method: 'PATCH',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ delta: -5 })\n  }).then(r =&gt; r.json());\n  console.log('Stock:', stocked);\n\n  // Eliminar\n  const delRes = await fetch(`${API}/${created.id}`, { method: 'DELETE' });\n  console.log('Eliminat, status =', delRes.status);\n&lt;/script&gt;\n</code></pre>"},{"location":"06Nodejs.html#9-extres-utils","title":"\ud83c\udf10\u2194\ufe0f\ud83c\udf10 9. Extres \u00fatils","text":"<ul> <li>CORS: si tens un frontend en un altre port (p. ex. Vite a <code>5173</code>), CORS ja est\u00e0 habilitat globalment amb <code>app.use(cors())</code>. Pots restringir l\u2019origen si cal:   <pre><code>app.use(cors({ origin: ['http://localhost:5173'] }));\n</code></pre></li> <li>L\u00edmit de mida del body (per evitar abusos):   <pre><code>app.use(express.json({ limit: '100kb' }));\n</code></pre></li> <li>Logs: <code>morgan('dev')</code> \u00e9s ideal en dev. En prod, millor logs estructurats (p. ex. pino).</li> </ul>"},{"location":"06Nodejs.html#10-exercicis-per-entregar","title":"\ud83d\udcdd 10. Exercicis (per entregar)","text":"<ol> <li>Paginaci\u00f3 i ordenaci\u00f3 a <code>GET /products</code> (<code>?page=1&amp;limit=10&amp;sort=price,-name</code>).</li> <li>Filtre per rang de stock (<code>stockMin</code>, <code>stockMax</code>).</li> <li>Camp nou <code>category</code> i filtre <code>?category=begudes</code>.</li> <li>Endpoint <code>GET /products/export.csv</code> que retorne un CSV dels productes.</li> <li>Validacions extra (nom m\u00ednim 3 car\u00e0cters, <code>sku</code> regex <code>[A-Z0-9-]+</code>).</li> </ol> <p>\ud83d\udca1 Avaluaci\u00f3 formativa: valorar codi net, \u00fas correcte d\u2019HTTP, validacions, i que no es trenque davant d\u2019inputs erronis.</p>"},{"location":"06Nodejs.html#11-troubleshooting","title":"\ud83d\udc1e\ud83d\udee0\ufe0f 11. Troubleshooting","text":"<ul> <li><code>Error [ERR_MODULE_NOT_FOUND]</code> \u2192 comprova rutes d\u2019import i extensions <code>.js</code> en imports locals.</li> <li><code>Unexpected token 'export'</code> \u2192 falta <code>\"type\": \"module\"</code> al <code>package.json</code>.</li> <li>No parseja JSON \u2192 assegura <code>app.use(express.json())</code> i header <code>Content-Type: application/json</code> a les peticions.</li> <li>CORS \u2192 si el navegador bloqueja, comprova <code>app.use(cors())</code> i l\u2019o</li> </ul>"},{"location":"06Nodejs.html#sa-63-connexio-a-mongodb-mongoose-i-crud-persistent","title":"SA 6.3 Connexi\u00f3 a MongoDB (Mongoose) i CRUD persistent","text":"<p>En aquesta secci\u00f3 convertirem l\u2019API en mem\u00f2ria de la Secci\u00f3 2 en una API amb persist\u00e8ncia real utilitzant MongoDB i Mongoose. Mantindrem els endpoints i el contracte (mateixa interf\u00edcie p\u00fablica), canviant nom\u00e9s la capa de dades.</p>"},{"location":"06Nodejs.html#1-requisits-i-configuracio","title":"\ud83e\uddf0 1. Requisits i configuraci\u00f3","text":""},{"location":"06Nodejs.html#installacio-de-dependencies","title":"Instal\u00b7laci\u00f3 de depend\u00e8ncies","text":"<p>Si no ho has fet encara: <pre><code>npm i mongoose dotenv\n</code></pre></p>"},{"location":"06Nodejs.html#variables-dentorn-env","title":"Variables d\u2019entorn <code>.env</code>","text":"<p>Crea o edita <code>.env</code> a l\u2019arrel del projecte: <pre><code>PORT=3000\nSTORE=mongo\nMONGO_URI=mongodb://127.0.0.1:27017/inventari\n</code></pre></p> <p>\ud83d\udca1 Si utilitzes MongoDB Atlas, reempla\u00e7a <code>MONGO_URI</code> pel connection string del teu cluster.</p>"},{"location":"06Nodejs.html#2-connexio-a-mongodb","title":"\ud83d\udd0c 2. Connexi\u00f3 a MongoDB","text":"<p><code>src/lib/db.js</code> <pre><code>import mongoose from 'mongoose';\n\nexport async function connectDB(uri) {\n  mongoose.set('strictQuery', true);\n  await mongoose.connect(uri, { dbName: 'inventari' });\n  console.log('MongoDB connectada');\n}\n</code></pre></p> <p><code>src/server.js</code> (arrencada amb connexi\u00f3 quan <code>STORE=mongo</code>) <pre><code>import 'dotenv/config';\nimport app from './app.js';\nimport { connectDB } from './lib/db.js';\n\nconst PORT = process.env.PORT ?? 3000;\nconst STORE = process.env.STORE ?? 'memory';\n\n(async () =&gt; {\n  try {\n    if (STORE === 'mongo') {\n      const URI = process.env.MONGO_URI;\n      if (!URI) {\n        console.error('Falta MONGO_URI en .env');\n        process.exit(1);\n      }\n      await connectDB(URI);\n    }\n    app.listen(PORT, () =&gt; {\n      console.log(`API Inventari escoltant a http://localhost:${PORT} (store=${STORE})`);\n    });\n  } catch (err) {\n    console.error('Error arrencant:', err);\n    process.exit(1);\n  }\n})();\n</code></pre></p>"},{"location":"06Nodejs.html#3-model-de-dades-amb-mongoose","title":"\ud83d\udd0c 3. Model de dades amb Mongoose","text":"<p><code>src/models/product.model.js</code> <pre><code>import mongoose from 'mongoose';\n\nconst productSchema = new mongoose.Schema({\n  name: { type: String, required: true, trim: true, minlength: 2 },\n  sku:  { type: String, unique: true, sparse: true, trim: true, match: /^[A-Z0-9-]+$/ },\n  price:{ type: Number, required: true, min: 0 },\n  stock:{ type: Number, required: true, min: 0 },\n  active:{ type: Boolean, default: true }\n}, { timestamps: true });\n\n// \u00cdndex \u00fatil per a cerques\nproductSchema.index({ name: 'text', sku: 'text' });\n\nexport const Product = mongoose.model('Product', productSchema);\n</code></pre></p> <p>\ud83e\udde0 Notes - <code>unique: true</code> a <code>sku</code> crea un \u00edndex \u00fanic (evita duplicats). - <code>sparse: true</code> permet documents sense <code>sku</code> sense violar l\u2019\u00fanic. - <code>match</code> valida el format: lletres maj\u00fascules, digits i guions. - <code>timestamps: true</code> afegeix <code>createdAt</code> i <code>updatedAt</code> autom\u00e0ticament.</p>"},{"location":"06Nodejs.html#4-reescriure-controladors-per-a-mongo","title":"\u270d\ufe0f 4. Reescriure controladors per a Mongo","text":"<p><code>src/controllers/products.controller.mongo.js</code> <pre><code>import { Product } from '../models/product.model.js';\n\nexport async function list(req, res, next) {\n  try {\n    const { q, active, minPrice, maxPrice } = req.query;\n    const filter = {};\n\n    if (typeof active === 'boolean') filter.active = active;\n    if (typeof minPrice === 'number' || typeof maxPrice === 'number') {\n      filter.price = {};\n      if (typeof minPrice === 'number') filter.price.$gte = minPrice;\n      if (typeof maxPrice === 'number') filter.price.$lte = maxPrice;\n    }\n    if (q) {\n      filter.$or = [\n        { name: { $regex: q, $options: 'i' } },\n        { sku:  { $regex: q, $options: 'i' } }\n      ];\n    }\n\n    const data = await Product.find(filter).sort({ createdAt: -1 }).lean();\n    res.json(data);\n  } catch (err) { next(err); }\n}\n\nexport async function getById(req, res, next) {\n  try {\n    const product = await Product.findById(req.params.id).lean();\n    if (!product) return res.status(404).json({ error: 'No trobat' });\n    res.json(product);\n  } catch (err) { next(err); }\n}\n\nexport async function create(req, res, next) {\n  try {\n    const { name, sku, price, stock, active = true } = req.body;\n    const created = await Product.create({ name, sku, price, stock, active });\n    res.status(201).json(created);\n  } catch (err) {\n    if (err?.code === 11000) return res.status(409).json({ error: 'SKU duplicat' });\n    if (err?.name === 'ValidationError') return res.status(422).json({ error: err.message });\n    next(err);\n  }\n}\n\nexport async function update(req, res, next) {\n  try {\n    const { id } = req.params;\n    const update = req.body ?? {};\n    const updated = await Product.findByIdAndUpdate(id, update, { new: true, runValidators: true }).lean();\n    if (!updated) return res.status(404).json({ error: 'No trobat' });\n    res.json(updated);\n  } catch (err) {\n    if (err?.code === 11000) return res.status(409).json({ error: 'SKU duplicat' });\n    if (err?.name === 'ValidationError') return res.status(422).json({ error: err.message });\n    next(err);\n  }\n}\n\nexport async function adjustStock(req, res, next) {\n  try {\n    const { id } = req.params;\n    const { delta } = req.body;\n    const product = await Product.findById(id);\n    if (!product) return res.status(404).json({ error: 'No trobat' });\n    product.stock = Math.max(0, product.stock + Number(delta));\n    await product.save();\n    res.json(product);\n  } catch (err) { next(err); }\n}\n\nexport async function remove(req, res, next) {\n  try {\n    const { id } = req.params;\n    const out = await Product.findByIdAndDelete(id).lean();\n    if (!out) return res.status(404).json({ error: 'No trobat' });\n    res.status(204).send();\n  } catch (err) { next(err); }\n}\n</code></pre></p> <p><code>src/routes/products.routes.mongo.js</code> <pre><code>import { Router } from 'express';\nimport * as controller from '../controllers/products.controller.mongo.js';\nimport { listQueryRules, productCreateRules, productStockRules, productUpdateRules } from '../validation/products.rules.js';\nimport { validationResult } from 'express-validator';\n\nconst router = Router();\n\nconst validate = (rules) =&gt; [\n  ...rules,\n  (req, res, next) =&gt; {\n    const result = validationResult(req);\n    if (!result.isEmpty()) return res.status(422).json({ errors: result.array() });\n    next();\n  }\n];\n\nrouter.get('/', validate(listQueryRules), controller.list);\nrouter.get('/:id', controller.getById);\nrouter.post('/', validate(productCreateRules), controller.create);\nrouter.put('/:id', validate(productUpdateRules), controller.update);\nrouter.patch('/:id/stock', validate(productStockRules), controller.adjustStock);\nrouter.delete('/:id', controller.remove);\n\nexport default router;\n</code></pre></p> <p><code>src/app.js</code> (selecci\u00f3 de router per <code>STORE</code>) <pre><code>import express from 'express';\nimport morgan from 'morgan';\nimport helmet from 'helmet';\nimport cors from 'cors';\n\nimport productsRouterMemory from './routes/products.routes.js';       // mem\u00f2ria\nimport productsRouterMongo from './routes/products.routes.mongo.js';  // Mongo\n\nimport notFound from './middlewares/not-found.js';\nimport errorHandler from './middlewares/error-handler.js';\n\nconst app = express();\napp.use(helmet());\napp.use(cors());\napp.use(express.json());\napp.use(morgan('dev'));\n\nconst STORE = process.env.STORE ?? 'memory';\nconst productsRouter = STORE === 'mongo' ? productsRouterMongo : productsRouterMemory;\n\napp.use('/api/v1/products', productsRouter);\n\napp.use(notFound);\napp.use(errorHandler);\n\nexport default app;\n</code></pre></p>"},{"location":"06Nodejs.html#5-seed-de-dades","title":"\ud83c\udf31 5. Seed de dades","text":"<p><code>scripts/seed.js</code> <pre><code>import 'dotenv/config';\nimport { connectDB } from '../src/lib/db.js';\nimport { Product } from '../src/models/product.model.js';\n\nconst URI = process.env.MONGO_URI;\n\n(async () =&gt; {\n  try {\n    if (!URI) throw new Error('Defineix MONGO_URI en .env');\n    await connectDB(URI);\n    await Product.deleteMany({});\n    await Product.insertMany([\n      { name: 'Caf\u00e8 gra 1kg', sku: 'CAF-1000', price: 12.5, stock: 50, active: true },\n      { name: 'Te verd 200g', sku: 'TE-0200', price: 6.2, stock: 120, active: true },\n      { name: 'Llet ametla 1L', sku: 'LLE-ALM-1', price: 1.95, stock: 80, active: true }\n    ]);\n    console.log('Seed complet!');\n    process.exit(0);\n  } catch (err) {\n    console.error(err);\n    process.exit(1);\n  }\n})();\n</code></pre></p> <p>Executa: <pre><code>npm run seed\n</code></pre></p>"},{"location":"06Nodejs.html#7-proves-rapides","title":"\ud83e\uddea 7. Proves r\u00e0pides","text":"<pre><code># Crear\ncurl -X POST http://localhost:3000/api/v1/products   -H \"Content-Type: application/json\"   -d '{\"name\":\"Tassa cer\u00e0mica\",\"sku\":\"TAS-001\",\"price\":4.5,\"stock\":20}'\n\n# Llistar (amb filtre)\ncurl \"http://localhost:3000/api/v1/products?q=tassa&amp;minPrice=3&amp;maxPrice=10\"\n\n# Per ID (usa _id de Mongo)\ncurl http://localhost:3000/api/v1/products/&lt;id&gt;\n\n# Actualitzar\ncurl -X PUT http://localhost:3000/api/v1/products/&lt;id&gt;   -H \"Content-Type: application/json\"   -d '{\"price\":4.9,\"stock\":30}'\n\n# Ajust stock\ncurl -X PATCH http://localhost:3000/api/v1/products/&lt;id&gt;/stock   -H \"Content-Type: application/json\"   -d '{\"delta\": -2}'\n\n# Eliminar\ncurl -X DELETE http://localhost:3000/api/v1/products/&lt;id&gt;\n</code></pre>"},{"location":"06Nodejs.html#8-bones-practiques-de-persistencia","title":"\ud83d\udca1 8. Bones pr\u00e0ctiques de persist\u00e8ncia","text":"<ul> <li>\u00cdndexs: assegura \u00edndex \u00fanic per a <code>sku</code> i text per a cerques.  </li> <li>Validaci\u00f3 a BD (Mongoose) + validaci\u00f3 a API (express-validator).  </li> <li>Lean queries (<code>.lean()</code>) per rendiment quan no necessites documents mutables.  </li> <li>Paginaci\u00f3: evita retornar milers de documents, usa <code>limit</code>/<code>skip</code>.  </li> <li>DTOs: controla camps retornats (<code>_id</code>, <code>__v</code>, etc.).  </li> <li>Errors Mongo: captura <code>code 11000</code> (duplicats) i <code>ValidationError</code>.</li> </ul>"},{"location":"06Nodejs.html#9-exercicis-per-entregar","title":"\ud83d\udcdd 9. Exercicis (per entregar)","text":"<ol> <li>Paginaci\u00f3: <code>GET /products?page=1&amp;limit=10</code> amb metadades (<code>total</code>, <code>pages</code>, <code>page</code>).</li> <li>Ordenaci\u00f3: afegir <code>?sort=price,-name</code>.</li> <li>Camp nou <code>category</code> amb \u00edndex i filtre <code>?category=...</code>.</li> <li>Esquema amb <code>minlength</code>/<code>maxlength</code> i proves de validaci\u00f3 422.</li> <li>Endpoint <code>GET /products/export.csv</code> generant CSV des de Mongo.</li> <li>Soft delete: afegeix <code>deletedAt</code> i filtra per defecte elements no eliminats.</li> </ol>"},{"location":"06Nodejs.html#10-troubleshooting","title":"\ud83d\udc1e\ud83d\udee0\ufe0f 10. Troubleshooting","text":"<ul> <li><code>MongoServerError: E11000 duplicate key error</code> \u2192 <code>sku</code> duplicat. Respon <code>409</code>.</li> <li><code>CastError: Cast to ObjectId failed</code> \u2192 ID no v\u00e0lid. Valida el format abans de la query.</li> <li><code>ValidationError</code> \u2192 algun camp no compleix l\u2019esquema. Respon <code>422</code> amb el missatge.</li> <li>Sense connexi\u00f3 \u2192 revisa <code>MONGO_URI</code>, firewall, i que el servei de Mongo estiga actiu.</li> </ul>"},{"location":"06Nodejs.html#sa-64-documentacio-amb-swagger-openapi","title":"SA 6.4  Documentaci\u00f3 amb Swagger / OpenAPI","text":"<p>En aquesta secci\u00f3 afegirem documentaci\u00f3 formal a la nostra API amb OpenAPI 3.0 i la servirem amb Swagger UI perqu\u00e8 siga navegable i executable des del navegador.</p>"},{"location":"06Nodejs.html#1-arxiu-openapijson-basic","title":"\ud83e\uddf1 1. Arxiu <code>openapi.json</code> b\u00e0sic","text":"<p>A l\u2019arrel del projecte crea <code>openapi.json</code>. A continuaci\u00f3 tens una plantilla completa per al nostre recurs Producte amb esquemes, validacions i exemples.</p> <p>Pots copiar-ho tal qual i adaptar camps/operacions segons el teu projecte.</p> <pre><code>{\n  \"openapi\": \"3.0.3\",\n  \"info\": {\n    \"title\": \"API Inventari 2DAW\",\n    \"version\": \"1.0.0\",\n    \"description\": \"API REST de Productes/Inventari documentada amb OpenAPI 3.0\"\n  },\n  \"servers\": [\n    { \"url\": \"http://localhost:3000\", \"description\": \"Dev local\" }\n  ],\n  \"tags\": [\n    { \"name\": \"Products\", \"description\": \"Gesti\u00f3 del cat\u00e0leg de productes\" }\n  ],\n  \"paths\": {\n    \"/api/v1/products\": {\n      \"get\": {\n        \"tags\": [\"Products\"],\n        \"summary\": \"Llistar productes\",\n        \"parameters\": [\n          { \"name\": \"q\", \"in\": \"query\", \"schema\": { \"type\": \"string\" }, \"description\": \"Text de cerca a name o sku\" },\n          { \"name\": \"active\", \"in\": \"query\", \"schema\": { \"type\": \"boolean\" } },\n          { \"name\": \"minPrice\", \"in\": \"query\", \"schema\": { \"type\": \"number\", \"minimum\": 0 } },\n          { \"name\": \"maxPrice\", \"in\": \"query\", \"schema\": { \"type\": \"number\", \"minimum\": 0 } }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Llista de productes\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"type\": \"array\", \"items\": { \"$ref\": \"#/components/schemas/Product\" } }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"Products\"],\n        \"summary\": \"Crear producte\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/ProductCreate\" },\n              \"examples\": {\n                \"basic\": {\n                  \"summary\": \"Exemple b\u00e0sic\",\n                  \"value\": { \"name\": \"Tassa cer\u00e0mica\", \"sku\": \"TAS-001\", \"price\": 4.5, \"stock\": 20, \"active\": true }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"Creat\", \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/Product\" } } } },\n          \"409\": { \"description\": \"SKU duplicat\" },\n          \"422\": { \"description\": \"Validaci\u00f3 incorrecta\" }\n        }\n      }\n    },\n    \"/api/v1/products/{id}\": {\n      \"get\": {\n        \"tags\": [\"Products\"],\n        \"summary\": \"Obtenir producte per ID\",\n        \"parameters\": [\n          { \"name\": \"id\", \"in\": \"path\", \"required\": true, \"schema\": { \"type\": \"string\" } }\n        ],\n        \"responses\": {\n          \"200\": { \"description\": \"OK\", \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/Product\" } } } },\n          \"404\": { \"description\": \"No trobat\" }\n        }\n      },\n      \"put\": {\n        \"tags\": [\"Products\"],\n        \"summary\": \"Actualitzar producte\",\n        \"parameters\": [\n          { \"name\": \"id\", \"in\": \"path\", \"required\": true, \"schema\": { \"type\": \"string\" } }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/ProductUpdate\" } } }\n        },\n        \"responses\": {\n          \"200\": { \"description\": \"Actualitzat\", \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/Product\" } } } },\n          \"404\": { \"description\": \"No trobat\" },\n          \"409\": { \"description\": \"SKU duplicat\" }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\"Products\"],\n        \"summary\": \"Eliminar producte\",\n        \"parameters\": [\n          { \"name\": \"id\", \"in\": \"path\", \"required\": true, \"schema\": { \"type\": \"string\" } }\n        ],\n        \"responses\": {\n          \"204\": { \"description\": \"Eliminat\" },\n          \"404\": { \"description\": \"No trobat\" }\n        }\n      }\n    },\n    \"/api/v1/products/{id}/stock\": {\n      \"patch\": {\n        \"tags\": [\"Products\"],\n        \"summary\": \"Ajustar stock d'un producte\",\n        \"parameters\": [\n          { \"name\": \"id\", \"in\": \"path\", \"required\": true, \"schema\": { \"type\": \"string\" } }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/StockPatch\" } }\n          }\n        },\n        \"responses\": {\n          \"200\": { \"description\": \"OK\", \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/Product\" } } } },\n          \"404\": { \"description\": \"No trobat\" },\n          \"422\": { \"description\": \"Validaci\u00f3 incorrecta\" }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Product\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\":       { \"type\": \"string\", \"description\": \"ID intern (o _id de Mongo)\" },\n          \"name\":     { \"type\": \"string\", \"minLength\": 2 },\n          \"sku\":      { \"type\": \"string\", \"pattern\": \"^[A-Z0-9-]+$\" },\n          \"price\":    { \"type\": \"number\", \"minimum\": 0 },\n          \"stock\":    { \"type\": \"integer\", \"minimum\": 0 },\n          \"active\":   { \"type\": \"boolean\", \"default\": true },\n          \"createdAt\":{ \"type\": \"string\", \"format\": \"date-time\" },\n          \"updatedAt\":{ \"type\": \"string\", \"format\": \"date-time\" }\n        },\n        \"required\": [\"id\", \"name\", \"price\", \"stock\", \"active\"]\n      },\n      \"ProductCreate\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\":   { \"type\": \"string\", \"minLength\": 2 },\n          \"sku\":    { \"type\": \"string\", \"pattern\": \"^[A-Z0-9-]+$\" },\n          \"price\":  { \"type\": \"number\", \"minimum\": 0 },\n          \"stock\":  { \"type\": \"integer\", \"minimum\": 0 },\n          \"active\": { \"type\": \"boolean\" }\n        },\n        \"required\": [\"name\", \"price\", \"stock\"]\n      },\n      \"ProductUpdate\": {\n        \"allOf\": [{ \"$ref\": \"#/components/schemas/ProductCreate\" }]\n      },\n      \"StockPatch\": {\n        \"type\": \"object\",\n        \"properties\": { \"delta\": { \"type\": \"integer\", \"description\": \"Pot ser positiu o negatiu\" } },\n        \"required\": [\"delta\"]\n      }\n    }\n  }\n}\n</code></pre> <p>\ud83d\udd0e Consell: guarda aquest fitxer a l\u2019arrel del projecte perqu\u00e8 siga f\u00e0cil de trobar i versionar.</p>"},{"location":"06Nodejs.html#2-servir-swagger-ui","title":"\u2699\ufe0f 2. Servir Swagger UI","text":"<p>Afegim Swagger UI a <code>app.js</code> (despr\u00e9s de configurar les rutes).</p> <pre><code>import swaggerUi from 'swagger-ui-express';\nimport { readFileSync } from 'node:fs';\nimport path from 'node:path';\nimport { fileURLToPath } from 'node:url';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\n// ...\nconst openapiPath = path.join(__dirname, '..', 'openapi.json');\nconst openapi = JSON.parse(readFileSync(openapiPath, 'utf-8'));\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(openapi));\n</code></pre> <p>Ara obri: http://localhost:3000/api-docs</p>"},{"location":"06Nodejs.html#3-afegir-exemples-i-respostes-detallades","title":"\ud83e\udde0 3. Afegir exemples i respostes detallades","text":"<p>Els exemples ajuden l\u2019alumnat a saber qu\u00e8 enviar i qu\u00e8 esperar:</p> <pre><code>\"requestBody\": {\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": { \"$ref\": \"#/components/schemas/ProductCreate\" },\n      \"examples\": {\n        \"valid\": { \"value\": { \"name\":\"Caf\u00e8 gra 1kg\", \"sku\":\"CAF-1000\", \"price\":12.5, \"stock\":50 } },\n        \"invalid\": { \"value\": { \"name\":\"\", \"price\": -3, \"stock\": -1 } }\n      }\n    }\n  }\n}\n</code></pre> <p>Tamb\u00e9 pots descriure errors amb esquemes (p. ex. per a 422):</p> <pre><code>\"422\": {\n  \"description\": \"Validaci\u00f3 incorrecta\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"errors\": { \"type\": \"array\", \"items\": { \"type\": \"object\" } }\n        }\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"06Nodejs.html#4-bones-practiques-de-documentacio","title":"\ud83d\udca1 4. Bones pr\u00e0ctiques de documentaci\u00f3","text":"<ul> <li>Mant\u00edn sincronitzat el que diu <code>openapi.json</code> amb la realitat del codi.</li> <li>Descripcions clares: explica qu\u00e8 fa cada endpoint i quins casos d\u2019\u00fas t\u00e9.</li> <li>Nomena correctament (recursos en plural, verbs en m\u00e8todes, <code>id</code> al path).</li> <li>Exemples reals i \u00fatils (no gen\u00e8rics).</li> <li>Versiona l\u2019API: <code>/api/v1/...</code> i reflecteix-ho a <code>servers</code>.</li> <li>DRY amb <code>components</code>: posa esquemes reutilitzables all\u00ed.</li> <li>Respostes: documenta les principals (<code>200</code>, <code>201</code>, <code>204</code>, <code>400/404/409/422</code>, <code>500</code>).</li> </ul>"},{"location":"06Nodejs.html#5-exercicis-per-entregar","title":"\ud83d\udcdd 5. Exercicis (per entregar)","text":"<ol> <li> <p>Completa <code>openapi.json</code> amb:    a) Resposta <code>400</code> per <code>id</code> mal format.    b) <code>examples</code> detallats per <code>PUT</code> i <code>PATCH /stock</code>.    c) Descripci\u00f3 de par\u00e0metres de filtrat a <code>GET /products</code>.</p> </li> <li> <p>Afig <code>category</code> al <code>schema Product</code> i actualitza <code>ProductCreate</code> i <code>ProductUpdate</code>.</p> </li> <li> <p>Camps de resposta: crea un <code>schema Error</code> com\u00fa i reutilitza\u2019l en respostes 4xx/5xx.</p> </li> <li> <p>Endpoint nou: documenta <code>GET /api/v1/products/export.csv</code> (tipus <code>text/csv</code>).</p> </li> <li> <p>Autenticaci\u00f3 (bonus): afegeix <code>securitySchemes</code> (Bearer JWT) i marca <code>POST/PUT/PATCH/DELETE</code> com a protegits.</p> </li> </ol>"},{"location":"06Nodejs.html#6-troubleshooting-swagger","title":"\ud83d\udc1e\ud83d\udee0\ufe0f 6. Troubleshooting Swagger","text":"<ul> <li>Pantalla en blanc a <code>/api-docs</code> \u2192 JSON mal format (valida\u2019l en un JSON linter).  </li> <li>No carrega <code>openapi.json</code> \u2192 rutes relatives: comprova la ruta <code>path.join(__dirname, '..', 'openapi.json')</code>.  </li> <li>Errors CORS provant des de Swagger \u2192 assegura <code>app.use(cors())</code>.  </li> <li>Exemples no apareixen \u2192 han d\u2019estar dins de <code>content -&gt; application/json -&gt; examples</code>.</li> </ul>"},{"location":"06Nodejs.html#7-swagger-automatic-amb-swagger-jsdoc","title":"\ud83d\udc1e\ud83d\udee0\ufe0f 7. Swagger autom\u00e0tic amb swagger-jsdoc","text":"<p>Anem tamb\u00e9 a mostrar com generar la documentaci\u00f3 OpenAPI autom\u00e0ticament a partir de comentaris JSDoc en les rutes d\u2019Express, utilitzant swagger-jsdoc + swagger-ui-express.</p>"},{"location":"06Nodejs.html#installacio","title":"\ud83d\udee0\ufe0f Instal\u00b7laci\u00f3","text":"<pre><code>npm i swagger-jsdoc swagger-ui-express\n</code></pre>"},{"location":"06Nodejs.html#configuracio-base","title":"\ud83e\uddf1 Configuraci\u00f3 base","text":"<p><code>src/swagger.js</code> <pre><code>import swaggerJSDoc from 'swagger-jsdoc';\n\nconst options = {\n  definition: {\n    openapi: '3.0.3',\n    info: {\n      title: 'API Inventari 2DAW',\n      version: '1.1.0',\n      description: 'Documentaci\u00f3 autom\u00e0tica des de JSDoc'\n    },\n    servers: [{ url: 'http://localhost:3000' }],\n  },\n  apis: ['./src/routes/*.js'], // fitxers amb comentaris JSDoc\n};\n\nexport const swaggerSpec = swaggerJSDoc(options);\n</code></pre></p> <p><code>src/app.js</code> <pre><code>import swaggerUi from 'swagger-ui-express';\nimport { swaggerSpec } from './swagger.js';\n\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerSpec));\n</code></pre></p>"},{"location":"06Nodejs.html#comentaris-jsdoc-a-les-rutes","title":"\ud83d\uddc2\ufe0f Comentaris JSDoc a les rutes","text":"<p><code>src/routes/products.routes.js</code> <pre><code>/**\n * @openapi\n * /api/v1/products:\n *   get:\n *     tags: [Products]\n *     summary: Llistar productes\n *     parameters:\n *       - in: query\n *         name: q\n *         schema: { type: string }\n *       - in: query\n *         name: active\n *         schema: { type: boolean }\n *     responses:\n *       200: { description: Llista de productes }\n */\nrouter.get('/', validate(listQueryRules), controller.list);\n</code></pre></p>"},{"location":"06Nodejs.html#8-components-reutilitzables","title":"\ud83d\udda5\ufe0f 8. Components reutilitzables","text":"<p>Pots definir components (schemas) en <code>swaggerSpec</code> (via <code>options.definition.components = {...}</code>) o incloure\u2019ls en un fitxer <code>.yml</code> separat i combinar-los amb <code>swagger-jsdoc</code>.</p>"},{"location":"06Nodejs.html#9-bones-practiques","title":"\ud83d\udca1 9. Bones pr\u00e0ctiques","text":"<ul> <li>Posa tags per agrupar endpoints.</li> <li>Escriu exemples a <code>requestBody</code> i <code>responses</code>.</li> <li>Mant\u00edn el contracte sincronitzat. Si canvies una ruta, actualitza el JSDoc.</li> <li>Valida amb un validator OpenAPI (ex. Swagger Editor) si afegeixes elements avan\u00e7ats.</li> </ul>"},{"location":"06Nodejs.html#10-enllac-a-la-ui","title":"\ud83d\udd17 10. Enlla\u00e7 a la UI","text":"<p>Amb el servidor en marxa: http://localhost:3000/api-docs</p>"},{"location":"06Nodejs.html#sa-65-practiques-guiades-reptes-oberts-i-rubrica-davaluacio","title":"SA 6.5 \u2013 Pr\u00e0ctiques guiades, reptes oberts i r\u00fabrica d\u2019avaluaci\u00f3","text":"<p>Aquesta secci\u00f3 recull una s\u00e8rie d\u2019activitats perqu\u00e8 l\u2019alumnat consolide els coneixements adquirits i demostre la seua compet\u00e8ncia en el desenvolupament d\u2019APIs amb Node.js, Express, MongoDB i Swagger.</p>"},{"location":"06Nodejs.html#1-practiques-guiades","title":"\ud83e\uddea 1. Pr\u00e0ctiques guiades","text":""},{"location":"06Nodejs.html#practica-1-afegir-paginacio-i-ordenacio","title":"\ud83e\uddea Pr\u00e0ctica 1 \u2013 Afegir paginaci\u00f3 i ordenaci\u00f3","text":"<ul> <li>Endpoint: <code>GET /api/v1/products</code></li> <li>Objectiu: implementar <code>?page</code>, <code>?limit</code> i <code>?sort</code> (acceptant <code>price</code>, <code>name</code>, <code>-price</code>...).</li> <li>Ex.: <code>GET /api/v1/products?page=2&amp;limit=5&amp;sort=-price</code></li> </ul> <p>Criteris clau: - Retornar metadades (<code>total</code>, <code>page</code>, <code>pages</code>, <code>limit</code>) - Ordenaci\u00f3 ascendent i descendent - Validaci\u00f3 d\u2019entrada (<code>limit</code> &gt; 0, etc.)</p>"},{"location":"06Nodejs.html#practica-2-exportacio-de-dades","title":"\ud83e\uddea Pr\u00e0ctica 2 \u2013 Exportaci\u00f3 de dades","text":"<ul> <li>Endpoint: <code>GET /api/v1/products/export.csv</code></li> <li>Objectiu: generar un fitxer CSV amb tots els productes (nom, sku, preu, stock, actiu).</li> </ul> <p>Criteris clau: - Cap\u00e7alera <code>Content-Type: text/csv</code> - Nom de fitxer amb data (<code>products-2025-10-15.csv</code>) - Compatibilitat amb Excel / LibreOffice</p>"},{"location":"06Nodejs.html#practica-3-camp-nou-i-filtrat-avancat","title":"\ud83e\uddea Pr\u00e0ctica 3 \u2013 Camp nou i filtrat avan\u00e7at","text":"<ul> <li>Afig un camp <code>category</code> al model de producte.  </li> <li>Permet filtrar per <code>?category=bebidas</code> en el <code>GET /products</code>.</li> </ul> <p>Criteris clau: - Actualitzar <code>ProductCreate</code> i <code>ProductUpdate</code> - Validar categories v\u00e0lides (<code>alimentaci\u00f3</code>, <code>begudes</code>, <code>altres</code>) - \u00cdndex de cerca per <code>category</code></p>"},{"location":"06Nodejs.html#practica-4-soft-delete","title":"\ud83e\uddea Pr\u00e0ctica 4 \u2013 Soft delete","text":"<ul> <li>Objectiu: implementar un sistema de soft delete amb un camp <code>deletedAt</code>.  </li> <li>Els productes eliminats no s\u2019esborren, nom\u00e9s s\u2019oculten per defecte.</li> </ul> <p>Criteris clau: - <code>DELETE /products/:id</code> \u2192 afegeix <code>deletedAt</code> - <code>GET /products</code> \u2192 exclou elements amb <code>deletedAt</code> - <code>GET /products?includeDeleted=true</code> \u2192 inclou tots</p>"},{"location":"06Nodejs.html#practica-5-validacions-avancades-i-missatges-personalitzats","title":"\ud83e\uddea Pr\u00e0ctica 5 \u2013 Validacions avan\u00e7ades i missatges personalitzats","text":"<ul> <li>Objectiu: refor\u00e7ar la seguretat i robustesa de l\u2019API.</li> <li>Requisits:</li> <li>Nom m\u00ednim 3 car\u00e0cters i m\u00e0xim 50</li> <li>SKU \u00fanic i format <code>[A-Z0-9-]+</code></li> <li>Stock \u2264 10.000</li> <li>Missatges de validaci\u00f3 personalitzats</li> </ul>"},{"location":"06Nodejs.html#2-reptes-oberts","title":"\ud83d\udca1 2. Reptes oberts","text":""},{"location":"06Nodejs.html#repte-1-api-de-biblioteca","title":"\ud83d\udca1 Repte 1 \u2013 API de biblioteca","text":"<ul> <li>Recursos: <code>Books</code>, <code>Authors</code></li> <li>Operacions: CRUD complet, filtrat per autor, g\u00e8nere, any.</li> <li>Extres: endpoint per a llibres disponibles / prestats.</li> </ul> <p>Objectius: relacions entre col\u00b7leccions, validaci\u00f3, rutes RESTful.</p>"},{"location":"06Nodejs.html#repte-2-api-de-comandes-duna-botiga","title":"\ud83d\udca1 Repte 2 \u2013 API de comandes d\u2019una botiga","text":"<ul> <li>Recursos: <code>Products</code>, <code>Orders</code>, <code>Customers</code></li> <li>Requisits: crear comandes amb productes, calcular total autom\u00e0ticament.</li> <li>Extres: endpoint <code>GET /orders/stats</code> amb vendes totals per mes.</li> </ul> <p>Objectius: relacions 1:N i N:M, agregacions, validacions complexes.</p>"},{"location":"06Nodejs.html#repte-3-api-de-notes-dalumnes","title":"\ud83d\udca1 Repte 3 \u2013 API de notes d\u2019alumnes","text":"<ul> <li>Recursos: <code>Students</code>, <code>Grades</code>, <code>Subjects</code></li> <li>Funcions: CRUD, c\u00e0lcul mitjanes autom\u00e0tiques, filtrat per curs.</li> <li>Extres: <code>GET /students/honor-roll</code> \u2192 alumnes amb mitjana &gt; 9.</li> </ul> <p>Objectius: c\u00e0lculs din\u00e0mics i endpoints derivats.</p>"},{"location":"06Nodejs.html#repte-4-api-de-tasques-i-projectes","title":"\ud83d\udca1 Repte 4 \u2013 API de tasques i projectes","text":"<ul> <li>Recursos: <code>Projects</code>, <code>Tasks</code>, <code>Users</code></li> <li>Funcions: assignar tasques a usuaris, canviar estat (<code>pending</code>, <code>done</code>...).</li> <li>Extres: endpoint per a percentatge de completat.</li> </ul> <p>Objectius: disseny d\u2019estructura, l\u00f2gica de negoci i documentaci\u00f3.</p>"},{"location":"06Nodejs.html#repte-5-api-desdeveniments-culturals","title":"\ud83d\udca1 Repte 5 \u2013 API d\u2019esdeveniments culturals","text":"<ul> <li>Recursos: <code>Events</code>, <code>Venues</code>, <code>Tickets</code></li> <li>Funcions: CRUD complet, consulta d\u2019entrades disponibles, aforament.</li> <li>Extres: <code>GET /events/next</code> \u2192 pr\u00f2xims 10 esdeveniments.</li> </ul> <p>Objectius: combinar m\u00faltiples recursos i treballar amb dates.</p>"},{"location":"06Nodejs.html#3-rubrica-davaluacio-de-projecte-final","title":"\ud83d\udcca 3. R\u00fabrica d\u2019avaluaci\u00f3 de projecte final","text":"Criteri Insuficient (0-4) B\u00e9 (5-6) Notable (7-8) Excel\u00b7lent (9-10) Estructura del projecte Desorganitzada o incompleta Correcta per\u00f2 poc modular Bona organitzaci\u00f3, separaci\u00f3 clara de capes Excel\u00b7lent arquitectura, escalable i neta Rutes i m\u00e8todes REST Incomplets o incorrectes Complets per\u00f2 amb errors Complets i ben implementats Complets, correctes i amb bones pr\u00e0ctiques REST Validacions i errors Inexistents o incorrectes Presenten algunes mancances Completes i adequades Exhaustives, missatges clars i validacions avan\u00e7ades L\u00f2gica i funcionalitat Errors greus o incompliment de requisits Funcionalitat b\u00e0sica Funcionalitat completa i correcta L\u00f2gica avan\u00e7ada, c\u00e0lculs i relacions complexes Persist\u00e8ncia i dades No persistent o mal implementada Persist\u00e8ncia funcional per\u00f2 limitada Persist\u00e8ncia completa i correcta Persist\u00e8ncia \u00f2ptima amb \u00edndexs, agregacions i rendiment Documentaci\u00f3 Swagger Inexistent o incompleta Present per\u00f2 amb mancances Completa i actualitzada Excel\u00b7lent, detallada, amb exemples i components reutilitzats Proves i robustesa No s\u2019han fet proves Proves m\u00ednimes Proves completes i correctes Proves exhaustives i cobertura de casos l\u00edmit Originalitat i creativitat Poc treball o c\u00f2pia literal Adaptaci\u00f3 b\u00e0sica del projecte guia Adaptaci\u00f3 creativa amb millores Projecte original, amb funcionalitats pr\u00f2pies i innovadores"},{"location":"06Nodejs.html#4-recomanacions-finals-per-al-projecte","title":"\ud83d\udcc1 4. Recomanacions finals per al projecte","text":"<ul> <li>\ud83e\udde0 Planificaci\u00f3: defineix recursos, endpoints i esquemes abans de comen\u00e7ar a programar.  </li> <li>\ud83d\udcda Documentaci\u00f3: escriu <code>openapi.json</code> a mesura que avances, no al final.  </li> <li>\ud83e\uddea Proves constants: utilitza Postman o Thunder Client per validar cada endpoint.  </li> <li>\ud83d\udce6 Commits freq\u00fcents: versiona els canvis i escriu missatges clars.  </li> <li>\ud83d\ude80 Millora cont\u00ednua: afegeix funcionalitats addicionals si el projecte base ja funciona.</li> </ul>"},{"location":"06herramientas.html","title":"Ferramentes","text":"Duraci\u00f3 y criteris d'avaluaci\u00f3 <p>Duraci\u00f3 estimada: 16 hores</p> Resultat d'aprenentatge Criteris d'avaluaci\u00f3 4.- Desarrolla aplicaciones Web embebidas en lenguajes de marcas analizando e incorporando funcionalidades seg\u00fan especificaciones. g) Se han utilizado herramientas y entornos para facilitar la programaci\u00f3n, prueba y depuraci\u00f3n del c\u00f3digo. <p>En aquesta unitat estudiarem algunes de les eines m\u00e9s utilitzades en PHP.</p>"},{"location":"06herramientas.html#composer","title":"Composer","text":"Logo Composer <p>Eina per excel\u00b7l\u00e8ncia en PHP per a la gesti\u00f3 de llibreries i depend\u00e8ncies, de manera que instal\u00b7la i les actualitza assegurant que tot l'equip de desenvolupament t\u00e9 el mateix entorn i versions. A m\u00e9s, ofereix autoloading del nostre codi, de manera que no h\u00e0gem de fer-lo nosaltres \"a m\u00e0\".</p> <p>Est\u00e0 escrit en PHP, i podeu consultar tota la seua documentaci\u00f3 en https://getcomposer.org/.</p> <p>Utilitza Packagist com a repositori de llibreries.</p> <p>Funcionalment, \u00e9s similar a Maven (Java) / npm (JS).</p>"},{"location":"06herramientas.html#installacio","title":"Instal\u00b7laci\u00f3","text":"<p>Si estem usant XAMPP, hem d'instal\u00b7lar Composer en el propi sistema operatiu. Es recomana seguir les instruccions oficials segons el sistema operatiu a emprar.</p> <p>En canvi, si usem Docker, necessitem modificar la configuraci\u00f3 del nostre contenidor. En el nostre cas, hem decidit modificar l'arxiu <code>Dockerfile</code> i afegir el seg\u00fcent comando:</p> <pre><code>COPY --from=composer:2.0 /usr/bin/composer /usr/local/bin/composer\n</code></pre> <p>\u00c9s important que dins del contenidor comprovem que tenim la v2:</p> <pre><code>composer -V\n</code></pre>"},{"location":"06herramientas.html#primers-passos","title":"Primers passos","text":"<p>Quan creem un projecte per primera vegada, hem d'inicialitzar el repositori. Per a aix\u00f2, executarem el comando <code>composer init</code> on:</p> <ul> <li>Configurem el nom del paquet, descripci\u00f3, autor (nom ), tipus de paquet (project), etc... <li>Definim les depend\u00e8ncies del projecte (<code>require</code>) i les de desenvolupament (<code>require-dev</code>) de manera interactiva.</li> <li>En les de desenvolupament s'indica aquelles que no s'instal\u00b7laran a l'entorn de producci\u00f3, per exemple, les llibreries de proves.</li> <p>Despr\u00e9s de la seua configuraci\u00f3, es crear\u00e0 autom\u00e0ticament l'arxiu <code>composer.json</code> amb les dades introdu\u00efdes i desc\u00e0rrega les llibreries en la carpeta <code>vendor</code>. La instal\u00b7laci\u00f3 de les llibreries sempre es realitza de manera local per a cada projecte.</p> <pre><code>{\n    \"name\": \"dwes/log\",\n    \"description\": \"Pruebas con Monolog\",\n    \"type\": \"project\",\n    \"require\": {\n        \"monolog/monolog\": \"^2.1\"\n    },\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Aitor Medrano\",\n            \"email\": \"a.medrano@edu.gva.es\"\n        }\n    ]\n}\n</code></pre> <p>A l'hora d'indicar cada llibreria introduirem:</p> <ul> <li>el nom de la llibreria, composta tant pel creador o \"vendor\", com pel nom del projecte. Exemples: <code>monolog/monolog</code> o <code>laravel/installer</code>.</li> <li> <p>la versi\u00f3 de cada llibreria. Tenim diverses opcions per a indicar-la:</p> <ul> <li>Directament: 1.4.2</li> <li>Amb comodins: 1.</li> <li>A partir de: &gt;= 2.0.3</li> <li>Sense trencament de canvis: ^1.3.2 // &gt;=1.3.2 &lt;2.0.0</li> </ul> </li> </ul>"},{"location":"06herramientas.html#actualitzar-llibreries","title":"Actualitzar llibreries","text":"<p>Podem definir les depend\u00e8ncies via l'arxiu <code>composer.json</code> o mitjan\u00e7ant comandos amb el format <code>composer require vendor/package:version</code>. Per exemple, si volem afegir phpUnit com a llibreria de desenvolupament, farem:</p> <pre><code>composer require phpunit/phpunit \u2013dev\n</code></pre> <p>Despr\u00e9s d'afegir noves llibreries, hem d'actualitzar el nostre projecte:</p> <pre><code>composer update\n</code></pre> <p>Si creem l'arxiu <code>composer.json</code> nosaltres directament sense inicialitzar el repositori, hem d'instal\u00b7lar les depend\u00e8ncies:</p> <pre><code>composer install\n</code></pre> <p>En fer aquest pas (tant instal\u00b7lar com actualitzar), com ja hem comentat, es descarreguen les llibreries en dins de la carpeta <code>vendor</code>. \u00c9s molt important afegir aquesta carpeta a l'arxiu <code>.gitignore</code> per a no pujar-les a GitHub.</p> <p>A m\u00e9s es crea l'arxiu <code>composer.lock</code>, que emmagatzema la versi\u00f3 exacta que s'ha instal\u00b7lat de cada llibreria (aquest arxiu no es toca).</p>"},{"location":"06herramientas.html#autoloadphp","title":"<code>autoload.php</code>","text":"<p>Composer crea de manera autom\u00e0tica en <code>vendor/autoload.php</code> el codi per a incloure de manera autom\u00e0tica totes les llibreries que tinguem configurades en <code>composer.json</code>.</p> <p>Per a utilitzar-ho, en la cap\u00e7alera del nostre arxius posarem:</p> <pre><code>&lt;?php\nrequire 'vendor/autoload.php';\n</code></pre> <p>En el nostre cas, de moment nom\u00e9s el podrem en els arxius on provem les classes</p> <p>Si volem que Composer tamb\u00e9 s'encarregue de carregar de manera autom\u00e0tica les nostres classes de domini, dins de l'arxiu <code>composer.json</code>, definirem la propietat <code>autoload</code>:</p> <pre><code>\"autoload\": {\n    \"psr-4\": {\"Dwes\\\\\": \"app/Dwes\"}\n},\n</code></pre> <p>Posteriorment, hem de tornar a generar el autoload de Composer mitjan\u00e7ant l'opci\u00f3 <code>dump-autoload</code> (o <code>du</code>):</p> <pre><code>composer dump-autoload\n</code></pre>"},{"location":"06herramientas.html#arxius-pdf","title":"Arxius PDF","text":"<p>Amb PHP podem manejar tot tipus d'arxius com ja hem vist per\u00f2, qu\u00e8 passa si volem generar fitxers PDF amb dades tretes d'una base de dades?</p> <p>Gr\u00e0cies a una classe escrita en PHP, podem generar arxius PDF sense necessitat d'instal\u00b7lar llibreries addicionals en el nostre servidor. Per\u00f2 anem a utilitzar una llibreria que permet transformar codi html en pdf.</p>"},{"location":"06herramientas.html#dompdf","title":"DOMPDF","text":"<p>Afegirem la llibreria de DOMPDF al nostre projecte. Per a aix\u00f2, inclourem la llibreria en el nostre projecte amb:</p> <p><pre><code>composer require dompdf/dompdf\n</code></pre> Una vegada que DOMPDF est\u00e0 instal\u00b7lat, el proc\u00e9s per generar PDFs des de HTML \u00e9s bastant directe. Els passos b\u00e0sics s\u00f3n:</p> <p>Pas 1: Incloent DOMPDF Primer, necessitarem incloure DOMPDF en el script PHP. Si estem utilitzant Composer, aix\u00f2 es fa autom\u00e0ticament a trav\u00e9s de l'auto-c\u00e0rrega de Composer. Nom\u00e9s cal afegir la seg\u00fcent l\u00ednia al principi del'script:</p> <pre><code>require 'vendor/autoload.php';\n</code></pre> <p>Pas 2: Creaci\u00f3 d'una Inst\u00e0ncia de DOMPDF A continuaci\u00f3, creem una nova inst\u00e0ncia de la classe DOMPDF:</p> <pre><code>use Dompdf\\Dompdf;\n\n$dompdf = new Dompdf();\n</code></pre> <p>Pas 3: Carregar HTML Despr\u00e9s, carregem l'HTML en l'objecte DOMPDF. Aix\u00f2 es pot fer directament com una cadena o carregant un fitxer HTML:</p> <pre><code>$html = \"&lt;html&gt;&lt;body&gt;Hola, aix\u00f2 \u00e9s una prova.&lt;/body&gt;&lt;/html&gt;\";\n$dompdf-&gt;loadHtml($html);\n</code></pre> <p>O b\u00e9 carregar un fitxer HTML:</p> <pre><code>$dompdf-&gt;loadHtml(file_get_contents('path/to/your/file.html'));\n</code></pre> <p>Pas 4: Configuraci\u00f3 de la Mida del Paper i l'Orientaci\u00f3 Podem configurar la mida del paper i l'orientaci\u00f3 si \u00e9s necessari:</p> <pre><code>$dompdf-&gt;setPaper('A4', 'portrait'); // o 'landscape'\n</code></pre> <p>Pas 5: Renderitzaci\u00f3 del PDF Ara, demanem a DOMPDF que renderitze el PDF:</p> <pre><code>$dompdf-&gt;render();\n</code></pre> <p>Pas 6: Eixida del PDF Finalment, podem enviar el PDF al navegador, guardar-lo en un fitxer o fer amb ell el que necessitem:</p> <p>Per mostrar-lo al navegador:</p> <pre><code>$dompdf-&gt;stream(\"document.pdf\", array(\"Attachment\" =&gt; false));\n</code></pre> <p>Per desar-lo en un fitxer:</p> <pre><code>$output = $dompdf-&gt;output();\nfile_put_contents('path/to/save/document.pdf', $output);\n</code></pre>"},{"location":"06herramientas.html#consells-addicionals","title":"Consells Addicionals","text":"<p>Cal assegurar-se que l'HTML \u00e9s v\u00e0lid i ben format. DOMPDF intenta ser tolerant amb l'HTML, per\u00f2 l'HTML mal format pot causar problemes. El CSS que s'utilitze pot afectar significativament com es veu el PDF. DOMPDF suporta una bona part de CSS 2.1, per\u00f2 no tot. Si necessitem incloure imatges, cal assegurar-se que les rutes s\u00f3n absolutes i accessibles des del servidor on s'executa DOMPDF. Aquesta \u00e9s una guia b\u00e0sica per comen\u00e7ar amb DOMPDF. Per a casos d'\u00fas m\u00e9s avan\u00e7ats i opcions de configuraci\u00f3, cal consultar la documentaci\u00f3 oficial de DOMPDF.</p>"},{"location":"06herramientas.html#monolog","title":"Monolog","text":"<p>Provarem Composer afegint la llibreria de Monolog al nostre projecte. Es tracta d'un llibreria per a la gesti\u00f3 de logs de les nostres aplicacions, suportant diferents nivells (info, warning, etc...), eixides (fitxers, sockets, BBDD, Web Services, email, etc) i formats (text pla, HTML, JSON, etc...).</p> <p>Per a aix\u00f2, inclourem la llibreria en el nostre projecte amb:</p> <pre><code>composer require monolog/monolog\n</code></pre> <p>Monolog 2 requereix almenys PHP 7.2, compleix amb el estandar de logging PSR-3, i \u00e9s la llibreria emprada per Laravel i Symfony per a la gesti\u00f3 de logs.</p> <p>Quan utilitzar un log</p> <ul> <li>Seguir les acciones/moviments dels usuaris</li> <li>Registrar les transaccions</li> <li>Rastrejar els errors d'usuari</li> <li>Fallades/avisos a nivell de sistema</li> <li>Interpretar i col\u00b7leccionar dades per a posterior investigaci\u00f3 de patrons</li> </ul>"},{"location":"06herramientas.html#nivells","title":"Nivells","text":"<p>A continuaci\u00f3 vam mostrar els diferents nivells de menys a m\u00e9s restrictiu:</p> <pre><code>* debug -100: Informaci\u00f3 detallada amb prop\u00f2sits de debug. No usar en entorns de producci\u00f3.\n* info - 200: Esdeveniments interessants com l'inici de sessi\u00f3 d'usuaris.\n* notice - 250: Esdeveniments normals per\u00f2 significatius.\n* warning - 300: Ocurr\u00e8ncies excepcionals que no arriben a ser error.\n* error - 400: Errors d'execuci\u00f3 que permeten continuar amb l'execuci\u00f3 de l'aplicaci\u00f3 per\u00f2 que han de ser monitorats.\n* critical - 500: Situacions importants on es generen excepcions no esperades o no hi ha disponible un component.\n* alert - 550: S'han de prendre mesures immediatament.\n  Caiguda completa de la web, base de dades no disponible, etc... A m\u00e9s, se solen enviar missatges per email.\n* emergency - 600: \u00c9s l'error m\u00e9s greu i indica que tot el sistema est\u00e0 inutilitzable.\n</code></pre>"},{"location":"06herramientas.html#hola-monolog","title":"Hola Monolog","text":"<p>Per exemple, en l'arxiu <code>pruebaLog.php</code> que col\u00b7locar\u00edem en l'arrel, primer incloem el autoload, importem els classes a utilitzar per a finalment usar els m\u00e8todes de Monolog:</p> <pre><code>&lt;?php\ninclude __DIR__ .\"/vendor/autoload.php\";\n\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\n\n$log = new Logger(\"MiLogger\");\n$log-&gt;pushHandler(new StreamHandler(\"logs/milog.log\", Logger::DEBUG));\n\n$log-&gt;debug(\"Esto es un mensaje de DEBUG\");\n$log-&gt;info(\"Esto es un mensaje de INFO\");\n$log-&gt;warning(\"Esto es un mensaje de WARNING\");\n$log-&gt;error(\"Esto es un mensaje de ERROR\");\n$log-&gt;critical(\"Esto es un mensaje de CRITICAL\");\n$log-&gt;alert(\"Esto es un mensaje de ALERT\");\n</code></pre> <p>En tots els m\u00e8todes de registre de missatges (<code>debug</code>, <code>info</code>, ...), a m\u00e9s del propi missatge, li podem passar informaci\u00f3 com el contingut d'alguna variable, usuari de l'aplicaci\u00f3, etc.. com a segon par\u00e0metre dins d'un array, el qual es coneix com array de contexte.  \u00c9s convenient fer-ho mitjan\u00e7ant un array associatiu per a facilitar la lectura del log.</p> <pre><code>&lt;?php\n$log-&gt;warning(\"Producto no encontrado\", [$producto]);\n$log-&gt;warning(\"Producto no encontrado\", [\"datos\" =&gt; $producto]);\n</code></pre>"},{"location":"06herramientas.html#funcionament","title":"Funcionament","text":"<p>Cada inst\u00e0ncia <code>Logger</code> t\u00e9 un nom de canal i una pila de manejadores (handler). Cada missatge que manem al log travessa la pila de manejadores, i cadascun decideix si ha de registrar la informaci\u00f3, i si es dona el cas, finalitzar la propagaci\u00f3. Per exemple, un <code>StreamHandler</code> en el fons de la pila que ho escriga tot en disc, i en el topall afig un <code>MailHandler</code> que envie un mail nom\u00e9s quan hi haja un error.</p>"},{"location":"06herramientas.html#manejadors","title":"Manejadors","text":"<p>Cada manejador tambien t\u00e9 un formatejador (<code>Formatter</code>). Si no s'indica cap, se li assigna un per defecte. L'\u00faltim manejador inserit ser\u00e0 el primer a executar-se. Despr\u00e9s es van executant conforme a la pila.</p> <p>Els manejadores m\u00e9s utilitzats s\u00f3n:</p> <ul> <li><code>StreamHandler(ruta, nivel)</code></li> <li><code>RotatingFileHandler(ruta, maxFiles, nivel)</code></li> <li><code>NativeMailerHandler(para, asunto, desde, nivel)</code></li> <li><code>FirePHPHandler(nivel)</code></li> </ul> <p>Si volem que els missatges de l'aplicaci\u00f3 isquen pel log del servidor, en el nostre cas l'arxiu <code>error.log</code> de Apatxe* utilitzarem com a ruta l'eixida d'error:</p> <pre><code>&lt;?php\n// error.log\n$log-&gt;pushHandler(new StreamHandler(\"php://stderr\", Logger::DEBUG));\n</code></pre> <p>FirePHP</p> <p>Per exemple, mitjan\u00e7ant <code>FirePHPHandler</code>, podem utilitzar <code>FirePHP</code>, la qual \u00e9s una eina per a fer debug en la consola de Firefox. Despr\u00e9s d'instal\u00b7lar l'extensi\u00f3 en Firefox, habilitar les opcions i configurar el Handler*, podem veure els missatges acolorits amb les seues dades:</p> <pre><code>&lt;?php\n$log = new Logger(\"MiFirePHPLogger\");\n$log-&gt;pushHandler(new FirePHPHandler(Logger::INFO));\n\n$datos = [\"real\" =&gt; \"Bruce Wayne\", \"personaje\" =&gt; \"Batman\"];\n$log-&gt;debug(\"Esto es un mensaje de DEBUG\", $datos);\n$log-&gt;info(\"Esto es un mensaje de INFO\", $datos);\n$log-&gt;warning(\"Esto es un mensaje de WARNING\", $datos);\n// ...\n</code></pre> <p> Ejemplo de uso de FirePHP </p>"},{"location":"06herramientas.html#canals","title":"Canals","text":"<p>Se'ls assigna en crear el <code>Logger</code>. En grans aplicacions, es crea un canal per cada subsistema: vendes, comptabilitat, magatzem. No \u00e9s una bona pr\u00e0ctica usar el nom de la classe com a canal, aix\u00f2 es fa amb un processador.</p> <p>Per al seu \u00fas, \u00e9s recomane assignar el log a una propietat privada a Logger, i posteriorment, en el constructor de la classe, assignar el canal, manejadors i format.</p> <pre><code>&lt;?php\n$this-&gt;log = new Logger(\"MiApp\");\n$this-&gt;log-&gt;pushHandler(new StreamHandler(\"logs/milog.log\", Logger::DEBUG));\n$this-&gt;log-&gt;pushHandler(new FirePHPHandler(Logger::DEBUG));\n</code></pre> <p>I dins dels m\u00e8todes per a escriure en el log:</p> <pre><code>&lt;?php\n$this-&gt;log-&gt;warning(\"Producto no encontrado\", [$producto]);\n</code></pre>"},{"location":"06herramientas.html#processadors","title":"Processadors","text":"<p>Els processadors permeten afegir informaci\u00f3 als missatges.  Per a aix\u00f2, s'apilen despr\u00e9s de cada manejador mitjan\u00e7ant el m\u00e8tode <code>pushProcessor($processador)</code>.</p> <p>Alguns processadors coneguts s\u00f3n <code>IntrospectionProcessor</code> (mostren la l\u00ednia, fitxer, classe i metodo des del qual s'invoca el log), <code>WebProcessor</code> (afig la URI, m\u00e8tode i IP) o <code>GitProcessor</code> (afig la branca i el commit).</p> PHPConsola en format text <pre><code>&lt;?php\n$log = new Logger(\"MiLogger\");\n$log-&gt;pushHandler(new RotatingFileHandler(\"logs/milog.log\", 0, Logger::DEBUG));\n$log-&gt;pushProcessor(new IntrospectionProcessor());\n$log-&gt;pushHandler(new StreamHandler(\"php://stderr\", Logger::WARNING));\n// no usa Introspection pq lo hemos apilado despu\u00e9s, le asigno otro\n$log-&gt;pushProcessor(new WebProcessor());\n</code></pre> <pre><code>[2020-11-26T13:35:31.076138+01:00] MiLogger.DEBUG: Esto es un mensaje de DEBUG [] {\"file\":\"C:\\\\xampp\\\\htdocs\\\\log\\\\procesador.php\",\"line\":12,\"class\":null,\"function\":null}\n[2020-11-26T13:35:31.078344+01:00] MiLogger.INFO: Esto es un mensaje de INFO [] {\"file\":\"C:\\\\xampp\\\\htdocs\\\\log\\\\procesador.php\",\"line\":13,\"class\":null,\"function\":null}\n</code></pre>"},{"location":"06herramientas.html#formateadores","title":"Formateadores","text":"<p>S'associen als manejadores amb <code>setFormatter</code>. Els formateadores m\u00e9s utilitzats s\u00f3n <code>LineFormatter</code>, <code>HtmlFormatter</code> o <code>JsonFormatter</code>.</p> PHPConsola en JSON <pre><code>&lt;?php\n$log = new Logger(\"MiLogger\");\n$rfh = new RotatingFileHandler(\"logs/milog.log\", Logger::DEBUG);\n$rfh-&gt;setFormatter(new JsonFormatter());\n$log-&gt;pushHandler($rfh);\n</code></pre> <pre><code>{\"message\":\"Esto es un mensaje de DEBUG\",\"context\":{},\"level\":100,\"level_name\":\"DEBUG\",\"channel\":\"MiLogger\",\"datetime\":\"2020-11-27T15:36:52.747211+01:00\",\"extra\":{}}\n{\"message\":\"Esto es un mensaje de INFO\",\"context\":{},\"level\":200,\"level_name\":\"INFO\",\"channel\":\"MiLogger\",\"datetime\":\"2020-11-27T15:36:52.747538+01:00\",\"extra\":{}}\n</code></pre> <p>M\u00e9s informaci\u00f3</p> <p>M\u00e9s informaci\u00f3 sobre manejadores, formateadores i processadors en https://github.com/Seldaek/monolog/blob/master/doc/02-handlers-formatters-processors.md</p>"},{"location":"06herramientas.html#us-de-factories","title":"\u00das de Factories","text":"<p>En comptes de instanciar un log en cada classe, \u00e9s convenient crear una factoria (per exemple, seguint la idea del patr\u00f3 de disseny Factory Method).</p> <p>Per al seg\u00fcent exemple, suposarem que creguem la factoria en el namespace <code>Dwes\\Exemples\\Util</code>.</p> <pre><code>&lt;?php\nnamespace Dwes\\Ejemplos\\Util\n\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\n\nclass LogFactory {\n\n    public static function getLogger(string $canal = \"miApp\") : Logger {\n        $log = new Logger($canal);\n        $log-&gt;pushHandler(new StreamHandler(\"logs/miApp.log\", Logger::DEBUG));\n\n        return $log;\n    }\n}\n</code></pre> <p>Si en comptes de retornar un <code>Monolog\\Logger</code> utilitzem la interf\u00edcie de PSR, si en el futur canviem la implementaci\u00f3 del log, no haurem de modificar nostre codi. Aix\u00ed doncs, la factoria ara retornar\u00e0 <code>Psr\\Log\\LoggerInterface</code>:</p> <pre><code>&lt;?php\nnamespace Dwes\\Ejemplos\\Util\n\nuse Monolog\\Handler\\StreamHandler;\nuse Monolog\\Logger;\nuse Psr\\Log\\LoggerInterface;\n\nclass LogFactory {\n\n    public static function getLogger(string $canal = \"miApp\") : LoggerInterface {\n        $log = new Logger($canal);\n        $log-&gt;pushHandler(new StreamHandler(\"log/miApp.log\", Logger::DEBUG));\n\n        return $log;\n    }\n}\n</code></pre> <p>Finalment, per a utilitzar la factoria, nom\u00e9s canviem el codi que ten\u00edem en el constructor de les classes que usen el log, quedant alguna cosa asi:</p> <pre><code>&lt;?php\n\nnamespace Dwes\\Ejemplos\\Model;\n\nuse Dwes\\Ejemplos\\Util\\LogFactory;\nuse Monolog\\Logger;\n\nclass Cliente {\n\n    private $codigo; \n\n    private Logger $log;\n\n    function __construct($codigo){ \n        $this-&gt;codigo=$codigo; \n\n        $this-&gt;log = LogFactory::getLogger();\n    }\n\n    /// ... resto del c\u00f3digo\n}\n</code></pre>"},{"location":"06herramientas.html#documentacion-con-phpdocumentor","title":"Documentaci\u00f3n con phpDocumentor","text":"<p>phpDocumentor \u00e9s l'eina per a documentar el codi PHP. \u00c9s similar en prop\u00f2sit i funcionament a Javadoc.</p> <p>Aix\u00ed doncs, \u00e9s un eina que facilita la documentaci\u00f3 del codi PHP, creant un lloc web amb l'API de l'aplicaci\u00f3.</p> <p>Es basa en l'\u00fas d'anotacions sobre els docblocks. Per a posar-ho en marxa, en el nostre cas ens decantarem per utilitzar la imatge que ja existeix de Docker.</p>"},{"location":"06herramientas.html#installacio_1","title":"Instal\u00b7laci\u00f3","text":""},{"location":"06herramientas.html#pas-1-installacio-amb-docker","title":"Pas 1: Instal\u00b7laci\u00f3 amb Docker","text":"<p>Primer, cal assegurar-se tenir Docker instal\u00b7lat i funcionant al  sistema. Despr\u00e9s, s'ha de descarregar i executar el contenidor de phpDocumentor utilitzant la seg\u00fcent comanda:</p> <pre><code>docker pull phpdoc/phpdoc\n</code></pre>"},{"location":"06herramientas.html#pas-2-generacio-de-documentacio","title":"Pas 2: Generaci\u00f3 de Documentaci\u00f3","text":"<p>Un cop tinguem la imatge, podem utilitzar-la per generar la documentaci\u00f3. El proc\u00e9s b\u00e0sic implica muntar els fitxers de codi dins del contenidor Docker i executar phpDocumentor sobre aquests fitxers.</p> <p>Ac\u00ed hi ha un exemple de com fer-ho:</p> <p>En el cas d'usar Docker, usarem el seg\u00fcent comando per a executar-lo (crea el contenidor, executa el comando que li demanem, i autom\u00e0ticament l'esborra):</p> <p><pre><code>docker run --rm -v $(pwd):/data phpdoc/phpdoc:latest run -d /data/src -t /data/docs\n</code></pre> Aquesta comanda fa el seg\u00fcent:</p> <p>--rm: Aix\u00f2 elimina el contenidor despr\u00e9s d'executar-lo, aix\u00ed no es queden contenidors inactius. -v $(pwd):/data: Munta el directori actual del teu sistema ($(pwd)) al directori /data dins del contenidor. Haur\u00e0s de reempla\u00e7ar $(pwd) amb el cam\u00ed on est\u00e0 el teu codi font si no est\u00e0s executant aquesta comanda des del directori del teu projecte. -d /data/src: Especifica el directori dins del contenidor on es troba el teu codi font. Reempla\u00e7a /data/src amb el cam\u00ed corresponent dins del contenidor si \u00e9s diferent. -t /data/docs: Especifica on vols que es generi la documentaci\u00f3 dins del contenidor. En aquest cas, es generar\u00e0 dins de /data/docs.</p>"},{"location":"06herramientas.html#pas-3-acces-a-la-documentacio-generada","title":"Pas 3: Acc\u00e9s a la Documentaci\u00f3 Generada","text":"<p>Una vegada generada, la documentaci\u00f3 estar\u00e0 dins del directori que especificat (en aquest cas, <code>docs</code> dins del directori docs de projecte). Pots obrir els fitxers HTML amb qualsevol navegador per veure la documentaci\u00f3.</p>"},{"location":"06herramientas.html#docblock","title":"DocBlock","text":"<p>Un docblock \u00e9s el bloc de codi que es col\u00b7loca damunt d'un recurs. El seu format \u00e9s:</p> <pre><code>&lt;?php\n/**\n* Sumari*, una sola l\u00ednia\n\n* Descripci\u00f3* que pot utilitzar diverses l\u00ednies\n* i que ofereix detalls de l'element o refer\u00e8ncies\n* per a ampliar la informaci\u00f3\n\n* @param string $miArgumento amb una descripci\u00f3* de l'argument\n* que pot usar diverses l\u00ednies.\n\n* @return void\n*/\nfunction miFuncion(tipo $miArgumento)\n{\n}\n</code></pre>"},{"location":"06herramientas.html#documentant-el-codi","title":"Documentant el codi","text":"<p>En tots els elements, ademas del sumari i/o descripci\u00f3, posarem:</p> <ul> <li>En les classes:<ul> <li><code>@author</code> nom  <li><code>@package</code> ruta del namespace</li> <li>En les propietats:<ul> <li><code>@var</code> tipus descripci\u00f3</li> </ul> </li> <li>En els m\u00e8todes:<ul> <li><code>@param</code> tipus $nomene descripci\u00f3</li> <li><code>@throws</code> ClaseException descripci\u00f3</li> <li><code>@return</code> tipus descripci\u00f3</li> </ul> </li> <p>Vegem-ho amb un exemple. Suposem que tenim una classe que representa un client:</p> <pre><code>&lt;?php\n/**\n* Classe que representa un client\n* \n* El client s'encarrega d'emmagatzemar els suports que t\u00e9 llogat,\n* de manera que podem llogar i retornar productes mitjan\u00e7ant les operacions\n* hom\u00f2nimes.\n* \n* @package Dwes\\Videoclub\\Model\n* @author Aitor Medrano &lt;a.medrano@edu.gva.es&gt;\n*/\nclass Cliente {\n\n    public string $nombre; \n    private string $numero;\n\n    /**\n    * Colecci\u00f3 de soports alquilats\n    * @var array&lt;Soporte&gt; \n    */\n    private $soportesAlquilados[];\n\n    /*\n    * Comprova si el suport rebut ja el t\u00e9 llogat el client\n    * @param Suport $suporte Suport a comprovar\n    * @return bool true si ho t\u00e9 llogat\n    /\n    public function tieneAlquilado(Soporte $soporte) : bool { \n        // ...\n    }\n</code></pre> <p>Si generem la documentaci\u00f3 i obrim amb un navegador l'arxiu <code>docs/api/index.html</code> podrem navegar fins a la classe `Client:</p> phpDocumentor de Cliente"},{"location":"06herramientas.html#web-scraping","title":"Web Scraping","text":"<p>Consisteix a navegar a una p\u00e0gina web i extraure informaci\u00f3 autom\u00e0ticament, a partir del codi HTML generat, i organitzar la informaci\u00f3 p\u00fablica disponible en Internet. Aquesta pr\u00e0ctica requereix l'\u00fas d'una llibreria que facilite la desc\u00e0rrega de la informaci\u00f3 desitjada imitant la interacci\u00f3 d'un navegador web. Aquest \"robot\" pot accedir a diverses p\u00e0gines simult\u00e0niament.</p> <p>\u00bf\u00c9s legal?</p> <pre><code>Si el lloc web indica que t\u00e9 el contingut protegit per drets d'autor o en les normes d'acc\u00e9s via usuari/contrasenya ens avisa de la seua prohibici\u00f3, estar\u00edem incorrent en un delicte.\n\u00c9s recomanable estudiar l'arxiu `robots.txt` que es troba en l'arrel de cada lloc web.\nM\u00e9s informaci\u00f3 en l'article [El manual complet per al web scraping legal i \u00e8tic en 2021](https://ichi.pro/es/el-manual-completo-para-el-web-scraping-legal-y-etico-en-2021-69178542830388)\n</code></pre>"},{"location":"06herramientas.html#goutte","title":"Goutte","text":"<p>Goutte \u00e9s un senzill client HTTP per a PHP creat espec\u00edficament per a fer web scraping. Ho va desenvolupar el mateix autor del framework Symfony i ofereix un API senzilla per a extraure dades de les respostes HTML/XML dels llocs web.</p> <p>Els components principals que abstrau Goutte sobre Symfony s\u00f3n:</p> <ul> <li><code>BrowserKit</code>: simula el comportament d'un navegador web.</li> <li><code>CssSelector</code>: tradueix consultes CSS en consultes XPath.</li> <li><code>DomCrawler</code>: facilita l'\u00fas del DOM i XPath.</li> </ul> <p>Per a poder utilitzar Goutte en el nostre projecte, executarem el seg\u00fcent comando en el terminal:</p> <pre><code>composer require fabpot/goutte\n</code></pre>"},{"location":"06herramientas.html#goutte-con-selectores-css","title":"Goutte con selectores CSS","text":"<p>A continuaci\u00f3 farem un exemple molt senzill utilitzant els selectors CSS, extraient informaci\u00f3 de la web <code>https://books.toscrape.com/</code>, la qual \u00e9s una p\u00e0gina per a proves que no rebutjar\u00e0 les nostres peticions.</p> <p>Despr\u00e9s de crear un client amb Goutte, hem de realitzar un petici\u00f3 a una URL. Amb la resposta obtinguda, podem utilitzar el m\u00e8tode <code>filter</code> per a indicar-li la ruta CSS que volem rec\u00f3rrer i iterar sobre els resultats mitjan\u00e7ant una funci\u00f3 an\u00f2nima. Una vegada estem dins d'un determinat node, el m\u00e8tode <code>text()</code> ens retornar\u00e0 el contingut del propi node.</p> <p>En concret, ficarem en un array associatiu el t\u00edtol i el preu de tots els llibres de la categoria Classics.</p> <pre><code>&lt;?php\nrequire '../vendor/autoload.php';\n\n$httpClient = new \\Goutte\\Client();\n$response = $httpClient-&gt;request('GET', 'https://books.toscrape.com/catalogue/category/books/classics_6/index.html');\n// colocamos los precios en un array\n$precios = [];\n$response-&gt;filter('.row li article div.product_price p.price_color')-&gt;each(\n    // le pasamos $precios por referencia para poder editarla dentro del closure\n    function ($node) use (&amp;$precios) {\n        $precios[] = $node-&gt;text();\n    }\n);\n\n// colocamos el nombre y el precio en un array asociativo\n$contadorPrecios = 0;\n$libros = [];\n$response-&gt;filter('.row li article h3 a')-&gt;each(\n    function ($node) use ($precios, &amp;$contadorPrecios, &amp;$libros) {\n        $libros[$node-&gt;text()] = $precios[$contadorPrecios];\n        $contadorPrecios++;\n    }\n);\n</code></pre>"},{"location":"06herramientas.html#crawler","title":"Crawler","text":"<p>Un cas molt com\u00fa \u00e9s obtindre la informaci\u00f3 d'una p\u00e0gina que t\u00e9 els resultats paginados, de manera que anem recorrent els enlla\u00e7os i accedint a cadascun dels resultats.</p> <p>En aquest cas agafarem tots els preus dels llibres de fantasia, i els sumarem:</p> <pre><code>&lt;?php\nrequire '../vendor/autoload.php';\n\nuse Goutte\\Client;\nuse Symfony\\Component\\HttpClient\\HttpClient;\n\n$client = new Client(HttpClient::create(['timeout' =&gt; 60]));\n$crawler = $client-&gt;request('GET', 'https://books.toscrape.com/catalogue/category/books/fantasy_19/index.html');\n\n$salir = false;\n\n$precios = [];\nwhile (!$salir) {\n    $crawler-&gt;filter('.row li article div.product_price p.price_color')-&gt;each(\n        function ($node) use (&amp;$precios) {\n            $texto = $node-&gt;text();\n            $cantidad = substr($texto, 2); // Le quitamos las libras \u00bf2 posiciones?\n            $precios[] = floatval($cantidad);\n        }\n    );\n\n    $enlace = $crawler-&gt;selectLink('next');\n    if ($enlace-&gt;count() != 0) {\n        // el enlace next existe\n        $sigPag = $crawler-&gt;selectLink('next')-&gt;link();\n        $crawler = $client-&gt;click($sigPag); // hacemos click\n    } else {\n        // ya no hay enlace next\n        $salir = true;\n    }\n}\n\n$precioTotal = array_sum($precios);\necho $precioTotal;\n</code></pre>"},{"location":"06herramientas.html#proves-amb-codeception","title":"Proves amb Codeception","text":"<p>El curs passat, dins del m\u00f2dul de Entorns de Desenvolupament*, estudiarieu la import\u00e0ncia de la realitzaci\u00f3 de proves, aix\u00ed com les proves unit\u00e0ries mitjan\u00e7ant JUnit.</p> Test Driven Development <p>Hui dia \u00e9s de gran import\u00e0ncia seguir una bona metodologia de proves, sent el desenvolupament dirigit per les proves (Test Driven Development / TDD) un dels enfocaments m\u00e9s emprats, el qual consisteix en:</p> <ol> <li>Escriure el test, i com no hi ha codi implementat, la prova falle (roig).</li> <li>Escriure el codi d'aplicaci\u00f3 perqu\u00e8 la prova funcione (verda).</li> <li>refactoritzar el codi de l'aplicaci\u00f3 amb l'ajuda de la prova per a comprovar que no trenquem res (refactor).</li> </ol> <p>En el cas de PHP, l'eina que s'utilitza \u00e9s PHPUnit (https://phpunit.de/), que com el seu nom indica, est\u00e0 basada en JUnit. La versi\u00f3 actual \u00e9s la 9.0. Tamb\u00e9 podem utilitzar Codeception (https://codeception.com/) que inclou PHPUnit.</p>"},{"location":"06herramientas.html#introduccio-a-codeception","title":"Introducci\u00f3 a Codeception","text":"<p>Codeception \u00e9s una eina de proves per a PHP que inclou suport per a proves unit\u00e0ries, funcionals, d'acceptaci\u00f3 i API. Per m\u00e9s informaci\u00f3, pots consultar la seua documentaci\u00f3 oficial a Codeception.</p>"},{"location":"06herramientas.html#installacio-i-configuracio","title":"Instal\u00b7laci\u00f3 i Configuraci\u00f3","text":"<p>Per comen\u00e7ar amb Codeception, afegeix-lo com a depend\u00e8ncia de desenvolupament en el teu composer.json:</p> <pre><code>\"require-dev\": {\n\"codeception/codeception\": \"^4.0\"\n},\n\"scripts\": {\n\"test\": \"codecept run --colors\"\n}\n</code></pre> <p>Tamb\u00e9 pots instal\u00b7lar-lo directament des del terminal:</p> <pre><code>composer require --dev codeception/codeception ^4.0\n</code></pre> <p>Llibreries de desenvolupament</p> <p>Les llibreries que es col\u00b7loquen en <code>require-dev</code> s\u00f3n les de desenvolupament i testing, de manera que no s'instal\u00b7laran en un entorn de producci\u00f3.</p> <p>Una vegada instal\u00b7lat, executa vendor/bin/codecept bootstrap per inicialitzar la configuraci\u00f3 b\u00e0sica.</p>"},{"location":"06herramientas.html#estructura-de-carpetes","title":"Estructura de Carpetes","text":"<p>Codeception organitza les proves en diverses carpetes segons el tipus de prova:  tests/unit, tests/functional, tests/acceptance.</p>"},{"location":"06herramientas.html#exemple-de-prova-unitaria","title":"Exemple de Prova Unit\u00e0ria","text":"<p>A continuaci\u00f3, un exemple de com escriure una prova unit\u00e0ria en Codeception:</p> <pre><code>&lt;?php\nnamespace tests\\unit;\n\nclass PilaTest extends \\Codeception\\Test\\Unit\n{\n    public function testPushAndPop()\n    {\n        $pila = [];\n        $this-&gt;assertSame(0, count($pila));\n\n        array_push($pila, 'batman');\n        $this-&gt;assertSame('batman', $pila[count($pila)-1]);\n        $this-&gt;assertSame(1, count($pila));\n\n        $this-&gt;assertSame('batman', array_pop($pila));\n        $this-&gt;assertSame(0, count($pila));\n    }\n}\n</code></pre>"},{"location":"06herramientas.html#execucio-de-proves","title":"Execuci\u00f3 de Proves","text":"<p>Per executar les proves, pots utilitzar les comandes seg\u00fcents:</p> <p>vendor/bin/codecept run (executa totes les proves) vendor/bin/codecept run unit (executa nom\u00e9s proves unit\u00e0ries) vendor/bin/codecept run --testdox --colors (mostra els resultats en format m\u00e9s llegible)</p>"},{"location":"06herramientas.html#dissenyant-proves","title":"Dissenyant proves","text":"<p>Tal com hem vist en l'exemple, la classe de prova ha d'heretar de <code>\\Codeception\\Test\\Unit</code>, i el nom de la classe ha d'acabar en <code>Test</code>, d'aqu\u00ed ve que h\u00e0gem anomenat la classe de prova com <code>PilaTest</code>. Una prova implica un m\u00e8tode de prova (p\u00fablic) per cada funcionalitat a provar. Cada un dels m\u00e8todes se'ls associa un cas de prova. Els m\u00e8todes han de nomenar-se amb el prefix <code>test</code>, per exemple, <code>testPushAndPop</code>. \u00c9s molt important que el nom siga molt clar i descriptiu del prop\u00f2sit de la prova. (camelCase). En els casos de prova prepararem diverses assercions per a tota la casu\u00edstica: rangs de valors, tipus de dades, excepcions, etc...</p>"},{"location":"06herramientas.html#assercions","title":"Assercions","text":"<p>Les assercions permeten comprovar el resultat dels m\u00e8todes que volem provar. Les assercions esperen que el predicat sempre siga vertader.</p> <p>PHPUnit ofereix les seg\u00fcent assercions:</p> <ul> <li><code>assertTrue</code> / <code>assertFalse</code>: Comprova que la condici\u00f3 donada siga avaluada com true / false</li> <li><code>assertEquals</code> / <code>assertSame</code>: Comprova que dues variables siguen iguals</li> <li><code>assertNotEquals</code> / <code>assertNotSame</code>: Comprova que dues variables NO siguen iguals</li> <li><code>Same</code> \u2192 comprova els tipus. Si no coincideixen els tipus i els valors, l'asserci\u00f3 fallar\u00e0</li> <li><code>Equals</code> \u2192 sense comprovaci\u00f3 estricta</li> <li><code>assertArrayHasKey</code> / <code>assertArrayNotHasKey</code>: Comprova que un array posse\u00efsca un key determinat / o NO ho posse\u00efsca</li> <li><code>assertArraySubset</code>: Comprova que un array posse\u00efsca un altre array com subset del mateix</li> <li><code>assertAttributeContains</code> / <code>assertAttributeNotContains</code>: Comprova que un atribut d'una classe continga una variable determinada / o NO continga una variable determinada</li> <li><code>assertAttributeEquals</code>: Comprova que un atribut d'una classe siga igual a una variable determinada.</li> </ul>"},{"location":"06herramientas.html#comparant-leixida","title":"Comparant l'eixida","text":"<p>Si els m\u00e8todes a provar generen contingut mitjan\u00e7ant <code>echo</code> o una instrucci\u00f3 similar, disposem de les seg\u00fcent expectatives:</p> <ul> <li><code>expectOutputString(salidaEsperada)</code></li> <li><code>expectOutputRegex(expresionRegularEsperada)</code></li> </ul> <p>Les expectatives difereixen de les assercions que informen del resultat que s'espera abans d'invocar al m\u00e8tode. Despr\u00e9s de definir l'expectativa, s'invoca al m\u00e8tode que realitza el <code>echo</code>/<code>print</code>.</p> <pre><code>&lt;?php\nnamespace Dwes\\Videoclub\\Model;\n\nuse PHPUnit\\Framework\\TestCase;\nuse Dwes\\Videoclub\\Model\\CintaVideo;\n\nclass CintaVideoTest extends TestCase {\n    public function testConstructor()\n    {\n        $cinta = new CintaVideo(\"Los cazafantasmas\", 23, 3.5, 107); \n        $this-&gt;assertSame( $cinta-&gt;getNumero(), 23);\n    }\n\n    public function testMuestraResumen()\n    {\n        $cinta = new CintaVideo(\"Los cazafantasmas\", 23, 3.5, 107);\n        $resultado = \"&lt;br&gt;Pel\u00edcula en VHS:\";\n        $resultado .= \"&lt;br&gt;Los cazafantasmas&lt;br&gt;3.5 (IVA no incluido)\";\n        $resultado .= \"&lt;br&gt;Duraci\u00f3n: 107 minutos\";\n        // definimos la expectativa\n        $this-&gt;expectOutputString($resultado);\n        // invocamos al m\u00e9todo que har\u00e1 echo\n        $cinta-&gt;muestraResumen();\n    }\n}\n</code></pre>"},{"location":"06herramientas.html#proveidors-de-dades","title":"Prove\u00efdors de Dades","text":"<p>Els providers en Codeception s'utilitzen principalment per a provar amb diferents conjunts de dades utilitzant el mateix test. Aqu\u00ed tens una guia b\u00e0sica de com utilitzar-los:</p> <p>Definir el Provider: Primer, has de definir una funci\u00f3 que retorni un array de dades. Aquesta funci\u00f3 \u00e9s el teu provider. Per exemple:</p> <pre><code>function myDataProvider() {\nreturn [\n['data1', 'result1'],\n['data2', 'result2']\n];\n}\n</code></pre> <p>Utilitzar el Provider en un Test: Despr\u00e9s, pots utilitzar aquest provider en un m\u00e8tode de prova, passant el nom de la funci\u00f3 provider com a anotaci\u00f3. Per exemple:</p> <pre><code>/**\n* @dataProvider myDataProvider\n  */\n  public function testMyFunction($input, $expected) {\n  $result = myFunction($input);\n  $this-&gt;assertEquals($expected, $result);\n  }\n</code></pre> <p>En aquest exemple, testMyFunction s'executar\u00e0 m\u00faltiples vegades amb cada conjunt de dades proporcionat per myDataProvider. Aix\u00f2 \u00e9s especialment \u00fatil quan vols provar una funci\u00f3 o m\u00e8tode amb diferents valors d'entrada i verificar si el resultat \u00e9s el que esperes en cada cas.</p>"},{"location":"06herramientas.html#provant-excepcions","title":"Provant excepcions","text":"<p>Les proves a m\u00e9s de comprovar que les classes funcionen com s'espera, han de cobrir tots els casos possibles. Aix\u00ed doncs, hem de poder fer proves que esperen que es llance una excepci\u00f3 (i que el missatge continga una certa informaci\u00f3):</p> <p>Per a aix\u00f2, s'utilitzen les seg\u00fcent expectatives:</p> <ul> <li><code>expectException(Excepcion::class)</code></li> <li><code>expectExceptionCode(codigoExcepcion)</code></li> <li><code>expectExceptionMessage(missatge)</code></li> </ul> <p>De la mateixa manera que abans, primer es posa l'expectativa, i despr\u00e9s es provoca que es llance l'excepci\u00f3:</p> <pre><code>&lt;?php\npublic function testAlquilarCupoLleno() {\n    $soporte1 = new CintaVideo(\"Los cazafantasmas\", 23, 3.5, 107); \n    $soporte2 = new Juego(\"The Last of Us Part II\", 26, 49.99, \"PS4\", 1, 1);\n    $soporte3 = new Dvd(\"Origen\", 24, 15, \"es,en,fr\", \"16:9\"); \n    $soporte4 = new Dvd(\"El Imperio Contraataca\", 4, 3, \"es,en\",\"16:9\"); \n\n    $cliente1 = new Cliente(\"Bruce Wayne\", 23); \n    $cliente1-&gt;alquilar($soporte1); \n    $cliente1-&gt;alquilar($soporte2); \n    $cliente1-&gt;alquilar($soporte3); \n\n    $this-&gt;expectException(CupoSuperadoException::class);\n    $cliente1-&gt;alquilar($soporte4); \n}\n</code></pre>"},{"location":"06herramientas.html#referencias","title":"Referencias","text":"<ul> <li>Tutorial de Composer</li> <li>Web Scraping with PHP \u2013 How to Crawl Web Pages Using Open Source Tools</li> <li>PHP Monolog</li> <li>Codeception</li> </ul>"},{"location":"06herramientas.html#projecte-batoibook","title":"Projecte Batoi/Book","text":""},{"location":"06herramientas.html#exercicis","title":"Exercicis","text":"<ol> <li>Instal.la el monolog i el dompdf en el projecte Book.</li> <li> <p>Afegirem un canal per control\u00b7lar els accesos a la p\u00e0gina web de BatoiBooks.</p> <ul> <li>Afegirem el log al login i al register, amb el nom del canal <code>AccesLogger</code>.</li> <li>S'ha d'emmagatzemar en <code>logs/acces.log</code> mostrant tots els missatges des de debug.</li> <li> <p>Dins de la classe User anem a :</p> </li> <li> <p>Quan un usuari es logueja correctament, ha d'escriure un log de tipus info.</p> </li> <li>Quan un usuari es deslogueja, ha d'escriure un log de tipus info.</li> <li>Quan un usuari fa un acc\u00e9s sense exit s'ha d'escriure un log de tipus warning.</li> <li>Quan un usuari es registra, s'ha d'escriure un log de tipus info.</li> </ul> </li> <li> <p>Crea una classe MyLog per centralitzar la creaci\u00f3 dels logs i utilitza-la amb els exercicis anteriors.</p> </li> <li>Crea un enlla\u00e7 en cada llibre de la p\u00e0gina de myBooks per imprimir un llibre en un PDF.</li> <li>Instal\u00b7la el phpdocs utilitzant el composer</li> <li>Documenta la classe Book.</li> <li>Fes que la documentaci\u00f3 del directori <code>app</code> es puga veure en la p\u00e0gina web en el directori <code>docs</code>.</li> </ol>"},{"location":"06herramientas.html#activitats","title":"Activitats","text":"<ol> <li>Guarda en books.log els llibres que s'ha donat d'alta en la p\u00e0gina web. Del llibre es vol guarda el ID, nombre del llibre i usuari que la donat d'alta.</li> <li>Fes que totes les exempcions que es llancen en la p\u00e0gina web es guarden en un fitxer <code>exceptions.log</code> en el directori <code>logs</code> i es pugen vore amb el FirePHP.</li> <li>Crea un bot\u00f3 en la p\u00e0gina <code>myBooks.php</code> que genere un document pdf amb una taula amb els llibres de l'usuari.</li> <li>Documenta totes les classes.</li> <li>Fes que la api <code>books.php</code> retorne tots els llibres si no se li pasa una id.</li> <li> <p>L'editorial McGrawHill ha decidit donar un descompte del 10% al CIPFP Batoi a la familia d'Inform\u00e0tica. La informaci\u00f3 est\u00e0 a la p\u00e0gina https://www.mheducation.es/escolar/ciclos-formativos/familia-profesional-informatica.</p> <ul> <li>Crea els llibres guardan la seg\u00fcent informaci\u00f3:</li> <li>El m\u00f3dul l'haur\u00e0s de buscar per la descripci\u00f3 en la BD.</li> <li>El preu amb el descompte.</li> <li>En observacions va el contingut del llibre.</li> <li>Les p\u00e0gines seran 200. 526. </li> </ul> </li> </ol>"},{"location":"06projecte.html","title":"Projecte Integrador Bloc 1.","text":"Duraci\u00f3 i criteris d'avaluaci\u00f3 <p>Duraci\u00f3 estimada: 16 hores</p> Resultat d'aprenentatge Criteris d'avaluaci\u00f3 3. Escriu blocs de sent\u00e8ncies embeguts en llenguatges de marques, seleccionant i utilitzant les estructures de programaci\u00f3. 4. Desenvolupa aplicacions web embegudes en llenguatges de marques analitzant i incorporant funcionalitats segons especificacions. 5. Desenvolupa aplicacions web identificant i aplicant mecanismes per a separar el codi de presentaci\u00f3 de la l\u00f2gica de negoci. 6. Desenvolupa aplicacions web d'acc\u00e9s a magatzems de dades, aplicant mesures per a mantindre la seguretat i la integritat de la informaci\u00f3"},{"location":"06projecte.html#enunciat-del-projecte-backend-de-batoibooks","title":"Enunciat del Projecte: Backend de BatoiBooks","text":""},{"location":"06projecte.html#objectiu-del-projecte","title":"Objectiu del Projecte","text":"<p>Desenvolupar el backend per a l\u2019aplicaci\u00f3 BatoiBooks en PHP, proporcionant:</p> <ul> <li>Autenticaci\u00f3 per token JWT.</li> <li>Interf\u00edcie d\u2019administraci\u00f3 amb funcionalitats avan\u00e7ades, com la generaci\u00f3 de factures en PDF.</li> </ul>"},{"location":"06projecte.html#funcionalitats-del-backend","title":"Funcionalitats del Backend","text":""},{"location":"06projecte.html#1-bbdd","title":"1. BBDD","text":"<p>Crear la BBDD i les taules utilitzant el seg\u00fcent sql </p>"},{"location":"06projecte.html#2-autenticacio-per-al-frontend","title":"2. Autenticaci\u00f3 per al frontEnd","text":"<ol> <li> <p>Registre: Endpoint per registrar nous usuaris. Rebr\u00e0 dades com <code>email</code>, <code>nick</code> i <code>password</code>, i retornar\u00e0 un token JWT per a la sessi\u00f3 de l\u2019usuari.</p> </li> <li> <p>Login: Endpoint per a l'inici de sessi\u00f3, on es validar\u00e0 <code>email</code> i <code>password</code>. En cas d'\u00e8xit, es generar\u00e0 un token JWT amb la informaci\u00f3 d'identificaci\u00f3 de l'usuari.</p> </li> <li> <p>Validaci\u00f3 de Token: Cada controlador (excepte el de <code>login</code> i <code>register</code>) requerir\u00e0 un token JWT v\u00e0lid per accedir a qualsevol dada, la qual cosa permetr\u00e0 una gesti\u00f3 segura de la sessi\u00f3.</p> </li> </ol>"},{"location":"06projecte.html#3-api-rest","title":"3. API REST","text":"<p>Es crear\u00e0 un fitxer PHP espec\u00edfic per a cada entitat, que atendr\u00e0 les operacions CRUD b\u00e0siques. Les taules que es gestionaran s\u00f3n:</p> <ul> <li>Books</li> <li>Users</li> <li>Modules</li> <li>Courses</li> </ul> <p>Per a cada taula es permetran operacions:</p> <ul> <li>GET: Per obtenir dades (llistat o element per ID).</li> <li>POST: Per inserir nous elements.</li> <li>PUT: Per modificar elements existents.</li> <li>DELETE: Per eliminar elements.</li> </ul> <p>Cada operaci\u00f3 validar\u00e0 les dades abans de ser processades i respondr\u00e0 amb els estats corresponents.</p>"},{"location":"06projecte.html#exemples-de-peticions","title":"Exemples de peticions","text":"<ul> <li>Tornar un llibre</li> </ul> <pre><code>GET /api/books.php?id=2\n</code></pre> <ul> <li>Tornar tots els llibres</li> </ul> <pre><code>GET /api/books.php\n</code></pre> <ul> <li>Afegir un llibre</li> </ul> <pre><code>POST /api/books.php\nContingut JSON: {\n\"userId\": 2,\n\"moduleCode\": \"0011\",\n\"publisher\": \"Apunts\",\n\"price\": 15.00,\n\"pages\": 100,\n\"status\": \"new\",\n\"photo\": \"ruta_foto.jpg\",\n\"comments\": \"En bon estat\"\n}\n</code></pre>"},{"location":"06projecte.html#4-interficie-dadministrador","title":"4. Interf\u00edcie d\u2019Administrador","text":"<ol> <li>Autenticaci\u00f3 de l'usuari: L'usuari s'autenticar\u00e0 amb un usuari i es comprovar\u00e0 que \u00e9s l'administrador.</li> <li>Acc\u00e9s al CRUD de M\u00f2duls i Cursos: L\u2019usuari administrador podr\u00e0 gestionar completament les taules <code>modules</code> i <code>courses</code>.</li> <li>Generaci\u00f3 de Factures en PDF:<ul> <li>Permetre la selecci\u00f3 de dates i usuaris.</li> <li>Calcular un 10% de l\u2019import total de les vendes per generar la factura.</li> <li>Incloure el logotip de l'aplicaci\u00f3, data de generaci\u00f3, import total i desglossament de vendes.</li> </ul> </li> </ol>"},{"location":"06projecte.html#exigencies-tecniques","title":"Exig\u00e8ncies T\u00e8cniques","text":"<ul> <li>Utilitzar PHP com a llenguatge del servidor.</li> <li>Estructurar el projecte amb fitxers separats per a cada entitat dins de la carpeta <code>api/</code> i <code>backend</code></li> <li>Utilitzar el format JSON per a la comunicaci\u00f3 entre el client i el servidor.</li> <li>Garantir la seguretat en les peticions autenticades mitjan\u00e7ant el token JWT.</li> <li>Utilitzar en la mesura de lo possible el MVC en el backend i els control\u00b7ladors per a respondre a les peticions de l'API.</li> <li>Cal fer test de la l\u00f2gica de la factura.</li> <li>Cal guardar en un fitxer de log les peticions que es fan a l'api en forma de: Usuari, IP client i M\u00e8tode utilitzat.   </li> <li>Utilitzar, en la mesura de lo possible, exempcions per al maneig d'errors de l'usuari.</li> </ul>"},{"location":"06projecte.html#exemples-de-resposta","title":"Exemples de resposta","text":"<p>Estos exemples es poden agafar com a refer\u00e8ncia per a la implementaci\u00f3 de l'API. Per\u00f2 nom\u00e9s s\u00f3n la base sobre la que construir una soluci\u00f3 pr\u00f2pia que puga incorporar l'har\u00e8ncia de classes per fer mes eficient i reutilitzable el codi.</p>"},{"location":"06projecte.html#estructura-de-directoris","title":"Estructura de directoris","text":"<pre><code>App\n\u251c\u2500\u2500 Controllers\n\u2502   \u251c\u2500\u2500 Api\n\u2502   \u2502   \u251c\u2500\u2500 ApiController.php \n\u2502   \u2502   \u251c\u2500\u2500 BookController.php\n\u2502   \u2502   \u251c\u2500\u2500 CourseController.php\n\u2502   \u2502   \u251c\u2500\u2500 ModuleController.php\n\u2502   \u2502   \u2514\u2500\u2500 AuthController.php\n\u2502   \u251c\u2500\u2500 ModuleController.php\n\u2502   \u251c\u2500\u2500 CourseController.php\n\u2502   \u2514\u2500\u2500 AuthController.php\n\u251c\u2500\u2500 Helpers      \n\u251c\u2500\u2500 Exceptions       \n\u251c\u2500\u2500 Models\n\u2502   \u251c\u2500\u2500 Book.php\n\u2502   \u251c\u2500\u2500 Course.php\n\u2502   \u251c\u2500\u2500 Module.php\n\u2502   \u2514\u2500\u2500 User.php\n\u251c\u2500\u2500 Services\n\u2502   \u251c\u2500\u2500 DBService.php\n\u2502   \u2514\u2500\u2500 AuthService.php\n\u251c\u2500\u2500 Views\n\u251c\u2500\u2500 logs \n\u251c\u2500\u2500 tests\n\u251c\u2500\u2500 config\n\u2502   \u2514\u2500\u2500 connection.php\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 api\n\u2502   \u2502   \u251c\u2500\u2500 books.php\n\u2502   \u2502   \u251c\u2500\u2500 courses.php\n\u2502   \u2502   \u251c\u2500\u2500 modules.php\n\u2502   \u2502   \u251c\u2500\u2500 register.php\n\u2502   \u2502   \u2514\u2500\u2500 login.php\n\u2502   \u251c\u2500\u2500 backend\n\u2502   \u2502   \u251c\u2500\u2500 login.php\n\u2502   \u2502   \u251c\u2500\u2500 generateInvoice.php\n\u2502   \u2502   \u251c\u2500\u2500 modules.php\n\u2502   \u2502   \u2514\u2500\u2500 courses.php  \n\u2514\u2500\u2500 \u2514\u2500\u2500 index.php\n</code></pre>"},{"location":"06projecte.html#api","title":"API","text":""},{"location":"06projecte.html#postman","title":"POSTMAN","text":"<p>Ac\u00ed tens una col.lecci\u00f3 del POSTMAN per realitzar les peticions i provar-les.</p>"},{"location":"06projecte.html#dbservicephp","title":"DBService.php","text":"<pre><code>namespace BatoiBook\\Services;\n\nclass DBService\n{\n    public static function connect(): \\PDO\n    {\n        $dbConfig =  require  $_SERVER['DOCUMENT_ROOT'] . '/../config/connection.php';\n\n        try {\n            $dsn = \"mysql:host=\" . $dbConfig['host'] . \";dbname=\" . $dbConfig['dbname'];\n            $db = new \\PDO($dsn, $dbConfig['username'], $dbConfig['password']);\n            $db-&gt;setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);\n        } catch (\\PDOException $e) {\n            die(\"Error de connexi\u00f3: \" . $e-&gt;getMessage());\n        }\n\n        return $db;\n\n    }\n}\n</code></pre>"},{"location":"06projecte.html#model","title":"Model","text":"<pre><code>namespace BatoiBook\\Models;\n\nclass Course\n{\n   public function __construct(\n   public int $id = 0,\n   public string $course = '',\n   public int $familyId = 0,\n   public string $vliteral = '',\n   public string $cliteral = '' ) \n   {}\n}\n</code></pre>"},{"location":"06projecte.html#controlador","title":"Controlador","text":"<p>En el ApiController.php es troben les funcions comunes a tots els controladors, com el jsonResponse i errorResponse.  </p> <pre><code>namespace BatoiBook\\Controllers\\Api;\nuse \\PDO;\nuse \\PDOException;\n\nclass CourseController extends ApiController\n{\n    protected PDO $db;\n    public function __construct()\n    {\n        $this-&gt;db = DBService::connect();\n    }\n\n    public function getAll(): void\n    {\n        $stmt = $this-&gt;db-&gt;prepare(\"SELECT * FROM courses\");\n        $stmt-&gt;execute();\n        $stmt-&gt;setFetchMode(PDO::FETCH_CLASS | PDO::FETCH_PROPS_LATE, Course::class);\n\n        $this-&gt;jsonResponse($stmt-&gt;fetchAll());\n    }\n\n    public function getOne(int $id): void\n    {\n        //TODO: Implementar consulta \n        $record = $stmt-&gt;fetch();\n\n        if ($record) {\n            $this-&gt;jsonResponse($record);\n        } else {\n            $this-&gt;errorResponse(\"Record not found\", 404);\n        }\n    }\n\n    public function create(array $data): int\n    {\n        try {\n            //TODO: Implementar inserci\u00f3\n            return $this-&gt;db-&gt;lastInsertId();\n         } catch (PDOException $e) {\n            $this-&gt;errorResponse(\"Failed to create record: \" . $e-&gt;getMessage());\n        }\n    }\n\n    public function update(int $id, array $data): void\n    {\n        try {\n            //TODO: Implementar actualitzaci\u00f3\n\n            $stmt-&gt;execute();\n            if ($stmt-&gt;rowCount() &gt; 0) {\n                $this-&gt;jsonResponse([\"message\" =&gt; \"Record updated successfully\"]);\n            } else {\n                $this-&gt;errorResponse(\"Record not found\", 404);\n            }\n        } catch (PDOException $e) {\n            $this-&gt;errorResponse(\"Failed to update record: \" . $e-&gt;getMessage());\n        }\n    }\n\n    public function delete(int $id): void\n    {\n        //TODO: Implementar eliminaci\u00f3\n        if ($stmt-&gt;rowCount() &gt; 0) {\n            $this-&gt;jsonResponse([\"message\" =&gt; \"Record deleted successfully\"]);\n        } else {\n            $this-&gt;errorResponse(\"Record not found\", 404);\n        }\n    }\n}\n</code></pre>"},{"location":"06projecte.html#coursesphp","title":"courses.php","text":"<pre><code>require_once $_SERVER['DOCUMENT_ROOT'] . '/../vendor/autoload.php';\nrequire_once $_SERVER['DOCUMENT_ROOT'] . '/../Helpers/functions.php';\n\nuse BatoiBook\\Controllers\\Api\\CourseController;\n\nheader(\"Content-Type: application/json\");\n\n$controller = new CourseController();\n$method = $_SERVER['REQUEST_METHOD'];\n$id = isset($_GET['id']) ? (int)$_GET['id'] : null;\n\nswitch ($method) {\n    case 'GET':\n        if (isset($id)) {\n            $controller-&gt;getOne($id);\n        } else {\n            $controller-&gt;getAll ();\n       }\n        break;\n    case 'POST':\n        $data = json_decode(file_get_contents('php://input'), true);\n\n        if ($data) {\n            $controller-&gt;create($data);\n        } else {\n            echo json_encode([\"error\" =&gt; \"Invalid data\"]);\n        }\n        break;\n    case 'PUT':\n        $data = json_decode(file_get_contents('php://input'), true);\n\n        if (isset($_GET['id']) &amp;&amp; $data) {\n            $success = $controller-&gt;update ($id, $data);\n            echo json_encode([\"message\" =&gt; $success ? \"Field updated successfully\" : \"Book not found\"]);\n        } else {\n            echo json_encode([\"error\" =&gt; \"Invalid data or ID\"]);\n        }\n        break;\n    case 'DELETE':\n        if (isset($_GET['id'])) {\n            $controller-&gt;delete ($id);\n        } else {\n            echo json_encode([\"error\" =&gt; \"ID not provided\"]);\n        }\n        break;\n    default:\n        echo json_encode([\"error\" =&gt; \"Invalid request method\"]);\n        break;\n}\n</code></pre>"},{"location":"06projecte.html#autentificacio","title":"Autentificaci\u00f3","text":""},{"location":"06projecte.html#requeriments-previs","title":"Requeriments previs","text":"<p>Cal instal\u00b7lar la llibreria <code>firebase/php-jwt</code> per a poder generar i validar els tokens JWT.</p> <pre><code>composer require firebase/php-jwt\n</code></pre>"},{"location":"06projecte.html#loginphp","title":"login.php","text":"<pre><code>   require_once $_SERVER['DOCUMENT_ROOT'] . '/../vendor/autoload.php';\n\n   use Firebase\\JWT\\JWT;\n   use Firebase\\JWT\\Key;\n   use BatoiBook\\Services\\DBService;\n\n   // Clau secreta per generar el token (\u00e9s important mantenir-la segura)\n   $secretKey = 'clau_secreta';\n   header('Content-Type: application/json');\n   // Llegeix les dades de la petici\u00f3\n   $data = json_decode(file_get_contents(\"php://input\"));\n\n   if (!empty($data-&gt;email) &amp;&amp; !empty($data-&gt;password)) {\n\n        $db = DBService::connect();  \n        //TODO: Implementar consulta per recuperar l'usuari\n        $user = $stmt-&gt;fetch();\n        if ($user) {\n            if (password_verify($data-&gt;password,$user-&gt;password)) {\n                $payload = [\n                     \"iss\" =&gt; \"http://localhost\", // Issuer\n                     \"aud\" =&gt; \"http://localhost\", // Audience\n                     \"iat\" =&gt; time(),             // Issued at\n                     \"exp\" =&gt; time() + 3600,      // Expira en una hora\n                     \"userId\" =&gt; $userId\n                 ];\n                $jwt = JWT::encode($payload, $secretKey, 'HS256');    \n                echo json_encode([\"success\" =&gt; true, \"token\" =&gt; $jwt]);\n            } else {\n                echo json_encode([\"success\" =&gt; false, \"message\" =&gt; \"Contrasenya incorrecta\"]);\n            }\n        } else {\n            echo json_encode([\"success\" =&gt; false, \"message\" =&gt; \"Usuari no trobat\"]);\n        }\n\n   } else {\n       echo json_encode([\"success\" =&gt; false, \"message\" =&gt; \"Falten dades\"]);\n   }\n</code></pre>"},{"location":"06projecte.html#registerphp","title":"register.php","text":"<pre><code>//TODO: Implementar registre d'usuari\n</code></pre>"},{"location":"06projecte.html#validatephp","title":"validate.php","text":"<p>per a validar que qualsevol petici\u00f3 a l'API siga autenticada. <pre><code>if (!isset($_SERVER['HTTP_AUTHORIZATION'])) {\n      throw new UnAuthoritzedException(\"Token no proporcionat\");\n}\n$authHeader = $_SERVER['HTTP_AUTHORIZATION'];\n[$type, $token] = explode(\" \", $authHeader);\nif ($type !== 'Bearer') {\n    throw new UnAuthoritzedException(\"Tipus de token no v\u00e0lid\");\n}\ntry {\n    $jwt = JWT::decode($token, new Key(SELF::SECRET_KEY, 'HS256'));\n    $userId = $jwt-&gt;userId;\n} catch (Exception $e) {\n    throw new UnAuthoritzedException(\"Token no v\u00e0lid o expirat\");\n}\n</code></pre></p>"},{"location":"07frameworks.html","title":"Frameworks PHP. Laravel","text":""},{"location":"07frameworks.html#introduccio-als-frameworks-php-i-laravel","title":"Introducci\u00f3 als Frameworks PHP i Laravel","text":""},{"location":"07frameworks.html#que-es-un-framework","title":"Qu\u00e8 \u00e9s un framework?","text":"<p>Un framework proporciona una estructura base per al desenvolupament d'aplicacions, facilitant tasques com:</p> <ul> <li>Connexi\u00f3 a bases de dades.</li> <li>Organitzaci\u00f3 del codi.</li> <li>Gesti\u00f3 de rutes i validacions.</li> </ul> <p>La majoria de frameworks PHP segueixen el patr\u00f3 MVC (Model-Vista-Controlador), que permet separar clarament la l\u00f2gica de negoci, la interf\u00edcie d'usuari i les dades.</p>"},{"location":"07frameworks.html#per-que-utilitzar-un-framework","title":"Per qu\u00e8 utilitzar un framework?","text":"<p>Els frameworks ofereixen:</p> <ul> <li>Estandarditzaci\u00f3: Promouen bones pr\u00e0ctiques de desenvolupament.</li> <li>Efic\u00e0cia: Acceleraci\u00f3 del desenvolupament amb eines preconstru\u00efdes.</li> <li>Mantenibilitat: Faciliten l'escalabilitat i el manteniment del codi.</li> </ul> <p>Exemples de frameworks PHP populars:</p> <ul> <li>Laravel: Sintaxi clara, funcionalitats modernes, ideal per a projectes de qualsevol mida.</li> <li>Symfony: Robust i altament modular, enfocat en aplicacions complexes.</li> <li>Slim: Lleuger i ideal per APIs RESTful.</li> </ul>"},{"location":"07frameworks.html#laravel-el-framework-de-referencia","title":"Laravel: El framework de refer\u00e8ncia","text":""},{"location":"07frameworks.html#per-que-triar-laravel","title":"Per qu\u00e8 triar Laravel?","text":"<p>Laravel \u00e9s un dels frameworks m\u00e9s populars gr\u00e0cies a:</p> <ul> <li>Facilitat d'\u00fas: Sintaxi expressiva i intu\u00eftiva.</li> <li>Patr\u00f3 MVC: Clarament implementat per separar l\u00f2gica, vistes i dades.</li> <li>ORM Eloquent: Gesti\u00f3 intu\u00eftiva de bases de dades.</li> <li>Artisan CLI: Automatitzaci\u00f3 de tasques habituals com migracions o generaci\u00f3 de models.</li> <li>Blade: Motor de plantilles per modularitzar vistes amb her\u00e8ncia i layouts.</li> </ul>"},{"location":"07frameworks.html#caracteristiques-clau","title":"Caracter\u00edstiques clau","text":"<ol> <li>Eloquent ORM: Treballar amb bases de dades de manera intu\u00eftiva, suportant relacions complexes.</li> <li>Migracions: Control de versions per a estructures de bases de dades.</li> <li>Artisan: L\u00ednia de comandaments per accelerar tasques rutin\u00e0ries.</li> <li>Blade: Motor de plantilles amb sintaxi simplificada.</li> <li>Seguretat integrada: Protecci\u00f3 contra atacs com CSRF i XSS.</li> <li>Ecosistema extens: Suport per autenticaci\u00f3 (Sanctum, Passport), gesti\u00f3 de depend\u00e8ncies, i m\u00e9s.</li> </ol>"},{"location":"07frameworks.html#installacio-de-laravel","title":"Instal\u00b7laci\u00f3 de Laravel","text":""},{"location":"07frameworks.html#installacio-amb-docker-laravel-sail","title":"Instal\u00b7lacio amb docker (laravel sail)","text":"<p>Si ja esteu desenvolupant Linux i Docker Compose est\u00e0 instal\u00b7lat, podeu utilitzar una senzilla ordre de terminal per a crear un nou projecte Laravel. Per exemple, per a crear una nova aplicaci\u00f3 Laravel en un directori anomenat \"exemple-app\", podeu executar l'ordre seg\u00fcent al terminal:</p> <pre><code>curl -s https://laravel.build/example-app | bash\n</code></pre> <p>Per descomptat, podeu canviar \"exemple-app\" en aquest URL a qualsevol cosa que vulgueu - nom\u00e9s assegureu-vos que el nom de l'aplicaci\u00f3 nom\u00e9s cont\u00e9 car\u00e0cters alfanum\u00e8rics, guions i guions baixos. El directori de l'aplicaci\u00f3 Laravel es crear\u00e0 dins del directori des del qual executeu l'ordre.</p> <p>La instal\u00b7laci\u00f3 del Sail pot trigar diversos minuts mentre els contenidors de l'aplicaci\u00f3 del sail es construeixen a la vostra m\u00e0quina local.</p> <p>Ara podeu navegar al directori de l'aplicaci\u00f3 i iniciar Laravel Sail. Laravel Sail proporciona una interf\u00edcie senzilla de l\u00ednia d'ordres per a interactuar amb la configuraci\u00f3 predeterminada de l'acoblador Laravel: <pre><code>cd exemple-app &amp;&amp; ./vendor/bin/sail up &amp;\n</code></pre></p> <p>Un cop iniciats els contenidors Docker de l'aplicaci\u00f3, podeu accedir a l'aplicaci\u00f3 al vostre navegador web a: http://localhost.</p> <p>I per a inicialitzar la base de dades des de dins del contenidor:</p> <pre><code>./vendor/bin/sail artisan migrate\n</code></pre>"},{"location":"07frameworks.html#phpmyadmin","title":"phpmyadmin","text":"<p>Si volem que funcione el phpmyadmin haurien d'afegir un altre contenidor docker, o farem incluint el seg\u00fcent codi en el docker-compose.yml</p> <pre><code>myadmin:\n image: 'phpmyadmin:latest'\n ports:\n - 8080:80\n environment:\n MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'\n links:\n - \"mysql:db\"\n depends_on:\n - mysql\n networks:\n - sail\n</code></pre>"},{"location":"07frameworks.html#configuracio-de-laravel","title":"Configuraci\u00f3 de Laravel","text":"<p>La configuraci\u00f3 en Laravel est\u00e0 centralitzada i organitzada en fitxers dins del directori config/. Aquests fitxers permeten ajustar el comportament de diferents aspectes de l'aplicaci\u00f3.</p>"},{"location":"07frameworks.html#fitxer-env","title":"Fitxer .env","text":"<p>Laravel utilitza el fitxer <code>.env</code> per gestionar configuracions espec\u00edfiques de l'entorn. Aquest fitxer permet canviar par\u00e0metres sense modificar el codi base.</p>"},{"location":"07frameworks.html#exemple-de-env","title":"Exemple de <code>.env</code>:","text":"<pre><code>APP_NAME=\"LaravelApp\"\nAPP_ENV=local\nAPP_KEY=base64:...\nAPP_DEBUG=true\nAPP_URL=http://localhost\n\nDB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=laravel\nDB_USERNAME=root\nDB_PASSWORD=\n</code></pre>"},{"location":"07frameworks.html#configuracio-predeterminada","title":"Configuraci\u00f3 predeterminada","text":"<p>Els fitxers de configuraci\u00f3 es troben al directori <code>config/</code>. A continuaci\u00f3 es descriuen alguns dels m\u00e9s importants:</p>"},{"location":"07frameworks.html#1-configappphp","title":"1. config/app.php","text":"<p>Cont\u00e9 configuracions globals de l'aplicaci\u00f3.</p> <ul> <li><code>name</code>: Nom de l'aplicaci\u00f3.</li> <li><code>env</code>: Entorn d'execuci\u00f3 (<code>local</code>, <code>production</code>, <code>testing</code>).</li> <li><code>debug</code>: Habilita o deshabilita el mode depuraci\u00f3 (<code>true</code> o <code>false</code>).</li> <li><code>timezone</code>: Zona hor\u00e0ria de l'aplicaci\u00f3 (per defecte <code>UTC</code>).</li> <li><code>locale</code>: Idioma predeterminat.</li> <li><code>providers</code>: Llista de prove\u00efdors de serveis.</li> <li><code>aliases</code>: Aliases per a facades.</li> </ul>"},{"location":"07frameworks.html#2-configdatabasephp","title":"2. config/database.php","text":"<p>Configura les bases de dades de l'aplicaci\u00f3.</p> <ul> <li><code>default</code>: Connexi\u00f3 predeterminada (<code>mysql</code>, <code>sqlite</code>, <code>pgsql</code>, etc.).</li> <li>Configuracions per a cada connexi\u00f3:</li> <li><code>mysql</code>: Exemple:  <pre><code>'mysql' =&gt; [\n'driver' =&gt; 'mysql',\n'host' =&gt; env('DB\\_HOST', '127.0.0.1'),\n'port' =&gt; env('DB\\_PORT', '3306'),\n'database' =&gt; env('DB\\_DATABASE', 'laravel'),\n'username' =&gt; env('DB\\_USERNAME', 'root'),\n'password' =&gt; env('DB\\_PASSWORD', ''),\n],\n</code></pre></li> </ul>"},{"location":"07frameworks.html#3-configmailphp","title":"3. config/mail.php","text":"<p>Configura el sistema d'enviament de correus electr\u00f2nics.</p> <ul> <li><code>default</code>: Transport predeterminat (<code>smtp</code>, <code>mailgun</code>, <code>sendmail</code>, etc.).</li> <li>Configuracions SMTP:  <pre><code>'mailers' =&gt; [\n'smtp' =&gt; [\n'transport' =&gt; 'smtp',\n'host' =&gt; env('MAIL\\_HOST', 'smtp.mailtrap.io'),\n'port' =&gt; env('MAIL\\_PORT', 2525),\n'username' =&gt; env('MAIL\\_USERNAME'),\n'password' =&gt; env('MAIL\\_PASSWORD'),\n'encryption' =&gt; env('MAIL\\_ENCRYPTION', 'tls'),\n],\n],\n</code></pre></li> </ul>"},{"location":"07frameworks.html#4-configfilesystemsphp","title":"4. config/filesystems.php","text":"<p>Gestiona els sistemes d'arxius.</p> <ul> <li><code>default</code>: Sistema predeterminat (local, s3, etc.).</li> <li>Configuraci\u00f3 de discos: <pre><code> 'disks' =&gt; [\n 'local' =&gt; [\n 'driver' =&gt; 'local',\n 'root' =&gt; storage_path('app'),\n ],\n 's3' =&gt; [\n 'driver' =&gt; 's3',\n 'key' =&gt; env('AWS_ACCESS_KEY_ID'),\n 'secret' =&gt; env('AWS_SECRET_ACCESS_KEY'),\n 'region' =&gt; env('AWS_DEFAULT_REGION'),\n 'bucket' =&gt; env('AWS_BUCKET'),\n ],\n ],\n</code></pre></li> </ul>"},{"location":"07frameworks.html#funcions-dajuda","title":"Funcions d'ajuda","text":"<p>Laravel proporciona helpers per treballar amb configuracions de manera senzilla i din\u00e0mica.</p>"},{"location":"07frameworks.html#accedir-a-configuracions","title":"Accedir a configuracions","text":"<p>Utilitza la funci\u00f3 <code>config()</code> per obtenir valors de configuraci\u00f3 des de qualsevol lloc de l'aplicaci\u00f3:</p> <pre><code>config('app.name'); // Retorna el nom de l'aplicaci\u00f3\n</code></pre>"},{"location":"07frameworks.html#canviar-configuracions-en-temps-dexecucio","title":"Canviar configuracions en temps d'execuci\u00f3","text":"<p>Pots modificar configuracions de forma temporal durant l'execuci\u00f3 de l'aplicaci\u00f3:</p> <pre><code>config(['app.debug' =&gt; false]); // Desactiva el mode depuraci\u00f3\n</code></pre>"},{"location":"07frameworks.html#establir-valors-predeterminats","title":"Establir valors predeterminats","text":"<p>Si el valor no existeix, pots establir un valor predeterminat:</p> <p><pre><code>$value = config('app.missing_key', 'valor per defecte');\n</code></pre> Aquestes funcions s\u00f3n \u00fatils per ajustar l'aplicaci\u00f3 a les necessitats de l'entorn o per gestionar configuracions espec\u00edfiques durant l'execuci\u00f3.</p>"},{"location":"07frameworks.html#el-comanament-artisan","title":"El comanament Artisan","text":"<p>Laravel inclou un interf\u00edcie de l\u00ednia de comandos (CLI, Command line interface) anomenat Artisan. Aquesta utilitat ens va a permetre realitzar m\u00faltiples tasques necess\u00e0ries durant el proc\u00e9s de desenvolupament o desplegament a producci\u00f3 d'una aplicaci\u00f3, per la qual cosa ens facilitar\u00e0 i accelerar\u00e0 el treball. Per a veure una llista de totes les opcions que inclou Artisan podem executar el seg\u00fcent comando en un consola o terminal del sistema en la carpeta arrel del nostre projecte:</p> <pre><code>php artisan list\n</code></pre> <p>Si volem obtenir una ajuda m\u00e9s detallada sobre alguna de les opcions de Artisan simplement hem d'escriure la paraula help davant del comando en q\u00fcesti\u00f3, per exemple:</p> <pre><code>php artisan help migrate\n</code></pre> <p>A poc a poc anirem veient m\u00e9s opcions de Artisan, de moment anem a comentar solament dues opcions importants: el llistat de rutes i la generaci\u00f3 de codi.</p> <p>Per a veure un llistat amb totes les rutes que hem definit en el fitxer routes.php podem executar el comando:</p> <pre><code>php artisan route:list\n</code></pre> <p>A\u00e7\u00f2 ens mostrar\u00e0 una taula amb el m\u00e8tode, l'adre\u00e7a, l'acci\u00f3 i els filtres definits per a totes les rutes. D'aquesta forma podem comprovar totes les rutes de la nostra aplicaci\u00f3 i assegurar-nos que estiga tot correcte.</p>"},{"location":"07frameworks.html#estructura-dun-projecte-laravel","title":"Estructura d'un projecte Laravel","text":"<p>Laravel segueix una estructura modular basada en el patr\u00f3 MVC (Model-Vista-Controlador). Aquesta organitzaci\u00f3 facilita la separaci\u00f3 de responsabilitats, manteniment i escalabilitat. A continuaci\u00f3, es descriuen les carpetes m\u00e9s importants.</p>"},{"location":"07frameworks.html#carpetes-principals","title":"Carpetes principals","text":""},{"location":"07frameworks.html#1-app","title":"1. app/","text":"<p>Cont\u00e9 la l\u00f2gica principal de l'aplicaci\u00f3.</p> <ul> <li>Models/: Classes que representen les taules de la base de dades. Gestionen les relacions i la l\u00f2gica de negoci.</li> <li>Http/Controllers/: Controladors que processen les peticions i retornen respostes.</li> <li>Http/Middleware/: Classes per filtrar i processar les peticions abans d'arribar als controladors.</li> <li>Observers/: Classes per observar i respondre a esdeveniments dels models.</li> <li>Policies/: Gestionen l'autenticaci\u00f3 basada en permisos.</li> </ul>"},{"location":"07frameworks.html#2-bootstrap","title":"2. bootstrap/","text":"<p>Cont\u00e9 el fitxer <code>app.php</code>, que inicialitza el framework i carrega configuracions b\u00e0siques. Tamb\u00e9 inclou la cach\u00e9 de rutes i serveis per millorar el rendiment.</p>"},{"location":"07frameworks.html#3-config","title":"3. config/","text":"<p>Fitxers de configuraci\u00f3 global de l'aplicaci\u00f3 (base de dades, mail, cues, etc.). \u00c9s recomanable revisar aquests fitxers per personalitzar-los segons les necessitats del projecte.</p>"},{"location":"07frameworks.html#4-database","title":"4. database/","text":"<p>Gesti\u00f3 de bases de dades.</p> <ul> <li>Migrations/: Fitxers per definir l'estructura de les taules de manera program\u00e0tica.</li> <li>Factories/: Generaci\u00f3 de dades de prova per als models.</li> <li>Seeders/: Inserci\u00f3 de dades inicials per a la base de dades.</li> </ul>"},{"location":"07frameworks.html#5-public","title":"5. public/","text":"<p>Punt d'entrada de l'aplicaci\u00f3. Cont\u00e9:</p> <ul> <li>Fitxer <code>index.php</code>, que gestiona totes les peticions.</li> <li>Recursos p\u00fablics com CSS, JavaScript, imatges.</li> </ul>"},{"location":"07frameworks.html#6-resources","title":"6. resources/","text":"<p>Carpeta de recursos per a la interf\u00edcie d'usuari.</p> <ul> <li>views/: Cont\u00e9 les vistes Blade.</li> <li>lang/: Fitxers de traducci\u00f3 per a aplicacions multiling\u00fces.</li> <li>css/ i js/: Recursos d'estil i funcionalitat del client.</li> </ul>"},{"location":"07frameworks.html#7-routes","title":"7. routes/","text":"<p>Defineix totes les rutes de l'aplicaci\u00f3.</p> <ul> <li>web.php: Rutes per a l'aplicaci\u00f3 web.</li> <li>api.php: Rutes per a APIs RESTful.</li> <li>console.php: Comandes Artisan personalitzades.</li> <li>channels.php: Rutes per a canals de difusi\u00f3.</li> </ul>"},{"location":"07frameworks.html#8-storage","title":"8. storage/","text":"<p>Emmagatzematge d'arxius generats per l'aplicaci\u00f3.</p> <ul> <li>app/: Cont\u00e9 arxius d'usuari o aplicaci\u00f3.</li> <li>framework/: Cach\u00e9, sessions, i altres fitxers temporals.</li> <li>logs/: Registres d'errors i activitat.</li> </ul>"},{"location":"07frameworks.html#9-tests","title":"9. tests/","text":"<p>Inclou proves automatitzades per garantir el bon funcionament de l'aplicaci\u00f3.</p> <ul> <li>Feature/: Proves completes que cobreixen m\u00faltiples components.</li> <li>Unit/: Proves individuals per a components o m\u00e8todes espec\u00edfics.</li> </ul>"},{"location":"07frameworks.html#10-vendor","title":"10. vendor/","text":"<p>Carpeta gestionada per Composer. Cont\u00e9 totes les depend\u00e8ncies i paquets de tercers utilitzats pel projecte. No s'ha de modificar manualment.</p>"},{"location":"07frameworks.html#desenvolupament-del-frontend","title":"Desenvolupament del Frontend","text":"<p>Laravel ofereix diverses opcions per al desenvolupament del frontend, depenent de si prefereixes utilitzar PHP o frameworks JavaScript com Vue o React.</p>"},{"location":"07frameworks.html#utilitzant-php","title":"Utilitzant PHP","text":""},{"location":"07frameworks.html#blade","title":"Blade","text":"<p>Blade \u00e9s el motor de plantilles lleuger de Laravel que permet crear vistes amb una sintaxi senzilla per mostrar dades i iterar sobre elles.</p>"},{"location":"07frameworks.html#livewire","title":"Livewire","text":"<p>Livewire \u00e9s un framework que facilita la construcci\u00f3 d'interf\u00edcies din\u00e0miques utilitzant PHP, sense necessitat de JavaScript addicional.</p>"},{"location":"07frameworks.html#utilitzant-vue-o-react","title":"Utilitzant Vue o React","text":""},{"location":"07frameworks.html#inertia","title":"Inertia","text":"<p>Inertia actua com a pont entre Laravel i frameworks com Vue o React, permetent construir aplicacions modernes sense gestionar rutes o autenticaci\u00f3 al costat del client.</p>"},{"location":"07frameworks.html#kits-dinici","title":"Kits d'Inici","text":"<p>Laravel proporciona kits com Breeze i Jetstream que ofereixen scaffolding per a l'autenticaci\u00f3 i altres funcionalitats, utilitzant Blade, Livewire, Vue o React.</p>"},{"location":"07frameworks.html#agrupacio-dactius","title":"Agrupaci\u00f3 d'Actius","text":"<p>Laravel utilitza Vite per compilar i agrupar els actius del frontend, oferint temps de compilaci\u00f3 r\u00e0pids i reempla\u00e7ament de m\u00f2duls en calent durant el desenvolupament.</p>"},{"location":"07frameworks.html#laravel-kits-dinici","title":"Laravel : Kits d'Inici","text":"<p>Laravel ofereix diversos kits d'inici per agilitzar el desenvolupament d'aplicacions, proporcionant scaffolding per a l'autenticaci\u00f3 i altres funcionalitats essencials.</p>"},{"location":"07frameworks.html#laravel-breeze","title":"Laravel Breeze","text":"<p>Breeze \u00e9s un kit d'inici minimalista que implementa les funcionalitats b\u00e0siques d'autenticaci\u00f3, incloent:</p> <ul> <li>Inici de sessi\u00f3</li> <li>Registre</li> <li>Restabliment de contrasenya</li> <li>Verificaci\u00f3 de correu electr\u00f2nic</li> <li>Confirmaci\u00f3 de contrasenya</li> </ul> <p>Per defecte, Breeze utilitza plantilles Blade estilitzades amb Tailwind CSS. Tamb\u00e9 ofereix opcions de scaffolding basades en Livewire o Inertia, amb la possibilitat d'utilitzar Vue o React.</p>"},{"location":"07frameworks.html#laravel-jetstream","title":"Laravel Jetstream","text":"<p>Jetstream \u00e9s un kit d'inici m\u00e9s robust que amplia les funcionalitats de Breeze, afegint:</p> <ul> <li>Autenticaci\u00f3 de dos factors</li> <li>Gesti\u00f3 de sessions</li> <li>Suport per a API mitjan\u00e7ant Laravel Sanctum</li> <li>Opcionalment, gesti\u00f3 d'equips</li> </ul> <p>Jetstream est\u00e0 dissenyat amb Tailwind CSS i ofereix la possibilitat d'utilitzar Livewire o Inertia per al frontend.</p>"},{"location":"07frameworks.html#installacio","title":"Instal\u00b7laci\u00f3","text":"<p>Per instal\u00b7lar Laravel Breeze en una aplicaci\u00f3 Laravel existent:</p> <p><pre><code>composer require laravel/breeze --dev\nphp artisan breeze:install\nphp artisan migrate\nnpm install\nnpm run dev\n</code></pre> Per instal\u00b7lar Laravel Jetstream:</p> <p><pre><code>composer require laravel/jetstream\nphp artisan jetstream:install livewire\nphp artisan migrate\nnpm install\nnpm run dev\n</code></pre> Nota: Substitueix livewire per inertia si prefereixes utilitzar Inertia.</p>"},{"location":"07frameworks.html#arquitectura-dun-projecte-laravel","title":"Arquitectura d'un projecte Laravel","text":""},{"location":"07frameworks.html#cicle-de-vida-duna-sollicitud-en-laravel","title":"Cicle de Vida d'una Sol\u00b7licitud en Laravel","text":"<p>Quan una sol\u00b7licitud HTTP arriba a una aplicaci\u00f3 Laravel, aquesta segueix una s\u00e8rie de passos abans de retornar una resposta al client. A continuaci\u00f3, es detallen les etapes principals d'aquest proc\u00e9s:</p>"},{"location":"07frameworks.html#1-creacio-de-la-instancia-de-laplicacio","title":"1. Creaci\u00f3 de la Inst\u00e0ncia de l'Aplicaci\u00f3","text":"<p>Laravel inicia creant una inst\u00e0ncia de l'aplicaci\u00f3, que serveix com a contenidor de serveis per a la gesti\u00f3 de depend\u00e8ncies.</p>"},{"location":"07frameworks.html#2-seleccio-del-nucli-kernel","title":"2. Selecci\u00f3 del Nucli (Kernel)","text":"<p>Segons el tipus de sol\u00b7licitud (HTTP o consola), Laravel dirigeix la sol\u00b7licitud al nucli corresponent:</p> <ul> <li>HTTP Kernel: Gestiona sol\u00b7licituds web.</li> <li>Console Kernel: Gestiona comandes de consola.</li> </ul>"},{"location":"07frameworks.html#3-carregant-els-bootstrapers","title":"3. Carregant els Bootstrapers","text":"<p>Abans de processar la sol\u00b7licitud, Laravel executa una s\u00e8rie de bootstrapers que configuren aspectes com la gesti\u00f3 d'errors, el registre de logs i la detecci\u00f3 de l'entorn de l'aplicaci\u00f3.</p>"},{"location":"07frameworks.html#4-registre-dels-proveidors-de-serveis","title":"4. Registre dels Prove\u00efdors de Serveis","text":"<p>Els prove\u00efdors de serveis s\u00f3n responsables de carregar i configurar els diversos components de Laravel, com la base de dades, la cua de treballs, la validaci\u00f3 i el sistema de rutes.</p>"},{"location":"07frameworks.html#5-execucio-del-middleware","title":"5. Execuci\u00f3 del Middleware","text":"<p>Laravel passa la sol\u00b7licitud a trav\u00e9s d'una cadena de middleware, que poden realitzar tasques com la verificaci\u00f3 d'autenticaci\u00f3, la protecci\u00f3 CSRF i la gesti\u00f3 de sessions.</p>"},{"location":"07frameworks.html#6-despatx-de-la-sollicitud","title":"6. Despatx de la Sol\u00b7licitud","text":"<p>Despr\u00e9s de passar pel middleware, la sol\u00b7licitud \u00e9s dirigida al controlador o ruta corresponent, on es processa la l\u00f2gica de l'aplicaci\u00f3.</p>"},{"location":"07frameworks.html#7-retorn-de-la-resposta","title":"7. Retorn de la Resposta","text":"<p>Un cop processada la sol\u00b7licitud, es genera una resposta que \u00e9s retornada al client.</p>"},{"location":"07frameworks.html#els-proveidors-de-serveis-service-providers","title":"Els Prove\u00efdors de Serveis (Service Providers)","text":"<p>Els prove\u00efdors de serveis s\u00f3n responsables de l'arrencada o \"bootstrapping\" de qualsevol projecte Laravel. La seva funci\u00f3 principal \u00e9s registrar els components, depend\u00e8ncies externes, classes i m\u00e8todes que hem definit, fent-los accessibles a tota l'aplicaci\u00f3.</p> <p>Al fitxer config/app.php del projecte, trobar\u00e0s una secci\u00f3 anomenada providers. Aquest array cont\u00e9 tots els prove\u00efdors de serveis que Laravel carrega quan l'aplicaci\u00f3 s'inicia. Alguns exemples s\u00f3n:</p> <ul> <li>DatabaseServiceProvider: Gestiona l'acc\u00e9s a bases de dades.</li> <li>AuthServiceProvider: Configura el sistema d'autenticaci\u00f3 d'usuaris.</li> </ul> <p>Un prove\u00efdor de serveis pot contenir dos m\u00e8todes principals:</p> <ul> <li>register: Defineix els serveis i els vincula al contenidor de Laravel.</li> <li>boot: S'executa despr\u00e9s de carregar tots els serveis, ideal per inicialitzar funcionalitats.</li> </ul>"},{"location":"07frameworks.html#les-classes-del-nucli-de-laravel","title":"Les Classes del Nucli de Laravel","text":"<p>Laravel proporciona una infraestructura robusta de classes que faciliten el desenvolupament. Algunes d'aquestes classes s\u00f3n:</p> <ul> <li>Route: Permet definir i gestionar rutes.</li> <li>Model: Proporciona funcionalitats per a treballar amb la base de dades mitjan\u00e7ant Eloquent ORM.</li> </ul> <p>Aquestes classes estan organitzades dins de l'espai de noms Illuminate, per la qual cosa sovint veurem imports com:</p> <pre><code>use Illuminate\\Database\\Eloquent\\Model;\n</code></pre>"},{"location":"07frameworks.html#altres-elements","title":"Altres elements","text":"<p>A m\u00e9s dels dos pilars anteriors sobre els quals se sustenta fonamentalment el desenvolupament de projectes en Laravel, podem parlar d'altres elements que ens poden resultar d'utilitat en el desenvolupament, com s\u00f3n els facades i els contracts.</p> <p>Les facades proporcionen una interf\u00edcie est\u00e0tica als elements de l'aplicaci\u00f3, de manera que faciliten l'acc\u00e9sa uns certs m\u00e8todes o utilitats. Per exemple, la facade cache permet accedir de manera senzilla amb el seu m\u00e8tode geta unes certes propietats cachejades pr\u00e8viament.</p> <pre><code>return Cache::get('key');\n</code></pre> <p>Els contracts s\u00f3n un conjunt d'interf\u00edcies que proporcionen el nucli de serveis oferits per Laravel. Per exemple, m\u00e8todes per a enviar e-mails, o encolar tasques en una cola de prioritat, etc.</p>"},{"location":"07frameworks.html#mvc-model-vista-controlador","title":"MVC: Model - Vista - Controlador","text":"<p>El model\u2013vista\u2013controlador (MVC) \u00e9s un patr\u00f3 d'arquitectura de programari que separa les dades i la l\u00f2gica de negoci d'una aplicaci\u00f3 de la interf\u00edcie d'usuari i el m\u00f2dul encarregat de gestionar els esdeveniments i les comunicacions. Per a a\u00e7\u00f2 MVC proposa la construcci\u00f3 de tres components diferents que s\u00f3n el model, la vista i el controlador, \u00e9s a dir, d'una banda defineix components per a la representaci\u00f3 de la informaci\u00f3, i d'altra banda per a la interacci\u00f3 de l'usuari. Aquest patr\u00f3 d'arquitectura de programari es basa en les idees de reutilitzaci\u00f3 de codi i la separaci\u00f3 de conceptes, caracter\u00edstiques que cerquen facilitar la tasca de desenvolupament d'aplicacions i el seu posterior manteniment. De manera gen\u00e8rica, els components de MVC es podrien definir com segueix:</p> <ul> <li>El Model: \u00c9s la representaci\u00f3 de la informaci\u00f3 amb la qual el sistema opera, per tant gestiona tots els accessos a aquesta informaci\u00f3, tant consultes com a actualitzacions. Les peticions d'acc\u00e9s o manipulaci\u00f3 d'informaci\u00f3 arriben al 'model' a trav\u00e9s del 'controlador'.</li> <li>El Controlador: Respon a esdeveniments (usualment accions de l'usuari) i invoca peticions al 'model' quan es fa alguna sol\u00b7licitud d'informaci\u00f3 (per exemple, editar un document o un registre en una base de dades). Per tant es podria dir que el 'controlador' fa d'intermediari entre la 'vista' i el 'model'.</li> <li>La Vista: Presenta el 'model' i les dades preparades pel controlador a l'usuari de forma visual. L'usuari podr\u00e0 interactuar amb la vista i realitzar altres peticions que s'enviaran al controlador.</li> </ul> <p></p>"},{"location":"07frameworks.html#funcionament-basic","title":"Funcionament b\u00e0sic","text":"<p>El funcionament b\u00e0sic que segueix Laravel despr\u00e9s d'una petici\u00f3 web a una URL del nostre lloc \u00e9s el seg\u00fcent:</p> <ul> <li> <p>Totes les peticions entren a trav\u00e9s del fitxer public/index.php, el qual en primer lloc comprovar\u00e0 en el fitxer de rutes (routes/web.php) si la URL \u00e9s v\u00e0lida i en cas de ser-ho al fet que controlador ha de fer la petici\u00f3.</p> </li> <li> <p>A continuaci\u00f3 cridar\u00e0 al m\u00e8tode del controlador assignat per a aquesta ruta. Com hem vist, el controlador \u00e9s el punt d'entrada de les peticions de l'usuari, el qual, depenent de la petici\u00f3:</p> </li> <li>Accedir\u00e0 a la base de dades (si f\u00f3ra necessari) a trav\u00e9s dels \"models\" per a obtenir dades (o per a afegir, modificar o eliminar).</li> <li> <p>Despr\u00e9s d'obtenir les dades necess\u00e0ries els preparar\u00e0 per a passar-li'ls a la vista.</p> </li> <li> <p>En el tercer pas el controlador cridar\u00e0 a una vista amb una s\u00e8rie de dades associades, la qual es preparar\u00e0 per a   mostrar-se correctament a partir de les dades d'entrada i finalment es mostrar\u00e0 a l'usuari.   A continuaci\u00f3 s'inclou un xicotet esquema d'aquest funcionament:</p> </li> </ul> <p></p>"},{"location":"07frameworks.html#rutes","title":"Rutes","text":"<p>Video</p> <p>Podr\u00edem dir que existeixen dos tipus principals de rutes:</p> <ul> <li>Rutes web: Emmagatzemades a l'arxiu <code>web.php</code>, ens permeten carregar diferents vistes en funci\u00f3 de la URL que indique el client.</li> <li>Rutes API: Emmagatzemades a l'arxiu <code>api.php</code>, s'utilitzen per definir serveis REST.</li> </ul> <p>En aquest tema, ens centrarem en les rutes web, per la qual cosa editarem el contingut de l'arxiu <code>routes/web.php</code>. Aquest fitxer \u00e9s el punt centralitzat per a la definici\u00f3 de rutes. Qualsevol ruta no definida en aquest fitxer no ser\u00e0 v\u00e0lida i generar\u00e0 un error 404.</p> <p>Les rutes poden: 1. Retornar directament un valor des del fitxer de rutes. 2. Cridar una vista o un controlador.</p>"},{"location":"07frameworks.html#rutes-simples","title":"Rutes simples","text":"<p>Una ruta simple t\u00e9 una URL fixa i una funci\u00f3 que retorna una resposta. Per exemple, una petici\u00f3 tipus GET es defineix aix\u00ed:</p> <pre><code>Route::get('/salut', function () {\n return 'Hola m\u00f3n!';\n});\n</code></pre> <p>Quan accedim a <code>http://localhost/salut</code>, Laravel retornar\u00e0 \"Hola m\u00f3n!\".</p>"},{"location":"07frameworks.html#rutes-amb-parametres","title":"Rutes amb par\u00e0metres","text":"<p>Es poden definir par\u00e0metres din\u00e0mics a les rutes mitjan\u00e7ant claus <code>{}</code>. Per exemple:</p> <pre><code>Route::get('/salut/{nom}', function ($nom) {\n return 'Bon dia, ' . $nom;\n});\n</code></pre> <p>Si accedim a <code>/salut/Joan</code>, retornar\u00e0 \"Bon dia, Joan\". Per definir un par\u00e0metre opcional, afegim un s\u00edmbol <code>?</code>:</p> <pre><code>Route::get('/salut/{nom?}', function ($nom = 'Convidat') {\n return 'Bon dia, ' . $nom;\n});\n</code></pre> <p>Ara, <code>/salut</code> retornar\u00e0 \"Bon dia, Convidat\".</p>"},{"location":"07frameworks.html#validacio-de-parametres","title":"Validaci\u00f3 de par\u00e0metres","text":"<p>Podem validar els par\u00e0metres usant el m\u00e8tode <code>where</code>. Per exemple:</p> <pre><code>Route::get('/salut/{nom}', function ($nom) {\n return 'Hola, ' . $nom;\n})-&gt;where('nom', '[A-Za-z]+');\n\nRoute::get('/producte/{id}', function ($id) {\n return 'Producte ID: ' . $id;\n})-&gt;where('id', '[0-9]+');\n\nRoute::get('/usuari/{nom}/{id}', function ($nom, $id) {\n return 'Usuari: ' . $nom . ', ID: ' . $id;\n})-&gt;where(['nom' =&gt; '[A-Za-z]+', 'id' =&gt; '[0-9]+']);\n</code></pre>"},{"location":"07frameworks.html#rutes-amb-nom-named-routes","title":"Rutes amb nom (Named Routes)","text":"<p>\u00c9s possible assignar un nom a una ruta utilitzant el m\u00e8tode <code>name</code>. Aix\u00f2 permet referenciar-la f\u00e0cilment:</p> <pre><code>Route::get('/contacte', function () {\n return 'P\u00e0gina de contacte';\n})-&gt;name('contacte');\n</code></pre> <p>Podem utilitzar el nom de la ruta a les plantilles Blade:</p> <pre><code>[Contacte]({{ route('contacte') }})\n</code></pre>"},{"location":"07frameworks.html#grups-de-rutes","title":"Grups de rutes","text":"<p>Laravel permet agrupar rutes per compartir configuracions com prefixos o middleware:</p> <pre><code>Route::prefix('admin')-&gt;group(function () {\n Route::get('/dashboard', function () {\n return 'Admin Dashboard';\n });\n\n Route::get('/usuaris', function () {\n return 'Admin Usuaris';\n });\n});\n</code></pre> <p>Aix\u00f2 crea les rutes <code>/admin/dashboard</code> i <code>/admin/usuaris</code>.</p>"},{"location":"07frameworks.html#rutes-amb-controladors","title":"Rutes amb controladors","text":"<p>Per gestionar l\u00f2gica m\u00e9s complexa, \u00e9s recomanable utilitzar controladors:</p> <pre><code>Route::get('/usuari/{id}', [UsuariController::class, 'mostrar']);\n\n// Controlador definit amb l'artisan:\n// php artisan make:controller UsuariController\n</code></pre>"},{"location":"07frameworks.html#recursos-i-apis","title":"Recursos i APIS","text":"<p>Podem definir rutes amb el m\u00e8tode <code>resource</code> per a CRUDs:</p> <pre><code>Route::resource('articles', ArticleController::class);\n</code></pre> <p>Aquest m\u00e8tode genera autom\u00e0ticament les rutes per accions com <code>index</code>, <code>create</code>, <code>store</code>, <code>show</code>, <code>edit</code>, <code>update</code> i <code>destroy</code>.</p>"},{"location":"07frameworks.html#vistes","title":"Vistes","text":"<p>Video</p> <p>Les vistes s\u00f3n la forma de presentar el resultat (una pantalla del nostre lloc web) de forma visual a l'usuari. Laravel permet estructurar aquesta part de l'aplicaci\u00f3 utilitzant vistes simples o plantilles Blade, una eina potent per modularitzar i reutilitzar el codi de les nostres vistes.</p>"},{"location":"07frameworks.html#que-son-les-vistes","title":"Qu\u00e8 s\u00f3n les vistes?","text":"<p>Les vistes es defineixen a la carpeta <code>resources/views</code> i estan dissenyades per separar la part visual de la l\u00f2gica de l'aplicaci\u00f3. Aquesta separaci\u00f3 millora l'estructura del projecte i facilita el manteniment del codi.</p> <p>Les vistes no han de contenir l\u00f2gica de negoci ni fer consultes a bases de dades. Nom\u00e9s han de rebre dades dels controladors i presentar-les a l'usuari.</p>"},{"location":"07frameworks.html#mostrar-una-vista","title":"Mostrar una vista","text":"<p>Per mostrar una vista, podem utilitzar la funci\u00f3 <code>view()</code> des d'una ruta o controlador. Per exemple:</p> <pre><code>Route::get('/', function () {\n return view('welcome');\n});\n</code></pre>"},{"location":"07frameworks.html#passar-dades-a-una-vista","title":"Passar dades a una vista","text":"<p>\u00c9s habitual passar dades a les vistes des d'una ruta o controlador. Es poden passar dades de diverses maneres:</p> <ol> <li>Amb <code>with</code>:</li> </ol> <pre><code>Route::get('/', function () {\n $nom = 'Nacho';\n return view('inici')-&gt;with('nom', $nom);\n});\n</code></pre> <ol> <li>Amb un array associatiu:</li> </ol> <pre><code>return view('inici', ['nom' =&gt; $nom]);\n</code></pre> <ol> <li>Amb la funci\u00f3 <code>compact</code>:</li> </ol> <pre><code>return view('inici', compact('nom'));\n</code></pre> <ol> <li>Utilitzant la funci\u00f3 <code>Route::view</code>:</li> </ol> <pre><code>Route::view('/', 'inici', ['nom' =&gt; 'Nacho']);\n</code></pre> <p>A la vista, podem utilitzar Blade per mostrar aquestes dades:</p> <pre><code>Benvingut/a, {{ $nom }}\n</code></pre>"},{"location":"07frameworks.html#plantilles-mitjancant-blade","title":"Plantilles mitjan\u00e7ant Blade","text":"<p>Laravel utilitza Blade per modularitzar i optimitzar les vistes. Els fitxers Blade tenen l'extensi\u00f3 <code>.blade.php</code> i permeten utilitzar una sintaxi espec\u00edfica per treballar amb dades, her\u00e8ncia de plantilles, i estructures de control.</p>"},{"location":"07frameworks.html#mostrar-dades","title":"Mostrar dades","text":"<p>Per mostrar dades en Blade, utilitzem doble claus:</p> <pre><code>Hola, {{ $nom }}\n</code></pre> <p>Per evitar problemes de seguretat com XSS, Blade utilitza la funci\u00f3 <code>e()</code> per escapar dades. Si volem mostrar dades sense escapament, podem fer servir:</p> <pre><code>{!! $html !!}\n</code></pre>"},{"location":"07frameworks.html#comentaris","title":"Comentaris","text":"<p>Els comentaris en Blade s'escriuen aix\u00ed:</p> <pre><code>{{-- Aix\u00f2 \u00e9s un comentari --}}\n</code></pre>"},{"location":"07frameworks.html#estructures-de-control","title":"Estructures de control","text":"<ol> <li>Condicionals:</li> </ol> <pre><code>@if($condicio)\n Condici\u00f3 complerta\n\n\n@elseif($altraCondicio)\n Altra condici\u00f3 complerta\n\n\n@else\n No s'ha complert cap condici\u00f3\n\n\n@endif\n</code></pre> <ol> <li>Bucle foreach:</li> </ol> <pre><code>@foreach($elements as $element)\n {{ $element }}\n\n\n@endforeach\n</code></pre> <ol> <li>Forelse amb condici\u00f3 buida:</li> </ol> <pre><code>@forelse($elements as $element)\n {{ $element }}\n\n\n@empty\n No hi ha elements\n\n\n@endforelse\n</code></pre>"},{"location":"07frameworks.html#herencia-de-plantilles","title":"Her\u00e8ncia de plantilles","text":"<p>Per modularitzar, podem definir una plantilla base amb la directiva <code>@yield</code>:</p> <pre><code>@yield('title')\n\n\n @include('partials.nav')\n @yield('content')\n</code></pre> <p>Les vistes poden heretar aquesta plantilla amb <code>@extends</code> i definir les seccions:</p> <pre><code>@extends('layout')\n\n@section('title', 'P\u00e0gina d'inici')\n\n@section('content')\n Benvingut/a!\n============\n\n\n@endsection\n</code></pre>"},{"location":"07frameworks.html#components-blade","title":"Components Blade","text":"<p>Els Components Blade permeten definir elements reutilitzables:</p> <ol> <li>Crear component:</li> </ol> <pre><code>php artisan make:component Alert\n</code></pre> <ol> <li>Definir la l\u00f2gica:</li> </ol> <pre><code>class Alert extends Component {\n public $type;\n public function __construct($type) {\n    $this-&gt;type = $type;\n }\n public function render() {\n    return view('components.alert');\n }\n}\n</code></pre> <ol> <li>Vista del component:</li> </ol> <pre><code> {{ $slot }}\n</code></pre> <ol> <li>Utilitzar-lo en una vista:</li> </ol> <pre><code>&lt;x-alert &gt;Missatge Enviat&lt;/x-alert&gt;\n</code></pre>"},{"location":"07frameworks.html#enllacant-amb-css-i-javascript-en-el-client","title":"Enlla\u00e7ant amb CSS i Javascript en el client","text":"<p>Ara que ja coneixem com utilitzar Blade per modularitzar les nostres vistes, \u00e9s moment d'afegir estils CSS i scripts Javascript per millorar la presentaci\u00f3 i funcionalitat del nostre projecte Laravel. Laravel integra Vite, una eina moderna per gestionar i empaquetar els recursos del frontend.</p>"},{"location":"07frameworks.html#que-es-vite","title":"Qu\u00e8 \u00e9s Vite?","text":"<p>Vite \u00e9s una eina de construcci\u00f3 de frontend que ofereix un entorn de desenvolupament extremadament r\u00e0pid i empaqueta el codi per a producci\u00f3. Amb Laravel, Vite permet:</p> <ul> <li>Gestionar fitxers CSS i Javascript del projecte.</li> <li>Optimitzar els recursos per a producci\u00f3.</li> <li>Carregar els canvis en temps real durant el desenvolupament.</li> </ul> <p>Laravel inclou per defecte un connector oficial per treballar amb Vite.</p>"},{"location":"07frameworks.html#installacio-del-connector-vite-per-a-laravel","title":"Instal\u00b7laci\u00f3 del connector Vite per a Laravel","text":"<p>Si has creat una nova aplicaci\u00f3 Laravel, trobar\u00e0s el fitxer <code>package.json</code> al directori arrel. Per comen\u00e7ar, instal\u00b7la les depend\u00e8ncies del frontend executant:</p> <pre><code>npm install\n</code></pre> <p>Aix\u00f2 instal\u00b7lar\u00e0 totes les depend\u00e8ncies definides al fitxer <code>package.json</code>, incloent-hi el connector de Laravel per a Vite.</p>"},{"location":"07frameworks.html#configuracio-de-vite","title":"Configuraci\u00f3 de Vite","text":"<p>La configuraci\u00f3 de Vite es troba al fitxer <code>vite.config.js</code>. Aquest fitxer defineix els punts d'entrada (CSS i Javascript) del projecte:</p> <pre><code>import { defineConfig } from 'vite';\nimport laravel from 'laravel-vite-plugin';\n\nexport default defineConfig({\n plugins: [\n laravel([\n 'resources/css/app.css',\n 'resources/js/app.js',\n ]),\n ],\n});\n</code></pre> <p>\u00c9s possible afegir connectors addicionals si utilitzes frameworks com Vue o React.</p>"},{"location":"07frameworks.html#carregar-css-i-javascript-a-les-vistes","title":"Carregar CSS i Javascript a les vistes","text":"<p>Un cop configurats els punts d'entrada al fitxer <code>vite.config.js</code>, pots carregar els recursos utilitzant la directiva <code>@vite</code> de Blade. Per exemple:</p> <pre><code> {{-- Altres metadades i configuracions --}}\n @vite(['resources/css/app.css', 'resources/js/app.js'])\n\n\n {{-- Contingut de la vista --}}\n</code></pre> <p>Aquesta directiva s'encarrega autom\u00e0ticament de: - Injectar el client de desenvolupament per a substituci\u00f3 de m\u00f2duls (Hot Module Replacement - HMR). - Carregar els fitxers versionats en producci\u00f3.</p>"},{"location":"07frameworks.html#executar-vite","title":"Executar Vite","text":"<p>Pots executar Vite de dues maneres:</p> <ol> <li>Entorn de desenvolupament:</li> </ol> <p>Durant el desenvolupament, pots executar el servidor de Vite per reflectir els canvis autom\u00e0ticament al navegador:</p> <pre><code>npm run dev\n</code></pre> <ol> <li>Producci\u00f3:</li> </ol> <p>Per empaquetar i versionar els recursos per a producci\u00f3, executa:</p> <pre><code>npm run build\n</code></pre>"},{"location":"07frameworks.html#controladors","title":"Controladors","text":"<p>Video</p> <p>Els controladors s\u00f3n una pe\u00e7a clau a Laravel per organitzar i estructurar la l\u00f2gica de la nostra aplicaci\u00f3. Permeten separar la gesti\u00f3 de les rutes i la l\u00f2gica del negoci, fent que el codi sigui m\u00e9s net, escalable i f\u00e0cil de mantenir.</p>"},{"location":"07frameworks.html#crear-un-controlador","title":"Crear un controlador","text":"<p>Per crear un controlador, podem utilitzar l'ordre <code>php artisan make:controller</code>. Per convenci\u00f3, els controladors solen acabar amb el sufix <code>Controller</code>. Exemple:</p> <pre><code>php artisan make:controller PruebaController\n</code></pre> <p>Aix\u00f2 crea un fitxer dins de la carpeta <code>app/Http/Controllers</code>. El controlador estar\u00e0 buit per defecte i podrem afegir-hi els m\u00e8todes necessaris.</p>"},{"location":"07frameworks.html#controladors-de-recursos","title":"Controladors de recursos","text":"<p>Podem generar un controlador de recursos amb l'opci\u00f3 <code>-r</code>. Aix\u00f2 crear\u00e0 un controlador amb m\u00e8todes predeterminats per a operacions comunes:</p> <pre><code>php artisan make:controller PruebaController -r\n</code></pre> <p>Els m\u00e8todes generats s\u00f3n:</p> <ul> <li><code>index</code>: Mostrar un llistat d'elements.</li> <li><code>create</code>: Mostrar un formulari per crear un nou element.</li> <li><code>store</code>: Emmagatzemar un nou element a la base de dades.</li> <li><code>show</code>: Mostrar un element espec\u00edfic.</li> <li><code>edit</code>: Mostrar un formulari per editar un element existent.</li> <li><code>update</code>: Actualitzar un element a la base de dades.</li> <li><code>destroy</code>: Eliminar un element.</li> </ul> <p>Per cridar un m\u00e8tode d'aquest tipus des d'una ruta:</p> <pre><code>Route::get('prueba', [PruebaController::class, 'index'])-&gt;name('listado\\_prueba');\n</code></pre>"},{"location":"07frameworks.html#rutes-i-controladors","title":"Rutes i controladors","text":"<p>Laravel permet registrar totes les rutes associades a un controlador de recursos amb el m\u00e8tode <code>Route::resource</code>:</p> <pre><code>Route::resource('catalog', CatalogController::class);\n</code></pre> <p>Aix\u00f2 genera rutes per a tots els m\u00e8todes del controlador de recursos (<code>index</code>, <code>show</code>, <code>create</code>, etc.). Si nom\u00e9s volem algunes rutes, podem utilitzar:</p> <ul> <li><code>only</code>:</li> </ul> <pre><code>Route::resource('catalog', CatalogController::class)-&gt;only(['index', 'show']);\n</code></pre> <ul> <li><code>except</code>:</li> </ul> <pre><code>Route::resource('catalog', CatalogController::class)-&gt;except(['update', 'edit']);\n</code></pre>"},{"location":"07frameworks.html#organitzacio-de-vistes-i-controladors","title":"Organitzaci\u00f3 de vistes i controladors","text":"<p>Les vistes associades a un controlador solen estar estructurades dins de la carpeta <code>resources/views</code> seguint el nom del controlador o el model. Exemple:</p> <ul> <li>Controlador: <code>CatalogController</code></li> <li>Vistes: <code>resources/views/catalog/index.blade.php</code>, <code>resources/views/catalog/show.blade.php</code>, etc.</li> </ul> <p>Per renderitzar aquestes vistes des del controlador:</p> <pre><code>public function index() {\n return view('catalog.index');\n}\n</code></pre>"},{"location":"07frameworks.html#subcarpetes-i-espais-de-noms","title":"Subcarpetes i espais de noms","text":"<p>Els controladors es poden organitzar en subcarpetes dins de <code>app/Http/Controllers</code>. Si un controlador es troba en una subcarpeta, cal incloure el seu espai de noms:</p> <pre><code>// Fitxer: app/Http/Controllers/Photos/AdminController.php\nRoute::get('admin', [App\\Http\\Controllers\\Photos\\AdminController::class, 'method']);\n</code></pre> <p>Laravel afegeix autom\u00e0ticament l'espai de noms per als controladors a <code>RouteServiceProvider</code>. Si crees subcarpetes, assegura't d'actualitzar el fitxer de rutes amb el nom complet del controlador.</p>"},{"location":"07frameworks.html#exercici-practic-guia-dequips-de-futbol-femeni","title":"Exercici Pr\u00e0ctic: Guia d'Equips de Futbol Femen\u00ed","text":"<p>L'objectiu d'aquest exercici \u00e9s construir una aplicaci\u00f3 Laravel per gestionar una guia d'equips de futbol femen\u00ed. Aprendrem a configurar rutes, controladors, vistes i a passar dades utilitzant les funcionalitats de Laravel.</p>"},{"location":"07frameworks.html#pas-1-configurar-el-projecte","title":"Pas 1: Configurar el projecte","text":"<ol> <li>Crear un projecte Laravel anomenat <code>futbol-femeni</code>:</li> </ol> <pre><code> curl -s \"https://laravel.build/futbol-femeni?with=mysql,mailpit\" | bash\n</code></pre> <p>Problemes:  des de dins de l'institut no funciona perqu\u00e8 els repositoris estan capats.</p> <p>Soluci\u00f3: </p> <ul> <li>Quan falle . Copiar la seg\u00fcent carpeta a la carpeta del projecte.</li> <li>Canviar este tro\u00e7 del docker-compose.yml per este:</li> </ul> <p><pre><code>    laravel.test:\n        build:\n            context: './vendor/laravel/sail/runtimes/8.3'  \n</code></pre> per <pre><code>    laravel.test:\n        build:\n            context: './docker'\n</code></pre></p> <p>i despres acabem la instal\u00b7laci\u00f3:</p> <pre><code>  cd futbol-femeni\n  ./vendor/bin/sail up \n  ./vendor/bin/sail artisan migrate\n</code></pre> <ol> <li>Q\u00fcesti\u00f3: Per qu\u00e8 \u00e9s important tenir una estructura clara al projecte Laravel?</li> </ol>"},{"location":"07frameworks.html#pas-2-definir-la-ruta-inicial","title":"Pas 2: Definir la ruta inicial","text":"<ol> <li>Editar <code>routes/web.php</code> per crear una ruta inicial:</li> </ol> <pre><code>Route::get('/', function () {\n   return \"Benvingut a la Guia d\"Equips de Futbol Femen\u00ed!\";\n});\n</code></pre> <ol> <li>Q\u00fcesti\u00f3: Quina difer\u00e8ncia hi ha entre definir una ruta directa i una que utilitza un controlador?</li> </ol>"},{"location":"07frameworks.html#pas-3-crear-un-controlador","title":"Pas 3: Crear un controlador","text":"<ol> <li>Generar un controlador anomenat <code>EquipController</code>:</li> </ol> <pre><code>./vendor/bin/sail artisan make:controller EquipController\n</code></pre> <ol> <li>Afegir un m\u00e8tode <code>index</code> al controlador:</li> </ol> <pre><code>public function index() {\n   return view('equips.index');\n}\n</code></pre> <ol> <li>Definir una ruta per al m\u00e8tode <code>index</code>:</li> </ol> <pre><code>Route::get('/equips', [EquipController::class, 'index']);\n</code></pre> <ol> <li>Q\u00fcesti\u00f3: Per qu\u00e8 \u00e9s recomanable separar la l\u00f2gica en controladors?</li> </ol>"},{"location":"07frameworks.html#pas-4-crear-una-vista","title":"Pas 4: Crear una vista","text":"<ol> <li>Crear una vista a <code>resources/views/equips/index.blade.php</code>:</li> </ol> <pre><code>&lt;h1&gt;Guia d'Equips&lt;/h1&gt;\n</code></pre> <ol> <li>Q\u00fcesti\u00f3: Qu\u00e8 fa especial el motor de plantilles Blade en comparaci\u00f3 amb HTML est\u00e0ndard?</li> </ol>"},{"location":"07frameworks.html#pas-5-passar-dades-a-la-vista","title":"Pas 5: Passar dades a la vista","text":"<ol> <li>Modifica el m\u00e8tode <code>index</code> per passar un array d'equips:</li> </ol> <pre><code>public function index() {\n   $equips = ['Bar\u00e7a Femen\u00ed', 'Atl\u00e8tic de Madrid', 'Real Madrid Femen\u00ed'];\n   return view('equips.index', compact('equips'));\n}\n</code></pre> <ol> <li>Afegeix un bucle <code>@foreach</code> a la vista:</li> </ol> <pre><code>&lt;h1&gt;Guia d'Equips&lt;/h1&gt;\n&lt;ul&gt;\n   @foreach($equips as $equip)\n       &lt;li&gt;{{ $equip }}&lt;/li&gt;\n   @endforeach\n&lt;/ul&gt;\n</code></pre> <ol> <li>Q\u00fcesti\u00f3: Com podem utilitzar Blade per fer el codi m\u00e9s segur?</li> </ol>"},{"location":"07frameworks.html#pas-6-afegir-estils-amb-vite","title":"Pas 6: Afegir estils amb Vite","text":"<ol> <li>Crear un fitxer CSS a <code>resources/css/equips.css</code>:</li> </ol> <pre><code>body {\n   font-family: Arial, sans-serif;\n}\n\nh1 {\n   color: darkblue;\n}\n\nnav ul {\nlist-style-type: none;\npadding: 0;\n}\n\nnav ul li {\ndisplay: inline;\nmargin-right: 15px;\n}\n\nnav ul li a {\ntext-decoration: none;\ncolor: darkblue;\n}\n\nnav ul li a:hover {\ntext-decoration: underline;\n}\n</code></pre> <ol> <li>Incloure el fitxer CSS amb <code>@vite</code>:</li> </ol> <p>Modificar el fitxer vite.config.js per a que inclogui el fitxer CSS:</p> <pre><code>import laravel from 'laravel-vite-plugin';\n\nexport default defineConfig({\n  plugins: [\n    laravel({\n      input: [\n        'resources/css/app.css',\n        'resources/css/equips.css',\n        'resources/js/app.js'],\n      refresh: true,\n    }),\n  ],\n});\n</code></pre> <pre><code>i incloure el fitxer CSS a la vista:\n</code></pre> <pre><code>@vite('resources/css/equips.css')\n</code></pre> <ol> <li>Executar Vite:</li> </ol> <pre><code>npm install\nnpm run build\n</code></pre> <ol> <li>Q\u00fcesti\u00f3: Qu\u00e8 \u00e9s Hot Module Replacement (HMR) i com ajuda en el desenvolupament?</li> </ol>"},{"location":"07frameworks.html#pas-7-ampliar-funcionalitats","title":"Pas 7: Ampliar funcionalitats","text":"<ol> <li>Afegir m\u00e9s camps als equips:</li> </ol> <pre><code>public function index() {\n    $equips = [\n        ['nom' =&gt; 'Bar\u00e7a Femen\u00ed', 'estadi' =&gt; 'Camp Nou', 'titols' =&gt; 30],\n        ['nom' =&gt; 'Atl\u00e8tic de Madrid', 'estadi' =&gt; 'C\u00edvitas Metropolitano', 'titols' =&gt; 10],\n        ['nom' =&gt; 'Real Madrid Femen\u00ed', 'estadi' =&gt; 'Alfredo Di St\u00e9fano', 'titols' =&gt; 5],\n    ];\n    return view('equips.index', compact('equips'));\n}\n</code></pre> <ol> <li>Actualitzar la vista per mostrar una taula:</li> </ol> <pre><code>&lt;h1&gt;Guia d'Equips&lt;/h1&gt;\n&lt;table&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Nom&lt;/th&gt;\n            &lt;th&gt;Estadi&lt;/th&gt;\n            &lt;th&gt;T\u00edtols&lt;/th&gt;\n        &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        @foreach($equips as $equip)\n            &lt;tr&gt;\n                &lt;td&gt;{{ $equip['nom'] }}&lt;/td&gt;\n                &lt;td&gt;{{ $equip['estadi'] }}&lt;/td&gt;\n                &lt;td&gt;{{ $equip['titols'] }}&lt;/td&gt;\n            &lt;/tr&gt;\n        @endforeach\n    &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre> <ol> <li>Crear una nova vista parcial per al men\u00fa de navegaci\u00f3:</li> </ol> <ul> <li>Afegeix un fitxer nou a resources/views/partials/menu.blade.php amb el contingut seg\u00fcent:</li> </ul> <pre><code>&lt;nav&gt;\n    &lt;ul&gt;\n        &lt;li&gt;&lt;a href=\"/\"&gt;Inici&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"/equips\"&gt;Guia d'Equips&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"/estadis\"&gt;Llistat d'Estadis&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/nav&gt;\n</code></pre> <ul> <li>Modifica la vista resources/views/equips/index.blade.php per incloure el men\u00fa amb la directiva @include:</li> </ul> <pre><code>@include('partials.menu')\n</code></pre> <ol> <li>Crear una plantilla base</li> </ol> <ul> <li>Crea el fitxer resources/views/layouts/app.blade.php:</li> </ul> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n      &lt;meta charset=\"UTF-8\"&gt;\n      &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n      &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n      &lt;title&gt;@yield('title','Guia de futbol femen\u00ed')&lt;/title&gt;\n      @vite(['resources/css/app.css', 'resources/css/equips.css'])\n&lt;/head&gt;\n&lt;body&gt;\n      &lt;header&gt;\n        @include('partials.menu')\n      &lt;/header&gt;\n      &lt;main&gt;\n       @yield('content')\n      &lt;/main&gt;\n      &lt;footer&gt;\n          &lt;p&gt;&amp;copy; 2024 Guia de Futbol Femen\u00ed&lt;/p&gt;\n      &lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li>Modifica la vista resources/views/equips/index.blade.php per heretar de la plantilla base:</li> </ul> <pre><code> @extends('layouts.app')\n@section('title', \" Guia d'Equips\" )\n@section('content')\n    &lt;h1&gt;Guia d'Equips&lt;/h1&gt;\n    &lt;table&gt;\n        &lt;thead&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Nom&lt;/th&gt;\n            &lt;th&gt;Estadi&lt;/th&gt;\n            &lt;th&gt;T\u00edtols&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n        @foreach($equips as $equip )\n            &lt;tr&gt;\n                &lt;td class=\"equip\"&gt;&lt;h2&gt;{{ $equip['nom']  }}&lt;/h2&gt;&lt;/td&gt;\n                &lt;td class=\"equip\"&gt;{{ $equip['estadi']  }}&lt;/td&gt;\n                &lt;td class=\"equip\"&gt;{{ $equip['titols']  }}&lt;/td&gt;\n            &lt;/tr&gt;\n        @endforeach\n        &lt;/tbody&gt;\n    &lt;/table&gt;\n@endsection\n</code></pre> <ol> <li>Crear un component per als equips</li> </ol> <ul> <li>Executa la seg\u00fcent comanda per crear un component Blade anomenat Equip:</li> </ul> <pre><code>./vendor/bin/sail artisan make:component Equip\n</code></pre> <ul> <li>Afegeix els estils al fitxer CSS resources/css/equips.css:</li> </ul> <p><pre><code>  .equip {\n  border: 1px solid #ddd;\n  padding: 10px;\n  margin: 10px 0;\n  border-radius: 5px;\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);\n  }\n\n  .equip h2 {\n  margin: 0;\n  color: darkblue;\n  }\n</code></pre> * Modifica la vista resources/views/components/equip.blade.php per crear el component:</p> <p><pre><code>&lt;div class=\"equip\"&gt;\n    &lt;h2&gt;{{ $nom }}&lt;/h2&gt;\n    &lt;p&gt;&lt;strong&gt;Estadi:&lt;/strong&gt; {{ $estadi }}&lt;/p&gt;\n    &lt;p&gt;&lt;strong&gt;T\u00edtols:&lt;/strong&gt; {{ $titols }}&lt;/p&gt;\n&lt;/div&gt;\n</code></pre> * Crea un m\u00e8tode al controlador d'equips per mostrar un equip:</p> <pre><code>public function show($id) {\n    $equips = [\n        ['nom' =&gt; 'Bar\u00e7a Femen\u00ed', 'estadi' =&gt; 'Camp Nou', 'titols' =&gt; 30],\n        ['nom' =&gt; 'Atl\u00e8tic de Madrid', 'estadi' =&gt; 'C\u00edvitas Metropolitano', 'titols' =&gt; 10],\n        ['nom' =&gt; 'Real Madrid Femen\u00ed', 'estadi' =&gt; 'Alfredo Di St\u00e9fano', 'titols' =&gt; 5],\n    ];\n    $equip = $equips[$id];\n    return view('equips.show', compact('equip'));\n}\n</code></pre> <ul> <li>Crea la vista resources/views/equips/show.blade.php per utilitzar el component:</li> </ul> <pre><code>@extends('layouts.app')\n@section('title', \" Guia d'Equips\" )\n@section('content')\n&lt;x-equip\n   :nom=\"$equip['nom']\"\n   :estadi=\"$equip['estadi']\"\n   :titols=\"$equip['titols']\"\n/&gt;\n@endsection \n</code></pre> <ul> <li>Modifica el component (app/Views/components/Equip.php) per utilitzar les dades passades:</li> </ul> <pre><code>public function __construct(\n     public string $nom,\n     public string $estadi,\n     public int $titols ) { }\n</code></pre> <ul> <li>Crea la ruta:</li> </ul> <pre><code>Route::get('/equips/{id}', [EquipController::class, 'show']);\n</code></pre> <ol> <li> <p>Q\u00fcesti\u00f3: Com podem fer per no repetir l'array d'equips en el controlador ?</p> </li> <li> <p>Q\u00fcesti\u00f3: Qu\u00e8 \u00e9s un component Blade i quins avantatges t\u00e9 respecte a les vistes parcials?</p> </li> <li> <p>Q\u00fcestio: Qu\u00e8 permet la directiva @yield i com es relaciona amb @section?</p> </li> </ol>"},{"location":"07frameworks.html#9-questio-per-que-es-important-tenir-una-plantilla-base-en-una-aplicacio-web","title":"9. Q\u00fcesti\u00f3: Per qu\u00e8 \u00e9s important tenir una plantilla base en una aplicaci\u00f3 web?","text":""},{"location":"07frameworks.html#pas-8-refactoritzar-el-codi","title":"Pas 8: Refactoritzar el codi","text":"<ol> <li>No repetir l'array d'equips en el controlador</li> </ol> <pre><code>public $equips = [\n        ['nom' =&gt; 'Bar\u00e7a Femen\u00ed', 'estadi' =&gt; 'Camp Nou', 'titols' =&gt; 30],\n        ['nom' =&gt; 'Atl\u00e8tic de Madrid', 'estadi' =&gt; 'C\u00edvitas Metropolitano', 'titols' =&gt; 10],\n        ['nom' =&gt; 'Real Madrid Femen\u00ed', 'estadi' =&gt; 'Alfredo Di St\u00e9fano', 'titols' =&gt; 5],\n    ];\n\n    public function index() {\n        $equips = $this-&gt;equips;\n        return view('equips.index', compact('equips'));\n    }\n\n    public function show($id) {\n        $equip = $this-&gt;equips[$id];\n        return view('equips.show', compact('equip'));\n    }\n</code></pre> <ol> <li>Passar les rutes a resource</li> </ol> <p><pre><code>Route::resource('equips', EquipController::class);\n</code></pre> 3. Crear l'enlla\u00e7 en el index per a vore un equip</p> <p><pre><code>@foreach($equips as $key =&gt; $equip)\n    &lt;tr&gt;\n        &lt;td&gt;&lt;a href=\"{{ route('equips.show', $key) }}\"&gt;{{ $equip['nom'] }}&lt;/a&gt;&lt;/td&gt;\n        &lt;td&gt;{{ $equip['estadi'] }}&lt;/td&gt;\n        &lt;td&gt;{{ $equip['titols'] }}&lt;/td&gt;\n    &lt;/tr&gt;\n@endforeach\n</code></pre> 4. Utilitza chatgpt per a donar estil a les vistes mitjan\u00e7ant tailwind</p> <pre><code>app.blade.php\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;@yield('title', 'Guia de futbol femen\u00ed')&lt;/title&gt;\n    @vite(['resources/css/app.css'])\n&lt;/head&gt;\n&lt;body class=\"font-sans bg-gray-100 text-gray-900\"&gt;\n&lt;header class=\"bg-blue-800 text-white p-4\"&gt;\n    @include('partials.menu')\n&lt;/header&gt;\n&lt;main class=\"container mx-auto p-6\"&gt;\n    @yield('content')\n&lt;/main&gt;\n&lt;footer class=\"bg-blue-800 text-white text-center p-4\"&gt;\n    &lt;p&gt;&amp;copy; 2024 Guia de Futbol Femen\u00ed&lt;/p&gt;\n&lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p><pre><code>index.blade.php\n@extends('layouts.app')\n\n@section('title', \"Guia d'Equips\")\n\n@section('content')\n&lt;h1 class=\"text-3xl font-bold text-blue-800 mb-6\"&gt;Guia d'Equips&lt;/h1&gt;\n&lt;table class=\"w-full border-collapse border border-gray-300\"&gt;\n    &lt;thead class=\"bg-gray-200\"&gt;\n    &lt;tr&gt;\n        &lt;th class=\"border border-gray-300 p-2\"&gt;Nom&lt;/th&gt;\n        &lt;th class=\"border border-gray-300 p-2\"&gt;Estadi&lt;/th&gt;\n        &lt;th class=\"border border-gray-300 p-2\"&gt;T\u00edtols&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n    @foreach($equips as $key =&gt; $equip)\n    &lt;tr class=\"hover:bg-gray-100\"&gt;\n        &lt;td class=\"border border-gray-300 p-2\"&gt;\n            &lt;a href=\"{{ route('equips.show', $key) }}\" class=\"text-blue-700 hover:underline\"&gt;{{ $equip['nom'] }}&lt;/a&gt;\n        &lt;/td&gt;\n        &lt;td class=\"border border-gray-300 p-2\"&gt;{{ $equip['estadi'] }}&lt;/td&gt;\n        &lt;td class=\"border border-gray-300 p-2\"&gt;{{ $equip['titols'] }}&lt;/td&gt;\n    &lt;/tr&gt;\n    @endforeach\n    &lt;/tbody&gt;\n&lt;/table&gt;\n@endsection\n</code></pre> <pre><code>equip.blade.php\n&lt;div class=\"equip border rounded-lg shadow-md p-4 bg-white\"&gt;\n    &lt;h2 class=\"text-xl font-bold text-blue-800\"&gt;{{ $nom }}&lt;/h2&gt;\n    &lt;p&gt;&lt;strong&gt;Estadi:&lt;/strong&gt; {{ $estadi }}&lt;/p&gt;\n    &lt;p&gt;&lt;strong&gt;T\u00edtols:&lt;/strong&gt; {{ $titols }}&lt;/p&gt;\n&lt;/div&gt;\n</code></pre> <pre><code>menu.blade.php\n&lt;nav&gt;\n    &lt;ul class=\"flex space-x-4\"&gt;\n        &lt;li&gt;&lt;a href=\"/\" class=\"text-white hover:underline\"&gt;Inici&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"/equips\" class=\"text-white hover:underline\"&gt;Guia d'Equips&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"/estadis\" class=\"text-white hover:underline\"&gt;Llistat d'Estadis&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/nav&gt;\n</code></pre></p>"},{"location":"07frameworks.html#exercici-guia-destadis-de-futbol","title":"Exercici: Guia d'Estadis de Futbol","text":"<p>L'objectiu d'aquest exercici \u00e9s crear una extensi\u00f3 de la guia d'equips de futbol femen\u00ed per incloure una nova funcionalitat: un llistat d'estadis de futbol. Els alumnes implementaran rutes, controladors i vistes per mostrar estadis i les seves caracter\u00edstiques.</p>"},{"location":"07frameworks.html#instruccions","title":"Instruccions","text":""},{"location":"07frameworks.html#1-crear-un-controlador-destadis","title":"1. Crear un controlador d'estadis","text":"<ol> <li> <p>Genera un nou controlador anomenat <code>EstadiController</code>.</p> </li> <li> <p>Afegeix un m\u00e8tode <code>index</code> al controlador per retornar una vista amb un llistat d'estadis.</p> </li> </ol>"},{"location":"07frameworks.html#estadiosfutbolfemeni-nom-estadi-johan-cruyff-ciutat-sant-joan-despi-capacitat-6000-equip_principal-fc-barcelona-femeni-nom-centro-deportivo-wanda-alcala-de-henares-ciutat-alcala-de-henares-capacitat-2800-equip_principal-atletic-de-madrid-femeni-nom-estadio-alfredo-di-stefano-ciutat-madrid-capacitat-6000-equip_principal-real-madrid-femeni","title":"<pre><code>$estadiosFutbolFemeni = [\n    [\n    'nom' =&gt; 'Estadi Johan Cruyff',\n    'ciutat' =&gt; 'Sant Joan Desp\u00ed',\n    'capacitat' =&gt; 6000,\n    'equip_principal' =&gt; 'FC Barcelona Femen\u00ed'\n    ],\n    [\n    'nom' =&gt; 'Centro Deportivo Wanda Alcal\u00e1 de Henares',\n    'ciutat' =&gt; 'Alcal\u00e1 de Henares',\n    'capacitat' =&gt; 2800,\n    'equip_principal' =&gt; 'Atl\u00e8tic de Madrid Femen\u00ed'\n    ],\n    [\n    'nom' =&gt; 'Estadio Alfredo Di St\u00e9fano',\n    'ciutat' =&gt; 'Madrid',\n    'capacitat' =&gt; 6000,\n    'equip_principal' =&gt; 'Real Madrid Femen\u00ed'\n    ]\n];\n</code></pre>","text":""},{"location":"07frameworks.html#2-crear-una-ruta-per-als-estadis","title":"2. Crear una ruta per als estadis","text":"<ol> <li>Defineix una nova ruta a <code>routes/web.php</code> que apunti al m\u00e8tode <code>index</code> del controlador.</li> </ol>"},{"location":"07frameworks.html#3-crear-una-vista-per-mostrar-els-estadis","title":"3. Crear una vista per mostrar els estadis","text":"<ol> <li>Crea un fitxer de vista a <code>resources/views/estadis/index.blade.php</code> per mostrar els estadis en format de taula.</li> <li>Inclou el menu.</li> </ol>"},{"location":"07frameworks.html#4-afegir-estils-al-llistat-destadis","title":"4. Afegir estils al llistat d'estadis","text":"<ol> <li> <p>Crea un fitxer CSS a <code>resources/css/estadis.css</code> per estilitzar la taula.</p> </li> <li> <p>Inclou el CSS a la vista utilitzant <code>@vite</code>.</p> </li> <li> <p>Executa Vite per aplicar els estils.</p> </li> </ol>"},{"location":"07frameworks.html#5-ampliar-la-guia-destadis","title":"5. Ampliar la guia d'estadis","text":"<ol> <li> <p>Afegir una nova ruta /estadis/crear per mostrar un formulari que permet afegir un nou estadi.</p> </li> <li> <p>Crear un controlador amb un m\u00e8tode crear que retorne una vista amb el formulari.</p> </li> <li> <p>Dissenyar un formulari Blade que contingui camps per al nom de l'estadi, ciutat i capacitat.</p> </li> <li> <p>Mostrar un missatge de confirmaci\u00f3 quan l'usuari faci clic al bot\u00f3 d'enviar.</p> </li> <li> <p>Crea un component per als estadis.</p> </li> <li> <p>Modifica la vista resources/views/estadis/index.blade.php per heretar de layouts.app.</p> </li> </ol>"},{"location":"07frameworks.html#6-jugadores","title":"6. Jugadores","text":"<p>Fes el mateix amb les jugadores, crea un controlador, una vista i un component.</p> <p>Exemple : </p> <pre><code>$jugadores = [\n    ['nom' =&gt; 'Alexia Putellas', 'equip' =&gt; 'Bar\u00e7a Femen\u00ed', 'posici\u00f3' =&gt; 'Migcampista'],\n    ['nom' =&gt; 'Esther Gonz\u00e1lez', 'equip' =&gt; 'Atl\u00e8tic de Madrid', 'posici\u00f3' =&gt; 'Davantera'],\n    ['nom' =&gt; 'Misa Rodr\u00edguez', 'equip' =&gt; 'Real Madrid Femen\u00ed', 'posici\u00f3' =&gt; 'Portera'],\n];\n</code></pre>"},{"location":"07frameworks.html#7-partits","title":"7. Partits","text":"<p>Fes el mateix amb els partits, crea un controlador, una vista i un component.</p> <p>Exemple :</p> <pre><code>$partits = [\n    ['local' =&gt; 'Bar\u00e7a Femen\u00ed', 'visitant' =&gt; 'Atl\u00e8tic de Madrid', 'data' =&gt; '2024-11-30', 'resultat' =&gt; null],\n    ['local' =&gt; 'Real Madrid Femen\u00ed', 'visitant' =&gt; 'Bar\u00e7a Femen\u00ed', 'data' =&gt; '2024-12-15', 'resultat' =&gt; '0-3'],\n];\n</code></pre>"},{"location":"07frameworks.html#8-modifica-el-menu","title":"8. Modifica el menu","text":"<p>Per poder anar a totes les pantalles i canvia les rutes a anomenades.</p>"},{"location":"07frameworks.html#preguntes-per-reflexionar","title":"Preguntes per reflexionar","text":"<ol> <li>Rutes: Per qu\u00e8 utilitzem un controlador per gestionar la l\u00f2gica d'aquesta funcionalitat?</li> <li>Blade: Qu\u00e8 passa si intentem accedir a una clau que no existeix en un array?</li> <li>CSS i Vite: Quina difer\u00e8ncia hi ha entre incloure un fitxer CSS est\u00e0tic i utilitzar <code>@vite</code>?</li> </ol>"},{"location":"07frameworksAntic.html","title":"07frameworksAntic","text":""},{"location":"07frameworksAntic.html#rutas","title":"Rutas","text":"<p>Las rutas en Laravel (y en casi cualquier Framework) sirven para redireccionar al cliente (o navegador) a las vistas que nosotros queramos.</p> <p>Estas rutas se configuran en el archivo <code>public/routes/web.php</code> donde se define la ruta que el usuario pone en la URL despu\u00e9s del dominio y se retorna la vista que se quiere cargar al introducir dicha direcci\u00f3n en el navegador.</p> <pre><code>&lt;?php\n\n// Ruta por defecto para cargar la vista welcome cuando el usuario introduce simplemente el dominio\n\nRoute::get('/', function () {\n    return view('welcome');\n});\n</code></pre> <p>En el ejemplo de arriba vamos a cargar la vista llamada <code>welcome</code> que hace referencia a la vista <code>resources/views/welcome.blade.php</code></p>"},{"location":"07frameworksAntic.html#alias","title":"Alias","text":"<p>Es interesante darle un alias o un nombre a nuestras rutas para poder utilizar dichos alias en nuestras plantillas de Laravel que veremos m\u00e1s adelante.</p> <p>Para ello, basta con utilizar la palabra <code>name</code> al final de la estructura de la ruta y darle un nombre que queramos; normalmente descriptivo y asociado a la vista que tiene que cargar el enroutador de Laravel.</p> <pre><code>&lt;?php\n\nRoute::get('/users', function () {\n    return view('users');\n}) -&gt; name('usuarios');\n</code></pre> <p>Despu\u00e9s veremos que es muy \u00fatil ya que a la hora de refactorizar o hacer un cambio, si tenemos enlaces o men\u00fas de navegaci\u00f3n que apuntan a esta ruta, s\u00f3lo tendr\u00edamos que cambiar el par\u00e1metro dentro del <code>get()</code> y no tener que ir archivo por archivo.</p> <p>Laravel nos proporciona una manera m\u00e1s c\u00f3moda a la hora de cargar una vista si no queremos par\u00e1metros ni condiciones. Tan s\u00f3lo definiremos la siguiente l\u00ednea que hace referencia la ruta <code>datos</code> en la URL y va a cargar el archivo <code>usuarios.php</code> de nuestra carpeta <code>views</code> como le hemos indicado en el segundo par\u00e1metro.</p> <pre><code>&lt;?php\n\n/* http://localhost/datos/ */\n\nRoute::view('datos', 'usuarios');\n</code></pre> <p>Pero no s\u00f3lo podemos retornar una vista sino, desde un simple string a m\u00f3dulos propios de Laravel.</p>"},{"location":"07frameworksAntic.html#parametros","title":"Par\u00e1metros","text":"<p>Ya hemos visto que con PHP podemos pasar par\u00e1metros a trav\u00e9s de la URL, como si fueran variables, que las recuper\u00e1bamos a trav\u00e9s del m\u00e9todo GET o POST.</p> <p>Con Laravel tambi\u00e9n podemos introducir par\u00e1metros pero de una forma m\u00e1s vistosa y ordenada, de tal manera que sea visualmente m\u00e1s c\u00f3modo de recordar y de indexar por los motores de b\u00fasqueda como Google.</p> <pre><code>  http://localhost/cliente/324\n</code></pre> <p>Para configurar este tipo de rutas en nuestro archivo de rutas <code>public/routes/web.php</code> haremos lo siguiente.</p> <pre><code>&lt;?php\n\nRoute::get('cliente/{id}', function($id) {\n    return('Cliente con el id: ' . $id);\n});\n</code></pre> <p>\u00bfQu\u00e9 pasa si no introducimos un id y s\u00f3lo navegamos hasta <code>cliente/</code> ? ... Nos va a devolver un 404</p> <p>Para resolver \u00e9sto, podemos definir una ruta por defecto en caso de que el <code>id</code> (o par\u00e1metro) no sea pasado. Para ello usaremos el s\u00edmbolo <code>?</code> en nuestro nombre de ruta e inicializaremos la variable con el valor que queramos.</p> <pre><code>&lt;?php\n\nRoute::get('cliente/{id?}', function($id = 1) {\n    return ('Cliente con el id: ' . $id);\n});\n</code></pre> <p>Ahora tenemos otro problema, porque estamos filtrando por id del cliente que, normalmente es un n\u00famero, pero si metemos un par\u00e1metro que no sea un n\u00famero, vamos a obtener un resultado no deseado.</p> <p>Para resolver este caso haremos uso de la cl\u00e1usula <code>where</code> junto con una expresi\u00f3n regular n\u00famerica.</p> <pre><code>&lt;?php\n\nRoute::get('cliente/{id?}', function($id = 1) {\n    return ('Cliente con el id: ' . $id);\n}) -&gt; where('id', '[0-9]+');\n</code></pre> <p>Adem\u00e1s, podemos pasarle variables a nuestra URL para luego utilzarlas en nuestros archivos de plantillas o en archivos <code>.php</code> haciendo uso de un array asociativo. Veamos un ejemplo con la forma reducida para ahorrarnos c\u00f3digo</p> <pre><code>&lt;?php\n\nRoute::view('datos', 'usuarios', ['id' =&gt; 5446]);\n</code></pre> <p>... y el archivo <code>resources/views/usuarios.php</code> debe tener algo parecido a \u00e9sto</p> <pre><code>&lt;!-- Estructura t\u00edpica de un archivo HTML5 --&gt;\n\n&lt;p&gt;Usuario con id: &lt;?= $id ?&gt;&lt;/p&gt;\n\n&lt;!-- ... --&gt;\n</code></pre> <p>Con las plantillas de Laravel <code>blade.php</code> veremos c\u00f3mo simplificar a\u00fan m\u00e1s nuestro c\u00f3digo.</p> <p>Para m\u00e1s informaci\u00f3n acerca de las rutas, par\u00e1metros y expresiones regulares en las rutas puedes echar un vistazo a la documentaci\u00f3n oficial de rutas que contiene numerosos ejemplos.</p>"},{"location":"07frameworksAntic.html#plantillas-o-templates","title":"Plantillas o Templates","text":"<p>A trav\u00e9s de las plantillas de Laravel vamos a escribir menos c\u00f3digo PHP y vamos a tener nuestros archivos mejor organizados.</p> <p>Blade es el sistema de plantillas que trae Laravel, por eso los archivos de plantillas que guardamos en el directorio de <code>views</code> llevan la extensi\u00f3n <code>blade.php</code>.</p> <p>De esta manera sabemos inmediatamente que se trata de una plantilla de Laravel y que forma parte de una vista que se mostrar\u00e1 en el navegador.</p>"},{"location":"07frameworksAntic.html#directivas","title":"Directivas","text":"<p>Laravel tiene un gran n\u00famero de directivas que podemos utilizar para ahorrarnos mucho c\u00f3digo repetitivo entre otras funciones.</p> <p>Digamos que las directivas son peque\u00f1as funciones ya escritas que aceptan par\u00e1metros y que cada una de ellas hace una funci\u00f3n diferente dentro de Laravel.</p> <ul> <li><code>@yield</code> Define el contenido din\u00e1mico que se va a cargar. Se usa conjuntamente con @section</li> <li><code>@section</code> y <code>@endsection</code> bloque de c\u00f3digo din\u00e1mico</li> <li><code>@extends</code> importa el contenido de una plantilla ya creada</li> </ul>"},{"location":"07frameworksAntic.html#separando-codigo","title":"Separando c\u00f3digo","text":"<p>Veamos un ejemplo de c\u00f3mo hacer uso del poder de Laravel para crear plantillas y no repetir c\u00f3digo.</p> <p>Supongamos que tenemos ciertas estructuras HTML repetidas como puede ser una cabecera <code>header</code>, un men\u00fa de navegaci\u00f3n <code>nav</code> y un par de secciones que hacen uso de este mismo c\u00f3digo.</p> <p>Supongamos que tenemos 2 apartados en la web:</p> <ul> <li><code>Blog</code></li> <li><code>Fotos</code></li> </ul> <p>Primero de todo tendremos que generar un archivo que haga de <code>plantilla</code> de nuestro sitio web.</p> <p>Para ello creamos el archivo <code>plantilla.blade.php</code> dentro de nuestro directorio de plantillas <code>resources/views</code>.</p> <p>Dicho archivo va a contener el t\u00edpico c\u00f3digo de una p\u00e1gina simple de HTML y en el body a\u00f1adiremos nuestros contenido est\u00e1tico y din\u00e1mico.</p> <pre><code>&lt;body&gt;\n    &lt;!-- CONTENIDO EST\u00c1TICO PARA TODAS LAS SECCIONES --&gt;\n    &lt;h1&gt;Bienvenid@s a Laravel&lt;/h1&gt;\n    &lt;hr&gt;\n\n    &lt;!-- MEN\u00da --&gt;\n    &lt;nav&gt;\n        &lt;a href={{ route('noticias') }}&gt;Blog&lt;/a&gt; | \n        &lt;a href={{ route('galeria') }}&gt;Fotos&lt;/a&gt;\n    &lt;/nav&gt;\n\n    &lt;!-- CONTENIDO DIN\u00c1MICO EN FUNCI\u00d3N DE LA SECCI\u00d3N QUE SE VISITA --&gt;\n    &lt;header&gt;\n        @yield('apartado')\n    &lt;/header&gt;\n&lt;/body&gt;\n</code></pre> <p>Cada secci\u00f3n que haga uso de esta plantilla contendr\u00e1 el texto est\u00e1tico <code>Bienvenid@s a Laravel</code> seguido de un men\u00fa de navegaci\u00f3n con enlaces a cada una de las secciones y el contenido din\u00e1mico de cada secci\u00f3n.</p> <p>Ahora crearemos los archivos din\u00e1micos de cada una de las secciones, en nuestro caso <code>blog.blade.php</code> y <code>fotos.blade.php</code></p> <pre><code>&lt;?php\n\n// blog.blade.php\n\n@extends('plantilla')\n\n@section('apartado')\n  &lt;h2&gt;Est\u00e1s en BLOG&lt;/h2&gt;\n@endsection\n</code></pre> <p>Importamos el contenido de <code>plantilla</code> bajo la directiva <code>@extends</code> para que cargue los elementos est\u00e1ticos que hemos declarado y con la directiva <code>@section</code> y <code>@endsection</code> definimos el bloque de c\u00f3digo din\u00e1mico, en funci\u00f3n de la secci\u00f3n que estemos visitando.</p> <p>Ahora casi lo mismo para la secci\u00f3n de <code>fotos</code></p> <pre><code>&lt;?php\n\n// fotos.blade.html\n\n@extends('plantilla')\n\n@section('apartado')\n  &lt;h2&gt;Est\u00e1s en FOTOS&lt;/h2&gt;\n@endsection\n</code></pre> <p>El \u00faltimo paso que nos queda es configurar el archivo de rutas <code>routes/web.php</code></p> <pre><code>&lt;?php\n\n// web.php\n\nRoute::view('blog', 'blog') -&gt; name('noticias');\nRoute::view('fotos', 'fotos') -&gt; name('galeria');\n</code></pre> <p>De esta manera podremos hacer uso del men\u00fa de navegaci\u00f3n que hemos puesto en nuestra plantilla y gracias a los alias <code>noticias</code> y <code>galeria</code>, la URL ser\u00e1 m\u00e1s amigable.</p>"},{"location":"07frameworksAntic.html#estructuras-de-control","title":"Estructuras de control","text":"<p>Como en todo buen lenguaje de programaci\u00f3n, en Laravel tambi\u00e9n tenemos estructuras de control.</p> <p>En Blade (plantillas de Laravel) siempre que iniciemos un bloque de estructura de control DEBEMOS cerrarla</p> <ul> <li><code>@foreach</code> ~ <code>@endforeach</code> lo usamos para recorrer arrays</li> <li><code>@if</code> ~ <code>@endif</code> para comprobar condiciones l\u00f3gicas</li> <li><code>@switch</code> ~ <code>@endswitch</code> en funci\u00f3n del valor de una variable ejecutar un c\u00f3digo</li> <li><code>@case</code> define la casu\u00edstica del switch</li> <li><code>@break</code> rompe la ejecuci\u00f3n del c\u00f3digo en curso</li> <li><code>@default</code> si ninguna casu\u00edstica se cumple</li> </ul> <pre><code>&lt;?php\n\n$equipo = ['Mar\u00eda', 'Alfredo', 'William', 'Ver\u00f3nica'];\n\n@foreach ($equipo as $nombre)\n  &lt;p&gt; {{ $nombre }} &lt;/p&gt;\n@endforeach\n</code></pre> <p>Acordaros que podemos pasar variables a trav\u00e9s de las rutas como si fueran par\u00e1metros. Pero en este caso, vamos a ver otra directiva m\u00e1s; el uso de <code>@compact</code>.</p> <pre><code>&lt;?php\n\n// Uso de @compact\n$equipo = ['Mar\u00eda', 'Alfredo', 'William', 'Ver\u00f3nica'];\n\n// Route::view('nosotros', ['equipo' =&gt; 'equipo']);\nRoute::view('nosotros', @compact('equipo'));\n</code></pre>"},{"location":"07frameworksAntic.html#controladores","title":"Controladores","text":"<p>Los controladores son el lugar perfecto para definir la l\u00f3gica de negocio de nuestra aplicaci\u00f3n o sitio web.</p> <p>Hace de intermediario entre la vista (lo que vemos con nuestro navegador o cliente) y el servidor donde la app est\u00e1 alojada.</p> <p>Por defecto, los controladores se guardan en una carpeta espec\u00edfica situada en <code>app/Http/Controllers</code> y tienen extensi\u00f3n <code>.php</code>.</p> <p>Para crear un controlador nuevo debemos hacer uso de nuestro querido aut\u00f3mata <code>artisan</code> donde le diremos que cree un controlador con el nombre que nosotros queramos.</p> <p>Abrimos la consola y nos situamos en la ra\u00edz de nuestro Projecte</p> <p><pre><code>php artisan make:controller PagesController\n</code></pre> Si todo ha salido bien, recibiremos un mensaje por consola con que todo ha ido bien y podremos comprobar que, efectivamente se ha creado el archivo <code>PagesController.php</code> con una estructura b\u00e1sica de controlador, dentro de la carpeta <code>Controllers</code> que hemos descrito anteriormente.</p> <p>Ahora podemos modificar nuestro archivo de rutas <code>web.pbp</code> para dejarlo limpio de l\u00f3gica y trasladar \u00e9sta a nuestro nuevo controlador.</p> <p>La idea de \u00e9sto es dejar el archivo <code>web.php</code> tan limpio como podamos para que, de un vistazo, se entienda todo perfectamente.</p> <p>RECUERDA que s\u00f3lo movemos la l\u00f3gica, mientras que las cl\u00e1usulas como <code>where</code> y <code>name</code> las seguimos dejando en el archivo de rutas <code>web.php</code></p> <p>Veamos c\u00f3mo quedar\u00eda un refactor del archivo de rutas utilizando un <code>Controller</code> como el que acabamos de crear</p> <p>Ahora nos quedar\u00eda de la siguiente manera</p> <pre><code>&lt;?php\n\n// web.php (v2.0) \u2592\u2592\u2592\u2592 Refactorizado\n\nuse App\\Http\\Controllers\\PagesController;\nuse Illuminate\\Support\\Facades\\Route;\n\nRoute::get('/', [ PagesController::class, 'inicio' ]);\nRoute::get('datos', [ PagesController::class, 'datos' ]);\nRoute::get('cliente/{id?}', [ PagesController::class, 'cliente' ]) -&gt; where('id', '[0-9]+');\nRoute::get('nosotros/{nosotros?}', [ PagesController::class, 'nosotros']) -&gt; name('nosotros');\n</code></pre> <p>y en nuestro archivo controlador lo dejar\u00edamos de la siguiente manera</p> <pre><code>&lt;?php\n\n// PagesController.php\n\nnamespace App\\Http\\Controllers;\n\nclass PagesController extends Controller\n{\n    public function inicio() { return view('welcome'); }\n\n    public function datos() { \n        return view('usuarios', ['id' =&gt; 56]);\n    }\n\n    public function cliente($id = 1) {\n        return ('Cliente con el id: ' . $id);\n    }\n\n    public function nosotros($nombre = null) {\n        $equipo = [\n            'Paco',\n            'Enrique',\n            'Maria',\n            'Veronica'\n        ];\n\n        return view('nosotros', @compact('equipo', 'nombre'));\n    }\n}\n</code></pre>"},{"location":"07frameworksAntic.html#migraciones-eloquent","title":"Migraciones &amp; Eloquent","text":"<p>Con las migraciones vamos a gestionar la base de datos de nuestro sitio web; tanto crear nuevas BBDD como editarlas desde Laravel.</p> <p>Las migraciones de un sitio hecho con Laravel se alojan en la ruta <code>database/migrations</code> y tienen extensi\u00f3n <code>.php</code>.</p> <p>Si te fijas, nada m\u00e1s instalar Laravel con la imagen de Bitnami, se han creado varios archivos de migraciones que podemos usar, pero de momento los dejamos ah\u00ed y NO LOS BORRAMOS porque son muy \u00fatiles.</p>"},{"location":"07frameworksAntic.html#archivos-env","title":"Archivos .env","text":"<p>Es de uso com\u00fan trabajr con archivos de entorno llamados tambi\u00e9n <code>archivos .env</code>. Normalmente, eun unProjecte real puedes encontrarte con varios archivos de este tipo en funci\u00f3n del despliegue que se quiera hacer; como por ejemplo:</p> <ul> <li><code>test.env</code> config. para desplegar en entorno seguro de pruebas</li> <li><code>release.env</code> config. para desplegar cambios de versi\u00f3n que se env\u00eda a los beta testers</li> <li><code>production.env</code>config. para desplegar el c\u00f3digo ya probado al resto del mundo.</li> </ul> <p>En nuestro caso, como no vamos a desplegar nada, s\u00f3lo vamos a usar un \u00fanico archivo <code>.env</code> y en cuesti\u00f3n de las migraciones vamos a fijarnos a partir de la l\u00ednea 11 donde dice:</p> <pre><code>DB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=blog\nDB_USERNAME=root\nDB_PASSWORD=\n</code></pre> <p>En este archivo debemos configurar los datos de nuestro servidor MySQL y rellenarlo con la informaci\u00f3n correspondiente a nuestra base de datos ya creada</p> <p>Una vez tengamos \u00e9sto, lo que nos queda es ejecutar el comando de las migraciones a trav\u00e9s del CLI <code>artisan</code></p> <pre><code>php artisan migrate\n</code></pre> <p>Si todo ha salido bien obtendremos el siguiente resultado donde podremos observar que todas las migraciones se han insertado correctamente en la base de datos.</p> <p>Si nos vamos al cliente que utilicemos para manejar la base de datos (phpMyAdmin por ejemplo) veremos que en nuestra base de datos se han creado todas las tablas de la migraci\u00f3n que hemos ejecutado y adem\u00e1s una tabla que se llama migrations.</p> <p>La tabla <code>migrations</code> es simplemente un registro de todas las migraciones llevadas a cabo. Adem\u00e1s, podemos hacer un rollback en caso de que queramos reestablecer nuestra base de datos.</p> <pre><code>php artisan migrate:rollback\n</code></pre> <p>O si preferimos hacer un reset para dejarla limpia</p> <pre><code>php artisan migrate:reset\n</code></pre>"},{"location":"07frameworksAntic.html#modelos","title":"Modelos","text":"<p>Gracias a Eloquent y su integraci\u00f3n con Laravel, podremos crear modelos de datos de una manera automatizada a trav\u00e9s de <code>artisan</code></p> <p>Ahora que ya sabemos manejar las migraciones es hora de crear nuestras propias migraciones pero a trav\u00e9s de Eloquent.</p> <p>A trav\u00e9s de la instrucci\u00f3n <code>make:model</code> creamos un nuevo modelo de datos, a continuaci\u00f3n ponemos el nombre siempre empezando en May\u00fasucla y en SINGULAR y pasamos el par\u00e1metro relacionado con las migraciones <code>-m</code>.</p> <pre><code>php artisan make:model Nota -m\n</code></pre> <p>Si todo ha salido bien, veremos en nuestro directorio de migraciones <code>database/migrations</code> un nuevo archivo que se llama <code>2022_01_07_81237_create_notas_table.php</code>.</p> <p>El siguiente paso es ver nuestro archivo de migraciones y editarlo para que contenga las tablas que nosotros queramos. Si lo visualizamos tan s\u00f3lo tendr\u00e1 la estructura b\u00e1sica con un par de tablas. Vamos a a\u00f1adir un par de tablas m\u00e1s.</p> <p><pre><code>&lt;?php\n\nSchema::create('notas', function (Blueprint $table) {\n  $table-&gt;id();\n  $table-&gt;timestamps();\n\n  $table-&gt;string('nombre');\n  $table-&gt;text('descripcion');\n});\n</code></pre> En esta <code>Schema</code> podemos poner todas las tablas que nosotros queramos y establecer el tipo de dato para cada una de ellas, as\u00ed como el nombre.</p> <p>Una vez que estamos satisfechos con nuestro esquema debemos volver a ejecutar el c\u00f3digo de migraci\u00f3n a trav\u00e9s de artisan para que se introduzca esta nueva informaci\u00f3n en la base de datos.</p> <p>Para ver todos los tipos de datos que maneja Eloquent puedes visitar la documentaci\u00f3n oficial.</p>"},{"location":"07frameworksAntic.html#recuperando-datos","title":"Recuperando datos","text":"<p>Ya tenemos nuestra base de datos creada con nuestras tablas migradas, ahora s\u00f3lo falta rellenar esas tablas con datos para poder pintarlos en nuestro c\u00f3digo HTML.</p> <p>Rellenamos las tablas a trav\u00e9s del cliente de MySQL que m\u00e1s nos guste:</p> <ul> <li>PHP MyAdmin</li> <li>MySQL Workbench</li> <li>HeidiSQL *</li> <li>SquirrelSQL</li> </ul> <p>Ahora tendremos que irnos a una vista ya creada o creamos una nueva y solicitamos los datos desde el HTML.</p> <p>\u00bfNos acordamos del <code>PagesController</code>? pues hacer uso de su magia junto con las rutas que creamos en <code>web.php</code></p> <pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 web.php \n\nRoute::get('notas', [ PagesController::class, 'notas' ]);\n</code></pre> <p>Antes de intentar entrar, debemos configurar nuestro controlador de la siguiente manera:</p> <pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 PagesController.php \n\npublic function notas() {\n  $notas = Nota::all();\n\n  return view('notas', compact('notas'));\n}\n</code></pre> <p>El \u00faltimo paso ser\u00eda, crear la vista con la tabla que pinte los datos a trav\u00e9s de la variable que le pasamos por par\u00e1metro en la ruta que acabamos de describir.</p> <p><pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 notas.blade.php \n\n&lt;h1&gt;Notas desde base de datos&lt;/h1&gt;\n\n&lt;table border=\"1\"&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Nombre&lt;/th&gt;\n            &lt;th&gt;Descripci\u00f3n&lt;/th&gt;\n        &lt;/tr&gt;\n    &lt;/thead&gt;\n\n    @foreach ($notas as $nota)\n        &lt;tr&gt;\n            &lt;td&gt;{{$nota -&gt; nombre}}&lt;/td&gt;\n            &lt;td&gt;{{$nota -&gt; descripcion}}&lt;/td&gt;\n        &lt;/tr&gt;\n    @endforeach\n&lt;/table&gt;\n</code></pre> Hay que fijarse bien en los nombres de las columnas que tienen nuestras bases de datos, es justo lo que va despu\u00e9s de <code>-&gt;</code> y siempre rodeado por los s\u00edmbolos <code>{{  }}</code> ya que estamos en un archivo de plantilla.</p> <p>\u00bfQu\u00e9 pasar\u00eda si s\u00f3lo queremos acceder a un \u00fanico elemento? como si hici\u00e9semos un <code>SELECT * from usuarios where id = 1</code></p> <p>Para \u00e9so, tenemos una instrucci\u00f3n espec\u00edfica en Eloquent que nos soluciona el problema. En este caso usaremos la instrucci\u00f3n <code>findOrFail</code> y como buenos usuarios de Laravel, lo utilizaremos dentro del controlador.</p> <pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 PagesController.php \n\npublic function detalle($id) {\n  $nota = Nota::findOrFail($id);\n\n  return view('notas.detalle', compact('nota'));\n}\n</code></pre> <p>Hay que acordarse que debemos configurar la ruta en nuestro archivo de rutas.</p> <pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 web.php \n\nRoute::get('notas/{id?}', [ PagesController::class, 'detalle' ]) -&gt; name('notas.detalle');\n</code></pre> <p>Y por \u00faltimo, debemos crear la plantilla, pero como es un archivo de detalle o que est\u00e1 relacionado con otra plantilla ya creada, podemos crear una carpeta con el nombre de la plantilla y dentro, el archivo de plantilla en cuesti\u00f3n.</p> <p>De tal manera que quedar\u00eda as\u00ed <code>resources/views/notas/detalle.blade.php</code></p> <pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 detalle.blade.php\n\n@extends('plantilla')\n\n@section('apartado')\n    &lt;h1&gt;Detalle de la nota&lt;/h1&gt;\n\n    &lt;h3&gt;ID: {{ $nota -&gt; id }}&lt;/h3&gt;\n    &lt;h3&gt;Nombre: {{ $nota -&gt; nombre }}&lt;/h3&gt;\n    &lt;h3&gt;Descripci\u00f3n: {{ $nota -&gt; descripcion }}&lt;/h3&gt;    \n@endsection\n</code></pre>"},{"location":"07frameworksAntic.html#modificar-tablas-sin-perder-datos","title":"Modificar tablas sin perder datos","text":"<p>Uno de los dilemas que tenemos a la hora de manejar las bases de datos con Laravel y Eloquent, es que a veces cometemos errores y queremos introducir una nueva columna dentro de nuestra tabla o modificar una de esas columnas SIN PERDER LOS DATOS DE LA BASE DE DATOS.</p> <p>Imaginemos que en nuestra tabla <code>notas</code> queremos agregar una columna con el nombre <code>autor</code>.</p> <p>Lo primero de todo es crear una nueva migraci\u00f3n para realizar este cambio. Para ello, haremos uso de nuestro querido <code>artisan</code> y debemos crear el nombre de esta migraci\u00f3n con la siguiente f\u00f3rmula <code>add_fields_to_</code> seguidamente del nombre de la tabla que queremos modificar.</p> <pre><code>php artisan migrate add_fields_to_nota\n</code></pre> <p>Seguidamente, nos metemos en el archivo de la migraci\u00f3n que acabamos de crear y en el apartado up() debemos poner el cambio que queremos realizar y en la secci\u00f3n down() debemos hacer lo mismo pero tenemos que decirle a Eloquent que la elimine \u00bfpor qu\u00e9? para en caso de hacer migrate rollback, se cargue este nuevo campo que hemos creado.</p> <pre><code>&lt;?php\n\npublic function up()\n{\n  Schema::table('notas', function (Blueprint $table) {\n      $table -&gt; string('autor');\n  });\n}\n\npublic function down()\n{\n  Schema::table('notas', function (Blueprint $table) {\n      $table -&gt; dropColumn('autor');\n  });\n}\n</code></pre>"},{"location":"07frameworksAntic.html#formularios","title":"Formularios","text":"<p>Ahora que ya sabemos c\u00f3mo cargar de una base de datos, vamos a ver c\u00f3mo insertarlos con Laravel y sin escribir ni una sola l\u00ednea de SQL.</p> <p>Gracias al m\u00e9todo <code>save()</code> de Laravel podremos guardar datos que provengan de un formulario desde nuestras plantillas. Para ello, lo primero que necesitamos lo siguiente:</p> <ul> <li><code>formulario HTML</code> que recoja los datos que el usuario introduce</li> <li>Una <code>ruta</code> que sea la encargada de recibir los datos del formulario</li> <li>M\u00e9todo <code>POST</code> para enviar los datos al servidor</li> <li>Un m\u00e9todo en nuestro <code>controlador</code> que procese los datos y los guarde a trav\u00e9s de <code>save()</code></li> <li>La cl\u00e1usula de seguridad <code>@csrf</code> para evitar ataques desde otros sitios</li> </ul> <p>As\u00ed pues, empecemos por el formulario</p> <pre><code>&lt;form action=\"{{ route('notas.crear') }}\" method=\"POST\"&gt;\n    @csrf {{-- Cl\u00e1usula para obtener un token de formulario al enviarlo --}}\n\n    &lt;input type=\"text\" name=\"nombre\" placeholder=\"Nombre de la nota\" class=\"form-control mb-2\" autofocus&gt;\n    &lt;input type=\"text\" name=\"descripcion\" placeholder=\"Descripci\u00f3n de la nota\" class=\"form-control mb-2\"&gt;\n\n    &lt;button class=\"btn btn-primary btn-block\" type=\"submit\"&gt;\n      Crear nueva nota\n    &lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>Como vemos, creamos 2 inputs relacionados con nuestras columnas dentro de la tabla, en este caso <code>nombre</code> y <code>descripci\u00f3n</code></p> <p>El <code>action</code> del formulario debe apuntar a una nueva ruta que vayamos a crear y donde enviemos los datos mediante <code>POST</code>.</p> <p>Ahora crearemos la ruta en nuestro archivo de rutas <code>web.php</code></p> <pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 web.php\n\nRoute::post('notas', [ PagesController::class, 'crear' ]) -&gt; name('notas.crear');\n</code></pre> <p>Si nos fijamos, ya no estamos haciendo uso del <code>get</code>sino del m\u00e9todo <code>post</code> y como son m\u00e9todos diferentes, podemos nombrar la ruta de la misma manera que en <code>get</code> ya que no habr\u00e1 conflicto.</p> <p>Por otro lado, necesitamos invocar nuestro <code>PagesController</code>famoso y decirle que vamos a utilizar el m\u00e9todo <code>crear</code> que bueno, todav\u00eda no existe pero que vamos a crear a contnuaci\u00f3n. No olvidemos crear un alias para poder vincularlo al <code>action</code>del formulario SUPER IMPORTANTE.</p> <p>Para terminar, editaremos nuetro archivo <code>PagesController.php</code> para que el controlador que estamos usando tenga el m\u00e9todo que hemos nombrado previamente.</p> <pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 PagesController.php\n\nuse App\\Models\\Nota;\nuse Illuminate\\Http\\Request;\n\npublic function crear(Request $request) {\n    $notaNueva = new Nota;\n\n    $notaNueva -&gt; nombre = $request -&gt; nombre;\n    $notaNueva -&gt; descripcion = $request -&gt; descripcion;\n\n    $notaNueva -&gt; save();\n\n    return back() -&gt; with('mensaje', 'Nota agregada exit\u00f3samente');\n}\n</code></pre> <p>Nuestro m\u00e9todo <code>crear</code> va a recibir un objeto llamado <code>$request</code> (el cual podemos cambiarle el nombre perfectamente) de tipo <code>Request</code> por lo que DEBEMOS IMPORTAR Request para poder utilizar dicha clase de Laravel.</p> <p>Dentro del m\u00e9todo <code>crear</code> que acabamos de escribir, debemos hacer uso del modelo <code>Nota</code> que ya creamos en otros ejemplos e instanciarla a traves de una variable, en nuestro caso <code>$notaNueva</code>.</p> <p>De esta manera, podremos aceder a los m\u00e9todos y propiedades de la misma, por eso podemos utilizar <code>nombre</code> y <code>descripcion</code>.</p> <p>As\u00ed mismo, la variable <code>$request</code> est\u00e1 formada por los mismos nombres de <code>input</code> que hemos puesto en el formulario de la plantilla, si os acord\u00e1is eran <code>name=\"nombre\"</code> y <code>name=\"descripcion\"</code>.</p> <p>Finalmente usamos el m\u00e9todo <code>save()</code> para guardar estos nuevos datos en la base de datos y retornamos a la p\u00e1gina del formulario con el m\u00e9todo <code>back()</code> a\u00f1adiendo un mensaje con <code>with()</code>.</p> <p>Pero \u00bfd\u00f3nde va a salir este mensaje? -- lo tenemos que declarar en nuestra plantilla</p> <pre><code>@if (session('mensaje'))\n  &lt;div class=\"mensaje-nota-creada\"&gt;\n      {{ session('mensaje') }}\n  &lt;/div&gt;\n@endif\n</code></pre>"},{"location":"07frameworksAntic.html#validaciones","title":"Validaciones","text":"<p>Laravel nos proporciona herramientas para poder validar los datos que el usuario introduce en los campos del formulario.</p> <p>Adem\u00e1s de poder hacerlo con la etiqueta <code>required</code> de HTML5, debemos validar los datos a trav\u00e9s del Framework.</p> <p>Para ello, necesitamos modificar varios elementos:</p> <ul> <li>En primer lugar, nuestro archivo <code>controller</code></li> <li>En segundo lugar, nuestra <code>plantilla</code> que carga el formulario</li> </ul> <p>Empecemos con el controlador. A trav\u00e9s del m\u00e9todo <code>validate()</code> le decimos a Eloquent qu\u00e9 campos son requeridos para poder enviar el formulario. Utilizaremos para ello un array asociativo con el nombre del input y la palabra reservada <code>required</code></p> <pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 PagesController.php\n\n$request -&gt; validate([\n  'nombre' =&gt; 'required',\n  'descripcion' =&gt; 'required'\n]);\n</code></pre> <p>Seguidamente nos moveremos a la plantilla donde est\u00e9 el formulario y a trav\u00e9s de la directiva <code>@error</code> crearemos un bloque html con nuestro mensaje de error por cada uno de los inputs requeridos.</p> <pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 notas.blade.php\n\n@error('nombre')\n    &lt;div class=\"alert alert-danger\"&gt;\n      No olvides rellenar el nombre\n    &lt;/div&gt;\n@enderror\n</code></pre> <p>Pero \u00bfqu\u00e9 pasa cuando ha habido un error y nos muestra el mensaje que hemos escrito? Si te fijas, los campos que hab\u00edas rellenado perder\u00e1n la informaci\u00f3n, pero con Laravel podemos persistirlos sin hacer que el usuario vuelva a introducirlos.</p> <p>Para poder persistir los datos una vez enviados pero con alg\u00fan error de campo requerido, utilizaremos la directiva <code>old()</code> como value del input dentro de nuestro formulario y le pasaremos el nombre del input declarado en la etiqueta <code>name</code>.</p> <pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 notas.blade.php\n\n&lt;input\n  type=\"text\"\n  name=\"nombre\"\n  value=\"{{ old('nombre') }}\"\n  class=\"form-control mb-2\"\n  placeholder=\"Nombre de la nota\"\n  autofocus\n&gt;\n</code></pre>"},{"location":"07frameworksAntic.html#editando-registros","title":"Editando registros","text":"<p>Despu\u00e9s de tener campos en la base de datos, lo interesante ser\u00eda poder editarlos a trav\u00e9s de un formulario.</p> <p>Laravel nos proporciona las herramientas necesarias para ello; veamos pues lo que necesitamos para poder realizar el cambio a trav\u00e9s de la directiva <code>put()</code>.</p> <p>Para poder hacer el cambio de resgistros necesitamos lo siguiente:</p> <ul> <li>Un enlace para redirigir a la p\u00e1gina de editar, pasando el id del elemento en cuesti\u00f3n</li> <li>Una nueva <code>ruta</code>que apunte a nuestra plantilla de editar</li> <li>Una <code>plantilla</code> para poder editar con un formulario que reciba los datos a editar</li> <li>Una nueva funci\u00f3n dentro de nuestro <code>controlador</code> para poder manejar los datos ya introducidos</li> <li>Una nueva <code>ruta</code> que utilice el m\u00e9todo <code>put()</code> para poder actualizar los datos</li> <li>Un nuevo m\u00e9todo dentro de nuestro <code>controlador</code>para actualizar los datos nuevos introducidos</li> </ul> <p><pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 notas.blade.php\n\n&lt;a href=\"{{ route('notas.editar', $nota) }}\" class=\"btn btn-warning btn-sm\"&gt;\n  Editar\n&lt;/a&gt;\n</code></pre> Ahora creamos la ruta</p> <pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 wep.php\n\nRoute::get('editar/{id}', [ PagesController::class, 'editar' ]) -&gt; name('notas.editar');\nRoute::put('editar/{id}', [ PagesController::class, 'actualizar' ]) -&gt; name('notas.actualizar');\n</code></pre> <p>Ahora necesitamos crear una nueva plantilla <code>resources/views/notas/editar.blade.php</code></p> <p><pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 editar.blade.php\n@extends('plantilla')\n\n@section('apartado')\n&lt;h2&gt;Editando la nota {{ $nota -&gt; id }}&lt;/h2&gt;\n\n@if (session('mensaje'))\n  &lt;div class=\"alert alert-success\"&gt;{{ session('mensaje')}}&lt;/div&gt;\n@endif\n\n&lt;form action=\"{{ route('notas.actualizar', $nota -&gt; id) }}\" method=\"POST\"&gt;\n  @method('PUT') {{-- Necesitamos cambiar al m\u00e9todo PUT para editar --}}\n  @csrf {{-- Cl\u00e1usula para obtener un token de formulario al enviarlo --}}\n\n  @error('nombre')\n      &lt;div class=\"alert alert-danger\"&gt;\n          El nombre es obligatorio\n      &lt;/div&gt;\n  @enderror\n  @error('descripcion')\n      &lt;div class=\"alert alert-danger\"&gt;\n          La descripci\u00f3n es obligatoria\n      &lt;/div&gt;\n  @enderror\n\n  &lt;input\n      type=\"text\"\n      name=\"nombre\"\n      class=\"form-control mb-2\"\n      value=\"{{ $nota -&gt; nombre }}\"\n      placeholder=\"Nombre de la nota\"\n      autofocus\n  &gt;\n  &lt;input\n      type=\"text\"\n      name=\"descripcion\"\n      placeholder=\"Descripci\u00f3n de la nota\"\n      class=\"form-control mb-2\"\n      value=\"{{ $nota -&gt; descripcion }}\"\n  &gt;\n\n  &lt;button class=\"btn btn-primary btn-block\" type=\"submit\"&gt;Guardar cambios&lt;/button&gt;\n&lt;/form&gt;\n@endsection\n</code></pre> Y por \u00faltimo, modificamos nuestro <code>PagesController</code></p> <pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 PagesController.php\n\npublic function editar($id) {\n  $nota = Nota::findOrFail($id);\n\n  return view('notas.editar', compact('nota'));\n}\n\npublic function actualizar(Request $request, $id) {\n  $request -&gt; validate([\n      'nombre' =&gt; 'required',\n      'descripcion' =&gt; 'required'\n  ]);\n\n  $notaActualizar = Nota::findOrFail($id);\n\n  $notaActualizar -&gt; nombre = $request -&gt; nombre;\n  $notaActualizar -&gt; descripcion = $request -&gt; descripcion;\n\n  $notaActualizar -&gt; save();\n\n  return back() -&gt; with('mensaje', 'Nota actualizada');\n}\n</code></pre>"},{"location":"07frameworksAntic.html#eliminando-registros","title":"Eliminando registros","text":"<p>A la hora de eliminar un registro nuevo, no necesitamos crear una plantilla nueva ya que podemos mandar la instrucci\u00f3n directamente a trav\u00e9s de otro formulario.</p> <p>Por lo tanto, para eliminar un registro de la base de datos utilizaremos lo siguiente.</p> <ul> <li>Un formulario b\u00e1sico con un \u00fanico bot\u00f3n de eliminar</li> <li>Usaremos el m\u00e9todo <code>DELETE</code> para sobreescribir el m\u00e9todo del formulario HTML</li> <li>Una <code>ruta</code> nueva para controlar el <code>action</code> de este nuevo formulario</li> <li>Un nuevo m\u00e9todo dentro de nuestro <code>Controlador</code> que lleve la l\u00f3gica para borrar el registro</li> </ul> <p>Vamos a ver c\u00f3mo meter ese formulario dentro de nuestro listado de notas</p> <p><pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 notas.blade.php\n\n&lt;form action=\"{{ route('notas.eliminar', $nota) }}\" method=\"POST\" class=\"d-inline\"&gt;\n  @method('DELETE')\n  @csrf\n\n  &lt;button class=\"btn btn-danger btn-sm\" type=\"submit\"&gt;Eliminar&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> Ahora que ya tenemos montado el formulario en nuestra plantilla, pasemos a crear la ruta que hemos colocado en el <code>action</code>del formulario para borrar elementos.</p> <pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 web.php\n\nRoute::delete('eliminar/{id}', [ PagesController::class, 'eliminar' ]) -&gt; name('notas.eliminar');\n</code></pre> <p>El \u00faltimo paso que nos queda es modificar el <code>PagesController</code></p> <pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 PagesController.php\n\npublic function eliminar($id) {\n  $notaEliminar = Nota::findOrFail($id);\n  $notaEliminar -&gt; delete();\n\n  return back() -&gt; with('mensaje', 'Nota Eliminada');\n}\n</code></pre> <p>Si todo ha salido bien, habremos creado un sitio en Laravel y Eloquent que es capaz de hacer un CRUD validando campos en formularios e insertando datos reales en una base de datos.</p>"},{"location":"07frameworksAntic.html#paginacion","title":"Paginaci\u00f3n","text":"<p>Para a\u00f1adir paginaci\u00f3n a nuestros resultados, Eloquent tiene un m\u00e9todo que se llama <code>paginate()</code> donde le pasamos un n\u00famero entero como par\u00e1metro para indicarle el n\u00famero de resultados que queremos por p\u00e1gina.</p> <pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 PagesController.php\n\npublic function notas() {\n  // $notas = Nota::all();\n  $notas = Nota::paginate(5);\n\n  return view('notas', compact('notas'));\n}\n</code></pre> <p>Ahora veremos ciertos elementos HTML que se han generado en nuestra vista, \u00e9sto es porque Laravel hace uso de una librer\u00eda de paginaci\u00f3n situada en la carpeta <code>vendor/laravel/framework/src/illuminate/Pagination</code></p> <p>Si os met\u00e9is en el directorio y abr\u00eds el archivo <code>tailwind.blade.php</code> ver\u00e9is la estructura HTML que os sale en la vista. Pod\u00e9is modificar este archivo a vuestro antojo, pero es recomendable guardarse una copia del mismo.</p> <p>Existe otra dependencia en <code>resources/lang/en/pagination.php</code> donde encontrar\u00e1s el idioma para la paginaci\u00f3n.</p>"},{"location":"07frameworksAntic.html#autenticacion","title":"Autenticaci\u00f3n","text":"<p>Para la utenticaci\u00f3n de usuarios necesitamos instalar unas cuantas dependencias ya preparadas para ello.</p> <p>No es necesarios crear un Projecte nuevo pero nosotros vamos a hacerlo para tener uno con autenticaci\u00f3n y otro no, el que ya hicimos al principio.</p> <p>Primero de todo, vamos a crear un nuevo Projecte en Laravel que se llame <code>notas_auth</code> y nos metemos dentro de la carpeta del mismo cuando el script haya terminado.</p> <p>Dentro de la carpeta <code>notas_auth</code> lanzamos los siguientes comandos.</p> <pre><code>composer require laravel/ui\nphp artisan ui vue --auth\n</code></pre> <p>Para terminar, lanzaremos el comando <code>migrate</code> que ya conocemos... SI EST\u00c1S WINDOWS fuera de la imagen de Docker (utilizando xampp o parecidos) debes crear una nueva base de datos y posteriormente modificiar el archivo <code>.env</code> poniendo el nombre de esa base de datos que acabas de crear.</p> <pre><code>php artisan migrate\n</code></pre> <p>Si todo ha salido bien, podr\u00e1s ver en la carpeta <code>resources/views</code> una carpeta que se llama auth y un controlador nuevo que llama <code>HomeController</code></p>"},{"location":"07frameworksAntic.html#restringir-una-ruta","title":"Restringir una ruta","text":"<p>Si nos fijamos, en el nuevo controlador que se ha creado <code>HomeController</code> podemos ver unas l\u00edneas al principio del archivo que son las que determinan si la ruta est\u00e1 restringida a usuarios registrados y logueados.</p> <pre><code>&lt;?php\npublic function __construct()\n{\n    $this-&gt;middleware('auth');\n}\n</code></pre> <p>Mediante el uso del <code>middleware</code> llamado <code>auth</code> establecemos que todas las rutas que hagan uso de este controlador deban pasar por el login para mostrar el contenido.</p> <p>Por lo tanto, en nuestros Projectes es recomendable utilizar diferentes controladores para diferentes vistas; las que est\u00e9n reestringidas por el login y las que no.</p>"},{"location":"07frameworksAntic.html#datos-del-usuario","title":"Datos del usuario","text":"<p>Siempre que queramos acceder a cualquier dato del usuario logueado, utilizaremos el m\u00e9todo <code>auth()</code> para sacar por pantalla la informaci\u00f3n o para utilizar l\u00f3gica a la hora de guardar datos en la base de datos en funci\u00f3n de un usuario, un email o el campo que sea.</p> <p>Imaginemos que tenemos una ruta donde accedemos a dicha informaci\u00f3n</p> <pre><code>&lt;?php\n\npublic function notas() {\n  return auth()-&gt;user();\n\n  // return auth()-&gt;user() -&gt; name;\n  // return auth()-&gt;user() -&gt; email;\n  // ...\n}\n</code></pre> <p>Si visitamos esta ruta con nuestro login y password, nos aparecer\u00e1 por pantalla toda la informaci\u00f3n de nuestro <code>user</code> a excepci\u00f3n de la contrase\u00f1a y, aunque as\u00ed fuera porque se lo forzamos, \u00e9sta aparecer\u00e1 encriptada.</p>"},{"location":"07frameworksAntic.html#relaciones-con-eloquent","title":"Relaciones con Eloquent","text":"<p>A trav\u00e9s de Eloquent vamos a poder gestionar las relaciones entre nuestras tablas de la base de datos de una manera muy sencilla y sin sentencias SQL.</p>"},{"location":"07frameworksAntic.html#uno-a-uno-1-a-1","title":"Uno a uno (1 a 1)","text":"<p>Para crear este tipo de relaciones en Eloquent y Laravel, debemos tener creadas las tablas que vayamos a relacionar y establecer la relaci\u00f3n entre ellas a trav\u00e9s del m\u00e9todo <code>hasOne</code>.</p> <p>Supongamos que tenemos una tablas <code>usuario</code> que est\u00e1 relacionada con la tabla <code>telefono</code>.</p> <pre><code>&lt;?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Usuario extends Model\n{\n  /**\n   * Obtener el Tel\u00e9fono asocioado con el Usuario\n   */\n  public function telefono()\n  {\n      return $this -&gt; hasOne(Telefono::class);\n  }\n}\n</code></pre> <p>Una vez hecho \u00e9sto, para poder recuperar el dato relacionado, debemos utilizar las propiedades din\u00e1micas de Eloquent. Con estas propiedades din\u00e1micas podremos obtener dicho dato.</p> <pre><code>&lt;?php\n\n$telefono = Usuario::find(1)-&gt;telefono;\n</code></pre> <p>En este caso, Eloquent asume que en <code>Usuario</code> existe la clave ajena <code>usuario_id</code> pero \u00bfqu\u00e9 pasa si tenemos otro nombre? pues se lo pasamos como par\u00e1metro.</p> <pre><code>&lt;?php\n\nreturn $this-&gt;hasOne(Telefono::class, 'clave_ajena');\n</code></pre>"},{"location":"07frameworksAntic.html#uno-a-uno-inversa","title":"Uno a Uno INVERSA","text":"<p>Ahora que podemos acceder al modelo tel\u00e9fono desde el modelo usuario, vamos a ver c\u00f3mo hacerlo de manera inversa, es decir, c\u00f3mo acceder desde el m\u00f3delo <code>usuario</code> desdel el modelo <code>telefono</code> gracias al m\u00e9todo <code>belongsTo()</code>.</p> <pre><code>&lt;?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Telefono extends Model\n{\n  public function usuario()\n  {\n      return $this -&gt; belongsTo(Usuario::class);\n  }\n}\n</code></pre> <p>Al llamar el m\u00e9todo de <code>usuario</code>, Eloquent intentar\u00e1 encontrar un modelo de usuario que tenga un <code>id</code> que coincida con la columna de <code>usuario_id</code> en el modelo de <code>telefono</code>.</p> <p>Eloquent determina el nombre de la clave externa examinando el nombre del m\u00e9todo de relaci\u00f3n y agregando el sufijo <code>_id</code> al nombre del m\u00e9todo. Entonces, asume que el modelo <code>Telefono</code> tiene una columna <code>usuario_id</code>. Sin embargo, si no se llama de esa manera, puedes pasarle como argumento el nombre de la clave.</p> <pre><code>&lt;?php\n\npublic function usuario()\n{\n    return $this -&gt; belongsTo(Usuario::class, 'clave_ajena');\n}\n</code></pre>"},{"location":"07frameworksAntic.html#uno-a-muchos-1-a-mm","title":"Uno a Muchos (1 a MM)","text":"<p>En este caso, las relaciones de 1 a muchos podemos decir que en una entrada de un blog, o en un post de Facebook, hay muchos comentarios relacionados a esa misma publicaci\u00f3n.</p> <p>Para empezar, ya sabemos que debemos crear el modelo y en este caso usaremos el m\u00e9todo <code>hasMany()</code> para obtener los datos relacionados con ese post o entrada en el blog</p> <pre><code>&lt;?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Post extends Model\n{\n\n  public function comentarios()\n  {\n      return $this -&gt; hasMany(Comentario::class);\n  }\n}\n</code></pre> <p>Cuidado con las claves ajenas, que aqu\u00ed pasa lo mismo... Eloquent establece por defecto el sufijo <code>_id</code> por lo tanto, en este ejemplo buscar\u00eda por <code>post_id</code>. Si no queremos \u00e9so o nuestra clave ajena tiene otro nombre, se lo pasamos por par\u00e1metro en el m\u00e9todo <code>hasMany</code> como hac\u00edamos m\u00e1s arriba.</p> <p>Ahora, al haber m\u00e1s de un dato, necesitamos iterar, por tanto debemos crear un bucle para poder sacar cada dato.</p> <pre><code>&lt;?php\nuse App\\Models\\Post;\n\n$comentarios = Post::find(1) -&gt; comentarios;\n\nforeach ($comentarios as $comentario) {\n    // Lo que sea que hagamos con esos datos\n}\n</code></pre> <p>Adem\u00e1s, como todas las relaciones son sentencias SQL, podemos anidar varios filtros en funci\u00f3n de lo que queramos sacar.</p> <pre><code>$comentario = Post::find(1) -&gt; comentarios()\n    -&gt;where('titulo', 'lo que sea')\n    -&gt;first();\n</code></pre>"},{"location":"07frameworksAntic.html#uno-a-muchos-inversa","title":"Uno a Muchos INVERSA","text":"<p>Ahora que podemos acceder a todos los comentarios de una publicaci\u00f3n, definamos una relaci\u00f3n para permitir que un comentario acceda a su publicaci\u00f3n principal.</p> <pre><code>&lt;?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Comentario extends Model\n{\n\n  public function post()\n  {\n      return $this -&gt; belongsTo(Post::class);\n  }\n}\n</code></pre> <p>Y ahora, a trav\u00e9s de la propiedad de relaci\u00f3n din\u00e1mica...</p> <pre><code>&lt;?php\n\nuse App\\Models\\Comentario;\n\n$comentario = Comentario::find(1);\n\nreturn $comentario -&gt; post -&gt; titulo;\n</code></pre> <p>Pasar\u00eda lo mismo con el nombre de la clave ajena, si no se llama de la misma manera que Eloquent establece con el sufijo <code>_id</code> podemos pasarle como par\u00e1metro el nombre de la clave donde debe buscar.</p>"},{"location":"07frameworksAntic.html#muchos-a-muchos-mm-a-mm","title":"Muchos a Muchos (MM a MM)","text":"<p>Este tipo de relaciones son las m\u00e1s complicadas ya que, en un Blog del estilo Wordpress por ejemplo, un usuario puede tener muchos roles (lector, autor, administrador) pero un rol pueden tenerlo varios usuarios, es decir, puede haber muchos usuarios administradores, otros lectores y dem\u00e1s.</p> <p>Para realizar este tipo de relaciones necesitar\u00edamos 3 tablas diferentes.</p> <ul> <li>usuarios [ id, nombre]</li> <li>roles [id, nombre]</li> <li>rol_usuario [usuario_id, rol_id] (Tabla Pivote)</li> </ul> <p>Lo primero de todo, vamos a crear las tablas con sus modelos a excepci\u00f3n de la tabla pivote rol_usuario que s\u00f3lo crearemos la tabla, sin su modelo</p> <pre><code>php artisan make:migration create_rol_usuario_table --create=rol_usuario\n</code></pre> <p>Y la estructura de dicha seria de la siguiente manera...</p> <pre><code>&lt;?php\n\npublic function up()\n{\n    Schema::create('rol_usuario', function (Blueprint $table) {\n        $table-&gt;bigIncrements('id');\n        $table-&gt;unsignedInteger('usuario_id');\n        $table-&gt;unsignedInteger('rol_id');\n        $table-&gt;timestamps();\n    });\n}\n</code></pre> <p>Ahora que ya tenemos todo listo, las relaciones de Muchos a Muchos vienen definidas por un m\u00e9todo que devuelve el resultado de usar el m\u00e9todo <code>belongsToMany()</code></p> <pre><code>&lt;?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Usuario extends Model\n{\n    public function roles()\n    {\n        return $this -&gt; belongsToMany(Rol::class);\n    }\n}\n</code></pre> <p>Una vez que tengamos las relaciones definidas, accederemos a ellas mediante las propiedades din\u00e1micas de <code>rol</code></p> <pre><code>&lt;?php\n\nuse App\\Models\\Usuario;\n\n$usuario = Usuario::find(1);\n\nforeach ($usuario -&gt; roles as $rol) {\n    // nuestro c\u00f3digo\n}\n</code></pre> <p>Acordaros que podemos encadenar comandos sql a trav\u00e9s de los m\u00e9todos de Eloquent</p> <pre><code>&lt;?php\n\n$roles = Usuario::find(1) -&gt; roles() -&gt; orderBy('nombre') -&gt; get();\n</code></pre>"},{"location":"07frameworksAntic.html#muchos-a-muchos-inversa","title":"Muchos a Muchos INVERSA","text":"<p>Para definir el \"inverso\" de una relaci\u00f3n de muchos a muchos, debemos establecer un m\u00e9todo en el modelo relacionado que tambi\u00e9n devuelva el resultado del m\u00e9todo <code>belongsToMany</code>. Seg\u00fan el ejemplo que estamos siguiendo...</p> <pre><code>&lt;?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Rol extends Model\n{\n  public function usuarios()\n  {\n      return $this -&gt; belongsToMany(Usuario::class);\n  }\n}\n</code></pre> <p>Vamos a hacer un ejemplo con una APP que gestiones alumnos y asignaturas, de tal manera que MUCHOS ALUMNOS pueden cursar MUCHAS ASIGNATURAS</p> <p>\u00bfQu\u00e9 necesitamos para este ejemplo?</p> <ul> <li> <p>3 migraciones para crear las tablas</p> <ul> <li><code>Alumnos</code> /// <code>Materias</code> /// <code>AlumnoMateria</code></li> </ul> </li> <li> <p>Modificar los archivos de las migraciones <code>create_alumnos_table</code> y <code>create_materias_table</code>.</p> </li> <li>Crear la base de datos <code>muchos_a_muchos</code></li> <li>Ejecutar las Migraciones</li> <li>2 modelos para <code>Alumnos</code> /// <code>Materias</code></li> <li>M\u00e9todo dentro de <code>Alumno</code> para crear la relaci\u00f3n Alumno -&gt; Materia</li> <li>Crear el controlador para la vista</li> <li>Crear la ruta de nuestra vista</li> <li>Rellenar la base de datos</li> <li>Crear la vista con los datos</li> </ul> <p>3 MIGRACIONES <pre><code>php artisan make:migration create_alumnos_table\nphp artisan make:migration create_materias_table\nphp artisan make:migration create_alumno_materia_table\n</code></pre></p> <p>MODIFICANDO LAS MIGRACIONES</p> create_alumnos_table.phpcreate_materias_table.phpcreate_alumno_materia_table.php <pre><code>&lt;?php\n\npublic function up()\n{\n  Schema::create('alumnos', function (Blueprint $table) {\n    $table-&gt;id();\n    $table-&gt;string('nombre');\n    $table-&gt;timestamps();\n  });\n}\n</code></pre> <pre><code>&lt;?php\n\npublic function up()\n{\n  Schema::create('materias', function (Blueprint $table) {\n    $table-&gt;id();\n    $table-&gt;string('nombre');\n    $table-&gt;timestamps();\n  });\n}\n</code></pre> <pre><code>&lt;?php\n\npublic function up()\n{\n  Schema::create('alumno_materia', function (Blueprint $table) {\n    $table-&gt;id();\n\n    $table-&gt;foreignId('alumno_id')\n      -&gt;nullable()\n      -&gt;constrained('alumnos')\n      -&gt;cascadeOnUpdate()\n      -&gt;nullOnDelete();\n\n    $table-&gt;foreignId('materia_id')\n      -&gt;nullable()\n      -&gt;constrained('materias')\n      -&gt;cascadeOnUpdate()\n      -&gt;nullOnDelete();\n\n    $table-&gt;timestamps();\n  });\n}\n</code></pre> <p>CREAMOS LA BASE DE DATOS</p> <p>Para este ejemplo, vamos a crear una base de datos que se llame <code>muchos_a_muchos</code> desde la consola de MySQL o MariaDB.</p> <pre><code>CREATE TABLE `muchos_a_muchos`\n</code></pre> <p>EJECUTANDO LAS MIGRACIONES</p> <p>Ya tenemos las migraciones creadas y la base de datos lista para insertar el contenido de las migraciones que hemos escrito m\u00e1s arriba, lo que nos queda es <code>ejecutar las migraciones</code> para volcar toda la estructura en nuestra nueva base de datos.</p> <pre><code>php artisan migrate\n</code></pre> <p>2 MODELOS PARA ALUMNOS Y MATERIAS</p> <pre><code>php artisan make:model Alumno\nphp artisan make:model Materia\n</code></pre> <p>M\u00c9TODOS PARA CREAR LAS RELACIONES ALUMNO &lt;-&gt; MATERIA</p> Alumno.phpMateria.php <pre><code>&lt;?php\n\npublic function materias() {\n  return $this -&gt; belongsToMany(Materia::class, 'alumno_materia');\n}\n</code></pre> <pre><code>&lt;?php\n\npublic function alumnos() {\n  return $this -&gt; belongsToMany(Alumno::class, 'alumno_materia');\n}\n</code></pre> <p>CREANDO EL CONTROLADOR DE LA VISTA</p> <p>Necesitamos un controlador para redireccionar las rutas a las vistas que nosotros queramos, para ello crearemos el controlador <code>RelacionController</code></p> <pre><code>php artisan make:controller RelacionController\n</code></pre> <p>CREANDO RUTAS</p> <p>Ahora que ya tenemos nuestro controlador, vamos a crear una \u00fanica vista para mostrar el ejemplo de la relaci\u00f3n MUCHOS a MUCHOS, en este caso un alumno determinado.</p> <p>Adem\u00e1s, en nuestro controlador <code>RelacionController</code> vamos a escribir el c\u00f3digo necesario para que nos devuelva los datos relacionados con el alumno con id <code>1</code> y la materia con id <code>2</code>.</p> web.phpRelacionController.php <pre><code>&lt;?php\n\n  use App\\Http\\Controllers\\RelacionController;\n  use Illuminate\\Support\\Facades\\Route;\n\n  Route::get('muchos', [ RelacionController::class, 'index' ]);\n</code></pre> <pre><code>&lt;?php\n\n  namespace App\\Http\\Controllers;\n\n  use App\\Models\\Alumno;\n  use App\\Models\\Materia;\n  use Illuminate\\Http\\Request;\n\n  class RelacionController extends Controller\n  {\n    public function index() {\n      $alumno = Alumno::find(1);\n      $materia = Materia::find(2);\n\n      return view('muchos', compact('alumno', 'materia'));\n    }\n  }\n</code></pre> <p>RELLENANDO LA BASE DE DATOS</p> <p>Necesitamos meter algunos registros en nuestra base de datos, por tanto, vamos a crear varios datos en nuestro sistema con las siguientes sentencias SQL.</p> Tabla AlumnosTabla MateriasTabla Alumno_Materia <pre><code>  INSERT INTO alumnos (`nombre`) VALUES\n  ('Antonio'),\n  ('Laura'),\n  ('Marta'),\n  ('Pedro');\n</code></pre> <pre><code>  INSERT INTO materias (`nombre`) VALUES\n  ('Programacion'),\n  ('Interfaces'),\n  ('JavaScript'),\n  ('Sistemas');\n</code></pre> <pre><code>  INSERT INTO alumno_materia (`alumno_id`, `materia_id`) VALUES\n  (1, 2),\n  (1, 4),\n  (3, 2),\n  (3, 1),\n  (2, 3),\n  (2, 4),\n  (4, 4),\n  (4, 1);\n</code></pre> <p>CREANDO LA VISTA CON LOS DATOS</p> <p>El \u00faltimo paso que vamos a hacer es, listar los datos relacionados en una vista o plantilla <code>Blade</code> sencilla. Para ello nos creamos el archivo <code>muchos.blade.php</code> ya que es el nombre que hemos puesto en nuestro archivo de rutas.</p> Alumnos que cursan materiasMaterias cursadas por alumnos <pre><code>&lt;div class=\"row justify-content-center\"&gt;\n  &lt;div class=\"col-auto\"&gt;\n    &lt;h3&gt;Alumno {{ $alumno -&gt; nombre }} est\u00e1 cursando las materias&lt;/h3&gt;\n\n    &lt;table class=\"table table-striped table-hover\"&gt;\n      &lt;thead class=\"bg-primary text-white\"&gt;\n        &lt;th&gt;MATERIAS&lt;/th&gt;\n      &lt;/thead&gt;\n\n      &lt;tbody&gt;\n        @foreach ($alumno -&gt; materias as $registro)\n          &lt;tr&gt;\n            &lt;td&gt;\n                {{ $registro -&gt; nombre }}\n             &lt;/td&gt;\n          &lt;/tr&gt;\n        @endforeach\n      &lt;/tbody&gt;\n    &lt;/table&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre> <pre><code>&lt;div class=\"row justify-content-center\"&gt;\n  &lt;div class=\"col-auto\"&gt;\n    &lt;h3&gt;La materia {{ $materia -&gt; nombre }} la est\u00e1n cursando los alumnos&lt;/h3&gt;\n\n    &lt;table class=\"table table-striped table-hover\"&gt;\n      &lt;thead class=\"bg-primary text-white\"&gt;\n        &lt;th&gt;ALUMNOS&lt;/th&gt;\n      &lt;/thead&gt;\n\n      &lt;tbody&gt;\n        @foreach ($materia -&gt; alumnos as $registro)\n          &lt;tr&gt;\n            &lt;td&gt;\n              {{ $registro -&gt; nombre }}\n            &lt;/td&gt;\n          &lt;/tr&gt;\n        @endforeach\n      &lt;/tbody&gt;\n    &lt;/table&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"07frameworksAntic.html#actividades","title":"Actividades","text":"<ol> <li>Crea un sitio web con Laravel que contenga el t\u00edtulo \"Bienvenidos a Laravel\", un texto de bienvenida (puede ser un poco de Lorem Ipsum) y a continuaci\u00f3n un men\u00fa de navegaci\u00f3n con sus correspondientes alias y los siguientes enlaces:</li> </ol> <ul> <li> <p><code>Inicio</code> enlace a la p\u00e1gina principal donde se visualizar\u00e1 el texto de Lorem Ipsum adem\u00e1s de los elementos est\u00e1ticos (T\u00edtulo y men\u00fa de navegaci\u00f3n).</p> </li> <li> <p><code>Nosotros</code> enlace que vaya a la p\u00e1gina \"nosotros\"  y muestre, adem\u00e1s de los elementos est\u00e1ticos de todo el sitio, un h2 que diga \"Est\u00e1s en la secci\u00f3n Nosotros\"</p> </li> <li> <p><code>Projecte</code> enlace que cargue una vista con el siguiente texto \"Est\u00e1s en el Projecte numero: X\" donde X es un n\u00famero entero que podamos introducirlo en la propia ruta. Si no se mete ning\u00fan n\u00famero en la ruta, por defecto tiene que ser 1; por ejemplo</p> <pre><code>http://localhost:8000s/Projecte/210937\n</code></pre> </li> <li> <p>Recuerda que el t\u00edtulo y el men\u00fa de navegaci\u00f3n han de aparecer en todas las vistas que cargues.</p> </li> </ul> <ol> <li>Utilizando las <code>estructuras</code> de control y los <code>controladores</code> crea un sitio web que contenga lo siguiente:</li> </ol> <ul> <li> <p><code>Inicio</code> p\u00e1gina principal con un t\u00edtulo que diga \"Bienvenid@s a FOTO \u2591\u2592\u2593 BLOG\" y un texto de bienvenida (con un par de frases sobra)</p> </li> <li> <p><code>Nosotros</code> un t\u00edtulo de la secci\u00f3n en la que te encuentras y un listado de 3 personas diferentes que, cada uno de los nombres mostrar\u00e1 un texto descriptivo de cada persona cuando pinchemos sobre su nombre.</p> </li> <li> <p><code>Fotos</code> Una secci\u00f3n que aparezca el texto \"Est\u00e1s visualizando la foto con el ID: X\" donde X es un par\u00e1metro que depender\u00e1 de la ruta que se haya introducido. Por defecto, si no se introduce dicho par\u00e1metro \u00e9ste debe valer 1. </p> </li> <li> <p>Como elementos est\u00e1ticos debe aparecer:</p> <ul> <li><code>Imagen</code> como logtipo</li> <li>El t\u00edtulo <code>FOTO \u2591\u2592\u2593 BLOG</code> a la derecha del logotipo</li> <li><code>Men\u00fa</code> de navegaci\u00f3n para moverse por las distintas secciones</li> </ul> </li> <li> <p>Puedes usar Bootstrap como algo opcional para practicar. Recuerda que viene incluido con la instalaci\u00f3n de Laravel.</p> </li> </ul> <ol> <li>Crear el Projecte CholloSevero:</li> </ol> <ul> <li>Crea un nuevo repositorio para el Projecte</li> <li>Configura el <code>.gitignore</code> para no incluir en el repo los siguientes archivos y carpetas:<ul> <li>carpeta <code>vendor</code></li> <li>archivos <code>.env</code> y cualquier archivo que empiece por <code>.</code> excepto el <code>.gitignore</code></li> </ul> </li> <li>La p\u00e1gina principal del sitio debe ser un listado con todos los chollos disponibles</li> <li>Configura la base de datos con Eloquent, olv\u00eddate de usar la consola mysql</li> <li>Crea una vista para las siguientes acciones:<ul> <li>Crear un chollo</li> <li>Editar un chollo</li> </ul> </li> <li>La tabla Chollo debe contener las siguientes columnas:<ul> <li><code>id</code> \u00fanico y autoincremental</li> <li><code>titulo</code> un t\u00edtulo para el chollo</li> <li><code>descripcion</code> descripcion del chollo</li> <li><code>url</code> un campo para introducir la URL externa del chollo</li> <li><code>categoria</code> albergar\u00e1 la categor\u00eda de los chollos</li> <li><code>puntuacion</code> un n\u00famero entero que indique la puntuaci\u00f3n del chollo</li> <li><code>precio</code> para albergar el precio del chollo</li> <li><code>precio_descuento</code> para albergar el nuevo precio</li> <li><code>disponible</code> de tipo boolean</li> </ul> </li> <li>Por lo menos, el sitio debe contener un <code>controlador</code> de Laravel; puedes crear tantos como creas necesarios pero m\u00ednimo debe haber uno.</li> </ul> <p><code>::: Elementos est\u00e1ticos</code> Como ya hemos visto, hay ciertos elementos que siempre se muestran en todas las vistas del sitio web. A continuaci\u00f3n se listan los elementos que deben estar si o si en todas las plantillas que cre\u00e9is.</p> <ul> <li>Logo del sitio y el t\u00edtulo <code>Chollo \u2591\u2592\u2593 Severo</code></li> <li><code>Inicio</code> | <code>Nuevos</code> | <code>Destacados</code></li> <li>Un footer con vuestro nombre y alg\u00fan dato copyright del tipo <code>\u00a9CholloSevero 2022</code> donde el a\u00f1o debe ser calculado a trav\u00e9s de la fecha del servidor.</li> </ul> <p><code>::: Pag\u00edna principal</code>  Adem\u00e1s del listado de todos los chollos de la base de datos debe contener el men\u00fa de navegaci\u00f3n:</p> <ul> <li>Cada chollo debe ser accesible desde este listado</li> <li>Cada chollo debe contener una imagen que estar\u00e1 guardada en <code>public/img</code></li> <li>Cada chollo debe contener sus botones de <code>editar</code> y <code>borrar</code> que haga las funciones que tocan. Puedes utilizar iconos para cada uno de los botones.</li> <li>El nombre de las im\u00e1genes debe estar compuesta por la siguiente f\u00f3rmula <code>idChollo</code>-chollo-severo.<code>extension</code><ul> <li>Por ejemplo: 25-chollo-severo.jpg</li> </ul> </li> <li>La imagen del chollo no se sube a trav\u00e9s del formulario, la pones directamente en la carpeta. Si te animas a subirlo a trav\u00e9s del formulario, puedes hacerlo.</li> </ul> <p><code>::: P\u00e1gina de Chollo</code>  Cuando pinchemos en uno de los chollos del listados debemos ser redireccionados a esta vista donde podremos ver toda la informaci\u00f3n del tabla chollo. Puedes maquetarla como quieras e incluso puedes basarte en la web de Chollo Metro. El campo <code>disponible</code> no es necesario que lo muestres en esta vista</p> <p><code>::: P\u00e1gina de Crear un chollo</code>  Un formulario con los campos necesarios para poder crear un chollo nuevo. Adem\u00e1s, debes tener en cuenta que tienes que validar los campos, de tal manera que no se pueda enviar el formulario si se ha dejado alg\u00fan campo en blanco; dichas validaciones, adem\u00e1s de a\u00f1adir la propiedad <code>required</code> de HTML5 debes hacerlo con Laravel.</p> <p>En caso de que haya habido alg\u00fan error en el formulario debes mostrar un mensaje en la parte de arriba del mismo con el mensaje de error (por ejemplo, si el campo est\u00e1 vac\u00edo).</p> <p><code>::: P\u00e1gina de Editar un chollo</code>  Muy parecida a la de Crear un chollo pero que puedas editar un Chollo en funci\u00f3n de su <code>id</code>. Acu\u00e9rdate que no puedes dejar ning\u00fan campo vac\u00edo, para ello has de utilizar las validaciones de Laravel.</p> <p><code>\u2591\u2592\u2593 COSAS A TENER EN CUENTA \u2591\u2592\u2593</code>  - Tienes que usar <code>Bootstrap</code> o <code>Material Design</code>, aunque si lo prefieres puedes hacer tus propios archivos <code>.css</code></p> <ul> <li> <p>Los mensajes de error o de informaci\u00f3n deben estar estilizados para que el usuario pueda verlos con facilidad</p> </li> <li> <p>Los elementos est\u00e1ticos deben estar presentes en todas las vistas; incluidas las de editar y crear.</p> </li> <li> <p>Las plantillas que formen parte de otra ya creada deben estar en una carpeta con el nombre de la plantilla madre, como hicimos con el ejercicio de <code>Notas</code>:</p> </li> </ul> <ul> <li> <p>Ve haciendo commits en funci\u00f3n de las tareas que vayas acabando o que veas que el commit tiene sentido. No es buena pr\u00e1ctica subir los camios de un archivo y el siguiente commit volver a subir m\u00e1s cambios del mismo archivo (a no ser que nos hayamos saltado o equivocado en algo).</p> </li> <li> <p>El Projecte es individual y despu\u00e9s se presentar\u00e1, uno por uno al profesor para que eval\u00fae todos los aspectos del mismo. Se har\u00e1n preguntas de c\u00f3mo se ha hecho cierta cosa o por qu\u00e9 se ha determinado cierto flujo de trabajo as\u00ed que, no os copi\u00e9is porque se eval\u00faa tambi\u00e9n la presentaci\u00f3n del Projecte</p> </li> </ul>"},{"location":"07laravelBatoiBook.html","title":"07laravelBatoiBook","text":""},{"location":"07laravelBatoiBook.html#activitats","title":"Activitats","text":"<ol> <li> <p>Crea les migracions per a les taules books, courses, families, modules i sales. </p> <ul> <li>L'ordre per a crear les migracions depedr\u00e0 de les claus alienes. Aix\u00ed en este cas hauria de ser (families,courses,modules,books,sales).</li> <li>Mira de crear tamb\u00e9 les claus alienes</li> <li>Tria el tipus de dades adequat per a cada camp.</li> <li>Sigues cur\u00f3s en la nomenclatura de les claus ali\u00e8nes.</li> <li>Afegiex un camp administrador a la taula users per a saber si un usuari \u00e9s administrador o no.</li> </ul> </li> <li> <p>Crea els models per a les taules books, courses, families, modules i sales. </p> <ul> <li>Crea les relacions entre models.</li> </ul> </li> <li> <p>Crea els seeders i els factorys per a cada model.</p> <ul> <li>Per als models courses, modules i families fes-ho des del sql (no cal factory).</li> </ul> </li> </ol> <p>Recomanaci\u00f3</p> <pre><code>Haur\u00e0s de copiar els fitxers .json a la carpeta storage/app/public. Podr\u00e0s accedir-hi amb l'instrucci\u00f3 **Storage::disk('public')-&gt;path('nomfitxer.json')**.\n</code></pre> <p>Recomanaci\u00f3</p> <pre><code>Una vegada que accedim al fitxer json, per a convertir-lo a un array associatiu, utilitzarem la funci\u00f3 **json_decode**. Despr\u00e9s per a accedir a les dades utilitzarem la notaci\u00f3 **$array[2]['data']**.\n</code></pre> <ul> <li>Crea 100 usuaris registrats. Un ha de ser administrador.</li> <li>Crea 100 llibres amb un preu aleatori entre 5 i 25 i disponibles per a la venda.</li> <li>Crea les 100 vendes per a 100 llibres m\u00e9s.</li> </ul> <p>Recomanaci\u00f3</p> <p>Al crear el seeder de sales, pots crear primer el llibre i despr\u00e8s vendre'l. Per aix\u00f2 pots utilitzar el m\u00e8tode create del model Book. Per exemple:</p> <pre><code>$soldDate = $this-&gt;faker-&gt;dateTimeBetween('-1 years', 'now');\n$book = Book::factory()-&gt;create([\n    'soldDate' =&gt; $soldDate-&gt;format('Y-m-d'), // Data de l'any passat\n]);\n</code></pre> <ol> <li>Crea les rutes corresponents a cada acci\u00f3 del controlador, i els m\u00e8todes per a visualitzar les vistes. <ul> <li>Crea un controlador de recursos per a Book, Course,  Family i Module.</li> </ul> </li> <li>Crea les vistes corresponents a cada acci\u00f3 del controlador bookController (per a crear les vistes pots utilitzar el chatGtp).<ul> <li>Es millor que create i edit siguen vistes diferents.</li> <li>Per a la vista show crea un component per a vore el llibre.   <li>Fes que la p\u00e0gina principal (quan no s'estiga loguejat) mostre la llista de llibres disponibles - no venuts - (en modo fitxa, paginades de 10 en 10) <ul> <li>Uutilitza un el comonent que has creat abans.</li> </ul> </li> <li>Quan un usuari es logueja mostra-li la seua llista de llibres a la venda, amb el botons per modificar, esborrar i crear un llibre nou.</li> <li>Fes un enlla\u00e7 per vore les seues vendes.</li> <li> <p>L'administrador podr\u00e0 veure la llista d'usuaris per a donar de baixa i la llista de totes les vendes.</p> </li> <li> <p>Afig un camp admes a la taula books</p> <ul> <li>El valor per defecte ha de ser false.</li> <li>Modifica els seeders per a que tots els llibres creat tinguen el camp admes a true.</li> <li>Quan un llibre es dona d'alta no ix en la p\u00e0gina principal fins que no \u00e9s adm\u00e9s.</li> </ul> </li> <li>Envia una notificaci\u00f3 al usuari administrador quan un usuari done d'alta un llibre<ul> <li>Amb un bot\u00f3 per admetre el llibre.</li> <li>Crear la ruta i el m\u00e8tode per admetre el llibre.</li> </ul> </li> <li> <p>Crea un mailable PurchaseConfirmationMail que s'envie quan un usuari compre un llibre.</p> <ul> <li>Afegix un bot\u00f3 al component de book per poder comprar el llibre si l'usuari est\u00e0 autenticat.</li> <li>Fes que el bot\u00f3 fa\u00e7a tots el procediments de compra i al final envia el correu.</li> </ul> </li> <li> <p>Crea un comando send:regards que envia una felicitaci\u00f3 a tots els usuaris que han fet vendes l'ultim any.</p> <ul> <li>No cal programar-lo. L'enviarem amb l'artisan quan vulguem.</li> </ul> </li> <li> <p>Envia un correu de benvinguda quan un usuari es registra en l'aplicaci\u00f3.</p> <ul> <li>Utilitza events i listeners.</li> </ul> </li>"},{"location":"07laravelControladors.html","title":"FRAMEWORK LARAVEL","text":"<ul> <li>Controladors</li> <li>Injecci\u00f3 de depend\u00e8ncies</li> </ul>"},{"location":"07laravelControladors.html#controladors","title":"Controladors","text":"<p>Video</p> <p>Fins al moment hem vist solament com retornar una cadena per a una ruta i com associar una vista a una ruta directament en el fitxer de rutes. Per\u00f2 en general la forma recomanable de treballar ser\u00e0 associar aquestes rutes a un m\u00e8tode d'un controlador. Els controladors permeten estructurar millor el codi de la nostra aplicaci\u00f3. La seua principal utilitat radica a alliberar als arxius de rutes d'haver d'ocupar-se tamb\u00e9 de gestionar una certa l\u00f2gica comuna de les peticions, com l'acc\u00e9s a les dades, validaci\u00f3 de formularis, etc. </p> <p>Com ja vam veure en la secci\u00f3 d'introducci\u00f3, els controladors s\u00f3n el punt d'entrada de les peticions dels usuaris i s\u00f3n els que han de contenir tota la l\u00f2gica associada al processament d'una petici\u00f3, encarregant-se de realitzar les consultes necess\u00e0ries a la base de dades, de preparar les dades i de cridar a la vista corresponent amb aquestes dades.</p>"},{"location":"07laravelControladors.html#definicio-de-controladors","title":"Definici\u00f3 de controladors","text":"<p>Per a definir un controlador en la nostra aplicaci\u00f3, hem de tirar m\u00e0 de nou del comando php artisan vist pr\u00e8viament. En concret, utilitzarem l'opci\u00f3 make:controller seguida del nom que li vulguem donar al controlador. T\u00edpicament, els noms de controladors acaben amb el sufix Controller, per la qual cosa podem crear un de prova aix\u00ed:</p> <pre><code>php artisan make:controller PruebaController\n</code></pre> <p>Aix\u00f2 generar\u00e0 una classe buida amb el nom del controlador. Per defecte, els controladors es guarden en la subcarpeta app/Http/Controllers del nostre projecte Laravel.</p>"},{"location":"07laravelControladors.html#controladors-de-recursos","title":"Controladors de recursos","text":"<p>El comando anterior admet alguns par\u00e0metres addicionals m\u00e9s. Si creem un controlador amb l'opci\u00f3 -r, crear\u00e0 un controlador de recursos ( resources ), i predefinir\u00e0 en ell una s\u00e8rie de m\u00e8todes d'utilitat per a les operacions principals que es poden realitzar sobre una entitat de la nostra aplicaci\u00f3:</p> <pre><code>php artisan make:controller PruebaController -r\n</code></pre> <ul> <li>index : mostra un llistat dels elements d'aqueixa entitat o recurs</li> <li>create : mostra el formulari per a donar d'alta nous elements</li> <li>store : emmagatzema en la base de dades el recurs creat amb el formulari anterior</li> <li>show : mostra les dades d'un recurs espec\u00edfic (a partir de la seua clau o id).</li> <li>edit : mostra el formulari per a editar un recurs existent</li> <li>update : actualitza en la base de dades el recurs editat amb el formulari anterior</li> <li>destroy : elimina un recurs pel seu identificador.</li> </ul> <p>\u00d2bviament, el codi de tots aquests m\u00e8todes apareixer\u00e0 buit al principi, i els haurem d'emplenar amb les operacions corresponents m\u00e9s endavant. Si volem utilitzar un controlador d'aquest tipus, i cridar a algun dels seus m\u00e8todes des d'alguna ruta, ja no n'hi ha prou amb posar el nom del controlador, com f\u00e9iem abans amb els de tipus invoke, ja que ara hi ha m\u00e9s d'un m\u00e8tode que triar. El que farem ser\u00e0 posar el nom del controlador, seguit d'una arrova @ i el nom del m\u00e8tode a invocar. Per exemple:</p> <pre><code>Route::get('prueba', 'PruebaController@index')-&gt;name('listado_prueba');\n</code></pre> <p>!!! note Per a que esta definici\u00f3 de rutes funcione correctament hem d'afegir un linea al app/providers/RouteServiceProvider per afegir el espai de noms dels control\u00b7ladors:</p> <pre><code>public function boot()\n    {\n        $this-&gt;configureRateLimiting();\n\n        $this-&gt;routes(function () {\n            Route::middleware('api')\n                -&gt;prefix('api')\n                -&gt;group(base_path('routes/api.php'));\n\n            Route::middleware('web')\n                -&gt;namespace('App\\Http\\Controllers')\n                -&gt;group(base_path('routes/web.php'));\n        });\n    }\n</code></pre>"},{"location":"07laravelControladors.html#unint-totes-les-rutes-dun-controlador","title":"Unint totes les rutes d'un controlador","text":"<p>Al final de tot el proc\u00e9s d'implementaci\u00f3 d'un controlador (de recursos o de API) tindrem en l'arxiude rutes una dedicada a cada m\u00e8tode del controlador (una per a index , una altra per a show , etc.). Aquestes rutes poden agrupar-se en una sola usant el m\u00e8tode resource de la classe Route , en lloc de get, indicant-li com a par\u00e0metres el nom base de la ruta, i el controlador que s'encarregar\u00e0 d'ella:</p> <pre><code>Route::resource('catalog', CatalogController::class);\n</code></pre> <p>La ruta anterior definir\u00e0 una ruta GET cap a /catalog , atesa pel m\u00e8tode index del controlador,una altra ruta GET cap a /catalog/{id} atesa pel m\u00e8tode show del controlador... etc. Tamb\u00e9 podem utilitzar el m\u00e8tode only per a indicar per a quins m\u00e8todes volem rutes:</p> <pre><code>Route::resource('catalog', CatalogController::class)-&gt;only(['index', 'show']);\n</code></pre> <p>Des del costat oposat, tenim disponible el m\u00e8tode except per a indicar que es generen totes les rutes excepte aquelles per als m\u00e8todes indicats:</p> <pre><code>Route::resource('catalog', CatalogController::class)-&gt;except(['update', 'edit']);\n</code></pre>"},{"location":"07laravelControladors.html#reanomenant-les-vistes","title":"Reanomenant les vistes","text":"<p>A mesura que el projecte creix, generarem un bon nombre de vistes associades a controladors, i \u00e9s necessari estructurar aquestes vistes d'una forma adequada per a poder-les identificar r\u00e0pidament. Una convenci\u00f3 que podem seguir \u00e9s nomenar les vistes a partir del controlador o model al qual fan refer\u00e8ncia, i a l'operaci\u00f3 que realitzen. Per exemple, si tenim un controlador anomenat PruebaController , se suposa que actuar\u00e0 sobre una taula anomenada prueba (ho veurem m\u00e9s endavant, en la sessi\u00f3 d'acc\u00e9s a dades). I, podem emmagatzemar les vistes en la subcarpeta resources/views/pruebas , i definir dins les vistes associades a cada operaci\u00f3 del controlador que tinguem definida. Per exemple: index.blade.php show.blade.php ...</p>"},{"location":"07laravelControladors.html#renderitzant-les-vistes","title":"Renderitzant les vistes","text":"<p>Paral\u00b7lelament, cada vegada que anem a carregar una vista des d'algun controlador o ruta, farem refer\u00e8ncia a aquest nom.</p> <pre><code>  public function index(){\n    return view('catalog.index');\n  }\n</code></pre>"},{"location":"07laravelControladors.html#controladors-i-espais-de-noms","title":"Controladors i espais de noms","text":"<p>Tamb\u00e9 podem crear sub-carpetes dins de la carpeta Controllers per a organitzar-nos millor. En aquest cas, l'estructura de carpetes que creem no tindr\u00e0 res a veure amb la ruta associada a la petici\u00f3 i, de fet, a l'hora de fer refer\u00e8ncia al controlador \u00fanicament haurem de fer-ho a trav\u00e9s del seu espai de noms.</p> <p>Com hem vist en referenciar el controlador en el fitxer de rutes \u00fanicament hem d'indicar el seu nom i no tota la ruta ni l'espai de noms App\\Http\\Controllers. A\u00e7\u00f2 \u00e9s perqu\u00e8 el servei encarregat de carregar les rutes afig autom\u00e0ticament l'espai de noms arrel per als controladors.  Si fiquem tots els nostres controladors dins del mateix espai de noms no haurem d'afegir res m\u00e9s. Per\u00f2 si decidim crear sub-carpetes i organitzar els nostres controladors en sub-espais de noms, llavors s\u00ed que haurem d'afegir aqueixa part.</p> <p>Per exemple, si vam crear un controlador en App\\Http\\Controllers\\Photos\\AdminController, llavors per a registrar una ruta fins a aquest controlador haur\u00edem de fer:</p> <pre><code>    Route::get('foo', 'Photos\\Admincontroller@method');\n</code></pre>"},{"location":"07laravelControladors.html#injeccio-de-dependencies","title":"Injecci\u00f3 de depend\u00e8ncies","text":"<p>El concepte d'injecci\u00f3 de depend\u00e8ncies \u00e9s molt habitual en l'\u00fas de frameworks. Consisteix en un mecanisme que facilita recursos als diferents components de l'aplicaci\u00f3, i \u00e9s una cosa que ja hem utilitzat, sense saber-ho, en els m\u00e8todes que s'han generat per als controladors. Per exemple, quan definim un m\u00e8tode en un controlador que necessita processar una petici\u00f3, se li passa com a par\u00e0metre un objecte de tipus Request. Autom\u00e0ticament, Laravel processa el tipus de dada i obt\u00e9 l'objecte associat (en aquest cas, la petici\u00f3 del client).</p> <pre><code>class PruebaController extends Controller\n{\n    ...\n    public function store(Request $request)\n    {\n        ...\n    }\n}\n</code></pre>"},{"location":"07laravelControladors.html#controladors-api","title":"Controladors API","text":"<p>Com a alternativa als controladors de recursos vistos abans, podem crear els controladors amb l'opci\u00f3 --api. Crear\u00e0 un controlador amb els mateixos m\u00e8todes que el de recursos, excepte els m\u00e8todes create i edit , encarregats de mostrar els formularis de creaci\u00f3 i edici\u00f3 de recursos, ja que en les APIs aquests formularis no s\u00f3n necessaris, com veurem en sessions posteriors.</p> <p>Amb els controladors de tipus API tamb\u00e9 podem generar autom\u00e0ticament totes les rutes per als seus m\u00e8todes, utilitzant el m\u00e8tode apiResource de la classe Route , en lloc del m\u00e8tode resource empleat abans:</p> <pre><code>Route::apiResource('prueba', 'PruebaController');\n</code></pre>"},{"location":"07laravelControladors.html#exemple-la-resposta","title":"Exemple: La resposta","text":"<p>Igual que tenim un objecte Request per a obtindre dades de la petici\u00f3, tamb\u00e9 existeix un Response per a gestionar la resposta. Laravel proporciona un m\u00e8tode response al qual li podem passar diversos par\u00e0metres:</p> <ol> <li>El contingut de la resposta</li> <li>El codi d'estat HTTP de resposta (si no s'especifica, per defecte \u00e9s 200)</li> <li>Un array amb les cap\u00e7aleres de resposta (per defecte est\u00e0 buit).</li> </ol> <p>Aix\u00ed, si per exemple volem emetre una resposta determinada amb el seu codi d'estat des d'un controlador, podem fer aix\u00f2 (per exemple, per a un codi 201):</p> <p><pre><code>response(\"Mensaje de respuesta\", 201);\n</code></pre> Les cap\u00e7aleres poden especificar-se com un array, o enlla\u00e7ant anomenades al m\u00e8tode header (una per a cada cap\u00e7alera):</p> <p><pre><code>response(\"Mensaje de respuesta\", 201)\n-&gt;header('Cabecera1', 'Valor1')\n-&gt;header('Cabecera2', 'Valor2');\n</code></pre> En el cas de voler retornar un objecte com a resposta, podem emprar el m\u00e8tode json de la resposta (m\u00e9s endavant veurem que tots els objectes emesos directament al client s'envien en format JSON), i aix\u00ed podrem adjuntar un codi d'estat diferent de 200:</p> <pre><code>return response()-&gt;json(['datos' =&gt; datos], 201)\n-&gt;header('Cabecera1', 'Valor1')\n...;\n</code></pre>"},{"location":"07laravelControladors.html#utilitzar-la-resposta-per-fer-redireccions","title":"Utilitzar la resposta per fer redireccions","text":"<p>Existeix tamb\u00e9 un m\u00e8tode redirect que podem emprar per a redirigir a una ruta des d'una altra,b\u00e9 especificant la ruta com a par\u00e0metre... <pre><code>redirect('/');\n</code></pre></p> <p>... o b\u00e9 indicant una ruta amb nom:</p> <pre><code>redirect()-&gt;route('inicio');\n</code></pre> <p>... O si volem tornar a la ruta anterior simplement podem usar el m\u00e8tode back: </p> <pre><code>    return back();\n</code></pre> <p>Podem passar valors a la seg\u00fcent redirecci\u00f3, emmagatzemant-los en sessi\u00f3 amb el m\u00e8tode with , encara que aquests valors es perdran en la seg\u00fcent petici\u00f3 (no es queden emmagatzemats en sessi\u00f3):</p> <pre><code>redirect()-&gt;route('inicio')\n-&gt;with('mensaje', 'Mensaje enviado correctamente');\n</code></pre> <p>Per a accedir a aquest missatge des de la vista afectada, hem d'utilitzar la funci\u00f3 session :</p> <pre><code>@if(session()-&gt;has('mensaje'))\n    {{ session('mensaje') }}\n@endif\n</code></pre> <p>Finalment, notar que si fem la redirecci\u00f3 des de dins d'un m\u00e8tode d'un controlador (per exemple, per a redigir a una ruta des d'una altra), haurem de retornar ( return ) el resultat d'aqueixa redirecci\u00f3 perqu\u00e8 fa\u00e7a efecte:</p> <pre><code>class LibroController extends Controller\n{\n    public function index()\n    {\n        ...\n    }\n    public function store(...)\n    {\n        ...\n        return redirect()-&gt;route('libros.index');\n    }\n}\n</code></pre>"},{"location":"07laravelControladors.html#redireccio-amb-els-valors-de-la-peticio","title":"Redirecci\u00f3 amb els valors de la petici\u00f3","text":"<p>Les redireccions se solen utilitzar despr\u00e9s d'obtenir algun error en la validaci\u00f3 d'un formulari o despr\u00e9s de processar alguns par\u00e0metres d'entrada. En aquest cas, perqu\u00e8 en mostrar el formulari amb els errors produ\u00efts puguem afegir les dades que havia escrit l'usuari haurem de tornar a enviar els valors enviats amb la petici\u00f3 usant el m\u00e8tode withInput():</p> <pre><code>    return redirect('form')-&gt;withInput();\n    // O per a reexpedir les dades d'entrada excepte alguns:\n    return redirect('form')-&gt;withInput($request-&gt;except('password'));\n</code></pre>"},{"location":"07laravelControladors.html#exemplehelpers","title":"Exemple:Helpers","text":"<p>Per a acabar aquesta introducci\u00f3 al que suposa la injecci\u00f3 de depend\u00e8ncies en frameworks de desenvolupament, farem \u00fas d'una eina que ens pot ser \u00fatil en algunes situacions: els helpers. Un helper \u00e9s b\u00e0sicament una funci\u00f3 d'utilitat que podem voler utilitzar en diversos punts de la nostra web, i que necessitem tindre localitzada i compartida. Per exemple, imaginem que volem ressaltar en el nostre men\u00fa de navegaci\u00f3 l'opci\u00f3 que tenim actualment visible. Per a aix\u00f2, podem definir una classe CSS amb l'estil que vulguem per a ressaltar (aix\u00f2 ho farem a part, en els arxius CSS del projecte), i despr\u00e9s utilitzar aqueixa classe CSS en una condici\u00f3 per a cada men\u00fa de navegaci\u00f3.</p> <p>Per exemple, suposem que la classe CSS per a identificar el men\u00fa actiu es diu actiu . En aquest cas, per a un men\u00fa de diverses opcions com aquest, n'hi ha prou amb utilitzar el m\u00e8tode routeIs de la petici\u00f3 ( request ) per a comprovar si la ruta coincideix amb cada men\u00fa, i mostrar-lo com a actiu o no, usant un operador ternari de comparaci\u00f3:</p> <p><pre><code>&lt;nav&gt;\n    &lt;ul&gt;\n        &lt;li class=\"{{  request()-&gt;routeIs('inicio') ? 'activo' : '' \" }}\"&gt;\n            &lt;a href=\"/\"&gt;Inicio&lt;/a&gt;\n        &lt;/li&gt;\n        &lt;li class=\"{{   request()-&gt;routeIs('contacto') ? 'activo' : '' \" }}\"&gt;\n            &lt;a href=\"/contacto\"&gt;Contacto&lt;/a&gt;\n        &lt;/li&gt;\n        ...\n    &lt;/ul&gt;\n&lt;/nav&gt;\n</code></pre> Aquesta caracter\u00edstica tamb\u00e9 funciona si les rutes tenen par\u00e0metres. Podem, en canvi, traure fora de la vista la l\u00f2gica d'establir un camp com a actiu o no. Per a aix\u00f2, creem un arxiu d'utilitat o helper. Ho podem cridar helpers.php , i situar-ho en la mateixa carpeta app, dins d'una carpeta Helpers. Dins, definim la funci\u00f3 que ens retornar\u00e0 si una ruta est\u00e0 activa o no, a partir del seu nom:</p> <pre><code>function setActivo($nombreRuta)\n{\n    return request()-&gt;routeIs($nombreRuta) ? 'activo' : '';\n}\n</code></pre> <p>I d'aquesta manera, la nostra vista simplement es dedica a cridar a aquesta funci\u00f3 per a cada element del men\u00fa:</p> <pre><code>&lt;nav&gt;\n    &lt;ul&gt;\n        &lt;li class=\"{{  setActivo('inicio') }}\"&gt;\n            &lt;a href=\"/\"&gt;Inicio&lt;/a&gt;\n        &lt;/li&gt;\n        &lt;li class=\"{{  setActivo('contacto')}}\"&gt;\n            &lt;a href=\"/contacto\"&gt;Contacto&lt;/a&gt;\n        &lt;/li&gt;\n        ...\n    &lt;/ul&gt;\n&lt;/nav&gt;\n</code></pre> <p>En el cas de voler mantindre l'enlla\u00e7 actiu per a qualsevol subruta a partir de l'original (per exemple, quan estem veient la fitxa d'un registre a partir del llistat general, podem utilitzar el wildcard d'asterisc * ):</p> <pre><code>&lt;li class=\"{{  setActivo('peliculas.*') }}\"&gt;\n    &lt;a href=\"{{  route('peliculas')}}\"&gt;Peliculas&lt;/a&gt;\n&lt;/li&gt;\n</code></pre> <p>No obstant aix\u00f2, perqu\u00e8 Laravel carregue l'arxiu helpers.php que acabem de crear, com no \u00e9s una classe, hem d'indicar-ho expl\u00edcitament (Laravel c\u00e0rrega autom\u00e0ticament totes les classes de la carpeta app , per\u00f2 no arxius solts que no siguen classes). Podem fer-ho amb l'autoloader del composer.json de l'arrel del nostre projecte. En la secci\u00f3 autoload cal afegir una secci\u00f3 files amb un array amb els arxius que vulguem que es carreguen tamb\u00e9:</p> <pre><code>    \"autoload\": {\n    \"classmap\": [ ... ],\n    \"psr-4\": { ... },\n    \"files\": [\"app/helpers.php\"]\n    },\n</code></pre> <p>Despr\u00e9s d'efectuar el canvi, hem de dir-li a *composer que torne a compilar l'acte carregador. Des de la carpeta del projecte, executem aquest comando:</p> <pre><code>composer dump-autoload\n</code></pre>"},{"location":"07laravelControladors.html#helperserviceprovider","title":"HelperServiceProvider","text":"<p>Video</p> <p>Per\u00f2 la millor forma de fer-ho per a que les funcions d'aquest fitxer siguen visibles en l'aplicaci\u00f3 \u00e9s a crear un ServiceProvider i a registrar-lo:</p> <pre><code>php artisan make:provider HelperServiceProvider\n</code></pre> <p>Crear\u00e0 un fitxer en la carpeta Providers. L'editem per afegir el nostre Helper.</p> <pre><code>    /**\n         * Register services.\n         *\n         * @return void\n         */\n        public function register()\n        {\n            require_once base_path() . '/app/Helpers/myHelpers.php';\n        }\n</code></pre> <p>I ara registrem el ServiceProvider en el fitxer config/app.php</p> <pre><code>'providers' =&gt; [\n\n        /*\n         * Laravel Framework Service Providers...\n         */\n        Illuminate\\Auth\\AuthServiceProvider::class,\n\n        .....\n\n        /*\n         * Package Service Providers...\n         */\n\n        /*\n         * Application Service Providers...\n         */\n        App\\Providers\\AppServiceProvider::class,\n        App\\Providers\\AuthServiceProvider::class,\n        // App\\Providers\\BroadcastServiceProvider::class,\n        App\\Providers\\EventServiceProvider::class,\n        App\\Providers\\RouteServiceProvider::class,\n        App\\Providers\\HelperServiceProvider::class,\n\n    ],\n</code></pre> <p>I com cada volta que toquen un fitxer de configuraci\u00f3 executem</p> <pre><code>php artisan config:cache\n</code></pre>"},{"location":"07laravelControladors.html#exercicis","title":"Exercicis","text":""},{"location":"07laravelControladors.html#exercisi-711","title":"Exercisi 711.","text":"<p>Sobre el projecte blog de la sessi\u00f3 anterior, afegirem aquests canvis:</p> <ul> <li>Crea un controlador de recursos (opci\u00f3 -r ) anomenat PostController , que ens servir\u00e0 per a gestionar tota la l\u00f2gica dels posts del blog.</li> <li>Assigna autom\u00e0ticament amb el m\u00e8tode resource cada ruta a la seua funci\u00f3 corresponent del controlador, en l'arxiu routes/web.php . Limita amb only les accions nom\u00e9s a les funcions de llistat (index), fitxa (show), creaci\u00f3 (create) i edici\u00f3 (edit).</li> <li>Canvia de nom les vistes de llistat i fitxa d'un post a index.blade.php i show.blade.php, dins de la seua carpeta posts, i fes que els m\u00e8todes corresponents del controlador de posts renderitzen aquestes vistes.</li> <li>Per als m\u00e8todes create i, simplement retorna un text pla en una vista indicant \"Nou post\" , per exemple.</li> <li>Fes els canvis addicionals que siguen convenients (per exemple, en el men\u00fa de navegaci\u00f3) perqu\u00e8 els enlla\u00e7os continuen funcionant, i prova que les quatre rutes (llistat, fitxa, creaci\u00f3 i edici\u00f3) funcionen adequadament.</li> <li>Afegix el nou post al men\u00fa de navegaci\u00f3</li> <li></li> </ul>"},{"location":"07laravelControladors.html#exercisi-712","title":"Exercisi 712","text":"<ul> <li>Fes que la funci\u00f3 edit del controlador de posts, en lloc de mostrar un missatge de text pla indicant que ac\u00ed va un formulari, redirigisquen a la p\u00e0gina d'inici, usant la instrucci\u00f3 redirect .</li> <li>Afig un helper al projecte que definisca una funci\u00f3 anomenada fechaActual . Rebr\u00e0 com a par\u00e0metre un format de data (per defecte, \"d/m/Y\") i traur\u00e0 la data actual en aquest format. Utilitza-ho per a mostrar la data actual en format \"d/m/Y\" en la plantilla base alineada a la dreta de la barra de navegaci\u00f3.</li> </ul>"},{"location":"07laravelModelsDades.html","title":"FRAMEWORK LARAVEL","text":""},{"location":"07laravelModelsDades.html#base-de-dades","title":"Base de dades","text":"<p>Video</p> <p>Laravel facilita la configuraci\u00f3 i l'\u00fas de diferents tipus de base de dades: MySQL, Postgres, SQLite i SQL Server. En el fitxer de configuraci\u00f3 (config/database.php) hem d'indicar tots els par\u00e0metres d'acc\u00e9s a les nostres bases de dades i a m\u00e9s especificar com \u00e9s la connexi\u00f3 que s'utilitzar\u00e0 per defecte. En Laravel podem fer \u00fas de diverses bases de dades alhora, encara que siguen de diferent tipus. Per defecte s'accedir\u00e0 a la qual especifiquem en la configuraci\u00f3 i si volem accedir a una altra connexi\u00f3 ho haurem d'indicar expressament en realitzar la consulta.</p> <p>En aquest cap\u00edtol veurem com configurar una base de dades, com crear taules i especificar els seus camps des de codi, com inicialitzar la base de dades i com construir consultes tant de forma directa com a trav\u00e9s del ORM anomenat Eloquent.</p>"},{"location":"07laravelModelsDades.html#configuracio-inicial","title":"Configuraci\u00f3 inicial","text":""},{"location":"07laravelModelsDades.html#configuracio-de-la-base-de-dades","title":"Configuraci\u00f3 de la Base de dades","text":"<p>El primer que hem de fer per a treballar amb bases de dades \u00e9s completar la configuraci\u00f3. Com a exemple anem a configurar l'acc\u00e9s a una base de dades tipus MySQL. Si editem el fitxer amb la configuraci\u00f3 config/database.php podem veure en primer lloc la seg\u00fcent l\u00ednia:</p> <pre><code>'default' =&gt; env('DB_CONNECTION', 'mysql'),\n</code></pre> <p>Aquest valor indica el tipus de base de dades a utilitzar per defecte. Com vam veure en el primer cap\u00edtol Laravel utilitza el sistema de variables d'entorn per a separar les diferents configuracions d'usuari o de m\u00e0quina.  El m\u00e8tode env('DB_CONNECTION', 'mysql') el que fa \u00e9s obtenir el valor de la variable DB_CONNECTION del fitxer .env. En cas que aquesta variable no estiga definida retornar\u00e0 el valor per defecte mysql.</p> <p>En aquest mateix fitxer de configuraci\u00f3, dins de la secci\u00f3 connections, podem trobar tots els camps utilitzats per a configurar cada tipus de base de dades, en concret la base de dades tipus mysql t\u00e9 els seg\u00fcents valors:</p> <pre><code>    'mysql' =&gt; [\n            'driver' =&gt; 'mysql',\n            'host' =&gt; env('DB_HOST', '127.0.0.1'),\n            'port' =&gt; env('DB_PORT', '3306'),\n            'database' =&gt; env('DB_DATABASE', 'forge'),\n            'username' =&gt; env('DB_USERNAME', 'forge'),\n            'password' =&gt; env('DB_PASSWORD', ''),\n            'unix_socket' =&gt; env('DB_SOCKET', ''),\n            'charset' =&gt; 'utf8mb4',\n            'collation' =&gt; 'utf8mb4_unicode_ci',\n            'prefix' =&gt; '',\n            'prefix_indexes' =&gt; true,\n            'strict' =&gt; true,\n            'engine' =&gt; null,\n        ],\n</code></pre>"},{"location":"07laravelModelsDades.html#contrasenya-dacces","title":"Contrasenya d'acc\u00e9s","text":"<p>Com es pot veure, b\u00e0sicament els camps que hem de configurar per a usar la nostra base de dades s\u00f3n: host, database, username i password. El host ho podem deixar com est\u00e0 si anem a usar una base de dades local, mentre que els altres tres camps s\u00ed que hem d'actualitzar-los amb el noms de la base de dades a utilitzar i l'usuari i la contrasenya d'acc\u00e9s. Per a posar aquests valors obrim el fitxer .env de l'arrel del projecte i els actualitzem:</p> <pre><code>DB_CONNECTION=mysql \nDB_HOST=localhost \nDB_DATABASE=nom-base-de-dades \nDB_USERNAME=nom-de-usuari\nDB_PASSWORD=contrasenya-de-acc\u00e9s\n</code></pre>"},{"location":"07laravelModelsDades.html#crear-la-base-de-dades","title":"Crear la base de dades","text":"<p>L'\u00fanic pas necessari des de fora de Laravel per a accedir a la base de dades ser\u00e0 crear-la. La resta d'operacions(creaci\u00f3 de taules, camps, claus, relacions, dades, etc) es podran fer des del propi Laravel, com anirem veient a continuaci\u00f3. La base de dades podem crear-la a trav\u00e9s d'algun administrador que tinguem disponible (per exemple, phpMyAdmin per a bases de dades MySQL), o b\u00e9 per l\u00ednia de comandos, connectant amb el SGBD en q\u00fcesti\u00f3 i creant la base de dades.</p>"},{"location":"07laravelModelsDades.html#migracions","title":"Migracions","text":"<p>Les migracions s\u00f3n un sistema de control de versions per a bases de dades. Permeten que un equip treballe sobre una base de dades afegint i modificant camps, mantenint un hist\u00f2ric dels canvis realitzats i de l'estat actual de la base de dades. </p> <p>Les migracions s'utilitzen de forma conjunta amb l'eina Schema builder (que veurem en la seg\u00fcent secci\u00f3) per a gestionar l'esquema de base de dades de l'aplicaci\u00f3.</p> <p>La forma de funcionar de les migracions \u00e9s crear fitxers (PHP) amb la descripci\u00f3 de la taula a crear i posteriorment, si es vol modificar aquesta taula s'afegiria una nova migraci\u00f3 (un nou fitxer PHP) amb els camps a modificar.</p> <p>Artisan inclou comandos per a crear migracions, per a executar les migracions o per a fer rollback de les mateixes (tornar arrere).</p>"},{"location":"07laravelModelsDades.html#estructura-de-les-migracions","title":"Estructura de les migracions","text":"<p>Per defecte, Laravel porta unes migracions predefinides, que es troben en la carpeta database/migrations . Cadascuna t\u00e9 un nom d'arxiu que comen\u00e7a per la data en qu\u00e8 es va fer, seguida d'una breu descripci\u00f3 del que cont\u00e9 (creaci\u00f3 de la taula d'usuaris, reinicialitze de contrasenyes...). Pot ser que algunes d'aquestes migracions no ens vagen a ser necess\u00e0ries, amb el que podem esborrar-les directament, i pot ser que altres (especialment la creaci\u00f3 de la taula d'usuaris) s\u00ed que ens servisca, per\u00f2 amb altres camps, amb el que haurem d'editar-la, com veurem a continuaci\u00f3. Si examinem el contingut d'una migraci\u00f3, totes han de tindre dos m\u00e8todes:</p> <ul> <li>up : permet agregar taules, columnes o \u00edndexs a la base de dades</li> <li>down : reverteix el fet pel m\u00e8tode anterior</li> </ul> <p>Si observem el contingut d'un m\u00e8tode up dels quals v\u00e9nen predefinits per a crear una taula, veiem que s'utilitzen diferents m\u00e8todes per a definir els tipus de dades de cada camp de la taula, com per exemple id() per a camps que puguen contindre sencers autoincrementales, o string() per a camps de tipus text. A m\u00e9s, existeixen altres m\u00e8todes modificadors per a agregar propietats addicionals, com per exemple unique() per a indicar valors \u00fanics (claus alternatives), o nullable() per a indicar que un camp admet nuls. Ac\u00ed tenim un exemple de m\u00e8tode up* :</p> <p><pre><code>public function up()\n{\n    Schema::create('usuarios', function(BluePrint $tabla) {\n        $tabla-&gt;id();\n        $tabla-&gt;string('nombre');\n        $tabla-&gt;string('email')-&gt;unique();\n        ...\n        $tabla-&gt;timestamps();\n    });\n}\n</code></pre> Per defecte, com veiem en els exemples que es proporcionen, els esquemes es creen amb un id autonum\u00e8ric, i uns timestamps per a indicar la data de creaci\u00f3 i de modificaci\u00f3 de cada registre, i que Laravel gestiona de manera autom\u00e0tica quan inserim o actualitzem continguts, la qual cosa resulta molt \u00fatil.</p> <p>Sobre aquesta base, podem afegir o llevar els camps que vulguem. Per a veure els tipus disponibles per a les columnes de la taula, podem visitar la documentaci\u00f3 de Laravel sobre migracions, en concret buscarem el subapartat Available Column Types. </p> <p>Conv\u00e9 tindre present, per exemple, que el tipus string que hem utilitzat en l'exemple anterior t\u00e9 una limitaci\u00f3 de 255 car\u00e0cters. Per a textos m\u00e9s grans, es pot emprar el tipus text (20.000 car\u00e0cters aproximadament) o longText . Podem especificar una clau prim\u00e0ria amb el m\u00e8tode primary , al qual li podem passar o b\u00e9 el nom del camp clau, o un array de camps clau, en el cas que aquesta siga composta.  Per defecte, els camps de tipus id s'acte-estableixen com a claus prim\u00e0ries.</p> <pre><code>$table-&gt;primary(['campo1', 'campo2']);\n</code></pre>"},{"location":"07laravelModelsDades.html#crear-una-nova-migracio","title":"Crear una nova migraci\u00f3","text":"<p>Per a crear una nova migraci\u00f3 s'utilitza el comando de Artisan make:migration, al com li passarem el nom del fitxer a crear i el nom de la taula:</p> <pre><code>    php artisan make:migration nom_migracio\n</code></pre> <p>A\u00e7\u00f2 ens crear\u00e0 un fitxer de migraci\u00f3 en la carpeta database/migrations amb el nom _nom_migracio.php. En afegir un timestamp a les migracions el sistema sap l'ordre en el qual ha d'executar (o desfer) les mateixes. <p>Notar que Laravel ja assigna autom\u00e0ticament la data de la migraci\u00f3, nom\u00e9s hem d'especificar el nom descriptiu d'aquesta. A m\u00e9s, si Laravel detecta la paraula create en el nom de la migraci\u00f3, finalitzada en table, intueix que \u00e9s per a crear una taula nova.  En canvi, si detecta la paraula to (entre altres), i al final la paraula table, intueix que s'alterar\u00e0 o modificar una taula existent. Aix\u00f2 \u00e9s gr\u00e0cies a la classe TableGuesser incorporada en Laravel, que detecta uns certs patrons en els noms de migracions.</p> <p>La difer\u00e8ncia entre la creaci\u00f3 i la modificaci\u00f3 \u00e9s que en el m\u00e8tode up de la migraci\u00f3 s'utilitzar\u00e0 Schema::create o Schema::table sobre la taula en q\u00fcesti\u00f3, respectivament.</p> <p>En qualsevol cas, tamb\u00e9 podem especificar un par\u00e0metre addicional en el comando de migraci\u00f3 per a indicar si volem crear o modificar una taula, i d'aquesta manera podem definir el nom de la migraci\u00f3 en l'idioma que vulguem, i sense restriccions de patrons. Aquestes dues migracions creen una taula (comandes) i modifiquen una altra (usuaris), respectivament:</p> <p><pre><code>php artisan make:migration crear_tabla_pedidos --create=pedidos\nphp artisan make:migration nuevo_campo_usuario --table=usuarios \n</code></pre> En el cas de la segona migraci\u00f3, si, per exemple, volem afegir una columna amb el n\u00famero de tel\u00e8fon  dels usuaris, pot quedar aix\u00ed (tant el m\u00e8tode up com el down ):</p> <pre><code>public function up()\n{\n    Schema::table('usuarios', function(Blueprint $tabla)    {\n        $tabla-&gt;string('telefono')-&gt;nullable();\n    });\n}\n\npublic function down()\n{\n    Schema::table('usuarios', function(Blueprint $tabla)    {\n        $tabla-&gt;dropColumn('telefono');\n    });\n}\n</code></pre> <p>Si volem que el camp en q\u00fcesti\u00f3 estiga en un ordre concret, podem usar el m\u00e8tode after per a indicar darrere de quin camp volem posar-ho (en el m\u00e8tode up ):</p> <pre><code>$tabla-&gt;string('telefono')-&gt;after('email')-&gt;nullable();\n</code></pre>"},{"location":"07laravelModelsDades.html#executar-i-esborrat-de-migracions","title":"Executar i esborrat de migracions","text":"<p>Despr\u00e9s de crear una migraci\u00f3 i de definir els camps de la taula (en la seg\u00fcent secci\u00f3 veurem com especificar a\u00e7\u00f2) hem de llan\u00e7ar la migraci\u00f3 amb el seg\u00fcent comando:</p> <pre><code>php artisan migrate\n</code></pre> <p>Aquest comanament aplicar\u00e0 la migraci\u00f3 sobre la base de dades. Si hi haguera m\u00e9s d'una migraci\u00f3 pendent s'executaran totes. Per a cada migraci\u00f3 es dir\u00e0 al seu m\u00e8tode up perqu\u00e8 creu o modifique la base de dades. Posteriorment en cas que vulguem desfer els \u00faltims canvis podrem executar:</p> <pre><code>php artisan migrate:rollback\n</code></pre> <p>O si volem desfer totes les migracions </p> <pre><code>php artisan migrate:reset\n</code></pre> <p>Un comanament interessant quan estem desenvolupant un nou lloc web \u00e9s migrate:refresh, el qual desfar\u00e0 tots els canvis i tornar a aplicar les migracions:</p> <pre><code>php artisan migrate:fresh\n</code></pre> <p>A m\u00e9s si volem comprovar l'estat de les migracions, per a veure les que ja estan instal\u00b7lades i les que queden pendents, podem executar:</p> <pre><code>php artisan migrate:status\n</code></pre>"},{"location":"07laravelModelsDades.html#schema-builder","title":"Schema Builder","text":"<p>Una vegada creada una migraci\u00f3 hem de completar els seus m\u00e8todes up i down per a indicar la taula que volem crear o el camp que volem modificar. En el m\u00e8tode down sempre haurem d'afegir l'operaci\u00f3 inversa, eliminar la taula que s'ha creat en el m\u00e8tode up o eliminar la columna que s'ha afegit. </p> <p>A\u00e7\u00f2 ens permetr\u00e0 desfer migracions deixant la base de dades en el mateix estat en el qual es trobaven abans que s'afegiren.</p> <p>Per a especificar la taula a crear o modificar, aix\u00ed com les columnes i tipus de dades de les mateixes, s'utilitza la classe Schema. Aquesta classe t\u00e9 una s\u00e8rie de m\u00e8todes que ens permetr\u00e0 especificar l'estructura de les taules independentment del sistema de base de dades que utilitzem.</p>"},{"location":"07laravelModelsDades.html#crear-i-esborrar-una-taula","title":"Crear i esborrar una taula","text":"<p>Per a afegir una nova taula a la base de dades s'utilitza el seg\u00fcent constructor:</p> <pre><code>Schema::create('users', function (Blueprint $table)     { \n    $table-&gt;increments('id');\n});\n</code></pre> <p>On el primer argument \u00e9s el nom de la taula i el segon \u00e9s una funci\u00f3 que rep com a par\u00e0metre un objecte del tipus Blueprint que utilitzarem per a configurar les columnes de la taula.</p> <p>En la secci\u00f3 down de la migraci\u00f3 haurem d'eliminar la taula que hem creat, per a a\u00e7\u00f2 usarem algun dels seg\u00fcents m\u00e8todes: </p> <pre><code>Schema::drop('users');\nSchema::dropIfExists('users');\n</code></pre> <p>En crear una migraci\u00f3 amb el comando de Artisan make:migration ja ens ve aquest codi afegit per defecte, la creaci\u00f3 i eliminaci\u00f3 de la taula que s'ha indicat i a m\u00e9s s'afigen un parell de columnes per defecte (id i timestamps).</p>"},{"location":"07laravelModelsDades.html#afegir-columnes","title":"Afegir columnes","text":"<p>El constructor Schema::create rep com a segon par\u00e0metre una funci\u00f3 que ens permet especificar les columnes que va a tenir aquesta taula. </p> <p>En aquesta funci\u00f3 podem anar afegint tots els camps que vulguem, indicant per a cadascun d'ells el seu tipus i nom, i a m\u00e9s si volem tamb\u00e9 podrem indicar una s\u00e8rie de modificadors com a valor per defecte, \u00edndexs, etc. Per exemple:</p> <pre><code>    Schema::create('users', function($table) {\n        $table-&gt;increments('id'); \n        $table-&gt;string('username', 32); \n        $table-&gt;string('password'); \n        $table-&gt;smallInteger('vots'); \n        $table-&gt;string('direccion'); \n        $table-&gt;boolean('confirmat')-&gt;default(false);\n        $table-&gt;timestamps();\n    });\n</code></pre> <p>Schema defineix molts tipus de dades que podem utilitzar per a definir les columnes d'una taula, alguns dels principals s\u00f3n:</p> Comando Tipus de camp $table-&gt;boolean('confirmed'); BOOLEAN $table-&gt;enum('choices', array('foo', 'bar')); ENUM $table-&gt;float('amount'); FLOAT $table-&gt;increments('id'); Clau principal tipus INTEGER amb Acte-Increment $table-&gt;integer('votes'); INTEGER $table-&gt;mediumInteger('numbers'); MEDIUMINT $table-&gt;smallInteger('votes'); SMALLINT $table-&gt;tinyInteger('numbers'); TINYINT $table-&gt;string('email'); VARCHAR $table-&gt;string('name', 100); VARCHAR amb la longitud indicada TEXT $table-&gt;text('description'); TEXT $table-&gt;timestamp('added_on'); $table-&gt;timestamps(); Afig els timestamps \"created_at\" i \"updated_at\" -&gt;nullable() Indicar que la columna permet valors NULL -&gt;default($value) Declara un valor per defecte per a una columna -&gt;unsigned() Afig UNSIGNED a les columnes tipus INTEGER <p>Els tres \u00faltims es poden combinar amb la resta de tipus per a crear, per exemple, una columna que permeta nuls, amb un valor per defecte i de tipus unsigned.</p> <p>Per a consultar tots els tipus de dades que podem utilitzar podeu consultar la documentaci\u00f3 de Laravel en:</p>"},{"location":"07laravelModelsDades.html#afegir-indexs","title":"Afegir \u00edndexs","text":"<p>Schema suporta els seg\u00fcents tipus d'\u00edndexs:</p> Comanament Descripci\u00f3 $table-&gt;id(); Afegir un clau prim\u00e0ria id $table-&gt;primary('id'); Afegir una clau prim\u00e0ria $table-&gt;primary(array('first', 'last')); Definir una clau prim\u00e0ria composta $table-&gt;unique('email'); Definir el camp com UNIQUE $table-&gt;index('state'); Afegir un \u00edndex a una columna <p>En la taula s'especifica com afegir aquests \u00edndexs despr\u00e9s de crear el camp, per\u00f2 tamb\u00e9 permet indicar aquests \u00edndexs alhora que es crea el camp:</p> <pre><code>$table-&gt;string('email')-&gt;unique();\n</code></pre>"},{"location":"07laravelModelsDades.html#claus-alienes","title":"Claus alienes","text":"<p>Amb Schema tamb\u00e9 podem definir claus alienes entre taules:</p> <pre><code>$table-&gt;foreignId('module_id')-&gt;constrained('modules');\n\n$table-&gt;foreign('module_id')-&gt;references('code')-&gt;on('modules');\n</code></pre> <p>En el primer exemple, a m\u00e9s de crear el camp crea la rel\u00b7lacio, i serveix si la clau a la que faig refer\u00e8ncia s'ha creat utilitzant $table-&gt;id();</p> <p>En cas contrari he d'especificar el camp ja creat i on es rel\u00b7laciona.</p> <p>La columna amb la clau aliena ha de ser del mateix tipus que la columna a la qual apunta. Si per exemple vam crear una columna a un \u00edndex auto-incremental haurem d'especificar que la columna siga unsigned per que no es produ\u00efsquen errors.</p> <p>Tamb\u00e9 podem especificar les accions que s'han de realitzar per a \"on delete\" i \"on update\":</p> <pre><code>$table-&gt;foreign('user_id')-&gt;references('id')-&gt;on('users')-&gt;onDelete('cascade');\n</code></pre>"},{"location":"07laravelModelsDades.html#models-de-dades-mitjancant-orm","title":"Models de dades mitjan\u00e7ant ORM","text":"<p>Video</p> <p>El mapeado objecte-relacional (m\u00e9s conegut pel seu nom en angl\u00e8s, Object-Relational mapping, o per les seues sigles ORM) \u00e9s una t\u00e8cnica de programaci\u00f3 per a convertir dades entre un llenguatge de programaci\u00f3 orientat a objectes i una base de dades relacional com a motor de persist\u00e8ncia. A\u00e7\u00f2 possibilita l'\u00fas de les caracter\u00edstiques pr\u00f2pies de l'orientaci\u00f3 a objectes, podrem accedir directament als camps d'un objecte per a llegir les dades d'una base de dades o per a inserir-los o modificar-los. Laravel inclou el seu propi sistema de ORM anomenat Eloquent, el qual ens proporciona una manera elegant i f\u00e0cil d'interactuar amb la base de dades. Per a cada taula de la base dades haurem de definir el seu corresponent model, el qual s'utilitzar\u00e0 per a interactuar des de codi amb la taula.</p>"},{"location":"07laravelModelsDades.html#definicio-dun-model-de-dades","title":"Definici\u00f3 dun model de dades","text":"<p>Per defecte els models es guardaran com a classes PHP dins de la carpeta app/Models.</p> <pre><code>    php artisan make:model Movie\n</code></pre> <p>Aquest comando crear\u00e0 el fitxer movie.php dins de la carpeta app/Models amb el codi b\u00e0sic d'un model.</p> <pre><code>&lt;?php\n    namespace App\\Models;\n    use Illuminate\\Database\\Eloquent\\Model;\n    class Movie extends Model\n    {\n    ...\n    }\n?&gt;\n</code></pre> <p>Autom\u00e0ticament, s'associa aquest model a una taula amb el mateix nom, per\u00f2 en plural i en min\u00fascula, per la qual cosa els models anteriors estarien associats a unes taules llibres i usuaris en la base de dades, respectivament. En cas que no vulguem que siga aix\u00ed, definim una propietat \\$table en la classe amb el nom que vulguem que tinga la taula associada. Per exemple:</p> <pre><code>class Movie extends Model\n{\n    protected $table = 'movies';\n}\n</code></pre>"},{"location":"07laravelModelsDades.html#altres-opcions-de-crear-models","title":"Altres opcions de crear models","text":"<p>El comando anterior make:model admet uns par\u00e0metres addicionals, de manera que es pot crear alhora el model i la migraci\u00f3, i m\u00e9s encara, el model, la migraci\u00f3 i el controlador associat. Vegem alguns exemples:</p> <pre><code>php artisan make:model Movie -m\n</code></pre> <p>El comando anterior crea un model Pelicula en la carpeta app\\Models i, a m\u00e9s, crea una migraci\u00f3 anomenada create_peliculas_table en la carpeta database/migrations , llista perqu\u00e8 editem el m\u00e8tode up i especifiquem els camps necessaris. Notar que el nom de la migraci\u00f3 afig una \"s\" al nom de la taula autom\u00e0ticament, a partir del model en singular.</p> <pre><code>php artisan make:model Movie -mc\n</code></pre> <p>Aquest altre comando crea el mateix que l'anterior, i a m\u00e9s, un controlador anomenat PeliculaController en la carpeta app\\Http\\Controllers . Aquest controlador est\u00e0 buit, perqu\u00e8 afegim els m\u00e8todes que considerem.</p> <p><pre><code>php artisan make:model Movie -mcr\n</code></pre> Aquesta altra opci\u00f3 crea el mateix que l'anterior, per\u00f2 el controlador PeliculaController \u00e9s en aquest cas un controlador de recursos, per la qual cosa t\u00e9 ja incorporats el conjunt de m\u00e8todes propis d'aquesta mena de controladors: index , show , etc.</p>"},{"location":"07laravelModelsDades.html#seguir-una-nomenclatura-uniforme","title":"Seguir una nomenclatura uniforme","text":"<p>Recorda que, de sessions anteriors, hem comentat la recomanaci\u00f3/necessitat de seguir una nomenclatura uniforme en els models, controladors i vistes. Aix\u00ed, per al model Movie ja tindr\u00edem el seu controlador associat MovieController , i les vistes es definirien en la subcarpetac resources/views/movies , amb els noms corresponents a cada m\u00e8tode del controlador (per exemple index.blade.php  o show.blade.php ), i amb una taula associada movies.</p>"},{"location":"07laravelModelsDades.html#clau-primaria","title":"Clau prim\u00e0ria","text":"<p>Laravel tamb\u00e9 assumeix que cada taula t\u00e9 declarada una clau prim\u00e0ria amb el nom id. En el cas que no siga aix\u00ed i vulguem canviar-ho haurem de sobreescriure el valor de la propietat protegida \\$primaryKey del model, per exemple: </p> <pre><code>    protected $primaryKey = 'my_id';\n</code></pre> <p>\u00c9s important definir correctament aquest valor ja que s'utilitza en determinats m\u00e8todes de Eloquent, com per exemple per a cercar registres o per a crear les relacions entre models.</p>"},{"location":"07laravelModelsDades.html#timestamps","title":"Timestamps","text":"<p>Una altra propietat que en ocasions haurem d'establir s\u00f3n els timestamps autom\u00e0tics. Per defecte Eloquent assumeix que totes les taules contenen els camps updated_at i created_at (els quals els podem afegir molt f\u00e0cilment amb Schema afegint \\$table-&gt;timestamps() en la migraci\u00f3). Aquests camps s'actualitzaran autom\u00e0ticament quan es creu un nou registre o es modifique. En el cas que no vulguem utilitzar-los (i que no estiguen afegits a la taula) haurem d'indicar-ho en el model o d'una altra forma ens donaria un error. Per a indicar que no els actualitze autom\u00e0ticament haurem de modificar el valor de la propietat p\u00fablica \\$timestamps a false, per exemple: </p> <pre><code>    public $timestamps = false;\n</code></pre> <p>A continuaci\u00f3 es mostra un exemple d'un model de Eloquent en el qual s'afigen totes les especificacions que hem vist:</p> <pre><code>    &lt;?php namespace App;\n    use Illuminate\\Database\\Eloquent\\Model; \n    class User extends Model\n        {\n        protected $table = 'my_users'; \n        protected $primaryKey = 'my_id';\n        public $timestamps = false;\n        }\n</code></pre>"},{"location":"07laravelModelsDades.html#us-dun-model-de-dades","title":"\u00das d'un model de dades","text":"<p>Una vegada creat el model ja podem comen\u00e7ar a utilitzar-ho per a recuperar dades de la base de dades, per a inserir noves dades o per a actualitzar-los.  El lloc correcte on realitzar aquestes accions \u00e9s en el controlador, el qual li'ls /els hi haur\u00e0 de passar a la vista ja preparats per a la seua visualitzaci\u00f3.</p> <p>\u00c9s important que per a la seua utilitzaci\u00f3 indiquem a l'inici de la classe l'espai de noms del model o models a utilitzar.  Per exemple, si anem a usar els models User i Orders haur\u00edem d'afegir:</p> <pre><code>    use App\\Models\\User;\n    use App\\Models\\Orders;\n</code></pre>"},{"location":"07laravelModelsDades.html#consultar-dades","title":"Consultar dades","text":"<p>Per a obtenir totes les files de la taula associada a un model usarem el m\u00e8tode all():</p> <p><pre><code>    use App\\Models\\Movie;\n    ...\n    class MovieController extends Controller\n    {\n        public function index()\n        {\n            $movies = Movie::get();\n            return view('movies.index', compact('movies'));\n        }\n    }   \n</code></pre> Aquest m\u00e8tode pasar\u00e0 a la vista un array de objectes, on cada item del array ser\u00e0 una inst\u00e0ncia del model movie i accedirem a les seues propietats com a tals. Aix\u00ed en la vista tindriem alguna cosa com:</p> <pre><code>@forelse($movies as $movie)\n    {{ \"{{  $movies-&gt;titulo \" }}}}\n@endforelse\n</code></pre> <p>Alternativament, tamb\u00e9 podem obtindre una consulta filtrada, amb el m\u00e8tode get i especificant amb el m\u00e8tode where la condici\u00f3 que han de complir els registres a obtindre. Per exemple, aix\u00ed obtindr\u00edem els llibres el preu dels quals siga inferior a 10 euros</p> <p><pre><code>$movies = Movie::where('precio', '&lt;', 10)-&gt;get();\n</code></pre> o combinant-les</p> <pre><code>$movies = Movie::where('precio', '&lt;', 10)\n-&gt;where('precio', '&gt;', 5)-&gt;get();\n</code></pre> <p>Sobre aquestes consultes base podem aplicar una s\u00e8rie d'afegits. Per exemple, podem voler ordenar els llibres per t\u00edtol, per al que far\u00edem aix\u00f2 en el controlador:</p> <pre><code>$movies = Movie::orderBy('titulo', 'DESC')-&gt;get();\n</code></pre> <p>Nota: Tots els m\u00e8todes que es descriuen en la secci\u00f3 de \"Constructor de consultes\" i en la documentaci\u00f3 de Laravel sobre \"Query Builder\" tamb\u00e9 es poden utilitzar en els models Eloquent. Per tant podrem utilitzar where, orWhere, first, get, orderBy, groupBy, having, skip, take, etc. per a elaborar les consultes.</p> <p>Tamb\u00e9 podem utilitzar els m\u00e8todes agregats per a calcular el total de registres obtinguts, o el m\u00e0xim, m\u00ednim, mitjana o summa d'una determinada columna. Per exemple:</p> <pre><code>    $count = User::where('votes', '&gt;', 100)-&gt;count(); \n    $price = Orders::max('price');\n    $price = Orders::min('price');\n    $price = Orders::avg('price');\n    $total = User::sum('votes');\n</code></pre>"},{"location":"07laravelModelsDades.html#paginacio-de-resultats","title":"Paginaci\u00f2 de resultats","text":"<p>Si volem paginar els resultats obtinguts, devem, d'una banda, quan obtinguem el llistat des del controlador, indicar amb paginate quants registres volem per p\u00e0gina:</p> <pre><code>public function index()\n    {\n        $movies = Movie::paginate(5);\n        return view('movies.index', compact('moviemovies'));\n    }\n</code></pre> <p>Despr\u00e9s, en la vista associada ( movies.index en l'exemple anterior), podem emprar el m\u00e8tode links perqu\u00e8 mostre els botons de paginaci\u00f3 en el lloc desitjat:</p> <pre><code>    @forelse($movies as $movie)\n        {{  $movie-&gt;titulo \" }}\n    @endforelse\n    {{   $movies-&gt;links() }}\n</code></pre>"},{"location":"07laravelModelsDades.html#objectes-individuals","title":"Objectes individuals","text":"<p>Una operaci\u00f3 bastant habitual \u00e9s mostrar una fitxa d'un objecte a partir d'un llistat, fent clic en el t\u00edtol o alguna part visible d'aqueix objecte. Per exemple, si volem veure les dades d'un llibre a partir d'un llistat amb els seus t\u00edtols, podem fer alguna cosa com aix\u00f2 en la plantilla Blade:</p> <pre><code>@forelse($movies as $movie)\n    &lt;li&gt;\n        &lt;a href=\"{{  route('movies.show', $movie) }}\"&gt;\n        {{   $movie-&gt;titulo \" }}&lt;/a&gt;\n    &lt;/li&gt;\n@endforelse\n</code></pre> <p>Veiem que hem utilitzat el m\u00e8tode route per a indicar la ruta a seguir, amb un segon par\u00e0metre, que en aquest cas \u00e9s l'objecte concret d'aqueixa fila. Laravel autom\u00e0ticament ho reempla\u00e7ar\u00e0 en l'enlla\u00e7 per l'identificador d'aquest objecte. Per part seua, la ruta associada a aquest enlla\u00e7 podria ser una cosa aix\u00ed (en l'arxiu de rutes):</p> <pre><code>Route::get('/movies/{id}', [movieController::class, 'show'])\n-&gt;name('movies.show');\n</code></pre>"},{"location":"07laravelModelsDades.html#mostar-dades","title":"Mostar dades","text":"<p>Finalment, el m\u00e8tode show del controlador associat s'encarregar\u00e0 d'obtindre les dades del llibre a partir de el seu id, i generar la vista corresponent. Per a obtindre les dades d'un objecte a partir del seu identificador,podem emprar el m\u00e8tode find del model, passant-li com a par\u00e0metre l'identificador. Aix\u00ed,podr\u00edem generar una vista amb les dades com aquesta:</p> <pre><code>...\nclass movieController extends Controller\n{\n    ...\n    public function show($id)\n    {\n        $movie = movie::find($id);\n        return view('movies.show', compact('movie'));\n    }\n}\n</code></pre> <p>En el cas que l'objecte no es trobe (perqu\u00e8, per exemple, utilitzem un aneu equivocat), la vista generada fallar\u00e0. Per a evitar-ho, en lloc del m\u00e8tode find podem emprar *findOrFail , que, en cas que    no es trobe l'objecte, generar\u00e0 una vista amb un error 404, m\u00e9s apropiada. A m\u00e9s, recorda que pots personalitzar aquestes p\u00e0gines d'error definint les vistes corresponents.</p> <pre><code>$movie = movie::findOrFail($id);\n</code></pre>"},{"location":"07laravelModelsDades.html#inserir-dades","title":"Inserir dades","text":"<p>Video</p> <p>Per a afegir una entrada en la taula de la base de dades associada amb un model simplement hem de crear una nova inst\u00e0ncia d'aquest model, assignar els valors que vulguem i finalment guardar-los amb el m\u00e8tode save():</p> <pre><code>    $movie = new movie();\n    $movie-&gt;titulo = \"La guerra de las galaxias\";\n    $movie-&gt;director = \"George Lucas\";\n    $movie-&gt;precio = 3.95;\n    $movie-&gt;save();\n</code></pre> <p>Per a obtenir l'identificador assignat en la base de dades despr\u00e9s de guardar (quan es tracte de taules amb \u00edndex auto-incremental), ho podrem recuperar simplement accedint al camp id de l'objecte que hav\u00edem creat, per exemple:</p> <pre><code>$insertedId = $movie-&gt;id;\n</code></pre> <p>Com a alternativa, tamb\u00e9 es pot utilitzar el m\u00e8tode create del model, i passar-li totes les dades de la petici\u00f3, que arribarien des d'un formulari, com veurem m\u00e9s endavant:    </p> <p><pre><code>movie::create($request-&gt;all());\n</code></pre> Perqu\u00e8 aix\u00f2 \u00faltim funcione, han de complir-se dues premisses:</p> <ul> <li> <p>Cada camp de la petici\u00f3 ha de tindre associat un camp del mateix nom en el model.</p> </li> <li> <p>Hem de definir en el model una propietat anomenada \\$fillable amb els noms dels camps de la petici\u00f3 que ens interessa processar (la resta es descarten). Aix\u00f2 \u00e9s obligatori especificar-ho, encara que ens interessen tots els camps, per a evitar insercions massives malintencionades (per exemple , editant el codi font per a afegir altres camps i modificar dades inesperades).</p> </li> </ul> <pre><code>class movie extends Model\n{\nprotected $fillable = ['titulo', 'director', 'precio'];\n}\n</code></pre> <p>Aquest codi d'inserci\u00f3 (o b\u00e9 camp a camp, o usant el m\u00e8tode all ) se sol posar en el m\u00e8tode store del controlador, perqu\u00e8 reba les dades del formulari d'inserci\u00f3 i la fa\u00e7a en la base de dades .Ho acabarem de veure quan abordem el tema dels formularis.</p>"},{"location":"07laravelModelsDades.html#modificar-dades","title":"Modificar dades","text":"<p>La modificaci\u00f3 consisteix en dos passos:</p> <ul> <li>Trobar l'objecte a modificar (buscant-lo per l'id amb findOrFail() , per exemple, com s'ha explicat abans).</li> <li>Modificar les propietats que es necessiten, i cridar al m\u00e8tode save() de l'objecte per a guardar els canvis.</li> </ul> <p><pre><code>$movieAModificar = movie::findOrFail($id);\n$movieAModificar-&gt;titulo=\"Otro t\u00edtulo\";\n$movieAModificar-&gt;save();\n</code></pre> Tamb\u00e9 podem utilitzar el m\u00e8tode update enlla\u00e7at amb findOrFail , i passar-li com a par\u00e0metre totes les dades de la petici\u00f3, igual que s'ha explicat per a la inserci\u00f3, i sempre que h\u00e0gem declarat l'atribut \\$fillable en el model per a indicar quins camps s'accepten:</p> <pre><code>movie::findOrFail($id)-&gt;update($request-&gt;all());\n</code></pre>"},{"location":"07laravelModelsDades.html#esborrar-dades","title":"Esborrar dades","text":"<p>Per a esborrar una inst\u00e0ncia d'un model en la base de dades simplement hem d'usar el seu m\u00e8tode delete():</p> <pre><code>    movie::findOrFail($id)-&gt;delete();\n</code></pre> <p>Aix\u00f2 ho farem normalment en el m\u00e8tode destroy del controlador en q\u00fcesti\u00f3. Despr\u00e9s, podem redirigir o renderitzar alguna vista resultat, com el llistat de llibres general per a comprovar que s'ha esborrat.</p> <pre><code>public function destroy($id)\n{\n    movie::findOrFail($id)-&gt;delete();\n    $movies = movie::get();\n    return view('movies.index', compact('movies'));\n}\n</code></pre>"},{"location":"07laravelModelsDades.html#sobre-lesborrat-des-de-les-vistes","title":"Sobre l'esborrat des de les vistes","text":"<p>El normal \u00e9s que l'esborrat s'active fent clic en algun element d'una vista. Per exemple, fent clic en un bot\u00f3 o enlla\u00e7 que pose \"Esborrar\". Tanmateix, si implementem aix\u00f2 aix\u00ed:</p> <pre><code>    &lt;a href=\"{{ \"{{  route('movies.destroy', $movie \" }}}}\"&gt;\nBorrar\n&lt;/a&gt;\n</code></pre> <p>Si volem esborrar el llibre amb id 3, es generar\u00e0 una ruta http://biblioteca/movies/3. Ho podem comprovar passant el ratol\u00ed per l'enlla\u00e7 i veient la barra inferior d'estat del navegador. Aquesta ruta, no obstant aix\u00f2,ens enviar\u00e0 a la fitxa del llibre 3, no a l'esborrat, ja que estem enviant una petici\u00f3 GET, i no una d'esborrat (DELETE). Per a evitar aix\u00f2, l'opci\u00f3 d'esborrat ha de fer-se sempre des d'un formulari, on a trav\u00e9s del helper @method indiquem que \u00e9s una petici\u00f3 d'esborrat (DELETE). Amb el que l'enlla\u00e7 per a esborrar un llibre quedaria aix\u00ed:</p> <pre><code>&lt;form action=\"{{ \"{{  route('movies.destroy', $movie) \" }}}}\" method=\"POST\"&gt;\n    @method('DELETE')\n    @csrf\n    &lt;button&gt;Borrar&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>NOTA el helper @csrf ho veurem amb m\u00e9s detall en parlar de formularis, per\u00f2 s'afig als formularis Laravel per a evitar atacs de tipus cross-site, \u00e9s a dir, accessos a una URL de la nostra web des d'altres webs.</p>"},{"location":"07laravelModelsDades.html#relacions-en-laravel","title":"Relacions en Laravel","text":"<p>Les taules de les bases de dades es relacionen sovint unes amb unes altres. Eloquent facilita la gesti\u00f3 i el treball amb aquestes relacions f\u00e0cilment suportant diversos tipus de relacions diferents:</p> <ul> <li>Un a un \u2013 One to one</li> <li>Un a molts \u2013 One to many</li> <li>Molts a molts \u2013 Many to many</li> <li>Molta a molts mitjan\u00e7ant - Has Many Through</li> </ul> <p>Les relacions entre models Eloquent es defineixen com a m\u00e8todes en les pr\u00f2pies classes. At\u00e8s que, com els propis models Eloquent, les relacions tamb\u00e9 serveixen com a poderosos query builders, la definici\u00f3 de relacions com a m\u00e8todes proporciona potents funcions d'encadenament i consulta de m\u00e8todes.</p>"},{"location":"07laravelModelsDades.html#un-a-un","title":"Un a Un","text":"<p>Suposem que tenim dos models Usuario i Telefono , de manera que podem establir una relaci\u00f3 un a un entre ells: un usuari t\u00e9 un tel\u00e8fon, i un tel\u00e8fon pertany a un usuari. Per a reflectir aquesta relaci\u00f3 en taules, una de les dues hauria de tindre una refer\u00e8ncia a l'altra. En aquest cas, podr\u00edem tindre un camp usuari_id en la taula de telefonos que indique a qui pertany aquest tel\u00e8fon. \u00c9s important que el camp es diga usuari_id , com veurem a continuaci\u00f3. Per a indicar que un usuari t\u00e9 un tel\u00e8fon, afegim un nou m\u00e8tode en el model d'Usuari , que es cride igual que el model amb el qual volem connectar ( telefono , en aquest cas):</p> <pre><code>class Usuario extends Model\n{\n    public function telefono()\n    {\n        return $this-&gt;hasOne('App\\Models\\Telefono');\n    }\n}\n</code></pre> <p>Ara, si volem obtindre el tel\u00e8fon d'un usuari, n'hi ha prou que fem aix\u00f2:</p> <p>$telefono = Usuario::findOrFail($id)-&gt;telefono;</p> <p>Hem emprat una caracter\u00edstica de Eloquent denominada propietats din\u00e0miques, per la qual podem referenciar un m\u00e8tode de relaci\u00f3 com si f\u00f3ra una propietat (en lloc d'usar telefono() , hem emprat telefono ). La instrucci\u00f3 anterior obt\u00e9 l'objecte Telefono associat amb l'usuari buscat (a trav\u00e9s del \\$id de l'usuari). Perqu\u00e8 aquesta associaci\u00f3 tinga efecte, cal que en la taula telefonos existisca un camp usuario_id i que es corresponga amb un camp id de la taula d'usuaris , de manera que Eloquent estableix la connexi\u00f3 entre una i una altra taula. Haurem de definir una nova migraci\u00f3 de modificaci\u00f3 sobre la taula telefonos per a afegir aqueix nou camp, o refrescar la migraci\u00f3 original amb ell i esborrar els continguts previs. Si volem utilitzar altres camps diferents en una i una altra taula per a connectar-les, hem d'indicar dos par\u00e0metres m\u00e9s en cridar a hasOne . Per exemple, aix\u00ed relacionar\u00edem les dues taules anteriors, indicant que la clau aliena de telefonos \u00e9s idUsuario , i que la clau local a la qual es referencia en usuaris \u00e9s codigo :</p> <pre><code>return $this-&gt;hasOne('App\\Models\\Telefono', 'idUsuario', 'codigo');\n</code></pre> <p>Tamb\u00e9 \u00e9s possible obtindre la relaci\u00f3 inversa, \u00e9s a dir, a partir d'un tel\u00e8fon, obtindre l'usuari al qual pertany. Per a aix\u00f2, afegim un m\u00e8tode en el model Telefono i emprem el m\u00e8tode belongsTo per a indicar a quin model s'associa:</p> <pre><code>class Telefono extends Model\n{\n    public function usuario()\n    {\n        return $this-&gt;belongsTo('App\\Models\\Usuario');\n    }\n}\n</code></pre> <p>Novament, podem especificar altres noms de clau passant par\u00e0metres addicionals a belongsTo , igual que es fa per a hasOne . D'aquesta manera, si volem obtindre l'usuari a partir del tel\u00e8fon, podem fer-lo aix\u00ed:</p> <pre><code>$usuario = Telefono::findOrFail($idTelefono)-&gt;usuario;\n</code></pre>"},{"location":"07laravelModelsDades.html#guardar-dades-relacionades","title":"Guardar dades relacionades","text":"<p>Suposem que volem guardar un usuari amb el seu tel\u00e8fon associat. Podem simplement guardar l'id del tel\u00e8fon com un camp m\u00e9s de l'usuari:</p> <pre><code>// Buscamos el tel\u00e9fono que queremos asociar\n// (suponiendo que existe previamente)\n$telefono = Telefono::findOrFail($idTelefono);\n$usuario = new Usuario();\n$usuario-&gt;nombre = \"Pepe\";\n$usuario-&gt;email = \"pepe@gmail.com\";\n$usuario-&gt;telefono_id = $telefono-&gt;id;\n$usuario-&gt;save();\n</code></pre> <p>Per\u00f2, a m\u00e9s, podem vincular tots dos objectes en la relaci\u00f3, usant el m\u00e8tode associate , d'aquesta manera:</p> <pre><code>// Buscamos el tel\u00e9fono que queremos asociar\n// (suponiendo que existe previamente)\n$telefono = Telefono::findOrFail($idTelefono);\n$usuario = new Usuario();\n$usuario-&gt;nombre = \"Pepe\";\n$usuario-&gt;email = \"pepe@gmail.com\";\n$usuario-&gt;telefono()-&gt;associate($telefono);\n$usuario-&gt;save();\n</code></pre>"},{"location":"07laravelModelsDades.html#un-a-molts","title":"Un a molts","text":"<p>Una relaci\u00f3 \"un-a-molts\" s'usa per a definir relacions en les quals un model \u00fanic posseeix qualsevol quantitat d'altres models. Per exemple: suposem que tenim els models Autor i Llibre , de manera que un autor pot tindre diversos llibres, i un llibre est\u00e0 associat a un autor. La manera d'establir la relaci\u00f3 entre tots dos consistir\u00e0 a afegir en la taula de llibres una clau aliena a l'autor al qual pertany. A l'hora de plasmar aquesta relaci\u00f3 en els models, es fa de manera similar al cas anterior, nom\u00e9s que en lloc d'utilitzar el m\u00e8tode hasOne en la classe Autor usar\u00edem el m\u00e8tode hasMany :</p> <pre><code>class Autor extends Model\n{\n    public function libros()\n    {\n        return $this-&gt;hasMany('App\\Models\\Libro');\n    }\n}\n</code></pre> <p>Igual que ocorria abans, s'assumeix que la taula de llibres t\u00e9 una clau prim\u00e0ria id , i que la clau aliena corresponent cap a la taula d'autors \u00e9s autor_id . En cas contrari, es poden especificar uns altres passant m\u00e9s par\u00e0metres a hasMany . D'aquesta manera obtenim els llibres associats a un autor:</p> <pre><code>$libros = Autor::findOrFail($id)-&gt;libros();\n</code></pre> <p>Finalment, tamb\u00e9 podem establir la relaci\u00f3 inversa, i recuperar l'autor al qual pertany un determinat llibre, definint un m\u00e8tode en la classe Llibre que empre *belongsTo , com en les relacions un a un:</p> <pre><code>class Libro extends Model\n{\n    public function autor()\n    {\n        return $this-&gt;belongsTo('App\\Models\\Autor');\n    }\n}\n</code></pre> <p>I obtindre, per exemple, el nom de l'autor a partir del llibre:</p> <pre><code>$nombreAutor = Libro::findOrFail($id)-&gt;autor-&gt;nombre;\n</code></pre>"},{"location":"07laravelModelsDades.html#acces-eficient-a-dades-relacionades-eager-loading","title":"Acc\u00e9s eficient a dades relacionades. Eager loading","text":"<p>Si en una vista Blade, accedim al nom de l'autor de esta manera:</p> <p><pre><code>{{  $libro-&gt;autor-&gt;nombre }}\n</code></pre> aquest codi provoca una nova consulta en la base de dades per a buscar les dades de l'autor associat al llibre, al que, per a un llistat de 100 llibres, estarem fent 100 consultes addicionals per a extraure la informaci\u00f3 dels respectius autors. Per a evitar aquesta sobrec\u00e0rrega, podem emprar una t\u00e8cnica anomenada eager loading (que en valenci\u00e0 podr\u00edem traduir com a c\u00e0rrega precipitada o impacient). Consisteix a emprar el m\u00e8tode with per a indicar quina relaci\u00f3 volem deixar pre-carregada en el resultat. Per exemple, si indiquem una cosa aix\u00ed en la funci\u00f3 index del controlador de llibres:</p> <pre><code>public function index()\n{\n    $libros = Libro::with('autor')-&gt;get();\n    return view('libros.index', compact('libros'));\n}\n</code></pre>"},{"location":"07laravelModelsDades.html#molts-a-molts-many-to-many","title":"Molts a molts \u2013 Many to many","text":"<p>Les relacions molts-a-molts s\u00f3n una mica m\u00e9s complicades que les hasOne o les hasMany. Un exemple de tal relaci\u00f3 \u00e9s un usuari que cont\u00e9 diversos rols, on els rols s\u00f3n compartits per altres usuaris. Per exemple, diversos usuaris poden tenir el rol de \"Admin\". Per a definir aquesta relaci\u00f3, es requereixen tres taules de la base de dades: users, rols, i role_user. La taula role_user \u00e9s derivada de l'ordre alfab\u00e8tic dels noms dels models relacionats i cont\u00e9 les columnes user_id i role_id.</p> <p>Les relacions molts-a-molts es defineixen amb un m\u00e8tode que retorna el resultat del m\u00e8tode belongsToMany. Per exemple, definir el m\u00e8tode rols en el model User:</p> <pre><code>    class User extends Model\n    {\n        /\n          The roles that belong to the user.\n         /\n        public function roles()\n        {\n            return $this-&gt;belongsToMany('App\\Models\\Role');\n        }\n    }\n</code></pre> <p>Una vegada definida la relaci\u00f3, es pot accedir als rols de l'usuari usant la propietat din\u00e0mica rols:</p> <pre><code>    $roles = App\\User::find($id)-&gt;roles;\n</code></pre> <p>Per a definir la inversa d'una relaci\u00f3 de molts a molts, simplement cal posar una altra cridada a belongsToMany en el model relacionat. </p> <pre><code>class Rol extends Model\n{\n    public function usuarios()\n    {\n        return $this-&gt;belongsToMany('App\\Models\\Usuario');\n    }\n}\n</code></pre> <p>A l'efecte d'automatitzaci\u00f3, \u00e9s a dir, perqu\u00e8 Eloquent establisca els nexes de manera autom\u00e0tica, si volem establir una relaci\u00f3 molts a molts entre un model A i un altre B , s'assumeix que existir\u00e0 una altra taula a_b (l'ordre en qu\u00e8 es col\u00b7loquen els noms de les taules \u00e9s alfab\u00e8tic), amb els camps a_id i b_id , que relacionen els dos models. En este cas, s'assumir\u00e0 que existeix una taula rol_usuari amb un camp rol_id i un altre anomenat usuario_id , que enllacen amb els corresponents id de les taules d'usuaris i rols. Si aix\u00f2 no f\u00f3ra aix\u00ed, podem passar m\u00e9s par\u00e0metres a belongsToMany per a indicar-ho.</p> <p>En el cas de les relacions molts a molts, \u00e9s possible que ens interesse accedir a alguna dada d'aqueixa taula interm\u00e8dia que els relaciona. En aqueix cas, fem \u00fas de l'atribut pivot , predefinit, i que apunta a la taula o model intermedi entre els dos relacionats. Per exemple, si volgu\u00e9rem obtindre la data de creaci\u00f3 de la relaci\u00f3 entre un usuari i un rol, podr\u00edem fer aix\u00f2:</p> <pre><code>$roles = Usuario::findOrFail($id)-&gt;roles;\nfor($roles as $rol)\n{\n    echo $rol-&gt;pivot-&gt;created_at;\n}\n</code></pre> <p>Per defecte, nom\u00e9s les claus del model estaran presents en l'objecte pivot. Si la taula pivot cont\u00e9 atributs addicionals, s'han d'especificar en definir la relaci\u00f3:</p> <pre><code>    return $this-&gt;belongsToMany('App\\Role')-&gt;withPivot('column1', 'column2');\n</code></pre> <p>Si es desitja que els camps crated_at i updated_at es mantinguen de forma autom\u00e0tica, cal utilitzar el m\u00e8tode withTimestamps en definir la relaci\u00f3:</p> <pre><code>    return $this-&gt;belongsToMany('App\\Role')-&gt;withTimestamps();\n</code></pre>"},{"location":"07laravelModelsDades.html#filtrant-relacions-via-columnes-de-taula-intermedia","title":"Filtrant Relacions Via Columnes de Taula Interm\u00e8dia","text":"<p>Tamb\u00e9 pots filtrar els resultats van retornar per belongsToMany utilitzant el wherePivot i wherePivotIn m\u00e8todes quan definint la relaci\u00f3:</p> <pre><code>    retorn $this-&gt;belongsToMany('App\\Notes')-&gt;wherePivot('aprovat', 1);\n</code></pre>"},{"location":"07laravelModelsDades.html#seeders-i-factories","title":"Seeders i factories","text":"<p>En les proves que hem fet fins ara, per a tindre dades amb qu\u00e8 provar l'aplicaci\u00f3, ens hem limitat a afegir-los a m\u00e0 des de phpMyAdmin. At\u00e9s que les dades d'inici s\u00f3n necessaris per a provar algunes funcionalitats b\u00e0siques de l'aplicaci\u00f3, com s\u00f3n les cerques i filtrats, i at\u00e9s que els formularis per a donar d'alta i gestionar aquestes dades normalment no es tenen llestos fins a etapes m\u00e9s tardanes, pot resultar convenient disposar d'algun mecanisme que genere aquestes dades de prova a l'inici, sense preocupar-nos de tocar la base de dades a m\u00e0 o alterar el codi de l'aplicaci\u00f3 per a aix\u00f2. En aquest aspecte, els seeders i factories juguen un paper important.</p>"},{"location":"07laravelModelsDades.html#los-seeds","title":"Los seeds","text":"<p>Els seeders s\u00f3n classes especials que permeten sembrar (seed) de contingut una aplicaci\u00f3. Per a crear-los, utilitzem el comando php artisan com segueix:</p> <p>php artisan make:seeder NombreSeeder</p> <p>Aix\u00f2 crear\u00e0 una classe anomenada NombreSeeder en la carpeta database/seeders. En el m\u00e8tode run d'aquesta classe podem crear els elements que necessitem afegir a la base de dades. Per exemple, per a emplenar un taula de llibres podem fer un LibrosSeeder:</p> <pre><code>php artisan make:seeder LibrosSeeder\n</code></pre> <p>Editem el m\u00e8tode run del seeder que hem creat, i definim aquest codi per a crear un autor amb un llibre associat (haurem d'incorporar amb use els models d'Autor i Llibre pr\u00e8viament):</p> <pre><code>public function run()\n{\n    $autor = new Autor();\n$autor-&gt;nombre = \"Juan Seeder\";\n$autor-&gt;nacimiento = 1960;\n$autor-&gt;save();\n$libro = new Libro();\n$libro-&gt;titulo = \"El libro del Seeder\";\n$libro-&gt;editorial = \"Seeder S.A.\";\n$libro-&gt;precio = 10;\n$libro-&gt;autor()-&gt;associate($autor);\n$libro-&gt;save();\n}\n</code></pre>"},{"location":"07laravelModelsDades.html#afegint-els-seeders-a-laplicacio","title":"Afegint els seeders a l'aplicaci\u00f3","text":"<p>Per defecte, els seeders que creguem no formen part de l'aplicaci\u00f3 encara, en el sentit que encara no els podem executar. Per a aix\u00f2, hem de donar-los d'alta en el seeder general, anomenat DatabaseSeeder* , situat en la mateixa carpeta que els seeders que definim:</p> <pre><code>class DatabaseSeeder extends Seeder\n{\n    public function run()\n    {\n        ...\n        $this-&gt;call(LibrosSeeder::class);\n    }\n}\n</code></pre>"},{"location":"07laravelModelsDades.html#llancant-els-seeders","title":"Llan\u00e7ant els seeders","text":"<p>Si nom\u00e9s volem executar aquest *seeder perqu\u00e8 afija les dades, emprarem aquest comando:</p> <pre><code>php artisan db:seed\n</code></pre> <p>Aix\u00f2 llan\u00e7ar\u00e0 tots els seeders que tinguem declarats en la classe DatabaseSeeder . Si nom\u00e9s volem llan\u00e7ar un en concret, podem fer el seg\u00fcent:</p> <pre><code>php artisan db:seed --class=LibrosSeeder\n</code></pre> <p>Tamb\u00e9 pot ser necessari (i a vegades convenient) netejar la base de dades i omplir-la des de zero amb les dades dels seeds per a comen\u00e7ar a provar l'aplicaci\u00f3. En aquest cas, el comando \u00e9s el seg\u00fcent:</p> <pre><code>php artisan migrate:fresh --seed\n</code></pre>"},{"location":"07laravelModelsDades.html#els-factories","title":"Els factories","text":"<p>Els seeders s\u00f3n una eina \u00fatil per a poblar la nostra aplicaci\u00f3 amb dades a l'inici. Podem, per exemple , donar d'alta una s\u00e8rie d'usuaris inicials amb acc\u00e9s a l'aplicaci\u00f3, perqu\u00e8 amb ells es puguen emplenar la resta de dades. Tamb\u00e9 podem donar d'alta una s\u00e8rie de dades predefinides en unes certes taules, o dades de prova que despr\u00e9s poder esborrar. No obstant aix\u00f2, els seeders per si sols es queden una mica \"coixos\". Qu\u00e8 haur\u00edem de fer per a donar d'alta 10 o 20 llibres en la nostra taula. Haur\u00edem de definir algun tipus de bucle en el seeder, i definir dades diferents (per exemple, amb identificadors o comptadors aleatoris) per a cada llibre. Per a facilitar aquesta tasca, podem tirar m\u00e0 dels factories.</p> <p>Els factories s\u00f3n classes que permeten generar dades per lots. Es creen amb el seg\u00fcent comando, emmagatzemant-se la classe en la carpeta database/factories :</p> <pre><code>php artisan make:factory NombreFactory\n</code></pre> <p>Per exemple, anem a crear un factori per crear autors:</p> <pre><code>php artisan make:factory AutorFactory\n</code></pre> <p>Un dels canvis importants que ha portat la versi\u00f3 8 de Laravel \u00e9s que ara els factories estan orientats a objectes, per la qual cosa s'engloben en classes. A m\u00e9s, per defecte s'associen als models que creguem, de manera que podem generar una factoria d'objectes a partir d'una classe, com veurem a continuaci\u00f3. Per aquest motiu, quan creguem un model s'afig una cl\u00e0usula use indicant que empra el trait HasFactory.</p> <pre><code>class Libro extends Model\n{\nuse HasFactory;\n...\n}\n</code></pre> <p>Un trait b\u00e0sicament \u00e9s un conjunt de m\u00e8todes que es pot emprar per qualsevol classe que vulga utilitzar-los. D'aquesta manera, s'esmorteeix en part la limitaci\u00f3 de nom\u00e9s poder heretar d'una classe, i mitjan\u00e7ant aquests traits podem incorporar la funcionalitat d'unes altres.</p> <p>Quan creem una factoria en Laravel 8 emprant el comando php artisan make:factory comentat anteriorment, obtindrem una classe amb el nom que h\u00e0gem indicat, en la carpeta database/factories . Per exemple:</p> <p><pre><code>namespace Database\\Factories;\nuse App\\Models\\Autor;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\nclass AutorFactory extends Factory\n{\n    /**\n    * The name of the factory's corresponding model.\n    *\n    * @var string\n    */\n    protected $model = Autor::class;\n        /**\n        * Define the model's default state.\n        *\n        * @return array\n        */\n        public function definition()\n        {\n            return [\n                //\n            ];\n    }\n}\n</code></pre> Ara haurem d'emplenar el m\u00e8tode definition amb les dades que vulguem generar per a cada objecte que es cree. Per exemple, aix\u00ed emprar\u00edem el faker (ara autom\u00e0ticament incorporat en el propi objecte \\$this ), per a generar dades a l'atzar per als autors:</p> <pre><code>public function definition()\n{\n    return [\n        'nombre' =&gt; $this-&gt;faker-&gt;name,\n        'nacimiento' =&gt; $this-&gt;faker-&gt;numberBetween(1950, 1990)\n    ];\n}\n</code></pre> <p>Finalment, en el seeder corresponent, podem utilitzar aquest factory per a generar N objectes del model associat. Per exemple:</p> <pre><code>class AutoresSeeder extends Seeder\n{\n    public function run()\n    {\n        Autor::factory()-&gt;count(5)-&gt;create();\n    }\n}\n</code></pre> <p>Per a generar dades relacionades entre models (per exemple, llibres amb els seus autors), procedim igual queen les versions anteriors de Laravel, per\u00f2 tenint en compte que per a cridar a la factoria s'ha d'utilitzar el m\u00e8tode est\u00e0tic del model associat. Per exemple:</p> <pre><code>class LibrosSeeder extends Seeder\n{\n    public function run()\n    {\n        $autores = Autor::all();\n        $autores-&gt;each(function($autor) {\n            Libro::factory()-&gt;count(2)-&gt;create([\n'autor_id' =&gt; $autor-&gt;id]);\n        });\n    }\n}\n</code></pre>"},{"location":"07laravelModelsDades.html#query-builder","title":"Query Builder","text":"<p>Laravel inclou una s\u00e8rie de classes que ens facilita la construcci\u00f3 de consultes i un altre tipus d'operacions amb la base de dades. A m\u00e9s, en utilitzar aquestes classes, vam crear una notaci\u00f3 molt m\u00e9s llegible, compatible amb tots els tipus de bases de dades suportats per Laravel i que ens prev\u00e9 de cometre errors o d'atacs per injecci\u00f3 de codi SQL.</p>"},{"location":"07laravelModelsDades.html#consultes","title":"Consultes","text":"<p>Per a realitzar una \"Select\" que retorne totes les files d'una taula utilitzarem el seg\u00fcent codi:</p> <pre><code>    $users = DB::table('users')-&gt;get();\n    foreach ($users as $user) {\n        echo $user-&gt;name; \n    }\n</code></pre> <p>En l'exemple s'utilitza el constructor DB::taula indicant el nom de la taula sobre la qual es va a realitzar la consulta, i finalment es diu al m\u00e8tode get() per a obtenir totes les files de la mateixa.</p> <p>Si volem obtenir un sol element podem utilitzar first en lloc de get, de la forma: </p> <pre><code>    $user = DB::table('users')-&gt;first();\n</code></pre>"},{"location":"07laravelModelsDades.html#clausula-where","title":"Clausula where","text":"<p>Per a filtrar les dades usem la clausula where, indicant el nom de la columna i el valor a filtrar:</p> <pre><code>    $user = DB::table('users')-&gt;where('name','Pedro')-&gt;get();\n</code></pre> <p>En aquest exemple, la clausula where filtrar\u00e0 totes les files la columna de les quals name siga igual a Pedro. Si volem realitzar un altre tipus de filtrats, com a columnes que tinguen un valor major (&gt;), major o igual (&gt;=), menor (&lt;), menor o igual (&lt;=), diferent de l'indicat (&lt;&gt;) o usar l'operador like, ho podem indicar com a segon par\u00e0metre de la forma:</p> <pre><code>    $users = DB::table('users')-&gt;where('votes', '&gt;', 100)-&gt;get(); \n    $users = DB::table('users')-&gt;where('status', '&lt;&gt;', 'active')-&gt;get();\n    $users = DB::table('users')-&gt;where('name', 'like', 'T%')-&gt;get();\n</code></pre> <p>Si afegim m\u00e9s clausulas where a la consulta per defecte s'uniran mitjan\u00e7ant l'operador l\u00f2gic AND. En cas que vulguem utilitzar l'operador l\u00f2gic OR ho haurem de realitzar usant orWhere de la forma:</p> <pre><code>    $users = DB::table('users') -&gt;where('votes', '&gt;', 100)-&gt;orWhere('name', 'Pedro') -&gt;get();\n</code></pre>"},{"location":"07laravelModelsDades.html#orderby-groupby-having","title":"orderBy / groupBy / having","text":"<p>Tamb\u00e9 podem utilitzar els m\u00e8todes orderBy, groupBy i having en les consultes:</p> <pre><code>    $users = DB::table('users') -&gt;orderBy('name', 'desc')-&gt;groupBy('count') -&gt;having('count', '&gt;', 100)-&gt;get();\n</code></pre>"},{"location":"07laravelModelsDades.html#offset-limit","title":"Offset / Limit","text":"<p>Si volem indicar un offset o limit ho realitzarem mitjan\u00e7ant els m\u00e8todes skip (per a l'offset) i take (para limit), per exemple:</p> <pre><code>    $users = DB::table('users')-&gt;skip(10)-&gt;take(5)-&gt;get();\n</code></pre>"},{"location":"07laravelModelsDades.html#transaccions","title":"Transaccions","text":"<p>Laravel tamb\u00e9 permet crear transaccions sobre un conjunt d'operacions:</p> <pre><code>    DB::transaction(function() {\n        DB::table('users')-&gt;update(array('votes' =&gt; 1));\n        DB::table('posts')-&gt;delete(); \n    });\n</code></pre> <p>En cas que es produ\u00efsca qualsevol excepci\u00f3 en les operacions que es realitzen en la transacci\u00f3 es desfarien tots els canvis aplicats fins a aqueix moment de forma autom\u00e0tica.</p>"},{"location":"07laravelModelsDades.html#us-de-dates","title":"Us de dates","text":"<p>En algunes taules que hem vist o creat, s'ha usat un tipus timestamp, que b\u00e0sicament genera un tipus data en la taula corresponent. Aquests camps de tipus taula s\u00f3n inst\u00e0ncies d'una llibreria PHP anomenada Carbon, molt \u00fatil per a treballar amb dates. Aix\u00ed que, si tenim un registre de tipus Persona amb un camp created_at de tipus data, podem treballar amb ell com una data Carbon, i, per exemple, mostrar-la en una vista amb un format espec\u00edfic:</p> <p>Fecha creaci\u00f3n: {{ \"{{ Carbon\\Carbon::parse($persona-&gt;created_at)-&gt;format('d/m/Y) \" }}}}</p> <p>A m\u00e9s, per a treballar sobre els camps created_at i updated_at que per defecte es creen en una taula des d'una migraci\u00f3 Laravel, podem emprar aquesta llibreria Carbon per a donar-los valor, encara que d'aix\u00f2 ja s'encarrega Eloquent autom\u00e0ticament, per\u00f2 per si ho volem fer manualment, ac\u00ed va un exemple:</p> <pre><code>DB::table('personas')-&gt;insert([\n'nombre' =&gt; 'Juan',\n'edad' =&gt; 56,\n'created_at' =&gt; Carbon::now(),\n'updated_at' =&gt; Carbon::now()\n]);\n</code></pre> <p>Per a poder emprar la classe Carbon , hem d'importar-la ( use Carbon\\Carbon ).</p>"},{"location":"07laravelModelsDades.html#addendum-sobre-relacions","title":"Addendum sobre relacions","text":""},{"location":"07laravelModelsDades.html#has-many-through","title":"Has Many Through","text":"<p>El \"Has Many Through\" proporciona una drecera convenient per accedir relacions distants via una relaci\u00f3 interm\u00e8dia.Per exemple, un model Country, pot tenir molts models Post a trav\u00e9s d'un model intermedi User. En aquest exemple, es podria reunir f\u00e0cilment tots els missatges d'un blog per a un pa\u00eds determinat. Fem una ullada a les taules per a definir aquesta relaci\u00f3:</p> <p>countries id - integer name - string</p> <p>users id - integer country_id - integer name - string</p> <p>posts id - integer user_id - integer title - string</p> <p>Encara que Post no cont\u00e9 una columna country_id, la relaci\u00f3 hasManyThrough proporciona acc\u00e9s als missatges d'un pa\u00eds via \\$country-&gt;posts.</p> <p>Per a realitzar aquesta consulta, Eloquent inspecciona country_id en la taula interm\u00e8dia users. Despr\u00e9s de trobar els IDs d'usuaris coincidents, seran usats per a la consulta a la taula posts.</p> <p>Ara que s'ha examinat l'estructura de la taula per a la relaci\u00f3, es va a definir sobre el model Country:</p> <pre><code>    class Country extends Model\n    {\n        /*\n         * Get all of the posts for the country.\n         */\n        public function posts()\n        {\n            return $this-&gt;hasManyThrough('App\\Post', 'App\\User');\n        }\n    }\n</code></pre> <p>El primer par\u00e0metre passat al m\u00e8tode hasManyThrough \u00e9s el nom del model final al que es desitja accedir, mentre que el segon par\u00e0metre \u00e9s el nom del model intermedi.</p> <p>Els convenis t\u00edpics per a claus de Eloquent seran usats per a realitzar les consultes de la relaci\u00f3. Si es desitja personalitzar les claus de la relaci\u00f3, es pot fer pels par\u00e0metres tercer i quart al m\u00e8tode hasManyThrough. El tercer par\u00e0metre \u00e9s el nom de la clau aliena del model intermediari. El quart par\u00e0metre correspon amb el nom de la clau aliena del model final. El cinqu\u00e8 argument \u00e9s la clau local, mentre que el sis\u00e8 \u00e9s la clau local del model intermedi:</p> <pre><code>    class Country extends Model\n    {\n        public function posts()\n        {\n            return $this-&gt;hasManyThrough(\n                'App\\Post',\n                'App\\User',\n                'country_id', // Foreign key on users table...\n                'user_id', // Foreign key on posts table...\n                'id', // Local key on countries table...\n                'id' // Local key on users table...\n            );\n        }\n    }\n</code></pre>"},{"location":"07laravelModelsDades.html#consultar-lexistencia-de-relacions","title":"Consultar l'Exist\u00e8ncia de Relacions","text":"<p>Quan s'accedeixen als registres d'un model, es poden limitar els resultats basats en l'exist\u00e8ncia d'una relaci\u00f3. Per exemple, imaginar que es desitja obtenir tots els posts que continguen almenys un comentari. Per a a\u00e7\u00f2, es passaria el nom de la relaci\u00f3 al m\u00e8tode has o a orHas:</p> <pre><code>    // Retrieve all posts that have at least one comment...\n    $posts = App\\Post::has('comments')-&gt;get();\n</code></pre> <p>A m\u00e9s es pot especificar un operador i un comptador per a personalitzar la consulta:</p> <pre><code>    // Retrieve all posts that have three or habite comments...\n    $posts = Post::has('comments', '&gt;=', 3)-&gt;get();\n</code></pre> <p>Es poden nigar estructures has utilitzant la notaci\u00f3 de \"punts\". Per exemple, es podrien obtenir tots els posts que tenen almenys un comentari i un vot:</p> <pre><code>    // Retrieve all posts that have at least one comment with votes\n    $posts = Post::has('comments.votes')-&gt;get();\n</code></pre> <p>Si es necessita encara m\u00e9s control, es poden utilitzar els m\u00e8todes whereHas i orWhereHas per a incloure condicions \"where\" en les consultes has. Aquests m\u00e8todes permeten afegir restricciones personalitzades a una relaci\u00f3, aix\u00ed com comprovar el contingut d'un comentari:</p> <pre><code>    // Retrieve all posts with at least one comment containing words like foo%\n    $posts = Post::whereHas('comments', function ($query) {\n        $query-&gt;where('content', 'like', 'foo%');\n    })-&gt;get();\n</code></pre> <p>Quan s'accedeixen als registres d'un model, es poden limitar els resultats basats en la inexist\u00e8ncia d'una relaci\u00f3. Per exemple, imaginar que es desitja obtenir tots els posts que no continguen almenys un comentari. Per a a\u00e7\u00f2, es passaria el nom de la relaci\u00f3 al m\u00e8tode doesntHave o a orDoesntHave:</p> <pre><code>    $posts = App\\Post::doesntHave('comments')-&gt;get();\n</code></pre>"},{"location":"07laravelModelsDades.html#insertant-i-modificant-models-rellacionats","title":"Insertant i modificant Models rel.lacionats","text":""},{"location":"07laravelModelsDades.html#el-metode-save","title":"El m\u00e8tode Save","text":"<p>Eloquent proveeix m\u00e8todes convenients per a l'addici\u00f3 de nous models a les relacions. Per exemple, potser necessite inserir un nou Comment a un model Post. En lloc de configurar manualment l'atribut post_id en el Comment, pot inserir el Comment directament des del m\u00e8tode save de la relaci\u00f3:</p> <pre><code>$comment = new App\\Comment(['message' =&gt; 'A new comment.']);\n$post = App\\Post::find(1);\n$post-&gt;comments()-&gt;save($comment);\n</code></pre> <p>Note's que no accedim als comments de la relaci\u00f3 com una propietat din\u00e0mica. En el seu lloc, cridem al m\u00e8tode comments per a obtenir una inst\u00e0ncia de la relaci\u00f3. El m\u00e8tode save agregar\u00e0 autom\u00e0ticament el valor post_id apropiat al nou model Comment.</p> <p>Si necessitem gravar multiples models relacionats, pot usar el m\u00e8tode saveMany</p> <pre><code>    $post = App\\Post::find(1);\n\n    $post-&gt;comments()-&gt;saveMany([\n        new App\\Comment(['message' =&gt; 'A new comment.']),\n        new App\\Comment(['message' =&gt; 'Another comment.']),\n    ]);\n</code></pre>"},{"location":"07laravelModelsDades.html#el-metode-create","title":"El m\u00e8tode Create","text":"<p>A m\u00e9s dels m\u00e8todes save i saveMany, es pot utilitzar tamb\u00e9 el m\u00e8tode create, eque accepta una matriu d'atributs, crea el model i ho insereix en la base de dades. De nou, la difer\u00e8ncia entre save i create \u00e9s que save accepta una inst\u00e0ncia d'un model complet de Eloquent mentre que create accepta una matriu de PHP:</p> <pre><code>    $post = App\\Post::find(1);\n\n    $comment = $post-&gt;comments()-&gt;create([\n        'message' =&gt; 'A new comment.',\n    ]);\n</code></pre> <p>Abans d'utilitzar el crear m\u00e8tode, revisa la documentaci\u00f3 d'assignment masssiu. Pots utilitzar el createMany m\u00e8tode per crear el m\u00faltiple va relacionar models:</p> <pre><code>    $post = App\\Post::find(1);\n    $post-&gt;comments()-&gt;createMany([\n        [\n            'message' =&gt; 'A new comment.',\n        ],\n        [\n            'message' =&gt; 'Another new comment.',\n        ],\n    ]);\n</code></pre>"},{"location":"07laravelModelsDades.html#belongs-to-relationships","title":"Belongs To Relationships","text":"<p>Quan actualitzem una relaci\u00f3 belongsTo, utilitzaem el m\u00e8tode associate. Aquest m\u00e8tode establir\u00e0 la clau for\u00e0nia en el model fill.</p> <pre><code>$account = App\\Account::find(10);\n$user-&gt;account()-&gt;associate($account);\n$user-&gt;save();\n</code></pre> <p>Per a llevar-la, pots utilitzar el m\u00e8tode dissociate. Aquest m\u00e8tode posar\u00e0 la clau for\u00e0nia de la relaci\u00f3 a null:</p> <pre><code>$user-&gt;account()-&gt;dissociate();\n$user-&gt;save();\n</code></pre>"},{"location":"07laravelModelsDades.html#relacions-molts-a-molts","title":"Relacions Molts a Molts","text":""},{"location":"07laravelModelsDades.html#adjuntar-separar-attaching-detaching","title":"Adjuntar / Separar (Attaching / Detaching)","text":"<p>Eloquent tamb\u00e9 proporciona uns quants helpers addicionals helper m\u00e8todes per fer que treballen amb va relacionar models habite convenient. Per exemple, imaginar que un usuari pot tenir diversos rols i un rol pot tenir diversos usuaris. Per un adjuntar un rol un un usuari inserint un registre en la taula interm\u00e8dia que uneix els models, utilitzar el m\u00e8tode attach:</p> <pre><code>$user = App\\User::find(1);\n$user-&gt;rols()-&gt;attach($roleId);\n</code></pre> <p>Quan s'adjunta una relaci\u00f3 a un model, es pot passar a m\u00e9s un array de dades addicional per a inserir-ho en la taula interm\u00e8dia:</p> <pre><code>$user-&gt;rols()-&gt;attach($roleId, ['expires' =&gt; $expires]);\n</code></pre> <p>Per descomptat, a voltes \u00e9s necessari eliminar un rol d'un usuari. Per a eliminar un registre d'una relaci\u00f3 molts-a-molts, utilitzar el m\u00e8tode detach. El m\u00e8tode detach eliminar\u00e0 el registre apropiat de la taula interm\u00e8dia; no obstant a\u00e7\u00f2, tots dos models romandran en la base de dades:</p> <pre><code>// Detach a single role from the user...\n$user-&gt;rols()-&gt;dettach($roleId);\n\n// Detach all rols from the user...\n$user-&gt;rols()-&gt;dettach();\n</code></pre> <p>Per comoditat, attach i dettach accepten a m\u00e9s un array de IDs com a entrada:</p> <pre><code>$user = App\\User::find(1);\n\n$user-&gt;rols()-&gt;detach([1, 2, 3]);\n\n$user-&gt;rols()-&gt;attach([\n    1 =&gt; ['expires' =&gt; $expires],\n    2 =&gt; ['expires' =&gt; $expires]\n]);\n</code></pre>"},{"location":"07laravelModelsDades.html#guardant-dades-addicional-en-la-taula-pivot","title":"Guardant dades addicional en la taula pivot","text":"<p>Quan treballem amb una relaci\u00f3 molts-a-molts, el m\u00e8tode Save accepta , com a segon argument, una matriu de attributes de la taula annexa (taula pivot)</p> <pre><code>App\\User::find(1)-&gt;rols()-&gt;save($role, ['expires' =&gt; $expires]);\n</code></pre>"},{"location":"07laravelModelsDades.html#modificant-un-registre-en-la-taula-pivot","title":"Modificant un registre en la taula Pivot","text":"<p>Si necessites actualitzar una fila en el taula pivot, pots utilitzar el m\u00e8tode updateExistingPivot. Aquest m\u00e8tode accepta la clau for\u00e0nia i una varietat d'atributs per actualitzar:</p> <pre><code>$user = App\\User::find(1);\n$user-&gt;rols()-&gt;updateExistingPivot($roleId, $attributes);\n</code></pre> <p>Consulta documentaci\u00f3n</p>"},{"location":"07laravelModelsDades.html#exercicis","title":"Exercicis","text":""},{"location":"07laravelModelsDades.html#exercisi-721","title":"Exercisi 721:","text":"<p>Sobre el projecte blog de la sessi\u00f3 anterior, afegirem aquests canvis:</p> <ul> <li> <p>Crea una base de dades anomenada blog en el teu servidor de bases de dades a trav\u00e9s de phpMyAdmin. Modifica tamb\u00e9 l'arxiu .env del projecte per a accedir a aquesta base de dades amb les credencials adequades.</p> </li> <li> <p>Crea una nova migraci\u00f3 anomenada crear_taula_posts , que crear\u00e0 una taula anomenada posts amb aquests camps:</p> <ul> <li>Id autonum\u00e9rico</li> <li>Titol del post (string )</li> <li>Contingut del post (text )</li> <li>Timestamps per a gestionar autom\u00e0ticament la data de creaci\u00f3 o modificaci\u00f3 del post</li> </ul> </li> <li> <p>Llan\u00e7a les migracions i comprova que es creen les taules corresponents amb els camps associats en la base de dades.    </p> </li> </ul>"},{"location":"07laravelModelsDades.html#exercisi-722","title":"Exercisi 722:","text":"<p>Continuem amb el projecte blog anterior. Crea un nou model anomenat Post per als posts del nostre blog. Ha de quedar  juntament amb el model d'Usuari a la subcarpeta App\\Models del projecte. Despr\u00e9s, modifica els m\u00e8todes del controlador PostController creat en exercisis anteriors, d'aquesta manera:</p> <ul> <li>El m\u00e8tode index ha d'obtindre tots els posts de la taula, i mostrar la vista posts.index amb aqueix llistat de posts.<ul> <li>La vista posts.index , per part seua, rebr\u00e0 el llistat de posts i mostrar\u00e0 els t\u00edtols de cadascun, i un bot\u00f3 Veure per a mostrar la seua fitxa ( posts.show ).</li> <li>Has de mostrar el llistat de posts ordenat per t\u00edtol en ordre ascendent, i paginat de 5 en 5.</li> </ul> </li> <li>El m\u00e8tode show ha d'obtindre el post que el seu id es passar\u00e0 com a par\u00e0metre, i mostrar-lo en la vista posts.show .<ul> <li>La vista posts.show rebr\u00e0 l'objecte amb el post a mostrar, i mostrarem el t\u00edtol,contingut i data de creaci\u00f3 del post, amb el format que vulgues.</li> </ul> </li> <li>El m\u00e8tode destroy eliminar\u00e0 el post que el seu id rebr\u00e0 com a par\u00e0metre, i retornar\u00e0 la vista posts.index amb el llistat actualitzat. Per a provar aquest m\u00e8tode, recorda que has de definir un formulari en una vista (el pots fer per a cada post mostrat en la vista posts.index ) que envie a la ruta posts.destroy usant un m\u00e8tode DELETE, com hem explicat en un exemple anterior.</li> <li> <p>Els m\u00e8todes create , edit , store i update de moment els deixarem sense fer, fins que vegem com gestionar formularis.</p> </li> <li> <p>Per a simular la inserci\u00f3 i la modificaci\u00f3, crearem dos m\u00e8todes addicionals en el controlador, que usarem de manera temporal:</p> <ul> <li>Un m\u00e8tode anomenat nuevoPrueba , que cada vegada que el cridem crear\u00e0 un post amb un t\u00edtol a l'atzar (per exemple, \"T\u00edtol X\", sent X un enter aleatori), i un contingut a l'atzar (\"Contingut X\"). Pots emprar la funci\u00f3 rand de PHP per a generar aquests n\u00fameros aleatoris per a t\u00edtol i contingut.</li> <li>Un m\u00e8tode anomenat editarPrueba , que rebr\u00e0 com a par\u00e0metre un id i modificar\u00e0 el t\u00edtol i contingut del post altres generats aleat\u00f2riament, com en el punt anterior.</li> <li>Aquests dos m\u00e8todes (especialment el primer) ens serviran per a crear una s\u00e8rie de posts de prova que despr\u00e9s ens serviran per a provar el llistat i la fitxa dels posts.</li> </ul> </li> <li> <p>En l'arxiu routes/web.php , recorda afegir dues noves rutes temporals de tipus get per a provar aquestes insercions i modificacions. La primera pot apuntar a /nuevoPrueba ,per exemple, i la segona a /editarPrueba/{id} . Recorda tamb\u00e9 eliminar o editar la restricci\u00f3 only de les rutes del controlador que vas establir la sessi\u00f3 anterior, perqu\u00e8 no sols permeta les rutes index, show, create i edit, i a m\u00e9s permeta la de destroy (o totes les possibles, si vols, ja que tard o d'hora les utilitzarem).</p> </li> </ul>"},{"location":"07laravelModelsDades.html#exercisi-723","title":"Exercisi 723:","text":"<p>Sobre el projecte blog de la sessi\u00f3 anterior, afegirem aquests canvis:</p> <ul> <li>Crea una relaci\u00f3 un a molts entre el model d'Usuari i el model de Post , tots dos ja existents en l'aplicaci\u00f3, de manera que un post \u00e9s d'un usuari, i un usuari pot tindre molts posts. Haur\u00e0s de definir una nova migraci\u00f3 de modificaci\u00f3 sobre la taula posts que afija un nou camp usuari_id , i establir a partir d'ell la relaci\u00f3.</li> <li> <p>Registra una s\u00e8rie d'usuaris  en la taula usuaris, i associa alguns d'ells als posts que hi haja des del phpMyaAdmin.</p> </li> <li> <p>Modifica la vista posts/index.blade.php perqu\u00e8, al costat del t\u00edtol de cada post, entre par\u00e8ntesi, aparega el name de l'usuari que el va crear.</p> </li> </ul>"},{"location":"07laravelModelsDades.html#exercisi-724","title":"Exercisi 724:","text":"<p>Continuem amb el projecte blog anterior. Ara afegirem el seg\u00fcent:</p> <ul> <li>Crea un seeder anomenat UsersSeeder , amb el factory associat anomenat UserFactory que ja est\u00e0 creat. Crea amb aix\u00f2 3 usuaris de prova.</li> <li>Crea un altre seeder anomenat PostsSeeder amb un factory associat anomenat PostFactory . En el factory, defineix amb el faker t\u00edtols aleatoris (frases) i continguts aleatoris (textos llargs). Usa el seeder per a crear 3 posts per a cadascun dels usuaris existents.</li> <li>Utilitza l'opci\u00f3 php artisan migrate:fresh --seed per a esborrar tot contingut previ i poblar la base de dades amb aquests nous elements. Comprova despr\u00e9s des de la p\u00e0gina del llistat de posts, i des de phpmyAdmin que la informaci\u00f3 \u00e9s correcta.</li> </ul>"},{"location":"07laravelModelsDades.html#exercisi-725","title":"Exercisi 725:","text":"<p>Afig al projecte blog un nou model anomenat Comentari , juntament amb la seua migraci\u00f3 i controlador associats. Cada comentari tindr\u00e0 com a camp el contingut del comentari, i estar\u00e0 relacionat un a molts amb el model Usuari , de manera que un usuari pot tindre molts comentaris, i cada comentari pertany a un usuari. Tamb\u00e9 tindr\u00e0 una relaci\u00f3 un a molts amb el model Post , de manera que un comentari pertany a un post, i un post pot tindre molts comentaris. Per tant, la migraci\u00f3 dels comentaris haur\u00e0 de tindre com a camps addicionals la relaci\u00f3 amb l'usuari ( usuario_id ) i amb el post al qual pertany ( post_id ).</p> <p>Aplica la migraci\u00f3 per a reflectir la nova taula en la base de dades, i utilitza un seeder i un factory per a crear 3 comentaris en cada post, amb l'usuari que siga. A l'hora d'aplicar tot aix\u00f2, esborra els continguts previs de la base de dades ( migrate:fresh --seed ).</p> <p>AJUDA: si vols triar un usuari a l'atzar com a autor de cada comentari, pots fer una cosa aix\u00ed:</p> <pre><code>Usuario::inRandomOrder()-&gt;first();\n</code></pre> <p>En aquest cas, seria convenient que aqueix usuari aleatori s'afija directament en el factory del comentari, i no en el seeder, ja que en cas contrari \u00e9s possible que genere el mateix usuari per a tots els comentaris d'un post. En la fitxa dels posts (vista posts/show.blade.php ), afig el codi necessari per a mostrar el login de l'usuari que ha fet el post, i el llistat de comentaris associat al post, mostrant per a cadascun el login de l'usuari que el va fer, i el text del comentari en si. Utilitza tamb\u00e9 la [llibreria)(us-de-dates) Carbon per a mostrar la data de creaci\u00f3 del post (o la dels comentaris, com preferisques) en format d/m/Y .</p>"},{"location":"07laravelNotificacions.html","title":"Notificacions, correu i cues","text":""},{"location":"07laravelNotificacions.html#notificacions","title":"Notificacions","text":"<p>Les notificacions ens permeten enviar missatges a l'usuari de forma que aquest puga veure'ls en el moment que accedeix a la nostra aplicaci\u00f3. A Laravel, les notificacions s\u00f3n una forma c\u00f2moda d'enviar notificacions a trav\u00e9s de diversos canals com correu electr\u00f2nic, SMS, Slack, etc.</p> <p>Creaci\u00f3 de Notificacions Per crear una notificaci\u00f3, pots utilitzar Artisan:</p> <pre><code>php artisan make:notification NomNotificacio\n</code></pre> <p>Aix\u00f2 crear\u00e0 una nova classe de notificaci\u00f3 dins del directori app/Notifications.</p>"},{"location":"07laravelNotificacions.html#enviament-de-notificacions","title":"Enviament de Notificacions","text":"<p>Pots enviar notificacions a un usuari utilitzant el m\u00e8tode notify en una inst\u00e0ncia de l'usuari:</p> <pre><code>$user-&gt;notify(new NomNotificacio($data));\n</code></pre> <p>On $user \u00e9s una inst\u00e0ncia del model User i $data s\u00f3n les dades que vols passar a la notificaci\u00f3.</p>"},{"location":"07laravelNotificacions.html#personalitzacio-del-canal","title":"Personalitzaci\u00f3 del Canal","text":"<p>Pots definir quins canals utilitzar\u00e0 la notificaci\u00f3 (per exemple, correu electr\u00f2nic, base de dades) en el m\u00e8tode via de la classe de notificaci\u00f3:</p> <pre><code>/**\n * Obtenir els canals de notificaci\u00f3 per a l'aplicaci\u00f3.\n *\n * @param  mixed  $notifiable\n * @return array|string\n */\npublic function via($notifiable)\n{\n    return ['mail','database'];\n}\n</code></pre>"},{"location":"07laravelNotificacions.html#exemple","title":"Exemple","text":""},{"location":"07laravelNotificacions.html#notificacions-notificar-a-un-usuari-sobre-una-nova-venda","title":"Notificacions: Notificar a un Usuari sobre una Nova Venda","text":"<p>Primer, creem una notificaci\u00f3 per a notificar a un usuari quan un dels seus llibres s'ha venut.</p> <pre><code>php artisan make:notification BookSoldNotification\n</code></pre> <p>Ara, edita la classe de notificaci\u00f3 BookSoldNotification:</p> <pre><code>namespace App\\Notifications;\n\nuse Illuminate\\Bus\\Queueable;\nuse Illuminate\\Notifications\\Notification;\nuse Illuminate\\Notifications\\Messages\\MailMessage;\n\nclass BookSoldNotification extends Notification\n{\n    use Queueable;\n\n    public $book;\n    public $sale;\n\n    public function __construct($book, $sale)\n    {\n        $this-&gt;book = $book;\n        $this-&gt;sale = $sale;\n    }\n\n    public function via($notifiable)\n    {\n        return ['mail'];\n    }\n\n    public function toMail($notifiable)\n    {\n        return (new MailMessage)\n                    -&gt;line('El teu llibre ha estat venut!')\n                    -&gt;action('Veure Detalls', url('/sales/'.$this-&gt;sale-&gt;id))\n                    -&gt;line('Gr\u00e0cies per utilitzar la nostra aplicaci\u00f3!');\n    }\n}\n</code></pre> <p>Despr\u00e9s, envia la notificaci\u00f3 quan es realitza una venda:</p> <pre><code>use App\\Notifications\\BookSoldNotification;\n\n// Suposem que $user \u00e9s el propietari del llibre, $book \u00e9s el llibre venut, i $sale \u00e9s la venda\n$user-&gt;notify(new BookSoldNotification($book, $sale));\n</code></pre>"},{"location":"07laravelNotificacions.html#correu","title":"Correu","text":"<p>Laravel facilita l'enviament de correus electr\u00f2nics amb diverses opcions de personalitzaci\u00f3.</p>"},{"location":"07laravelNotificacions.html#creacio-de-mailables","title":"Creaci\u00f3 de Mailables","text":"<p>Primer, crea una classe Mailable amb Artisan:</p> <pre><code>php artisan make:mail NomMailable\n</code></pre> <p>Aquesta classe es troba dins de app/Mail i pot ser personalitzada per definir com es veur\u00e0 el correu.</p> <p>Enviament de Correus Pots enviar correus electr\u00f2nics utilitzant el fa\u00e7ade Mail:</p> <p><pre><code>use App\\Mail\\NomMailable;\nuse Illuminate\\Support\\Facades\\Mail;\n\nMail::to($request-&gt;user())-&gt;send(new NomMailable($data));\n</code></pre> On $data cont\u00e9 les dades que vols passar al mailable.</p>"},{"location":"07laravelNotificacions.html#estructura-basica-de-la-classe-mailable","title":"Estructura B\u00e0sica de la Classe Mailable","text":"<p>Dins de la teva classe CustomMail, tindr\u00e0s la seg\u00fcent estructura b\u00e0sica:</p> <pre><code>namespace App\\Mail;\n\nuse Illuminate\\Bus\\Queueable;\nuse Illuminate\\Mail\\Mailable;\nuse Illuminate\\Queue\\SerializesModels;\n\nclass CustomMail extends Mailable\n{\n    use Queueable, SerializesModels;\n\n    // Defineix les propietats i el constructor\n\n    public function build()\n    {\n        return $this-&gt;view('view.name');\n    }\n}\n</code></pre>"},{"location":"07laravelNotificacions.html#personalitzacio-del-mailable","title":"Personalitzaci\u00f3 del Mailable","text":""},{"location":"07laravelNotificacions.html#passar-dades-al-mailable","title":"Passar Dades al Mailable:","text":"<p>Pots passar dades al mailable utilitzant el constructor. Aquestes dades es poden utilitzar despr\u00e9s en la vista del correu.</p> <pre><code>public $data;\n\npublic function __construct($data)\n{\n    $this-&gt;data = $data;\n}\n</code></pre>"},{"location":"07laravelNotificacions.html#definir-la-vista","title":"Definir la Vista:","text":"<p>Especifica la vista que utilitzar\u00e0 el correu. Pots crear una vista Blade dins de resources/views/emails.</p> <pre><code>public function build()\n{\n    return $this-&gt;view('emails.custom')\n                -&gt;with(['data' =&gt; $this-&gt;data]);\n}\n</code></pre>"},{"location":"07laravelNotificacions.html#configurar-el-correu","title":"Configurar el Correu:","text":"<p>Dins del m\u00e8tode build, pots encadenar m\u00e8todes per a configurar el correu, com l'assumpte, l'emissor, etc.</p> <pre><code>return $this-&gt;from('example@example.com')\n            -&gt;subject('Assumpte del Correu')\n            -&gt;view('emails.custom');\n</code></pre>"},{"location":"07laravelNotificacions.html#utilitzar-components-de-markdown","title":"Utilitzar Components de Markdown:","text":"<p>Laravel permet utilitzar components de Markdown per a construir correus de manera senzilla. Pots utilitzar markdown en lloc de view per a utilitzar una vista Markdown.</p> <pre><code>return $this-&gt;subject('Assumpte del Correu')\n            -&gt;markdown('emails.custom_markdown', ['data' =&gt; $this-&gt;data]);\n</code></pre>"},{"location":"07laravelNotificacions.html#adjuntar-fitxers","title":"Adjuntar Fitxers:","text":"<p>Si vols adjuntar fitxers al correu, pots fer-ho dins del m\u00e8tode build.</p> <pre><code>return $this-&gt;view('emails.custom')\n-&gt;attach('/path/to/file');\n</code></pre>"},{"location":"07laravelNotificacions.html#exemple-de-vista-blade-per-al-correu","title":"Exemple de Vista Blade per al Correu","text":"<p>Dins de resources/views/emails/custom.blade.php:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Correu Personalitzat&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;{{ $data['title'] }}&lt;/h1&gt;\n    &lt;p&gt;{{ $data['body'] }}&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"07laravelNotificacions.html#exemple-denviar-un-correu-de-confirmacio-de-compra","title":"Exemple d'enviar un Correu de Confirmaci\u00f3 de Compra","text":"<p>Creem un mailable per enviar un correu de confirmaci\u00f3 de compra.</p> <pre><code>php artisan make:mail PurchaseConfirmationMail\n</code></pre> <p>Edita la classe PurchaseConfirmationMail:</p> <p><pre><code>namespace App\\Mail;\n\nuse Illuminate\\Bus\\Queueable;\nuse Illuminate\\Mail\\Mailable;\nuse Illuminate\\Queue\\SerializesModels;\n\nclass PurchaseConfirmationMail extends Mailable\n{\n    use Queueable, SerializesModels;\n\n    public $sale;\n\n    public function __construct($sale)\n    {\n        $this-&gt;sale = $sale;\n    }\n\n    public function build()\n    {\n        return $this-&gt;view('emails.purchase_confirmation')\n                    -&gt;with(['sale' =&gt; $this-&gt;sale]);\n    }\n}\n</code></pre> Crea una vista resources/views/emails/purchase_confirmation.blade.php per aquest correu. Despr\u00e9s, envia el correu quan es realitza una compra:</p> <pre><code>use App\\Mail\\PurchaseConfirmationMail;\n\nMail::to($buyer-&gt;email)-&gt;send(new PurchaseConfirmationMail($sale));\n</code></pre>"},{"location":"07laravelNotificacions.html#cues","title":"Cues","text":"<p>Les cues permeten retardar l'execuci\u00f3 de tasques llargues, com l'enviament de correus electr\u00f2nics, per no bloquejar la petici\u00f3 HTTP del teu usuari.</p>"},{"location":"07laravelNotificacions.html#configuracio","title":"Configuraci\u00f3","text":"<p>La configuraci\u00f3 de les cues en Laravel es troba en l'arxiu config/queue.php. Aquest arxiu defineix connexions de cua per a diferents controladors com database, sqs, redis, etc. Pots seleccionar el controlador de cua predeterminat en l'arxiu .env amb la clau QUEUE_CONNECTION.</p> <p>Per exemple, per a usar una cua de base de dades:</p> <ol> <li>Configura el Controlador de Cua: En el teu arxiu .env, estableix:</li> </ol> <pre><code>QUEUE_CONNECTION=database\n</code></pre> <ol> <li>Crea la Taula de Cues: Si est\u00e0s utilitzant el controlador database, necessitar\u00e0s una taula per a emmagatzemar els treballs en cua. Pots generar una migraci\u00f3 per a esta taula amb l'ordre:</li> </ol> <pre><code>php artisan queue:table\nphp artisan migrate\n</code></pre> <ol> <li>Executar el Worker de Cua: Per a processar treballs en cua, has de tindre un worker en execuci\u00f3. Pots iniciar un worker amb:</li> </ol> <pre><code>php artisan queue:work\n</code></pre>"},{"location":"07laravelNotificacions.html#treballs-de-cua","title":"Treballs de Cua","text":"<p>Crea treballs de cua per manejar tasques:</p> <pre><code>php artisan make:job NomTreball\n</code></pre> <p>Aquest treball es troba dins de app/Jobs. Pots definir la l\u00f2gica de la teva tasca dins del m\u00e8tode handle.</p> <pre><code>namespace App\\Jobs;\n\nuse App\\Models\\Venda;\n// Importa altres models o classes necess\u00e0ries\n\nclass ProcessarVenda extends Job\n{\n    protected $venda;\n\n    public function __construct(Venda $venda)\n    {\n        $this-&gt;venda = $venda;\n    }\n\n    public function handle()\n    {\n        // L\u00f2gica per a processar la venda\n        // Per exemple, actualitzar l'estat, notificar a l'usuari, etc.\n\n        $this-&gt;venda-&gt;update(['estat' =&gt; 'processada']);\n        // M\u00e9s l\u00f2gica segons siga necessari\n    }\n}\n</code></pre>"},{"location":"07laravelNotificacions.html#despatxar-treballs","title":"Despatxar Treballs","text":"<p>Envia treballs a la cua:</p> <p><pre><code>NomTreball::dispatch($data);\n</code></pre> Aix\u00f2 afegir\u00e0 el treball a la teva cua per ser executat.</p>"},{"location":"07laravelNotificacions.html#exemple-processar-la-venda-en-fons","title":"Exemple: Processar la Venda en Fons","text":"<p>Suposem que vols processar les dades de la venda en fons. Primer, crea un treball de cua:</p> <pre><code>php artisan make:job ProcessSale\n</code></pre> <p>Edita ProcessSale per a incloure la l\u00f2gica de processament de vendes:</p> <p><pre><code>namespace App\\Jobs;\n\nuse Illuminate\\Bus\\Queueable;\nuse Illuminate\\Queue\\SerializesModels;\nuse Illuminate\\Queue\\InteractsWithQueue;\nuse Illuminate\\Contracts\\Queue\\ShouldQueue;\n\nclass ProcessSale implements ShouldQueue\n{\n    use InteractsWithQueue, Queueable, SerializesModels;\n\n    protected $sale;\n\n    public function __construct($sale)\n    {\n        $this-&gt;sale = $sale;\n    }\n\n    public function handle()\n    {\n        // L\u00f2gica de processament de la venda\n        // Per exemple, actualitzar l'estat, notificar a l'usuari, etc.\n    }\n}\n</code></pre> Despatxa aquest treball quan es realitza una venda:</p> <pre><code>ProcessSale::dispatch($sale);\n</code></pre>"},{"location":"07laravelRutesVistes.html","title":"FRAMEWORK LARAVEL","text":""},{"location":"07laravelRutesVistes.html#rutes","title":"Rutes","text":"<p>Video</p> <p>Podr\u00edem dir que existeixen dos tipus principals de rutes:</p> <ul> <li> <p>Les rutes web (emmagatzemades a l'arxiu web.php de l'aplicaci\u00f3), que ens permetran carregar diferents vistes en funci\u00f3 de la URL que indique el client.</p> </li> <li> <p>Les rutes API (emmagatzemades en l'arxiu api.php), a trav\u00e9s de les quals de\ufb01nirem diferents serveis REST, com veurem tamb\u00e9 m\u00e9s endavant.</p> </li> </ul> <p>Ens centrarem durant aquesta tema en el primer grup, per la qual cosa editarem el contingut de l'arxiu routes/web.php. Vegem quins tipus de rutes podem *de\ufb01nir, i quines caracter\u00edstiques tenen.</p> <p>Este \u00e9s el punt centralitzat per a la definici\u00f3 de rutes i qualsevol ruta no definida en aquest fitxer no ser\u00e0 v\u00e0lida, generat una excepci\u00f3 (el que retornar\u00e0 un error 404). Les rutes, en la seua forma m\u00e9s senzilla, poden retornar directament un valor des del propi fitxer de rutes, per\u00f2 tamb\u00e9 podran generar la trucada a una vista o a un controlador.</p>"},{"location":"07laravelRutesVistes.html#rutes-simples","title":"Rutes simples","text":"<p>Les rutes simples tenen un nom de ruta fix, i una funci\u00f3 que respon a aquest nom emetent una resposta. Les rutes, a m\u00e9s de definir la URL de la petici\u00f3, tamb\u00e9 indiquen el m\u00e8tode amb el qual s'ha de fer aquesta petici\u00f3. Els dos m\u00e8todes m\u00e9s utilitzats i que comen\u00e7arem veient s\u00f3n les peticions tipus GET i tipus POST. Per exemple, per a definir una petici\u00f3 tipus GET haur\u00edem d'afegir el seg\u00fcent codi al nostre fitxer routes.php:</p> <pre><code>    Route::get('salut', function()\n    { \n        return 'Hola m\u00f3n!'; \n    });\n</code></pre> <p>Aquest codi es llan\u00e7aria quan es realitze una petici\u00f3 tipus GET a la ruta arrel de la nostra aplicaci\u00f3. Si estem treballant en local aquesta ruta seria http://localhost (en el notre cas intranet.my) per\u00f2 quan la web estiga en producci\u00f3 es referiria al domini principal, per exemple: http://www.direcci\u00f3n-de-tu-web.com. </p>"},{"location":"07laravelRutesVistes.html#afegir-parametres-a-les-rutes","title":"Afegir par\u00e0metres a les rutes","text":"<p>Si volem afegir par\u00e0metres a una ruta simplement els hem d'indicar entre claus {} a continuaci\u00f3 de la ruta, de la forma:</p> <pre><code>    Route::get('salut/{nom}', function($nom)\n    {\n    return 'Bon dia, '.$nom; });\n</code></pre> <p>En aquest cas estem definint la ruta /salut/{nom}, on nom \u00e9s requerit i pot ser qualsevol valor. En cas de no especificar cap nom ens redigirir\u00e0 a una p\u00e0gina d'error 404. El par\u00e0metre se li passar\u00e0 a la funci\u00f3, el qual es podr\u00e0 utilitzar (com veurem m\u00e9s endavant) para per exemple obtenir dades de la base de dades, emmagatzemar valors, etc.</p> <p>Tamb\u00e9 podem indicar que un par\u00e0metre \u00e9s opcional simplement afegint el s\u00edmbol ? al final (i en aquest cas no donaria error si no es realitza la petici\u00f3 amb aquest par\u00e0metre):</p> <pre><code>    Route::get('salut/{nom?}', function($nom = 'convidat')\n    {\n        return 'Bon dia, '.$nom; \n    });\n</code></pre>"},{"location":"07laravelRutesVistes.html#validacio-de-parametres","title":"Validaci\u00f3 de par\u00e0metres","text":"<p>Alguns par\u00e0metres caldr\u00e0 que seguisquen un determinat patr\u00f3. Per exemple, un identificador num\u00e8ric nom\u00e9s contindr\u00e0 d\u00edgits. Per a assegurar-nos d'aix\u00f2, podem emprar el m\u00e8tode *where en definir la ruta. A aquest m\u00e8tode li passem dos par\u00e0metres: el nom del par\u00e0metre a validar, i l'expressi\u00f3 regular que ha de complir. En el cas del nom anterior, si volem que nom\u00e9s continga lletres (maj\u00fascules o min\u00fascules), podem fer una cosa aix\u00ed:    </p> <p><pre><code>Route::get('salut/{nom?}', function($nom = \"Convidat\") {\nreturn \"Hola, \" . $nom;\n})-&gt;where('nom', \"[A-Za-z]+\");\n</code></pre> En cas que la ruta no complisca el patr\u00f3, s'obtindr\u00e0 una p\u00e0gina d'error. M\u00e9s endavant s'explicar\u00e0 com podem personalitzar aquestes p\u00e0gines d'error.</p>"},{"location":"07laravelRutesVistes.html#named-routes","title":"Named routes","text":"<p>A vegades pot ser convenient associar un nom a una ruta. Especialment, quan aqueixa ruta formar\u00e0 part d'un enlla\u00e7 en alguna p\u00e0gina del nostre lloc, ja que en un futur la ruta podria canviar, i d'aquesta manera evitem haver d'actualitzar els enlla\u00e7os al nou nom. Per a aix\u00f2, en definir la ruta, li associem amb la funci\u00f3 name el nom que vulguem. Per exemple: </p> <p><pre><code>Route::get('contacte', function() {\nreturn \"P\u00e0gina de contacte\";\n})-&gt;name('ruta_contacte');\n</code></pre> Ara, si volem definir un enlla\u00e7 a aquesta ruta en qualsevol part, n'hi ha prou amb emprar la funci\u00f3 route de Laravel, indicant el nom que li hem assignat a aquesta ruta. Per tant, en lloc de posar aix\u00f2:</p> <p><pre><code>echo '&lt;a href=\"/contacte\"&gt;Contacte&lt;/a&gt;';\n</code></pre> Podem fer alguna cosa com aix\u00f2 un altre, tal com veurem a continuaci\u00f3 quan usem el motor de plantilles Blade:</p> <p><pre><code>&lt;a href=\"{{ \"{{ route('ruta_contacte') \" }}}}\"&gt;Contacte&lt;/a&gt;\n</code></pre> D'aquesta manera, davant futurs canvis en les rutes, nom\u00e9s haurem de canviar la URL en Route::get</p>"},{"location":"07laravelRutesVistes.html#combinacio-delements-en-rutes","title":"Combinaci\u00f3 d'elements en rutes","text":"<p>Podem combinar diverses cl\u00e0usules where en una ruta per a validar diferents par\u00e0metres que puga tindre, i tamb\u00e9 enlla\u00e7ar aquestes crides amb una a la funci\u00f3 name per a nomenar la ruta. Per exemple, la seg\u00fcent ruta espera rebre un nom amb car\u00e0cters, i un id num\u00e8ric, tots dos amb valors per defecte:</p> <pre><code>Route::get('salut/{nom?}/{id?}',\nfunction($nom=\"Convidat\", $id=0)\n{\nreturn \"Hola $nom, el teu codi \u00e9s el $id\";\n})-&gt;where('nom', \"[A-Za-z]+\")\n-&gt;where('id', \"[0-9]+\")\n-&gt;name('salut');\n</code></pre> <p>Si accedim a cadascuna de les seg\u00fcents URLs, obtindrem cadascuna de les respostes indicades:</p> URL Respuesta /salut Hola Convidat, el teu codi \u00e9s el 0 /salut/Ignasi Hola Ignasi, el teu codi \u00e9s el 0 /salut/Ignasi/3 Hola Ignasi, el teu codi \u00e9s el 3 /salut/3 Error 404 (URL incorrecta) <p>Notar que l'\u00faltim cas \u00e9s incorrecte. No podem especificar un id sense haver especificat un nom davant, perqu\u00e8 incompleix el patr\u00f3 de la URL. Es pot deixar un par\u00e0metre om\u00e9s, sempre que els posteriors tamb\u00e9 ho estiguen.</p>"},{"location":"07laravelRutesVistes.html#vistes","title":"Vistes","text":"<p>Video</p> <p>Les vistes s\u00f3n la forma de presentar el resultat (una pantalla del nostre lloc web) de forma visual a l'usuari, el qual podr\u00e0 interactuar amb ell i tornar a realitzar una petici\u00f3. Les vistes a m\u00e9s ens permeten separar tota la part de presentaci\u00f3 de resultats de la l\u00f2gica (controladors) i de la base de dades (models).</p> <p>Per tant no hauran de realitzar cap tipus de consulta ni processament de dades, simplement rebran dades i els prepararan per a mostrar-los com HTML.</p> <p>Fins ara les rutes que hem definit retornen un text simple, excepte la qual ja estava creada per defecte en el projecte, que apuntava a la p\u00e0gina d'inici. Si volgu\u00e9rem retornar contingut HTML, una opci\u00f3 (costosa) seria retornar aquest contingut generat des del propi m\u00e8tode de la ruta, a trav\u00e9s de la instrucci\u00f3 return , per\u00f2 en lloc de fer aix\u00f2 des de dins de la pr\u00f2pia funci\u00f3 de resposta, el m\u00e9s habitual (i recomanable) \u00e9s generar una vista amb el contingut HTML que es vol enviar al client.</p> <p>La forma general de mostrar vistes en Laravel \u00e9s fer que les rutes retornen (return) una determinada vista. Per a aix\u00f2, es pot emprar la funci\u00f3 view de Laravel, indicant el nom de la vista a generar o mostrar. Per defecte, en la carpeta resources/views tenim disponible una vista d'exemple anomenada welcome.blade.php . \u00c9s la que s'utilitza com a p\u00e0gina d'inici en la ruta arrel en routes/web.php :</p> <p><pre><code>Route::get('/', function() {\nreturn view('welcome');\n});\n</code></pre> Notar que no \u00e9s necessari indicar el path o ruta cap a l'arxiu de la vista, ni tampoc l'extensi\u00f3, ja que  Laravel assumeix que per defecte les vistes es troben en la carpeta resources/views , amb l'extensi\u00f3 .blade.php (que fa refer\u00e8ncia al motor de plantilles Blade que veurem a continuaci\u00f3), o simplement amb extensi\u00f3 .php (en el cas de vistes simples que no utilitzen Blade). Podem, per exemple, crear una vista senzilla dins d'aquesta carpeta de vistes (anomenem-la inici.blade.php ), amb un contingut HTML b\u00e0sic:</p> <p><pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Inici&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;P\u00e0gina d'inici&lt;/h1&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> I podem utilitzar esta vista com a p\u00e0gina d'inici:</p> <pre><code>Route::get('/', function() {\nreturn view('inicio');\n});\n</code></pre> <p>Les vistes contenen el codi HTML del nostre lloc web, barrejat amb els assets (CSS, imatges, Javascripts, etc. que estaran emmagatzemats en la carpeta public) i una mica de codi PHP (o codi Blade de plantilles, com veurem m\u00e9s endavant) per a presentar les dades d'entrada com un resultat HTML.</p>"},{"location":"07laravelRutesVistes.html#pasar-valor-a-les-vistes","title":"Pasar valor a les vistes","text":"<p>\u00c9s molt habitual passar una certa informaci\u00f3 a unes certes vistes, com per exemple, llistats de dades a mostrar, o dades d'un element en concret. Per exemple, si volem donar un missatge de benvinguda a un nom (suposadament variable), hem d'emmagatzemar el nom en una variable en la ruta, i passar-s'ho a la vista en carregar-la. Aix\u00f2 pot fer-se, per exemple, amb el m\u00e8tode with despr\u00e9s de generar la vista, indicant el nomamb qu\u00e8 l'associarem a la vista, i el valor (variable) associat a aquest nom. En el nostre cas quedaria aix\u00ed:</p> <pre><code>Route::get('/', function() {\n$nombre = \"Nacho\";\nreturn view('inicio')-&gt;with('nombre', $nombre);\n});\n</code></pre> <p>Posteriorment, en la vista, haurem de mostrar el valor d'aquesta variable en algun lloc del codi HTML. Podem emprar PHP tradicional per a recollir aquesta variable:</p> <pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Inicio&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;P\u00e1gina de inicio&lt;/h1&gt;\n        &lt;p&gt;Bienvenido/a &lt;?php echo $nombre; ?&gt;&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Per\u00f2 \u00e9s m\u00e9s habitual i net emprar una sintaxi espec\u00edfica de Blade, com veurem a continuaci\u00f3. Com a alternatives a l'\u00fas de with comentat abans, tamb\u00e9 podem utilitzar un array associatiu (assignant aix\u00ed diversos noms a diversos valors):</p> <pre><code>return view('inicio')-&gt;with(['nombre' =&gt; $nombre, ...]);\n</code></pre> <p>Aix\u00ed mateix, podem utilitzar aquest mateix array com segon par\u00e0metre de la funci\u00f3 view , i prescindir aix\u00ed de with :</p> <pre><code>return view('inicio', ['nombre' =&gt; $nombre, ...]);\n</code></pre> <p>I tamb\u00e9 podem utilitzar una funci\u00f3 anomenada compact com segon par\u00e0metre de view . A aquesta funci\u00f3 li passem \u00fanicament el nom de la variable i, sempre que la variable associada es cride igual, estableix l'associaci\u00f3 per nosaltres:</p> <pre><code>return view('inicio', compact('nombre'));\n</code></pre> <p>La funci\u00f3 compact admet tants par\u00e0metres com dades vulguem enviar a la vista per separat, cadascun amb el seu nom associat. Si simplement retornarem una vista amb poca informaci\u00f3 associada, o poca l\u00f2gica interna, tamb\u00e9 podem abreujar el codi anterior cridant directament a view , en lloc de route primer, en l'arxiu routes/web.php , i li passem aix\u00ed la informaci\u00f3 associada a la vista:</p> <pre><code>Route::view('/', 'inicio', ['nombre' =&gt; 'Nacho']);\n</code></pre>"},{"location":"07laravelRutesVistes.html#plantilles-mitjancant-blade","title":"Plantilles mitjan\u00e7ant Blade","text":"<p>Laravel utilitza Blade per a la definici\u00f3 de plantilles en les vistes. Aquesta llibreria permet realitzar tot tipus d'operacions amb les dades, a m\u00e9s de la substituci\u00f3 de seccions de les plantilles per un altre contingut, her\u00e8ncia entre plantilles, definici\u00f3 de layouts o plantilles base, etc.</p> <p>Els fitxers de vistes que utilitzen el sistema de plantilles Blade han de tenir l'extensi\u00f3 .blade.php. Aquesta extensi\u00f3 tampoc s'haur\u00e0 d'incloure a l'hora de referenciar una vista des del fitxer de rutes o des d'un controlador. \u00c9s a dir, utilitzarem view('home') tant si el fitxer es diu home.php com home.blade.php.</p> <p>En general el codi que inclou Blade en una vista comen\u00e7ar\u00e0 pels s\u00edmbols @ o {{ \"{{, el qual posteriorment ser\u00e0 processat i preparat per a mostrar-se per pantalla. Blade no afig sobrec\u00e0rrega de processament, ja que totes les vistes s\u00f3n preprocesadas i cachejades, per contra ens brinda utilitats que ens ajudaran en el disseny i modularitzaci\u00f3 de les vistes.</p>"},{"location":"07laravelRutesVistes.html#mostrar-dades","title":"Mostrar dades","text":"<p>El m\u00e8tode m\u00e9s b\u00e0sic que tenim en Blade \u00e9s el de mostrar dades, per a a\u00e7\u00f2 utilitzarem les claus dobles ({{ \"{{ \" }}}}) i dins d'elles escriurem la variable o funci\u00f3 amb el contingut a mostrar:</p> <pre><code>    Hola {{  $name }}.\n</code></pre> <p>Cada vegada que es renderitza una vista en Laravel, s'emmagatzema el contingut PHP generat en storage/framework/views , i nom\u00e9s es torna a re-generar davant un canvi en la vista, amb el que tornar a cridar a una vista ja renderitzada no afecta al rendiment de l'aplicaci\u00f3. Si donem una ullada  a la vista generada amb PHP pla i amb Blade, veurem que hi ha una subtil difer\u00e8ncia entre ambdues, i \u00e9s que amb Blade, en lloc de fer un simple echo per a mostrar el valor de la variable, s'utilitza una funci\u00f3 interm\u00e8dia anomenada e , que evita atacs XSS (Cross Site Scripting), \u00e9s a dir, que s'injecten scripts de Javascript amb la variable a mostrar. En altres paraules, el codi no s'interpreta, i es mostra tal qual. En alguns casos (especialment quan generem contingut HTML des de dins de l'expressi\u00f3 Blade) ens pot interessar que no protegisca contra aquestes injeccions de codi. En aqueix cas, se substitueix la segona clau per una doble exclamaci\u00f3:</p> <pre><code>    Hola {!! $name !!}.\n</code></pre> <p>En general sempre haurem d'usar les claus dobles, especialment si anem a mostrar dades que s\u00f3n proporcionats pels usuaris de l'aplicaci\u00f3. Per tant, aquest \u00faltim m\u00e8tode solament hem d'utilitzar-ho si estem segurs que no volem que s'escape el contingut.</p>"},{"location":"07laravelRutesVistes.html#mostrar-una-dada-sola-si-existeix","title":"Mostrar una dada sola si existeix","text":"<p>Per a comprovar que una variable existeix o t\u00e9 un determinat valor podem utilitzar l'operador ternari de la forma:</p> <pre><code>    {{  isset($name) ? $name : 'Valor per defecte' }}\n</code></pre> <p>O simplement usar la notaci\u00f3 que inclou Blade per a aquesta fi: </p> <pre><code>    {{  $name or 'Valor per defecte' }}\n</code></pre>"},{"location":"07laravelRutesVistes.html#comentaris","title":"Comentaris","text":"<p>Per a escriure comentaris en Blade s'utilitzen els s\u00edmbols {{ \"{{-- i --\" }}}}</p>"},{"location":"07laravelRutesVistes.html#estructures-de-control","title":"Estructures de control","text":"<p>Per a iterar sobre un conjunt de dades (array), podem emprar la directiva @foreach , amb una sintaxi similar al foreach de PHP, per\u00f2 sense necessitat de claus. N'hi ha prou amb finalitzar el bucle amb la directiva @endforeach , d'aquesta manera:</p> <pre><code>&lt;ul&gt;\n    @foreach($elementos as $elemento)\n        &lt;li&gt;{{  $elemento}}&lt;/li&gt;\n    @endforeach\n&lt;/ul&gt;\n</code></pre> <p>En el cas de voler realitzar alguna comprovaci\u00f3 (per exemple, si el array anterior est\u00e0 buit, per a mostrar un missatge pertinent), usem la directiva @if , tancada pel seu corresponent parella @endif . Opcionalment, es pot intercalar una directiva @else per al cam\u00ed alternatiu, o tamb\u00e9 @elseif per a indicar una altra condici\u00f3. L'exemple anterior podria quedar aix\u00ed:</p> <pre><code>&lt;ul&gt;\n    @if($elementos)\n        @foreach($elementos as $elemento)\n            &lt;li&gt;{{  $elemento }}&lt;/li&gt;\n        @endforeach\n    @else\n            &lt;li&gt;No hay elementos que mostrar&lt;/li&gt;\n    @endif\n&lt;/ul&gt;\n</code></pre> <p>Tamb\u00e9 podem comprovar si una variable est\u00e0 definida. En aquest cas, reemplacem la directiva @if per @isset, amb el seu corresponent tancament @endisset.</p> <pre><code>&lt;ul&gt;\n    @isset($elementos)\n        @foreach($elementos as $elemento)\n            &lt;li&gt;{{ $elemento }}&lt;/li&gt;\n        @endforeach\n    @else\n        &lt;li&gt;No hay elementos que mostrar&lt;/li&gt;\n    @endisset\n&lt;/ul&gt;\n</code></pre> <p>No obstant aix\u00f2, amb qualsevol d'aquestes opcions tenim un problema: en el primer cas, si la variable \\$elements no est\u00e0 definida, mostrar\u00e0 un error de PHP. En el segon cas, si la variable s\u00ed que est\u00e0 definida per\u00f2 no cont\u00e9 elements, no es mostrar\u00e0 res per pantalla. Una tercera estructura alternativa que agrupa aquests dos casos (controlar alhora que la variable estiga definida i tinga elements) \u00e9s emprar la directiva @forelse en lloc de @foreach . Aquesta directiva permet una cl\u00e0usula addicional @empty per a indicar qu\u00e8 fer si la col\u00b7lecci\u00f3 no t\u00e9 elements o est\u00e0 sense definir. L'exemple anterior quedaria ara aix\u00ed d'abreujat:</p> <pre><code>&lt;ul&gt;\n    @forelse($elementos as $elemento)\n        &lt;li&gt;{{  $elemento }}&lt;/li&gt;\n    @empty\n        &lt;li&gt;No hay elementos que mostrar&lt;/li&gt;\n    @endforelse\n&lt;/ul&gt;\n</code></pre> <p>En aquesta mena de iteradors ( @foreach o @forelse ), tenim disponible un objecte anomenat \\$loop , amb una s\u00e8rie de propietats sobre el bucle que estem iterant, com per exemple index (posici\u00f3 dins del array per la qual anem), o count (total d'elements), o first i last (booleans que determinen si \u00e9s el primer o \u00faltim element, respectivament), entre altres. Podem veure totes les propietats disponibles en aquest objecte cridant a var_dump :</p> <pre><code>&lt;ul&gt;\n    @forelse($elementos as $elemento)\n        &lt;li&gt;{{  $elemento }} {{  var_dump($loop) }} &lt;/li&gt;\n    @empty\n        &lt;li&gt;No hay elementos que mostrar&lt;/li&gt;\n    @endforelse\n&lt;/ul&gt;\n</code></pre> <p>Si, per exemple, volem determinar si \u00e9s l'\u00faltim element de la llista, i mostrar un missatge o estil especial, podem fer alguna cosa com aix\u00f2:</p> <pre><code>&lt;ul&gt;\n    @forelse($elementos as $elemento)\n        &lt;li&gt;{{  $elemento }}\n            {{  $loop-&gt;last ? \"Ultimo elemento\" : \"\" }}\n        &lt;/li&gt;\n    @empty\n        &lt;li&gt;No hay elementos que mostrar&lt;/li&gt;\n    @endforelse\n&lt;/ul&gt; \n</code></pre> <p>Aquesta s\u00f3n les estructures de control m\u00e9s utilitzades. Ademas d'aquestes Blade defineix algunes m\u00e9s que podem veure directament en la seua documentaci\u00f3</p>"},{"location":"07laravelRutesVistes.html#sobre-els-enllacos-a-altres-rutes","title":"Sobre els enlla\u00e7os a altres rutes","text":"<p>Hem comentat breument en punts anteriors que, gr\u00e0cies a Blade i als noms en les rutes,podem enlla\u00e7ar una vista amb una altra de dues formes: de manera tradicional...</p> <p><pre><code>echo '&lt;a href=\"/contacto\"&gt;Contacte&lt;/a&gt;';\n</code></pre> ... o b\u00e9 emprant la funci\u00f3 route seguida del nom que li hem donat a la ruta:</p> <pre><code>&lt;a href=\"{{  route('ruta_contacto') }}\"&gt;Contacte&lt;/a&gt;\n</code></pre> <p>A m\u00e9s, mitjan\u00e7ant Blade existeix una tercera manera d'enlla\u00e7ar, emprant la funci\u00f3 url , que genera una URL completa fins a la ruta que indiquem:</p> <pre><code>&lt;a href=\"{{  url('/contacto') \" }}\"&gt;Contacte&lt;/a&gt;\n</code></pre>"},{"location":"07laravelRutesVistes.html#definir-plantilles-comunes","title":"Definir Plantilles comunes","text":"<p>A l'hora de donar homogene\u00eftat a una web, \u00e9s habitual que la cap\u00e7alera, el men\u00fa de navegaci\u00f3 o el peu de p\u00e0gina formen part d'una plantilla que es repeteix en totes les p\u00e0gines del lloc, de manera que evitem haver d'actualitzar totes les p\u00e0gines davant qualsevol possible canvi en aquests elements. Per a crear una plantilla en Blade, creem un arxiu normal i corrent (per exemple, plantilla.blade.php ), en la carpeta de vistes, amb el contingut general de la plantilla. En aquelles zones del document on permetrem contingut variable depenent de la vista en si, afegim una secci\u00f3 anomenada @yield , amb un nom associat. La nostra plantilla podria ser aquesta (notar que es permeten varies @yield amb diferents noms):</p> <p><pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;\n            @yield('titulo')\n        &lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;nav&gt;\n            &lt;!-- ... Men\u00fa de navegaci\u00f3n --&gt;\n        &lt;/nav&gt;\n        @yield('contenido')\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> Despr\u00e9s, en cada vista en qu\u00e8 vulguem utilitzar aquesta plantilla, afegim la directiva @*extends de Blade, indicant el nom de plantilla que utilitzarem. Amb la directiva @section , seguida del nom de la secci\u00f3, definim el contingut per a cadascun dels @yield que s'hagen indicat en la plantilla. Finalitzarem cada secci\u00f3 amb la directiva @endsection . Aix\u00ed, per a la nostra p\u00e0gina inicial ( inici.blade.php ), el contingut pot ser ara aquest:</p> <p><pre><code>@extends('plantilla')\n@section('titulo', 'Inicio')\n@section('contenido')\n    &lt;h1&gt;P\u00e1gina de inicio&lt;/h1&gt;\n    Bienvenido/a {{ $nombre }}\n@endsection\n</code></pre> Notar, a m\u00e9s, que a la directiva @section se li pot passar un segon par\u00e0metre amb el contingut d'aqueixa secci\u00f3, i en aquest cas no \u00e9s necessari tancar-la amb @endsection . Aquesta opci\u00f3 \u00e9s \u00fatil per a continguts on no interessen car\u00e0cters en blanc o salts de l\u00ednia innecessaris al principi o al final, com ocorre en l'exemple anterior amb el t\u00edtol (title) de la p\u00e0gina. De la mateixa manera, la nostra vista per al llistat de llibres quedaria d'aquesta manera:</p> <pre><code>@extends('plantilla')\n@section('titulo', 'Listado de libros')\n@section('contenido')\n    &lt;h1&gt;Listado de libros&lt;/h1&gt;\n        &lt;ul&gt;\n        @forelse ($libros as $libro)\n            &lt;li&gt;{{  $libro[\"titulo\"] }}({{  $libro[\"autor\"] }})&lt;/li&gt;\n        @empty\n            &lt;li&gt;No se encontraron libros&lt;/li&gt;\n        @endforelse\n        &lt;/ul&gt;\n@endsection\n</code></pre>"},{"location":"07laravelRutesVistes.html#incloure-vistes-dins-daltres","title":"Incloure vistes dins daltres","text":"<p>Tamb\u00e9 sol ser habitual definir continguts parcials (se solen definir en una subcarpeta partials dins de resources/views ), i incloure'ls en les vistes. Per a aix\u00f2, utilitzarem la directiva @include de Blade. Per exemple, definirem un men\u00fa de navegaci\u00f3. Suposem que aquest men\u00fa est\u00e0 en l'arxiu resources/views/partials/nav.blade.php.</p> <pre><code>&lt;nav&gt;\n    &lt;a href=\"{{  route('inici') }}\"&gt;Inici&lt;/a&gt;\n    &lt;a href=\"{{  route('libres_llistat') }}\"&gt;Llistat de llibres&lt;/a&gt;\n&lt;/nav&gt;\n</code></pre> <p>Per a incloure el men\u00fa en la plantilla anterior, podem fer aix\u00f2 (i eliminar\u00edem el men\u00fa  de la plantilla): <pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;\n            @yield('titulo')\n        &lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        @include('partials.nav')\n        @yield('contenido')\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"07laravelRutesVistes.html#estructuras-vistes-en-carpetes","title":"Estructuras vistes en carpetes","text":"<p>Quan l'aplicaci\u00f3 \u00e9s una mica complexa, poden ser necess\u00e0ries diverses vistes, i tindre-les totes en una mateixa carpeta pot ser una cosa dif\u00edcil de gestionar. \u00c9s habitual, com anirem veient en sessions posteriors, estructurar les vistes de la carpeta resources/views en subcarpetas, de manera que, per exemple, cada carpeta es referisca a les vistes d'una entitat o model de l'aplicaci\u00f3, o a un controlador espec\u00edfic. Per renderitzar una vista que est\u00e0 dins d'una carpeta,  haurem d'indicar tamb\u00e9 el nom de la subcarpeta:</p> <pre><code>Route::get('llistat', function() {\n    ...\n    return view('llibres.llistat', compact('llibres'));\n});\n</code></pre> <p>Ac\u00ed tindrem una vista llistat dins d'una carpeta llibres.</p>"},{"location":"07laravelRutesVistes.html#vistes-per-a-pagines-derror","title":"Vistes per a p\u00e0gines d'error","text":"<p>Quan programem, algunes accions que fem provocaran p\u00e0gines d'error amb determinats codis, com per exemple 404 per a p\u00e0gines no trobades. Si volem definir l'aspecte i estructura d'aquestes p\u00e0gines, n'hi ha prou amb crear la vista corresponent en la carpeta resources/views/errors , per exemple , resources/views/errors/404.blade.php per a l'error 404 (anteposem el codi d'error al sufix de la vista).</p> <pre><code>@extends('plantilla')\n@section('titulo', 'Error 404')\n@section('contenido')\n    &lt;h1&gt;Error&lt;/h1&gt;\n    Documento no encontrado\n@endsection\n</code></pre>"},{"location":"07laravelRutesVistes.html#us-de-components-blade-en-laravel","title":"\u00das de Components Blade en Laravel","text":"<p>Els components Blade s\u00f3n una funci\u00f3 poderosa en Laravel que permet als desenvolupadors crear elements d'interf\u00edcie d'usuari reutilitzables. Aquests components poden ser personalitzats i inclosos en diverses vistes, oferint una manera eficient de gestionar elements comuns com formularis, botons, o panells d'informaci\u00f3.</p>"},{"location":"07laravelRutesVistes.html#creacio-dun-component-blade","title":"Creaci\u00f3 d'un Component Blade","text":"<p>Per crear un component Blade, podeu utilitzar el comandament Artisan:</p> <p><pre><code>php artisan make:component NomDelComponent\n</code></pre> Aix\u00f2 crear\u00e0 una nova classe de component en app/View/Components i una vista associada en resources/views/components.</p>"},{"location":"07laravelRutesVistes.html#definicio-del-component","title":"Definici\u00f3 del Component","text":"<p>Dins de la classe del component, podeu definir propietats i m\u00e8todes que el component utilitzar\u00e0. Per exemple:</p> <pre><code>namespace App\\View\\Components;\n\nuse Illuminate\\View\\Component;\n\nclass Alert extends Component\n{\n    public $type;\n\n    public function __construct($type)\n    {\n        $this-&gt;type = $type;\n    }\n\n    public function render()\n    {\n        return view('components.alert');\n    }\n}\n</code></pre>"},{"location":"07laravelRutesVistes.html#utilitzacio-del-component-en-vistes","title":"Utilitzaci\u00f3 del Component en Vistes","text":"<p>Per utilitzar el component, simplement afegiu-lo a la vostra vista Blade com si fos una etiqueta HTML:</p> <pre><code>&lt;x-alert type=\"danger\"&gt;\n    Aquest \u00e9s un missatge d'alerta!\n&lt;/x-alert&gt;\n</code></pre> <p>Aquest enfocament mant\u00e9 el codi organitzat i promou la reutilitzaci\u00f3 del codi, facilitant el manteniment i la lectura dels teus projectes Laravel.</p>"},{"location":"07laravelRutesVistes.html#enllacant-amb-css-i-javascript-en-el-client","title":"Enlla\u00e7ant amb CSS i Javascript en el client","text":"<p>Ara que ja tenim una visi\u00f3 bastant completa del que el motor de plantilles Blade pot oferir-nos, arriba el moment d'acabar de perfilar les nostres vistes. Fins ara no hem parlat res d'estils CSS, i aix\u00f2 \u00e9s una cosa que tota vista que es pree ha d'incloure. A m\u00e9s, tamb\u00e9 pot ser necessari en alguns casos incloure alguna llibreria Javascript en el costat del client per a uns certs processaments. Veurem com gestiona Laravel aquests recursos.  Per a poder afegir estils CSS o arxius Javascript al nostre projecte Laravel, el framework proporciona ja uns arxius on centralitzar aquestes opcions.</p>"},{"location":"07laravelRutesVistes.html#vite","title":"Vite","text":"<p>Vite \u00e9s una eina de construcci\u00f3 de frontend moderna que proporciona un entorn de desenvolupament extremadament r\u00e0pid i empaqueta el vostre codi per a la producci\u00f3. En construir aplicacions amb Laravel, normalment utilitzareu Vite per empaquetar els fitxers CSS i JavaScript de la vostra aplicaci\u00f3 en actius preparats per a la producci\u00f3. Laravel s'integra perfectament amb Vite proporcionant una directiva oficial de connectors i de Blade per carregar els vostres actius per al desenvolupament i la producci\u00f3.</p>"},{"location":"07laravelRutesVistes.html#installacio-del-connector-vite-i-laravel","title":"Instal\u00b7laci\u00f3 del connector Vite i Laravel","text":"<p>En una instal\u00b7laci\u00f3 nova del Laravel, trobareu un fitxer package.json a l'arrel de l'estructura de directoris de la vostra aplicaci\u00f3. El fitxer predeterminat package.json ja inclou tot el que necessiteu per comen\u00e7ar utilitzant el connector Vite i Laravel. Podeu instal\u00b7lar les depend\u00e8ncies del frontal de l'aplicaci\u00f3 mitjan\u00e7ant NPM:</p> <pre><code>npm install\n</code></pre>"},{"location":"07laravelRutesVistes.html#configuracio-de-vite","title":"Configuraci\u00f3 de Vite","text":"<p>Vite est\u00e0 configurat a trav\u00e9s d'un fitxer vite.config.js a l'arrel del projecte. Podeu personalitzar aquest fitxer segons les vostres necessitats, i tamb\u00e9 podeu instal\u00b7lar altres connectors que requereixi la vostra aplicaci\u00f3, com ara .vitejs/plugin-vue o .vitejs/plugin-react.</p> <p>El connector Laravel Vite requereix que especifiqueu els punts d'entrada per a la vostra aplicaci\u00f3. Aquests poden ser fitxers JavaScript o CSS, i inclouen llenguatges preprocessats com TypeScript, JSX, TSX, i Sass.</p> <pre><code>import { defineConfig } from 'vite';\nimport laravel from 'laravel-vite-plugin';\n\nexport default defineConfig({\n   plugins: [\n      laravel([\n         'resources/css/app.css',\n         'resources/js/app.js',\n     ]),\n   ],\n});\n</code></pre>"},{"location":"07laravelRutesVistes.html#carregar-els-vostres-scripts-i-estils","title":"Carregar els vostres scripts i estils","text":"<p>Amb els punts d'entrada de Vite configurats, nom\u00e9s els necessiteu refer\u00e8ncies en una directiva .vite() Blade que afegiu a la  de la plantilla arrel de la vostra aplicaci\u00f3:. <pre><code>&lt;!doctype html&gt;\n&lt;head&gt;\n    {{-- ... --}}\n\n    @vite(['resources/css/app.css', 'resources/js/app.js'])\n&lt;/head&gt;\n</code></pre> <p>La directiva @vite detectar\u00e0 autom\u00e0ticament el servidor de desenvolupament de Vite i injectar\u00e0 el client de Vite per habilitar la substituci\u00f3 del m\u00f2dul Hot. En el mode de construcci\u00f3, la directiva carregar\u00e0 els vostres actius compilats i versionats, incloent-hi qualsevol CSS importat.</p>"},{"location":"07laravelRutesVistes.html#executar-vite","title":"Executar Vite","text":"<p>Hi ha dues maneres d'executar Vite. Podeu executar el servidor de desenvolupament mitjan\u00e7ant l'ordre dev, la qual \u00e9s \u00fatil mentre es desenvolupa localment. El servidor de desenvolupament detectar\u00e0 autom\u00e0ticament els canvis als vostres fitxers i els reflectir\u00e0 instant\u00e0niament en qualsevol finestra del navegador oberta.</p> <p>O, executar l'ordre de construcci\u00f3 versionar\u00e0 i empaquetar\u00e0 els actius de la vostra aplicaci\u00f3 i els preparar\u00e0 per a desplegar-los en producci\u00f3:</p>"},{"location":"07laravelRutesVistes.html#run-the-vite-development-server","title":"Run the Vite development server...","text":"<p>npm run dev</p>"},{"location":"07laravelRutesVistes.html#build-and-version-the-assets-for-production","title":"Build and version the assets for production...","text":"<p>npm run build</p>"},{"location":"07laravelRutesVistes.html#installar-tailwind-css-amb-laravel","title":"Instal\u00b7lar tailwind CSS amb Laravel","text":"<p>Tailwind CSS \u00e9s un framework CSS d'utilitat-primera per a la construcci\u00f3 r\u00e0pida d'interf\u00edcies d'usuari personalitzades. A difer\u00e8ncia d'altres frameworks CSS com Bootstrap o Foundation, que ofereixen components pre-dissenyats, Tailwind proporciona classes d'utilitat a baix nivell que es poden compondre per crear dissenys \u00fanics i personalitzats.</p> <p>Cada classe en Tailwind t\u00e9 un prop\u00f2sit espec\u00edfic (com ara marge, relleno, tipus de lletra, alineaci\u00f3, etc.), permetent als desenvolupadors construir r\u00e0pidament dissenys complexes sense escriure CSS des de zero. A m\u00e9s, Tailwind facilita la personalitzaci\u00f3 i l'adaptaci\u00f3 als requeriments espec\u00edfics del disseny, fent-lo una eina molt flexible per als desenvolupadors front-end.</p> <p>Instal\u00b7lacio</p>"},{"location":"07laravelRutesVistes.html#proves-amb-laravel","title":"Proves amb laravel","text":"<p>En les primeres rutes de la nostra aplicaci\u00f3, utilitzem el navegador per a provar aquestes rutes i URLs. El problema d'aquestes proves en el navegador \u00e9s que no perduren en el temps ni poden executar-se de forma r\u00e0pida / autom\u00e0tica. Aix\u00ed que avui veurem com podem provar el codi que desenvolupem de forma m\u00e9s intel\u00b7ligent, utilitzant el component de proves automatitzades que ve incl\u00f2s amb Laravel.</p>"},{"location":"07laravelRutesVistes.html#directori-de-proves","title":"Directori de proves","text":"<p>Laravel inclou en el directori principal del teu projecte un directori anomenat /tests. En aquest directori anem a escriure codi que es va a encarregar de provar el codi de la resta de l'aplicaci\u00f3. Aquest directori est\u00e0 separat en dos subdirectoris:</p> <ul> <li>El directori Feature on escrivim proves que emulen peticions HTTP al servidor.</li> <li>El directori Unit on escrivim proves que s'encarreguen de provar parts individuals de l'aplicaci\u00f3 (com a classes i m\u00e8todes).</li> </ul>"},{"location":"07laravelRutesVistes.html#escrivint-una-prova","title":"Escrivint una prova","text":"<p>El comanament per a generar noves proves \u00e9s php artisan make:test NombreDeLaPruebaTest En la prova simularem una petici\u00f3 HTTP GET a la URL del m\u00f2dul d'usuaris. Amb assertStatus comprovem que la URL carrega de forma correcta verificant que el status HTTP siga 200. Amb el m\u00e8tode assertSee  comprovem que podem veure el text \u201cUsuaris\u201d:</p> <pre><code>    / @test /\n    function it_loads_the_users_lists_page(){\n        $this-&gt;get(\u2018usuaris)-&gt;assertStatus(200)-&gt;assertSee(\u2018Usuaris\u2019);\n        }\n</code></pre> <p>Perqu\u00e8 PHPUnit execute el m\u00e8tode com una prova, has de col\u00b7locar l'anotaci\u00f3 / @test / abans de la declaraci\u00f3 del m\u00e8tode o col\u00b7locar el prefix test_ en el nom del m\u00e8tode com a tal: </p> <pre><code>    function test_it_loads_the_users_lists_page(\n        {   \n        $this-&gt;get(\u2018usuaris)-&gt;assertStatus(200)-&gt;assertSee(\u2018Usuaris\u2019);\n        }\n</code></pre> <p>En cas contrari el m\u00e8tode NO ser\u00e0 executat com una prova, la qual cosa \u00e9s \u00fatil perqu\u00e8 ens permet agregar m\u00e8todes helpers dins de la nostra classe de proves.</p>"},{"location":"07laravelRutesVistes.html#notes","title":"Notes","text":"<ul> <li>Pots executar les proves amb vendor/bin/phpunit o crear un \u00e0lies per a la consola (\u00e0lies t=vendor/bin/phpunit).</li> <li>Pots llegir sobre els m\u00e8todes d'assercions disponibles en la documentaci\u00f3 de Laravel.</li> </ul>"},{"location":"07laravelRutesVistes.html#exercicis","title":"Exercicis","text":"<p>En el repositori nou anem a crear un Blog:</p> <ol> <li> <p>Edita el fitxer routes/web.php i afig una nova ruta a la URL posts. En accedir a aquesta ruta (http://localhost/posts), haurem de veure un missatge amb el text \u201cLlistat de posts\u201d.</p> </li> <li> <p>Afig una nova ruta parametritzada a posts/{id} , de manera que el par\u00e0metre id siga num\u00e8ric (\u00e9s a dir, nom\u00e9s continga d\u00edgits del 0 al 9) i obligatori. Fes que la ruta retorne el missatge \"Fitxa del post XXXX\", sent XXXX l'id que haja rebut com a par\u00e0metre.</p> </li> </ol> <p>Posa un nom a les dos rutes que has definides fins ara:</p> <ul> <li>a la del llistat la direm \"posts_llistat\"</li> <li>a la de fitxa que acabes de crear, la direm \"posts_fitxa\".</li> </ul> <p>A m\u00e9s, a la ruta que carrega el wellcome l'anomenarem \"inici\".</p> <ol> <li> <p>Definix una plantilla anomenada plantilla.blade.php en la carpeta de vistes del projecte ( resources/views/layouts ). Defineix una cap\u00e7alera amb una secci\u00f3 yield per al t\u00edtol, i una altra per al contingut de la p\u00e0gina, com la de l'exemple que hem vist anteriorment. Defineix en un arxiu a part en la subcarpeta partials , anomenat nav.blade.php , una barra de navegaci\u00f3 que ens permeta accedir a aquestes direccions de moment:</p> <ul> <li>P\u00e0gina d'inici</li> <li>Llistat de posts</li> </ul> </li> </ol> <p>Inclou la barra de navegaci\u00f3 en la plantilla base que has definit abans A partir de la plantilla base, defineix altres dues vistes en una subcarpeta posts , anomenades posts/llistat.blade.php i posts/fitxa.blade.php . Com a t\u00edtol de cada p\u00e0gina posa un breu text del que s\u00f3n (per exemple, \"Llistat posts\" i \"Fitxa post\"), i com a contingut de moment deixa un encap\u00e7alat h1 que indique la p\u00e0gina en la qual estem: \"Llistat de posts\" o \"Fitxa del post XXXX\", on XXXX ser\u00e0 l'identificador del post que haurem passat per la URL (i que deur\u00e0s passar a la vista).</p> <p>Fes que les rutes corresponents de routes/web.php que ja has definit renderitzen aquestes vistes en lloc de retornar text pla.</p> <p>Edita l'arxiu partials/nav.blade.php per a modificar la barra de navegaci\u00f3 i deixar-la amb un estil particular de tailwindcss. Pots consultar aquesta p\u00e0gina per a prendre idees d'alguns dissenys que pots aplicar en la barra de navegaci\u00f3. Modificat l'arxiu welcome.blade.php  i canvia-ho perqu\u00e8 tamb\u00e9 herete de la plantilla base. Afig algun text introductori com a contingut. </p> <ol> <li>Instal\u00b7la el tailwind CSS.</li> <li>Crea un components Alert per a vore les alertes de l'aplicaci\u00f3. Aquest component tindr\u00e0 un atribut type que pot ser success, error o warning. El component mostrar\u00e0 un missatge d'alerta amb el text que li passem com a contingut i el tipus d'alerta que li passem com a atribut. El component tindr\u00e0 un estil diferent per a cada tipus d'alerta. Els estils els pots trobar en la documentaci\u00f3 de tailwindcss.</li> <li>Fes una p\u00e0gina d'error 404.blade i mostra un missatge mitjan\u00e7ant Alert. Aquesta p\u00e0gina s'ha de mostrar quan l'usuari accedix a una ruta que no existeix.</li> </ol>"},{"location":"07laravelTasques.html","title":"Tasques","text":""},{"location":"07laravelTasques.html#tasques-programades-task-scheduling","title":"Tasques Programades (Task Scheduling)","text":"<p>Laravel proporciona una manera elegant d'executar tasques programades com l'enviament de correus, neteja de la base de dades, etc., sense necessitat de crear crons complexos al servidor.</p>"},{"location":"07laravelTasques.html#configuracio-del-scheduler","title":"Configuraci\u00f3 del Scheduler","text":"<p>Cron a Nivell de Servidor: Necessites afegir una entrada a crontab en el teu servidor que executa schedule:run cada minut.</p> <pre><code>* * * * * cd /path-de-tu-projecte &amp;&amp; php artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1\n</code></pre>"},{"location":"07laravelTasques.html#creacio-de-comandos","title":"Creaci\u00f3 de Comandos","text":"<p>Pots crear comandos amb Artisan per a ser programats:</p> <pre><code>php artisan make:command NomComando\n</code></pre> <p>Aix\u00f2 generar\u00e0 una nova classe de comando en el directori app/Console/Commands.</p>"},{"location":"07laravelTasques.html#estructura-del-comando","title":"Estructura del Comando","text":"<p>La classe del comando contindr\u00e0 un parell de propietats i m\u00e8todes importants:</p> <p>$signature: Una cadena que defineix com s'invoca el comando des de la l\u00ednia de comandes. $description: Una breu descripci\u00f3 del que fa el comando. handle(): El m\u00e8tode on escriur\u00e0s la l\u00f2gica que s'executar\u00e0 quan es cridi el comando.</p>"},{"location":"07laravelTasques.html#exemple-de-comando","title":"Exemple de Comando","text":"<p>Suposem que vols crear un comando per a enviar correus de recordatori als usuaris. Ac\u00ed tens un exemple:</p> <pre><code>namespace App\\Console\\Commands;\n\nuse Illuminate\\Console\\Command;\nuse App\\Models\\User;\nuse App\\Mail\\ReminderMail;\nuse Illuminate\\Support\\Facades\\Mail;\n\nclass SendReminders extends Command\n{\n    protected $signature = 'send:reminders';\n    protected $description = 'Envia correus de recordatori als usuaris.';\n\n    public function handle()\n    {\n        $users = User::all(); // Obtenir tots els usuaris\n\n        foreach ($users as $user) {\n            Mail::to($user-&gt;email)-&gt;send(new ReminderMail());\n        }\n\n        $this-&gt;info('Correus de recordatori enviats correctament!');\n    }\n}\n</code></pre>"},{"location":"07laravelTasques.html#programar-el-comando","title":"Programar el Comando","text":"<p>Una vegada creat el comando, el seg\u00fcent pas \u00e9s programar-lo en l'arxiu app/Console/Kernel.php. Ac\u00ed, pots definir quan s'ha d'executar el comando usant una varietat de m\u00e8todes com daily, hourly, everyMinute, etc.</p> <pre><code>protected function schedule(Schedule $schedule)\n{\n$schedule-&gt;command('send:reminders')-&gt;daily();\n}\n</code></pre> <p>En aquest exemple, el comando send:reminders s'executar\u00e0 di\u00e0riament.</p>"},{"location":"07laravelTasques.html#esdeveniments-events-i-oidors-listeners","title":"Esdeveniments (Events) i O\u00efdors (Listeners)","text":"<p>Els esdeveniments s\u00f3n una forma de desacoplar diverses parts de l'aplicaci\u00f3 i consisteixen en dos parts principals: esdeveniments (events) i o\u00efdors (listeners).</p>"},{"location":"07laravelTasques.html#creacio-desdeveniments","title":"Creaci\u00f3 d'Esdeveniments","text":"<p><pre><code>php artisan make:event NomEsdeveniment\n</code></pre> A\u00e7\u00f2 crear\u00e0 una nova classe d'esdeveniment dins del directori app/Events.</p> <p>Exemple d'Esdeveniment:</p> <p><pre><code>namespace App\\Events;\n\nuse Illuminate\\Foundation\\Events\\Dispatchable;\nuse Illuminate\\Queue\\SerializesModels;\n\nclass UserRegistered\n{\n    use Dispatchable, SerializesModels;\n\n    public $user;\n\n    public function __construct(User $user)\n    {\n        $this-&gt;user = $user;\n    }\n}\n</code></pre> En aquest exemple, l'esdeveniment UserRegistered s'utilitza per a anunciar que un usuari s'ha registrat.</p>"},{"location":"07laravelTasques.html#creacio-doidors","title":"Creaci\u00f3 d'O\u00efdors","text":"<pre><code>php artisan make:listener NomOidor --event=NomEsdeveniment\n</code></pre> <p>Els o\u00efdors reaccionen quan s'activa un esdeveniment. Defineix la l\u00f2gica de resposta en l'o\u00efdor.</p> <p>Exemple d'O\u00efdor:</p> <p><pre><code>namespace App\\Listeners;\n\nuse App\\Events\\UserRegistered;\nuse Illuminate\\Queue\\InteractsWithQueue;\nuse Illuminate\\Contracts\\Queue\\ShouldQueue;\n\nclass SendWelcomeEmail\n{\n    use InteractsWithQueue;\n\n    public function handle(UserRegistered $event)\n    {\n        // Enviar correu de benvinguda\n        Mail::to($event-&gt;user-&gt;email)-&gt;send(new WelcomeEmail($event-&gt;user));\n    }\n}\n</code></pre> En aquest exemple, l'o\u00efdor SendWelcomeEmail escolta l'esdeveniment UserRegistered i envia un correu de benvinguda.</p>"},{"location":"07laravelTasques.html#registrar-esdeveniments-i-oidors","title":"Registrar Esdeveniments i O\u00efdors","text":"<p>Has de registrar els teus esdeveniments i o\u00efdors en l'arxiu EventServiceProvider.php dins del directori app/Providers.</p> <pre><code>protected $listen = [\n'App\\Events\\UserRegistered' =&gt; [\n'App\\Listeners\\SendWelcomeEmail',\n],\n];\n</code></pre>"},{"location":"07laravelTasques.html#disparar-esdeveniments","title":"Disparar Esdeveniments","text":"<p>Pots disparar un esdeveniment en qualsevol part de la teua aplicaci\u00f3:   <pre><code>event(new NomEsdeveniment($data));\n</code></pre></p>"},{"location":"07laravelValidacioAutenticacio.html","title":"Formularis i validaci\u00f3 de dades","text":"<p>Validaci\u00f3 de Formularis</p> <p>Casos Especials</p>"},{"location":"07laravelValidacioAutenticacio.html#dades-dentrada","title":"Dades d'entrada","text":"<p>Laravel facilita l'acc\u00e9s a les dades d'entrada de l'usuari a trav\u00e9s de solament uns pocs m\u00e8todes. No importa el tipus de petici\u00f3 que s'haja realitzat (POST, GET, PUT, DELETE), si les dades s\u00f3n d'un formulari o si s'han afegit a la query string, en tots els casos s'obtindran de la mateixa forma.</p> <p>Per a aconseguir acc\u00e9s a aquests m\u00e8todes Laravel utilitza injecci\u00f3 de depend\u00e8ncies. A\u00e7\u00f2 \u00e9s simplement afegir la classe Request al constructor o m\u00e8tode del controlador en el qual ho necessitem. Laravel s'encarregar\u00e0 d'injectar aquesta depend\u00e8ncia ja inicialitzada i directament podrem usar aquest par\u00e0metre per a obtenir les dades d'entrada. </p>"},{"location":"07laravelValidacioAutenticacio.html#creacio-i-enviament-de-formularis","title":"Creaci\u00f3 i enviament de formularis","text":"<p>Si definim un formulari en una vista, es defineix amb els conceptes que ja sabem d'HTML. Com a \u00fanic afegit, en el camp action del formulari podem utilitzar Blade i la funci\u00f3 route per a indicar el nom de ruta a la qual volem enviar el formulari. Vegem, per exemple, com definir un formulari per a donar d'alta noves pelicules. Creem una vista anomenada create.blade.php en la subcarpeta resources/views/catalog , amb un contingut com aquest:</p> <pre><code>@extends('plantilla')\n@section('titulo', 'Nueva Pelicula')\n@section('contenido')\n    &lt;h1&gt;Nueva pelicula&lt;/h1&gt;\n    &lt;form action=\"{{ route('catalog.store') }}\" method='POST'&gt;\n        @csrf\n            &lt;div class=\"form-group\"&gt;\n                &lt;label for=\"title\"&gt;T\u00edtulo&lt;/label&gt;\n                &lt;input type=\"text\" name=\"title\" id=\"title\" class=\"form-control\"&gt;\n            &lt;/div&gt;\n            &lt;div class=\"form-group\"&gt;\n                &lt;label for='year'&gt;Any:&lt;/label&gt;\n                &lt;input type='number' name='year' /&gt;\n            &lt;/div&gt;\n            &lt;div class=\"form-group\"&gt;\n                &lt;label for='director'&gt;Director:&lt;/label&gt;\n                &lt;input type='text' name='director' /&gt;\n            &lt;/div&gt;\n           &lt;div class=\"form-group\"&gt;\n                &lt;label for='poster'&gt;Poster:&lt;/label&gt;\n                &lt;input type='url' name='poster' /&gt;\n            &lt;/div&gt;\n            &lt;div class=\"form-group\"&gt;\n                &lt;label for=\"synopsis\"&gt;Resumen&lt;/label&gt;\n                &lt;textarea name=\"synopsis\" id=\"synopsis\" class=\"form-control\" rows=\"3\"&gt;&lt;/textarea&gt;\n            &lt;/div&gt;\n             &lt;div class=\"form-group text-center\"&gt;\n                &lt;button type=\"submit\" class=\"btn btn-primary\" style=\"padding:8px 100px;margin-top:25px;\"&gt;Afegir pel.l\u00edcula&lt;/button&gt;\n            &lt;/div&gt;\n    &lt;/form&gt; \n@endsection\n</code></pre> <p>Un segon afegit m\u00e9s que hem de tindre en compte \u00e9s que Laravel per defecte protegeix d'atacs XSS (Cross Site Scripting) de suplantaci\u00f3 d'identitat, per la qual cosa obtindrem un error de tipus 419 si enviem un formulari no validat. Per a solucionar aquest problema, n'hi ha prou amb utilitzar la directiva @csrf en el formulari, que afig un camp ocult amb un token de validaci\u00f3 de l'usuari.</p> <p>En qualsevol cas, aquest formulari s'enviar\u00e0 a la ruta indicada, que ser\u00e0 el m\u00e8tode store de catalog que s'encarregar\u00e0 de recollir les dades de la petici\u00f3 a trav\u00e9s del par\u00e0metre Request d'aquest m\u00e8tode. Disposem d'un m\u00e8tode get per a accedir a cada camp del formulari a partir del seu nom:</p> <pre><code>public function store(Request $request)\n{\n    $movie = new Movie();\n    $movie-&gt;titulo = $request-&gt;get('titulo');\n    $movie-&gt;director = $request-&gt;get('director');\n    $movie-&gt;year = $request-&gt;get('year');\n    ..\n    $movie-&gt;save();\n    return redirect()-&gt;route('movie.index');\n}\n</code></pre> <p>En aquest exemple com es pot veure s'ha afegit la classe Request com a par\u00e0metre al m\u00e8tode store. Laravel autom\u00e0ticament s'encarrega d'injectar aquestes depend\u00e8ncies pel que directament podem usar la variable $request per a obtenir les dades d'entrada.</p> <p>Si el m\u00e8tode del controlador tinguera m\u00e9s par\u00e0metres simplement els haurem d'afegir a continuaci\u00f3 de les depend\u00e8ncies, per exemple:</p> <pre><code>    public function edit(Request $request, $id) {\n    //... }\n</code></pre> <p>A continuaci\u00f3 veurem els m\u00e8todes i dades que podem obtenir a partir de la variable $request.</p>"},{"location":"07laravelValidacioAutenticacio.html#obtenir-els-valors-dentrada","title":"Obtenir els valors d'entrada","text":"<p>Per a obtenir el valor d'una variable d'entrada usem el m\u00e8tode input indicant el nom de la variable: </p> <pre><code>    $name = $request-&gt;input('nom');\n    // O simplement....\n    $name = $request-&gt;nom;\n</code></pre> <p>Tamb\u00e9 podem especificar un valor per defecte com a segon par\u00e0metre: </p> <pre><code>    $name = $request-&gt;input('nom', 'Pedro');\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#comprovar-si-una-variable-existeix","title":"Comprovar si una variable existeix","text":"<p>Si ho necessitem podem comprovar si un determinat valor existeix en les dades d'entrada: </p> <pre><code>    if ($request-&gt;has('nom')) { //...}\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#actualitzacions-i-esborrats","title":"Actualitzacions i esborrats","text":"<p>Per defecte, l'atribut method d'un formulari nom\u00e9s admet els valors GET o POST. Si volem enviar un formulari d'actualitzaci\u00f3 o esborrat, aquest ha d'anar associat als m\u00e8todes PUT o DELETE,respectivament. Per a aix\u00f2, podem emprar dins del mateix formulari la directiva @method ,indicant el nom del m\u00e8tode que volem usar:</p> <pre><code>&lt;form ...&gt;\n    @csrf\n    @method('PUT')\n    ...\n&lt;/form&gt;\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#validacio-de-formularis","title":"Validaci\u00f3 de formularis","text":"<p>A m\u00e9s d'aplicar una validaci\u00f3 en el client a trav\u00e9s d'HTML5, que tamb\u00e9 \u00e9s recomanable, s'han de validar les dades en el servidor. Per a fer aix\u00f2, el propi objecte request proporciona un m\u00e8tode anomenat validate , al qual li passem un array amb les regles de validaci\u00f3. Per exemple, aix\u00ed comprovar\u00edem que el t\u00edtol i l'editorial s'han enviat, i que el t\u00edtol t\u00e9 una grand\u00e0ria m\u00ednima de 3 car\u00e0cters. A m\u00e9s, comprovem que el preu \u00e9s un valor num\u00e8ric real positiu.</p> <pre><code>public function store()\n{\n    request()-&gt;validate(\n    [\n        'title' =&gt; 'required|min:3',\n        'director' =&gt; 'required',\n        'year' =&gt; 'required|numeric|min:1900'\n    ]\n);\n// ... C\u00f3digo para procesar el formulario\n}\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#utilitzar-form-requests-per-a-validacions-mes-complexes","title":"Utilitzar form requests per a validacions m\u00e9s complexes","text":"<p>Si hem de validar uns pocs camps, pot ser adequat cridar al m\u00e8tode validate des del propi m\u00e8tode del controlador, per\u00f2 per a formularis m\u00e9s grans el codi pot cr\u00e9ixer massa. Una alternativa que ofereix laravel \u00e9s crear un form request, una classe addicional que cont\u00e9 la l\u00f2gica de validaci\u00f3 d'una petici\u00f3. Es creen amb el comando php artisan , i l'opci\u00f3 make:request ,seguida del nom de la classe a crear:</p> <pre><code>php artisan make:request MoviePost\n</code></pre> <p>Aquesta classe s'emmagatzema per defecte en app/Http/Requests , i cont\u00e9 un parell de m\u00e8todes predefinits: authorize : retorna un boole\u00e0 depenent de si l'usuari actual est\u00e0 autoritzat a enviar la petici\u00f3 o no. Per a molts formularis que no requerisquen autoritzaci\u00f3 pr\u00e8via podem simplement retornar true . Ser\u00e0 el que farem de moment en aquest formulari. rules : aquest \u00e9s el m\u00e8tode que m\u00e9s ens interessa. Retorna un array de regles de validaci\u00f3 com les que ten\u00edem en el controller, aix\u00ed que movem aqueix codi ac\u00ed:</p> <pre><code>public function rules()\n{\nreturn [\n    'title' =&gt; 'required|min:3',\n    'director' =&gt; 'required',\n    'year' =&gt; 'required|numeric|min:1900'\n];\n}\n</code></pre> <p>Ara, en el m\u00e8tode del controlador simplement hem d'injectar aquest form request com a par\u00e0metre (si observem la classe que s'ha creat, \u00e9s un subtipus de Request ), i usar-lo per a validar. La validaci\u00f3 \u00e9s autom\u00e0tica, \u00e9s a dir, no hem d'afegir m\u00e9s codi al controlador que l'objecte injectat com a par\u00e0metre, que s'encarregar\u00e0 de validar la pr\u00f2pia petici\u00f3 que cont\u00e9 a trav\u00e9s del m\u00e8tode rules .</p> <pre><code>public function store(MoviePost $request)\n{\n// Si entramos aqu\u00ed, el formulario es v\u00e1lido\n}\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#mostrar-missatges-derror","title":"Mostrar missatges derror","text":"<p>Si la validaci\u00f3 \u00e9s correcta, es retornar\u00e0 la dada del final de la funci\u00f3, per\u00f2 si falla algun camp, es tornar\u00e0 a la p\u00e0gina del formulari, amb la informaci\u00f3 de l'error que s'haja produ\u00eft. Podem accedir des de qualsevol lloc de Laravel a la variable \\$errors amb els errors que s'hagen produ\u00eft en una operaci\u00f3 determinada. Aquesta variable t\u00e9 un m\u00e8tode boole\u00e0 anomenat any que comprova si hi ha algun error, i un altre m\u00e8tode anomenat all que retorna el array d'errors produ\u00efts. Combinant aquests dos m\u00e8todes amb Blade, podem mostrar el llistat d'errors de validaci\u00f3 abans del formulari, d'aquesta manera:</p> <pre><code>@if ($errors-&gt;any())\n    &lt;ul&gt;\n        @foreach($errors-&gt;all() as $error)\n            &lt;li&gt;{{ $error }}&lt;/li&gt;\n        @endforeach\n    &lt;/ul&gt;\n@endif\n&lt;form ...&gt;\n    @csrf\n    ...\n&lt;/form&gt;\n</code></pre> <p>Tamb\u00e9 podem emprar el m\u00e8tode first del array d'errors per a obtindre el primer error associat a un camp, i mostrar-lo baix o sobre el camp en q\u00fcesti\u00f3. Per exemple:</p> <pre><code>&lt;form action=\"{{ route('movies.store') }}\" method=\"POST\"&gt;\n    @csrf\n    &lt;div class=\"form-group\"&gt;\n        &lt;label for=\"titulo\"&gt;T\u00edtulo:&lt;/label&gt;\n        &lt;input type=\"text\" class=\"form-control\" name=\"titulo\"\nid=\"titulo\"&gt;\n        @if ($errors-&gt;has('titulo'))\n            &lt;div class=\"text-danger\"&gt;\n                {{ $errors-&gt;first('titulo') }}\n            &lt;/div&gt;\n        @endif\n    &lt;/div&gt;\n...\n</code></pre> <p>A m\u00e9s, podem personalitzar el missatge d'error a mostrar, redefinint en la classe del form request el m\u00e8tode messages* . En aquest m\u00e8tode retornem un array amb el missatge a mostrar per a cada possible error de validaci\u00f3. Per exemple:</p> <pre><code>public function messages()\n{\n    return [\n        'titulo.required' =&gt; 'El t\u00edtulo es obligatorio',\n        ...\n    ];\n}\n</code></pre> <p>De manera alternativa, si optem per validar el formulari en el propi controlador, aquest array de missatges \u00e9s passa com a segon par\u00e0metre en l'anomenada al m\u00e8tode validate :</p> <pre><code>request()-&gt;validate(\n[\n    'title' =&gt; 'required|min:3',\n    'director' =&gt; 'required',\n    'year' =&gt; 'required|numeric|min:1900'\n], [\n    'titulo.required' =&gt; 'El t\u00edtulo es obligatorio',\n    ...\n]\n);\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#recordar-valors-enviats","title":"Recordar valors enviats","text":"<p>Un problema derivat de la validaci\u00f3 de dades \u00e9s que, en tornar a la p\u00e0gina del formulari despr\u00e9s d'un error, els camps que ja s'han examinat fins a l'error, encara que foren correctes, han perdut el valor que tenien, i pot resultar enutj\u00f3s haver-los de que emplenar una altra vegada. Per a mantindre el seu antic valor, podem afegir l'atribut value en cada camp del formulari, i utilitzar amb Blade una funci\u00f3 anomenada old , que permet accedir a l'anterior valor d'un determinat camp, referenciat pel seu nom:</p> <pre><code>&lt;form action=\"{{ route('movies.store') }}\" method=\"POST\"&gt;\n    @csrf\n    &lt;div class=\"form-group\"&gt;\n        &lt;label for=\"titulo\"&gt;T\u00edtulo:&lt;/label&gt;\n        &lt;input type=\"text\" class=\"form-control\" name=\"titulo\"\n            id=\"titulo\" value=\"{!! old('titulo') !!}\"&gt;\n        @if ($errors-&gt;has('titulo'))\n            &lt;div class=\"text-danger\"&gt;\n                {{ $errors-&gt;first('titulo') }}\n            &lt;/div&gt;\n        @endif\n    &lt;/div&gt;\n...\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#casos-especials","title":"Casos especials","text":""},{"location":"07laravelValidacioAutenticacio.html#obtenir-dades-agrupades","title":"Obtenir dades agrupades","text":"<p>O tamb\u00e9 podem obtenir totes les dades d'entrada alhora (en un array) o solament alguns d'ells:</p> <pre><code>    // Obtenir tots:\n        $input = $request-&gt;all();\n    // Obtenir solament els camps indicats:\n        $input = $request-&gt;only('username', 'password');\n    // Obtenir tots excepte els indicats: \n        $input = $request-&gt;except('credit_card');\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#assignacio-massiva","title":"Assignaci\u00f3 Massiva","text":"<p>Tamb\u00e9 es pot utilitzar el m\u00e8tode create per a emmagatzemar un model en una \u00fanica l\u00ednia. Des del m\u00e8tode es retornar\u00e0 la inst\u00e0ncia del model inserit. No obstant a\u00e7\u00f2, abans d'a\u00e7\u00f2, cal especificar la propietat fillable o guarded del model, doncs tots els models Eloquent posseeixen protecci\u00f3 contra l'assignaci\u00f3 en massa.</p> <p>Una vulnerabilitat d'assignaci\u00f3 massiva t\u00e9 lloc quan un usuari passa un par\u00e0metre HTTP inesperat a trav\u00e9s de la sol\u00b7licitud, i aquest par\u00e0metre canvia una columna de la base de dades que no s'esperava. Per exemple, un usuari malintencionat podria enviar un par\u00e0metre is_admin a trav\u00e9s d'una petici\u00f3 HTTP, el qual es marejaria dins del m\u00e8tode create del model, permetent a l'usuari postular-se com un administrador.</p> <p>Aix\u00ed que, per a comen\u00e7ar, cal definir a quins atributs se'ls permet l'assignaci\u00f3 massiva. A\u00e7\u00f2 s'estableix en la propietat fillable del model. Per exemple, anem a permetre l'assignaci\u00f3 massiva sobre l'atribut name d'un model Flight:</p> <pre><code>&lt;?php\n\nnamespace App;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Flight extends Model\n{\n    /**\n     * The attributes that are mass assignable.\n     *\n     * @var array\n     */\n    protected $fillable = ['name'];\n}\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#atributes-guarding","title":"Atributes Guarding","text":"<p>Mentre que \\$fillable serveix com una \"llista blanca\" d'atributs que poden ser assignats massivament, tamb\u00e9 es pot optar per \\$guarded. La propietat guarded cont\u00e9 un array d'atributs que no poden ser assignats de forma massiva.  La resta d'atributs que no es troben en el array si podran. Pel que, \\$guarded actua com una \"llista negra\". Per descomptat, s'ha d'establir \\$fillable o \\$guarded - mai tots dos. En l'exemple que segueix, tots els atributs excepte price comptaran amb assignaci\u00f3 massiva:</p> <pre><code>&lt;?php\n\nnamespace App;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Flight extends Model\n{\n    /**\n     * The attributes that aren't mass assignable.\n     *\n     * @var array\n     */\n    protected $guarded = ['price'];\n}\n</code></pre> <p>Si es desitja que tots els atributs es puguen assignar en massa, es pot definir la propietat $guarded com un array buit:</p> <pre><code>/*\n* The attributes that llauren't mass assignable.\n*\n* @var array\n/\nprotected $guarded = [];\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#fitxers-dentrada","title":"Fitxers d'entrada","text":"<p>Laravel facilita una s\u00e8rie de classes per a treballar amb els fitxers d'entrada. Per exemple per a obtenir un fitxer que s'ha enviat en el camp amb nom photo i guardar-ho en una variable, hem de fer:</p> <pre><code>$file = $request-&gt;file('photo');\n// O simplement... \n$file = $request-&gt;photo;\n</code></pre> <p>Si volem podem comprovar si un determinat camp t\u00e9 un fitxer assignat:</p> <pre><code>if ($request-&gt;hasFile('photo')) { //...}\n</code></pre> <p>El Symfony\\Component\\HttpFoundation\\File\\UploadedFile est\u00e9n de la classe de PHP SplFileInfo, per tant, tindrem molts m\u00e8todes que podem utilitzar per a obtenir dades del fitxer o per a gestionar-ho.</p> <p>Per exemple, per a comprovar si el fitxer que s'ha pujat \u00e9s v\u00e0lid:</p> <pre><code>if ($request-&gt;file('photo')-&gt;isValid()) { //...}\n</code></pre> <p>O per a moure el fitxer d'entrada a una ruta determinada: </p> <pre><code>// Moure el fitxer a la ruta conservant el nom original\n    $request-&gt;file('photo')-&gt;move($destinationPath);\n// Moure el fitxer a la ruta amb un nou nom: \n    $request-&gt;file('photo')-&gt;move($destinationPath, $fileName);\n</code></pre> <p>Laravel incorpora una llibreria que ens permet gestionar l'acc\u00e9s i escriptura de fitxers en un emmagatzematge. L'interessant d'a\u00e7\u00f2 \u00e9s que ens permet manejar de la mateixa forma l'emmagatzematge en local, en Amazon S3 i en Rackspace Cloud Storage, simplement ho hem de configurar en config/filesystems.php i posteriorment els podrem usar de la mateixa forma. </p> <p>Per exemple, per a emmagatzemar un fitxer pujat mitjan\u00e7ant un formulari hem d'usar el m\u00e8tode store indicant com a par\u00e0metre la ruta on volem emmagatzemar el fitxer (sense el nom del fitxer):</p> <pre><code>$path = $request-&gt;photo-&gt;store('images');\n$path = $request-&gt;photo-&gt;store('images', 's3'); // Especificar un emmagatzematge\n</code></pre> <p>Aquests m\u00e8todes retornaran el path fins al fitxer emmagatzemat de forma relativa a l'arrel de disc configurada. Per al nom del fitxer es generar\u00e0 autom\u00e0ticament un UUID (identificador \u00fanic universal). Si volem especificar nosaltres el nom haur\u00edem d'usar el m\u00e8tode storeAs:</p> <pre><code>$path = $request-&gt;photo-&gt;storeAs('images', 'filename.jpg'); \n$path = $request-&gt;photo-&gt;storeAs('images', 'filename.jpg', 's3');\n</code></pre> <p>Altres m\u00e8todes que podem utilitzar per a recuperar informaci\u00f3 del fitxer s\u00f3n:</p> <pre><code>    // Obtenir la ruta:\n    $path = $request-&gt;file('photo')-&gt;getRealPath();\n    // Obtenir el nom original:\n    $name = $request-&gt;file('photo')-&gt;getClientOriginalName();\n    // Obtenir l'extensi\u00f3:\n    $extension = $request-&gt;file('photo')-&gt;getClientOriginalExtension();\n    // Obtenir la grand\u00e0ria:\n    $size = $request-&gt;file('photo')-&gt;getSize();\n    // Obtenir el Type:\n    $acarone = $request-&gt;file('photo')-&gt;getMimeType();\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#control-dusuaris","title":"Control d'usuaris","text":"<p>Primer, haur\u00edeu d'instal\u00b7lar un kit d'iniciador d'aplicacions Laravel. Els kits d'inici actuals, Laravel Breeze i Laravel Jetstream, ofereixen punts de partida molt ben dissenyats per incorporar l'autenticaci\u00f3 a l'aplicaci\u00f3 Laravel.</p> <p>Laravel Breeze \u00e9s una implementaci\u00f3 m\u00ednima i simple de totes les funcions d'autenticaci\u00f3 de Laravel, incloent-hi l'inici de sessi\u00f3, registre, restabliment de contrasenya, verificaci\u00f3 de correu electr\u00f2nic i confirmaci\u00f3 de contrasenya. La capa de visi\u00f3 de Laravel Breeze est\u00e0 formada per plantilles simples de Blade amb CSS de Tailwind. Breeze tamb\u00e9 ofereix una opci\u00f3 de bastida basada en Inertia utilitzant Vue o React.</p> <p>El Laravel Jetstream \u00e9s un kit d'inici d'aplicaci\u00f3 m\u00e9s robust que inclou suport per a bastides de la vostra aplicaci\u00f3 amb Livewire o Inertia i Vue. A m\u00e9s, Jetstream ofereix suport opcional per a l'autenticaci\u00f3 de dos factors, equips, gesti\u00f3 de perfils, gesti\u00f3 de sessions del navegador, suport d'API via Laravel Sanctum, supressi\u00f3 de comptes, i m\u00e9s.</p>"},{"location":"07laravelValidacioAutenticacio.html#recuperancio-lusuari-autenticat","title":"Recuperanci\u00f3 l'usuari autenticat","text":"<p>Despr\u00e9s d'instal\u00b7lar un kit d'inici d'autenticaci\u00f3 i permetre als usuaris registrar-se i autenticar-se amb la vostra aplicaci\u00f3, sovint haureu d'interactuar amb l'usuari actualment autenticat. Mentre gestioneu una sol\u00b7licitud entrant, podeu accedir a l'usuari autenticat mitjan\u00e7ant el m\u00e8tode d'usuari de la fa\u00e7ana Auth:</p> <pre><code>use Illuminate\\Support\\Facades\\Auth;\n\n// Retrieve the currently authenticated user...\n$user = Auth::user();\n\n// Retrieve the currently authenticated user's ID...\n$id = Auth::id();\n</code></pre> <p>Alternativament, un cop un usuari estiga autenticat, podeu accedir a l'usuari autenticat mitjan\u00e7ant una inst\u00e0ncia d'Illuminate\\Http\\Request. Recordeu, les classes amb tipus s'injectaran autom\u00e0ticament als vostres m\u00e8todes de control.  Per escriure l'objecte Illuminate\\Http\\Request, podeu accedir convenientment a l'usuari autenticat des de qualsevol m\u00e8tode de control de la vostra aplicaci\u00f3 mitjan\u00e7ant el m\u00e8tode d'usuari de la sol\u00b7licitud:</p> <pre><code>&lt;?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\n\nclass FlightController extends Controller\n{\n    /**\n     * Update the flight information for an existing flight.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request)\n    {\n        // $request-&gt;user()\n    }\n}\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#determinar-si-lusuari-actual-esta-autenticat","title":"Determinar si l'usuari actual est\u00e0 autenticat","text":"<p>Per determinar si l'usuari que fa la petici\u00f3 HTTP entrant est\u00e0 autenticat, podeu utilitzar el m\u00e8tode de comprovaci\u00f3 a la fa\u00e7ana d'Auth. Aquest m\u00e8tode retornar\u00e0 cert si l'usuari est\u00e0 autenticat:</p> <pre><code>use Illuminate\\Support\\Facades\\Auth;\n\nif (Auth::check()) {\n// The user is logged in...\n}\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#protegir-les-rutes-dacces-restringit","title":"Protegir les rutes d'acc\u00e9s restringit","text":"<p>Ara que ja tenim definit el mecanisme de login (controlador amb m\u00e8tode d'autenticaci\u00f3, formulari de login i ruta associada), podem protegir aquelles rutes o enlla\u00e7os que vulguem que siguen d'acc\u00e9s restringit. Per exemple, podem fer que les operacions de creaci\u00f3, esborrat i edici\u00f3 de videos (funcions create , store , edit , update i destroy ) nom\u00e9s estiguen disponibles per a usuaris autenticats. Aix\u00f2 pot fer-se de diverses formes.</p> <p>Si tenim una ruta de recursos ( Route::resource ) en l'arxiu routes/web.php , llavors l'opci\u00f3 m\u00e9s c\u00f2moda \u00e9s definir un constructor en el controlador associat (en aquest cas,MovieController ), i especificar quines funcions volem protegir, b\u00e9 amb only o amb except (en aquest \u00faltim cas, es protegiran totes les rutes excepte les indicades en la llista):</p> <pre><code>class LibroController extends Controller\n{\n    public function __construct()\n    {\n        $this-&gt;middleware('auth',['only' =&gt; ['create', 'store', 'edit', 'update', 'destroy']]);\n    }\n...\n</code></pre> <p>Si definim les rutes soltes, podem emprar el m\u00e8tode middleware per a indicar en cadascuna si volem que s'aplique el middleware d'autenticaci\u00f3:</p> <pre><code>Route::get('prueba', [PruebaController::class, 'create'])-&gt;middleware('auth');\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#redirigir-els-usuaris-no-autenticats","title":"Redirigir els usuaris no autenticats","text":"<p>Quan el middleware auth detecta un usuari no autenticat, redirigir\u00e0 l'usuari a la ruta amb nom d'inici de sessi\u00f3. Podeu modificar aquest comportament actualitzant la funci\u00f3 redirectTo al fitxer app/Http/Middleware/Authenticate de la vostra aplicaci\u00f3:</p> <pre><code>/**\n* Get the path the user should be redirected to.\n*\n* @param  \\Illuminate\\Http\\Request  $request\n* @return string\n  */\n  protected function redirectTo($request)\n  {\n  return route('login');\n  }\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#configurar-la-configuracio-regional","title":"Configurar la configuraci\u00f3 regional","text":"<p>L'idioma predeterminat per a l'aplicaci\u00f3 s'emmagatzema a l'opci\u00f3 de configuraci\u00f3 regional del fitxer de configuraci\u00f3 config/app.php.  Es pot modificar aquest valor per adaptar-lo a les necessitats de l'aplicaci\u00f3.</p> <p>Podeu modificar la llengua per defecte per a una sol\u00b7licitud HTTP \u00fanica en temps d'execuci\u00f3 utilitzant el m\u00e8tode setLocale proporcionat per la fa\u00e7ana de l'aplicaci\u00f3:</p> <pre><code>use Il\u00b7lumina\\Support\\Facades\\App;\n\nRoute::get('/greeting/{locale}', funci\u00f3 ($locale) {\nif (! in,array($locale, ['en', 'es', 'ca'])) {\n    abort(400);\n}\n\n    App::setLocale($locale);\n\n    //\n});\n</code></pre> <p>Es pot configurar una \"llengua alternativa\", que s'utilitzar\u00e0 quan la llengua activa no contingui una cadena de traducci\u00f3 donada. Igual que la llengua per defecte, la llengua alternativa tamb\u00e9 est\u00e0 configurada al fitxer de configuraci\u00f3 config/app.php:</p> <p>'fallback =locale' =&gt; 'en',</p>"},{"location":"07laravelValidacioAutenticacio.html#definicio-de-cadenes-de-traduccio","title":"Definici\u00f3 de cadenes de traducci\u00f3","text":"<p>#### \u00das de tecles curtes Normalment, les cadenes de traducci\u00f3 s'emmagatzemen en fitxers dins del directori de lang. Dins d'aquest directori, hi ha d'haver un subdirectori per a cada llengua compatible amb l'aplicaci\u00f3. Aquesta \u00e9s l'aproximaci\u00f3 que Laravel utilitza per gestionar les cadenes de traducci\u00f3 per a les caracter\u00edstiques integrades de Laravel, com ara missatges d'error de validaci\u00f3:</p> <p>/lang /en message.php /es message.php</p> <p>Tots els fitxers d'idioma retornen una matriu de cadenes clau. Per exemple:</p> <pre><code>// lang/en/messages.php\n\nreturn [\n\"Benvinguts\" =&gt; \"Benvinguts a la nostra aplicaci\u00f3!\",\n];\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#us-de-les-cadenes-de-traduccio-com-a-claus","title":"\u00das de les cadenes de traducci\u00f3 com a claus","text":"<p>Per a aplicacions amb un gran nombre de cadenes tradu\u00efbles, definir cada cadena amb una \"tecla curta\" pot resultar conf\u00fas quan es fa refer\u00e8ncia a les claus en les vistes i \u00e9s complicat inventar cont\u00ednuament claus per a cada cadena de traducci\u00f3 admesa per la vostra aplicaci\u00f3.</p> <p>Per aquesta ra\u00f3, Laravel tamb\u00e9 proporciona suport per definir cadenes de traducci\u00f3 utilitzant la traducci\u00f3 \"per defecte\" de la cadena com a clau. Els fitxers de traducci\u00f3 que utilitzen cadenes de traducci\u00f3 com a claus s'emmagatzemen com a fitxers JSON al directori de lang. Per exemple, si la vostra aplicaci\u00f3 t\u00e9 una traducci\u00f3 al castell\u00e0, haur\u00edeu de crear un fitxer lang/es.json:</p> <pre><code>{\n\"I love programming.\": \"Me encanta programar.\"\n}\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#recuperant-les-cadenes-de-traduccio","title":"Recuperant les cadenes de traducci\u00f3","text":"<p>Podeu recuperar les cadenes de traducci\u00f3 dels vostres fitxers de llengua utilitzant la funci\u00f3 auxiliar .. Si esteu utilitzant \u00abtecles curtes\u00bb per a definir les cadenes de traducci\u00f3, haureu de passar el fitxer que cont\u00e9 la clau i la clau mateixa a la funci\u00f3 . utilitzant la sintaxi \u00abpunt\u00bb. Per exemple, recuperarem la cadena de traducci\u00f3 benvinguda del fitxer de llengua lang/en/messages.php:</p> <p><pre><code>echo __('messages.welcome');\n</code></pre> Si la cadena de traducci\u00f3 especificada no existeix, la funci\u00f3 __ retornar\u00e0 la clau de la cadena de traducci\u00f3. Per tant, utilitzant l'exemple anterior, la funci\u00f3 . retornaria messages.wellcome amb satisfacci\u00f3 si la cadena de traducci\u00f3 no existeix.</p> <p>Si esteu utilitzant les cadenes de traducci\u00f3 predeterminades com a claus de traducci\u00f3, haureu de passar la traducci\u00f3 predeterminada de la cadena a la __funci\u00f3</p> <p><pre><code>echo __('I love programming.');\n</code></pre> De nou, si la cadena de traducci\u00f3 no existeix, la funci\u00f3 __ retornar\u00e0 la clau de la cadena de traducci\u00f3 que s'ha donat.</p> <p>Si utilitzeu el motor de templating Blade, podeu utilitzar la {{ }} sintaxi d'eco per mostrar la cadena de traducci\u00f3:</p> <pre><code>{{ __('missages.welcome') }}\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#substitucio-de-parametres-a-les-cadenes-de-traduccio","title":"Substituci\u00f3 de par\u00e0metres a les cadenes de traducci\u00f3","text":"<p>Si ho desitgeu, podeu definir par\u00e0metres a les cadenes de traducci\u00f3. Tots els par\u00e0metres estan prefixats amb un :. Per exemple, podeu definir un missatge de benvinguda amb un par\u00e0metre:</p> <pre><code>'benvingut' =&gt; 'Benvingut, :name',\n</code></pre> <p>Per a reempla\u00e7ar els par\u00e0metre en recuperar una cadena de traducci\u00f3, podeu passar una matriu de reempla\u00e7aments com a segon argument a la funci\u00f3 __</p> <p><pre><code>echo __('missages.welcome', ['name' =&gt; 'dayle']);\n</code></pre> Si el par\u00e0metres cont\u00e9 totes les lletres maj\u00fascules, o nom\u00e9s t\u00e9 la primera lletra en maj\u00fascula, el valor tradu\u00eft es posar\u00e0 en maj\u00fascula en conseq\u00fc\u00e8ncia:</p> <pre><code>'wellcome' =&gt; 'Benvingut, :NAME', // Benvingut, DAYLE\n'goodbye' =&gt; 'Ad\u00e9u, :Nom', // Ad\u00e9u, Dayle\n</code></pre>"},{"location":"07laravelValidacioAutenticacio.html#altres-consideracions","title":"Altres consideracions","text":"<p>La incorporaci\u00f3 del scaffolding d'autenticaci\u00f3, com podem comprovar, estalvia molta faena a l'hora de definir els mecanismes de registre i login d'usuaris en el sistema. No obstant aix\u00f2, queden algunes tasques pendents que poden requerir una configuraci\u00f3 addicional, i que no veurem en aquest curs per falta de temps.</p> <p>Una d'elles, per exemple, \u00e9s l'opci\u00f3 de recuperar contrasenya quan punxem en l'enlla\u00e7 de Vas oblidar la teua contrasenya?. En principi, i at\u00e9s que ens registrem amb un e-mail com login, ens demana que facilitem aquest e-mail per a enviar-nos un enlla\u00e7 per a restablir la contrasenya. No obstant aix\u00f2, hem de configurar apropiadament el correu SMTP per a poder enviar el missatge. Per a aix\u00f2, necessitem un compte origen, i depenent del servidor de correu on el tinguem creat (Gmail, Outlook, etc), la configuraci\u00f3 \u00e9s diferent. Ac\u00ed, per exemple, explica els passos a seguir per a configurar com a compte emissora una de Gmail.</p>"},{"location":"07laravelValidacioAutenticacio.html#definir-roles-us-de-middleware","title":"Definir roles. \u00das de middleware","text":"<p>Per a poder definir rols per als diferents usuaris de la nostra aplicaci\u00f3, \u00f2bviament hem de comen\u00e7ar per definir un nou camp en la taula d'usuaris per a emmagatzemar aquest rol.</p> <p>Despr\u00e9s, per a protegir certes rutes en funci\u00f3 dels rols, podem ocultar l'enlla\u00e7 en les vistes amb una simple comprovaci\u00f3. Per exemple, assumint que el camp dels rols es diu rol:</p> <pre><code>@if (Auth::user()-&gt;rol === 'admin')\n    // Mostrar contenido\n@endif\n</code></pre> <p>No obstant aix\u00f2, si accedim a la URL sense passar per l'enlla\u00e7, podrem veure el contingut. Devem novament incorporar el middleware auth al controlador que corresponga (si no ho est\u00e0 ja), per a protegir l'acc\u00e9s general per a usuaris autenticats. A m\u00e9s, hem de definir un middleware propi que verifique el rol de l'usuari logueado. Podem crear-ho amb aquest comando:</p> <pre><code>php artisan make:middleware RolCheck\n</code></pre> <p>En aquest cas hem anomenat al middleware RolCheck , per\u00f2 el nom pot ser el que vulguem. Aquest middleware es crear\u00e0 en la carpeta App\\Http\\Middleware . Hem d'editar el seu m\u00e8tode handle per a verificar que els usuaris s\u00f3n de tipus \"admin\":</p> <pre><code>public function handle($request, Closure $next, $rol)\n{\n    if (Auth::user()-&gt;rol === $rol)\n        return $next($request);\n    else\n        return redirect('/');\n}\n</code></pre> <p>Despr\u00e9s de definir el middleware, ho registrem en l'arxiu App/Http/Kernel.php (en l'apartat de routeMiddleware):</p> <pre><code>protected $routeMiddleware = [\n...\n'roles' =&gt; \\App\\Http\\Middleware\\RolCheck::class\n</code></pre> <p>Finalment, ho carreguem en el constructor del nostre controlador. Podem incloure amb except i only restriccions sobre quins m\u00e8todes del controlador es veuran afectats o no pel middleware.</p> <pre><code>public function __construct()\n{\n    $this-&gt;middleware(['auth', 'roles:admin']);\n}\n</code></pre> <p>En aquest exemple, hem mapatge el middleware amb l'\u00e0lies rols en l'arxiu Kernel.php , i el que hi ha despr\u00e9s dels dos punts \u00e9s el par\u00e0metre extra que t\u00e9 el m\u00e8tode handle del middleware (el rol a comprovar). En el cas de voler passar m\u00e9s par\u00e0metres, es pot fer separats per comes.</p>"},{"location":"07laravelValidacioAutenticacio.html#sobre-el-concepte-de-middleware","title":"Sobre el concepte de middleware","text":"<p>Hem comentat breument el concepte de middleware associat tant al mecanisme d'autenticaci\u00f3 com a la classe \"extra\" que podem crear per a comprovar rols. En general, un middleware \u00e9s un fragment de codi (normalment una funci\u00f3) que s'executa enmig d'un proc\u00e9s. En aquest cas, s'executa des que es rep la petici\u00f3 fins que s'emet la resposta, i permet alterar aqueix flux normal, fent certes comprovacions sobre la petici\u00f3. Per exemple, com \u00e9s el cas, verificar que l'usuari t\u00e9 els permisos adequats abans d'emetre una resposta o una altra.</p>"},{"location":"07laravelValidacioAutenticacio.html#exercicis","title":"Exercicis","text":"<p>Sobre el projecte blog, afegirem aquests canvis:</p> <ol> <li>Crea un formulari per a donar d'alta nous posts, en la vista   resources/views/posts/create.blade.php . <ul> <li>Afig un parell de camps (un text curt i un text llarg) per a emplenar el t\u00edtol i el contingut, i com a autor o usuari del post de moment deixa un predefinit; per exemple, l'autor amb id = 1, o el primer autor que trobes en la base de dades ( Autor::get()-&gt;first() ). M\u00e9s endavant ja ho farem dependent de l'usuari que s'haja autenticat. Recorda definir el m\u00e8tode store en el controlador de posts per a donar d'alta el post, i redirigir despr\u00e9s al llistat principal de posts. Per a carregar el formulari, afig una nova opci\u00f3 en el men\u00fa principal de navegaci\u00f3. </li> <li>En la fitxa d'un post, afig un bot\u00f3 amb un formulari per a esborrar el post. Haur\u00e0s de definir el codi del m\u00e8tode destroy per a eliminar el post i redirigir de nou al llistat. Deur\u00e0s eliminar tots els comentaris associats a aqueix post, i despr\u00e9s esborrar el post. Per a filtrar els comentaris d'un post i esborrar-los, utilitza la cl\u00e0usula where.</li> </ul> </li> </ol> <pre><code>Comentario::where('post_id', $id)-&gt;delete();\n</code></pre> <ol> <li> <p>Ara afegirem el formulari d'edici\u00f3 d'un post, tamb\u00e9 des de la vista de la fitxa del post. El formulari haur\u00e0 de mostrar les dades ja farcides del post. Aquestformulari es carrega a partir del m\u00e8tode edit (que haur\u00e0 de renderitzar la vista amb el formulari d'edici\u00f3, resources/views/posts/edit.blade.php ), i el formulari s'enviar\u00e0 al m\u00e8tode update del controlador, passant-li com a par\u00e0metre l'id del post a modificar.</p> </li> <li> <p>Crea un form request anomenat PostRequest , que valide les dades del post. En concret, han de complir-se aquests requisits:</p> <ul> <li>El t\u00edtol del post ha de ser obligatori, i d'almenys 5 car\u00e0cters de longitud</li> <li>El contingut del post ha de ser obligatori, i d'almenys 50 car\u00e0cters de longitud</li> </ul> </li> </ol> <p>Defineix missatges d'error personalitzats per a cada possible error de validaci\u00f3, i mostra'ls al costat de cada camp afectat. A m\u00e9s, utilitza la funci\u00f3 old per a recordar el valor antic correcte, en el cas que un camp passe la validaci\u00f3 per\u00f2 un altre(s) no.</p> <ol> <li>Fes els seg\u00fcents canvis:</li> </ol> <ul> <li> <p>En el controlador de posts, protegeix totes les opcions menys les de index i show .</p> </li> <li> <p>Fes que nom\u00e9s es mostren els enlla\u00e7os i botons de crear, editar o esborrar posts quan l'usuari estiga   autenticat. En aqueix mateix cas, fes que tamb\u00e9 es mostre una opci\u00f3 de logout en el men\u00fa   superior, que haur\u00e0s d'implementar.</p> </li> <li> <p>Finalment, afig la funcionalitat que l'usuari autenticat nom\u00e9s pot editar i esborrar els seus   propis posts, per\u00f2 no els dels altres usuaris.</p> </li> <li> <p>Crea un nou middleware anomenat EnsureUserIsAuthor per fer-ho</p> </li> </ul> <ol> <li>Idioma</li> </ol> <ul> <li>Cerca el paquet de castell\u00e0 o valencia i possa'l en la carpeta corresponent.</li> <li>Canvia l'idioma de l'aplicaci\u00f3 al paquet baixat.</li> </ul>"},{"location":"08laravelDades.html","title":"Gesti\u00f3 de Dades amb Laravel","text":""},{"location":"08laravelDades.html#1-introduccio","title":"1. Introducci\u00f3","text":"<p>Laravel \u00e9s un framework PHP modern que simplifica el desenvolupament d'aplicacions web, incloent-hi la gesti\u00f3 de bases de dades. La integraci\u00f3 amb Eloquent, el seu ORM (Object-Relational Mapping), permet treballar amb bases de dades de forma intu\u00eftiva i eficient.</p>"},{"location":"08laravelDades.html#2-configuracio-inicial","title":"2. Configuraci\u00f3 inicial","text":"<p>Laravel suporta diversos motors de bases de dades com MySQL, PostgreSQL, SQLite i SQL Server. La configuraci\u00f3 principal es fa al fitxer <code>.env</code> i <code>config/database.php</code>.</p> <p>Exemple de configuraci\u00f3 al fitxer <code>.env</code>: <pre><code>DB_CONNECTION=mysql\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=nom_base_de_dades\nDB_USERNAME=usuari\nDB_PASSWORD=contrasenya\n</code></pre></p> <p>Comprovaci\u00f3 de connexi\u00f3:</p> <p>Despr\u00e9s de configurar el <code>.env</code>, utilitza el comandament: <pre><code>php artisan migrate:status\n</code></pre> Aquest comandament confirma si Laravel pot connectar-se a la base de dades configurada.</p>"},{"location":"08laravelDades.html#deteccio-de-problemes-comuns","title":"Detecci\u00f3 de problemes comuns","text":"<ul> <li>Comprovar que l'extensi\u00f3 del driver de la base de dades (com <code>pdo_mysql</code> o <code>pdo_pgsql</code>) estigui habilitada al <code>php.ini</code>.</li> <li>Utilitzar <code>php artisan config:clear</code> per esborrar la mem\u00f2ria cau de configuracions si els canvis al <code>.env</code> no es reflecteixen. </li> </ul>"},{"location":"08laravelDades.html#3-migracions-en-laravel","title":"3. Migracions en Laravel","text":""},{"location":"08laravelDades.html#introduccio","title":"Introducci\u00f3","text":"<p>Les migracions s\u00f3n un sistema de control de versions per a bases de dades que permet treballar de manera col\u00b7laborativa, mantenint un hist\u00f2ric dels canvis realitzats en l'esquema. Amb migracions, pots: - Crear, modificar i esborrar taules. - Gestionar l'esquema de manera program\u00e0tica utilitzant Artisan i el Schema Builder. - Revertir canvis mitjan\u00e7ant <code>rollback</code> o tornar a aplicar tots els canvis amb <code>refresh</code>.</p> <p>Laravel proporciona un conjunt d'eines intu\u00eftives per gestionar migracions, com Artisan i la classe Schema.</p>"},{"location":"08laravelDades.html#estructura-de-les-migracions","title":"Estructura de les migracions","text":"<p>Totes les migracions es guarden a la carpeta <code>database/migrations</code> i segueixen una estructura predefinida amb dos m\u00e8todes principals: - <code>up</code>: Defineix les operacions que s'han d'aplicar a la base de dades (crear taules, afegir columnes, etc.). - <code>down</code>: Defineix les operacions inverses per revertir els canvis aplicats per <code>up</code>.</p> <p>Exemple b\u00e0sic: <pre><code>public function up()\n{\n    Schema::create('usuarios', function (Blueprint $tabla) {\n        $tabla-&gt;id();\n        $tabla-&gt;string('nombre');\n        $tabla-&gt;string('email')-&gt;unique();\n        $tabla-&gt;timestamps();\n    });\n}\n\npublic function down()\n{\n    Schema::dropIfExists('usuarios');\n}\n</code></pre></p> <p>Per defecte, Laravel afegeix un camp autonum\u00e8ric <code>id</code> i dues columnes <code>timestamps</code> (<code>created_at</code> i <code>updated_at</code>) gestionades autom\u00e0ticament.</p>"},{"location":"08laravelDades.html#crear-una-migracio","title":"Crear una migraci\u00f3","text":"<p>Utilitza Artisan per crear una nova migraci\u00f3: <pre><code>php artisan make:migration nom_migracio\n</code></pre></p> <p>Aquest comando genera un fitxer amb un nom que inclou un timestamp per assegurar l'ordre cronol\u00f2gic.</p>"},{"location":"08laravelDades.html#exemples","title":"Exemples","text":"<ul> <li> <p>Crear una taula: <pre><code>php artisan make:migration crear_tabla_usuarios --create=usuarios\n</code></pre></p> </li> <li> <p>Modificar una taula existent: <pre><code>php artisan make:migration afegir_camp_a_usuarios --table=usuarios\n</code></pre></p> </li> </ul> <p>Laravel pot inferir accions del nom de la migraci\u00f3 gr\u00e0cies a la classe TableGuesser. Per exemple, si el nom cont\u00e9 <code>create</code> o <code>to</code>, Artisan deduir\u00e0 si \u00e9s per crear o modificar taules.</p>"},{"location":"08laravelDades.html#schema-builder","title":"Schema Builder","text":"<p>La classe Schema \u00e9s el nucli per definir i modificar l'esquema de les bases de dades. Inclou constructors per crear, modificar i eliminar taules i columnes.</p>"},{"location":"08laravelDades.html#crear-una-taula","title":"Crear una taula","text":"<pre><code>Schema::create('users', function (Blueprint $table) {\n    $table-&gt;id();\n    $table-&gt;string('username', 32);\n    $table-&gt;timestamps();\n});\n</code></pre>"},{"location":"08laravelDades.html#eliminar-una-taula","title":"Eliminar una taula","text":"<pre><code>Schema::dropIfExists('users');\n</code></pre>"},{"location":"08laravelDades.html#afegir-columnes","title":"Afegir columnes","text":"<pre><code>Schema::table('usuarios', function (Blueprint $table) {\n    $table-&gt;string('telefono')-&gt;after('email')-&gt;nullable();\n});\n</code></pre>"},{"location":"08laravelDades.html#eliminar-columnes","title":"Eliminar columnes","text":"<pre><code>Schema::table('usuarios', function (Blueprint $table) {\n    $table-&gt;dropColumn('telefono');\n});\n</code></pre>"},{"location":"08laravelDades.html#tipus-de-columnes-disponibles","title":"Tipus de columnes disponibles","text":"<p>Laravel ofereix una \u00e0mplia varietat de tipus de columnes per satisfer diferents necessitats </p>"},{"location":"08laravelDades.html#indexs-i-claus-foranies","title":"\u00cdndexs i claus for\u00e0nies","text":""},{"location":"08laravelDades.html#crear-indexs","title":"Crear \u00edndexs","text":"<pre><code>$table-&gt;unique('email');\n$table-&gt;index('state');\n$table-&gt;primary(['first_name', 'last_name']);\n</code></pre>"},{"location":"08laravelDades.html#definir-claus-foranies","title":"Definir claus for\u00e0nies","text":"<pre><code>$table-&gt;foreignId('user_id')-&gt;constrained()-&gt;onDelete('cascade');\n</code></pre>"},{"location":"08laravelDades.html#executar-i-revertir-migracions","title":"Executar i revertir migracions","text":"<ul> <li> <p>Executar migracions pendents: <pre><code>php artisan migrate\n</code></pre></p> </li> <li> <p>Revertir l'\u00faltima migraci\u00f3: <pre><code>php artisan migrate:rollback\n</code></pre></p> </li> <li> <p>Revertir totes les migracions: <pre><code>php artisan migrate:reset\n</code></pre></p> </li> <li> <p>Refrescar totes les migracions: <pre><code>php artisan migrate:refresh\n</code></pre></p> </li> <li> <p>Comprovar l'estat de les migracions: <pre><code>php artisan migrate:status\n</code></pre></p> </li> </ul> <p>Aquest conjunt de comandes permet un control complet sobre l'estat de les migracions durant el desenvolupament.</p>"},{"location":"08laravelDades.html#4-laravel-query-builder","title":"4. Laravel Query Builder","text":"<p>El Query Builder de Laravel proporciona una interf\u00edcie fluida per construir i executar consultes de bases de dades. Permet treballar amb diverses bases de dades de manera senzilla sense escriure SQL brut.</p>"},{"location":"08laravelDades.html#exemples-dus","title":"Exemples d'\u00fas","text":""},{"location":"08laravelDades.html#obtenir-tots-els-registres","title":"Obtenir tots els registres:","text":"<pre><code>$users = DB::table('users')-&gt;get();\n</code></pre>"},{"location":"08laravelDades.html#filtrar-registres","title":"Filtrar registres:","text":"<pre><code>$users = DB::table('users')\n    -&gt;where('active', 1)\n    -&gt;get();\n</code></pre>"},{"location":"08laravelDades.html#seleccionar-columnes-especifiques","title":"Seleccionar columnes espec\u00edfiques:","text":"<pre><code>$users = DB::table('users')\n    -&gt;select('name', 'email')\n    -&gt;get();\n</code></pre>"},{"location":"08laravelDades.html#ordenar-resultats","title":"Ordenar resultats:","text":"<pre><code>$users = DB::table('users')\n    -&gt;orderBy('name', 'asc')\n    -&gt;get();\n</code></pre>"},{"location":"08laravelDades.html#comptar-registres","title":"Comptar registres:","text":"<pre><code>$count = DB::table('users')-&gt;count();\n</code></pre>"},{"location":"08laravelDades.html#consultes-amb-agregats","title":"Consultes amb agregats:","text":"<pre><code>$maxSalary = DB::table('employees')-&gt;max('salary');\n</code></pre>"},{"location":"08laravelDades.html#consultes-amb-subconsultes","title":"Consultes amb subconsultes:","text":"<pre><code>$users = DB::table('users')\n    -&gt;whereExists(function ($query) {\n        $query-&gt;select(DB::raw(1))\n              -&gt;from('orders')\n              -&gt;whereColumn('orders.user_id', 'users.id');\n    })\n    -&gt;get();\n</code></pre>"},{"location":"08laravelDades.html#unions","title":"Unions:","text":"<pre><code>$first = DB::table('users')-&gt;where('type', 'admin');\n$second = DB::table('users')-&gt;where('type', 'customer');\n\n$users = $first-&gt;union($second)-&gt;get();\n</code></pre>"},{"location":"08laravelDades.html#inserir-un-registre","title":"Inserir un registre:","text":"<pre><code>DB::table('users')-&gt;insert([\n    'name' =&gt; 'John Doe',\n    'email' =&gt; 'john@example.com',\n]);\n</code></pre>"},{"location":"08laravelDades.html#actualitzar-un-registre","title":"Actualitzar un registre:","text":"<pre><code>DB::table('users')\n    -&gt;where('id', 1)\n    -&gt;update(['name' =&gt; 'Updated Name']);\n</code></pre>"},{"location":"08laravelDades.html#esborrar-un-registre","title":"Esborrar un registre:","text":"<pre><code>DB::table('users')\n    -&gt;where('id', 1)\n    -&gt;delete();\n</code></pre>"},{"location":"08laravelDades.html#esborrar-tots-els-registres","title":"Esborrar tots els registres:","text":"<pre><code>DB::table('users')-&gt;truncate();\n</code></pre>"},{"location":"08laravelDades.html#avantatges","title":"Avantatges","text":"<p>El Query Builder \u00e9s ideal per a:</p> <ul> <li>Consultes personalitzades on el rendiment \u00e9s una prioritat.</li> <li>Consultes complexes que no es poden expressar f\u00e0cilment amb Eloquent.</li> </ul>"},{"location":"08laravelDades.html#5laravel-eloquent","title":"5.Laravel Eloquent","text":"<p>Eloquent \u00e9s l'ORM (Object-Relational Mapping) de Laravel. Proporciona una interf\u00edcie senzilla i elegant per treballar amb bases de dades relacionals mitjan\u00e7ant models.</p>"},{"location":"08laravelDades.html#definicio-de-models","title":"Definici\u00f3 de Models","text":"<p>Els models es defineixen dins de la carpeta <code>app/Models</code> i es poden crear mitjan\u00e7ant Artisan: <pre><code>php artisan make:model Movie\n</code></pre></p>"},{"location":"08laravelDades.html#exemple-basic","title":"Exemple b\u00e0sic:","text":"<pre><code>namespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Movie extends Model\n{\n    // Taula associada al model\n    protected $table = 'movies';\n}\n</code></pre> <p>Per defecte:</p> <ul> <li>El model s'associa a una taula plural (<code>movies</code> per al model <code>Movie</code>).</li> <li>Utilitza <code>id</code> com a clau prim\u00e0ria.</li> <li>Assumeix l'\u00fas de camps <code>created_at</code> i <code>updated_at</code> gestionats autom\u00e0ticament.</li> </ul>"},{"location":"08laravelDades.html#us-basic-dun-model","title":"\u00das b\u00e0sic d'un model","text":""},{"location":"08laravelDades.html#recuperar-dades","title":"Recuperar dades:","text":"<ul> <li> <p>Tots els registres: <pre><code>$movies = Movie::all();\n</code></pre></p> </li> <li> <p>Registres filtrats: <pre><code>$movies = Movie::where('rating', '&gt;', 4)-&gt;get();\n</code></pre></p> </li> <li> <p>Registre \u00fanic: <pre><code>$movie = Movie::findOrFail($id);\n</code></pre></p> </li> </ul>"},{"location":"08laravelDades.html#inserir-dades","title":"Inserir dades:","text":"<pre><code>$movie = new Movie();\n$movie-&gt;title = \"Inception\";\n$movie-&gt;director = \"Christopher Nolan\";\n$movie-&gt;save();\n</code></pre>"},{"location":"08laravelDades.html#actualitzar-dades","title":"Actualitzar dades:","text":"<pre><code>$movie = Movie::find($id);\n$movie-&gt;title = \"Updated Title\";\n$movie-&gt;save();\n</code></pre>"},{"location":"08laravelDades.html#esborrar-dades","title":"Esborrar dades:","text":"<pre><code>$movie = Movie::find($id);\n$movie-&gt;delete();\n</code></pre>"},{"location":"08laravelDades.html#propietats-comuns-dels-models-eloquent","title":"Propietats comuns dels Models Eloquent","text":"<p>Els models d'Eloquent ofereixen diverses propietats que permeten configurar el comportament de la interacci\u00f3 amb la base de dades. A continuaci\u00f3 es detallen les m\u00e9s importants:</p> <pre><code>&lt;?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Example extends Model\n{\n    // Especifica el nom de la taula si no segueix la convenci\u00f3 per defecte\n    protected $table = 'custom_table_name';\n\n    // Defineix la clau prim\u00e0ria de la taula\n    protected $primaryKey = 'custom_id';\n\n    // Indica si la clau prim\u00e0ria \u00e9s autoincremental\n    public $incrementing = false;\n\n    // Especifica el tipus de la clau prim\u00e0ria (per exemple, string si no \u00e9s integer)\n    protected $keyType = 'string';\n\n    // Defineix quins camps poden ser assignats massivament\n    protected $fillable = ['name', 'email', 'password'];\n\n    // Defineix quins camps no poden ser assignats massivament\n    protected $guarded = ['is_admin'];\n\n    // Oculta camps quan es converteix a JSON o arrays\n    protected $hidden = ['password', 'remember_token'];\n\n    // Defineix quins camps s\u00f3n visibles quan es converteix a JSON o arrays\n    protected $visible = ['name', 'email'];\n\n    // Transformaci\u00f3 autom\u00e0tica de camps a un tipus espec\u00edfic\n    protected $casts = [\n        'is_admin' =&gt; 'boolean',\n        'settings' =&gt; 'array',\n    ];\n\n    // Indica si la taula t\u00e9 els camps `created_at` i `updated_at`\n    public $timestamps = true;\n\n    // Defineix la connexi\u00f3 a la base de dades\n    protected $connection = 'mysql';\n}\n</code></pre>"},{"location":"08laravelDades.html#relacions-en-eloquent","title":"Relacions en Eloquent","text":""},{"location":"08laravelDades.html#1-un-a-un-one-to-one","title":"1. Un a un (One-to-One):","text":"<p>Un usuari t\u00e9 un perfil: <pre><code>class User extends Model\n{\n    public function profile()\n    {\n        return $this-&gt;hasOne(Profile::class);\n    }\n}\n\n$user = User::find(1);\n$profile = $user-&gt;profile;\n</code></pre></p>"},{"location":"08laravelDades.html#2-un-a-molts-one-to-many","title":"2. Un a molts (One-to-Many):","text":"<p>Un autor t\u00e9 molts llibres: <pre><code>class Author extends Model\n{\n    public function books()\n    {\n        return $this-&gt;hasMany(Book::class);\n    }\n}\n\n$author = Author::find(1);\n$books = $author-&gt;books;\n</code></pre></p>"},{"location":"08laravelDades.html#3-molts-a-molts-many-to-many","title":"3. Molts a molts (Many-to-Many):","text":"<p>Un usuari t\u00e9 molts rols: <pre><code>class User extends Model\n{\n    public function roles()\n    {\n        return $this-&gt;belongsToMany(Role::class);\n    }\n}\n\n$user = User::find(1);\n$roles = $user-&gt;roles;\n</code></pre></p>"},{"location":"08laravelDades.html#4-has-many-through-relacions-transitives","title":"4. Has Many Through (Relacions transitives):","text":"<p>Permet accedir a dades relacionades a trav\u00e9s d'un altre model. <pre><code>class Country extends Model\n{\n    public function posts()\n    {\n        return $this-&gt;hasManyThrough(Post::class, User::class);\n    }\n}\n</code></pre></p>"},{"location":"08laravelDades.html#eager-loading-carrega-eficient-de-relacions","title":"Eager Loading (C\u00e0rrega eficient de relacions)","text":"<p>Per evitar m\u00faltiples consultes a la base de dades, pots carregar relacions amb <code>with</code>: <pre><code>$authors = Author::with('books')-&gt;get();\n</code></pre></p>"},{"location":"08laravelDades.html#colleccions-i-agrupacions","title":"Col\u00b7leccions i Agrupacions","text":"<p>Eloquent retorna col\u00b7leccions per defecte, que permeten treballar amb m\u00e8todes </p>"},{"location":"08laravelDades.html#mutators-i-accessors","title":"Mutators i Accessors","text":"<p>Els mutators permeten transformar dades abans de guardar-les, i els accessors les transformen en recuperar-les.</p>"},{"location":"08laravelDades.html#exemple","title":"Exemple:","text":"<pre><code>class User extends Model\n{\n    // Accessor\n    public function getFullNameAttribute()\n    {\n        return \"{$this-&gt;first_name} {$this-&gt;last_name}\";\n    }\n\n    // Mutator\n    public function setPasswordAttribute($value)\n    {\n        $this-&gt;attributes['password'] = bcrypt($value);\n    }\n}\n</code></pre>"},{"location":"08laravelDades.html#us","title":"\u00das:","text":"<pre><code>$user = User::find(1);\n$fullName = $user-&gt;full_name;\n\n$user-&gt;password = 'new_password';\n$user-&gt;save();\n</code></pre>"},{"location":"08laravelDades.html#paginacio","title":"Paginaci\u00f3","text":"<p>Laravel facilita la paginaci\u00f3: <pre><code>$movies = Movie::paginate(10);\n</code></pre></p> <p>En la vista: <pre><code>{{ $movies-&gt;links() }}\n</code></pre></p>"},{"location":"08laravelDades.html#6-seeders-i-factories-en-laravel","title":"6. Seeders i Factories en Laravel","text":"<p>Els seeders i factories permeten generar dades de prova de manera f\u00e0cil i r\u00e0pida, \u00fatils durant el desenvolupament per simular dades inicials en una aplicaci\u00f3.</p>"},{"location":"08laravelDades.html#seeders","title":"Seeders","text":"<p>Els seeders s\u00f3n classes especials que permeten \"sembrar\" dades a la base de dades.</p>"},{"location":"08laravelDades.html#crear-un-seeder","title":"Crear un Seeder","text":"<p><pre><code>php artisan make:seeder NomSeeder\n</code></pre> Aix\u00f2 crea un fitxer a la carpeta database/seeders. Per exemple:</p> <pre><code>class BooksSeeder extends Seeder\n{\n    public function run()\n    {\n        // Exemple: Crear un llibre\n        $book = new Book();\n        $book-&gt;title = \"Laravel for Beginners\";\n        $book-&gt;author = \"John Doe\";\n        $book-&gt;save();\n    }\n}\n</code></pre>"},{"location":"08laravelDades.html#afegir-seeders-al-seeder-general","title":"Afegir Seeders al Seeder General","text":"<p>Inclou els seeders al fitxer DatabaseSeeder:</p> <pre><code>class DatabaseSeeder extends Seeder\n{\n    public function run()\n    {\n        $this-&gt;call([\n            BooksSeeder::class,\n            AuthorsSeeder::class,\n        ]);\n    }\n}\n</code></pre>"},{"location":"08laravelDades.html#executar-seeders","title":"Executar Seeders","text":"<p>Executar tots els seeders: Executar un seeder espec\u00edfic: Reiniciar les migracions i executar els seeders:</p> <pre><code>php artisan db:seed\nphp artisan db:seed --class=BooksSeeder\nphp artisan migrate:fresh --seed\n</code></pre>"},{"location":"08laravelDades.html#factories","title":"Factories","text":"<p>Els factories permeten crear grans quantitats de dades de manera r\u00e0pida i din\u00e0mica mitjan\u00e7ant Faker.</p>"},{"location":"08laravelDades.html#crear-un-factory","title":"Crear un Factory","text":"<pre><code>php artisan make:factory NomFactory -m Model\n</code></pre> <p>Per exemple, per al model Author:</p> <pre><code>namespace Database\\Factories;\n\nuse App\\Models\\Author;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass AuthorFactory extends Factory\n{\nprotected $model = Author::class;\n\n    public function definition()\n    {\n        return [\n            'name' =&gt; $this-&gt;faker-&gt;name,\n            'birth_year' =&gt; $this-&gt;faker-&gt;year,\n        ];\n    }\n}\n</code></pre>"},{"location":"08laravelDades.html#utilitzar-un-factory","title":"Utilitzar un Factory","text":"<p>Per generar dades amb un factory:</p> <pre><code>use App\\Models\\Author;\n\n// Crear un \u00fanic autor\nAuthor::factory()-&gt;create();\n\n// Crear diversos autors\nAuthor::factory()-&gt;count(10)-&gt;create();\n</code></pre>"},{"location":"08laravelDades.html#integracio-amb-seeders","title":"Integraci\u00f3 amb Seeders","text":"<p>Combina factories amb seeders per generar dades din\u00e0miques:</p> <pre><code>class AuthorsSeeder extends Seeder\n{\n    public function run()\n    {\n        Author::factory()-&gt;count(10)-&gt;create();\n    }\n}\n</code></pre>"},{"location":"08laravelDades.html#dades-relacionades","title":"Dades Relacionades","text":"<p>Els factories permeten generar dades relacionades. Per exemple, llibres amb els seus autors:</p> <pre><code>class BooksSeeder extends Seeder\n{\n    public function run()\n    {\n        $authors = Author::factory()-&gt;count(5)-&gt;create();\n\n        $authors-&gt;each(function ($author) {\n            Book::factory()-&gt;count(2)-&gt;create(['author_id' =&gt; $author-&gt;id]);\n        });\n    }\n}\n</code></pre>"},{"location":"08laravelDades.html#exemples-avancats","title":"Exemples Avan\u00e7ats","text":"<p>Podem cercar com construir factories m\u00e9s complexes a la documentaci\u00f3 oficial.  </p>"},{"location":"08laravelDades.html#utilitzar-factories-per-relacions","title":"Utilitzar Factories per Relacions","text":"<p>Definir relacions dins d\u2019un factory: <pre><code>class BookFactory extends Factory\n{\n    public function definition()\n    {\n        return [\n            'title' =&gt; $this-&gt;faker-&gt;sentence,\n            'author_id' =&gt; Author::factory(),\n        ];\n    }\n}\n</code></pre> Llan\u00e7ar el factory: <pre><code>Book::factory()-&gt;count(10)-&gt;create();\n</code></pre></p>"},{"location":"08laravelDades.html#factories-amb-estats","title":"Factories amb Estats","text":"<p>Els estats permeten definir configuracions personalitzades per un model:</p> <p><pre><code>class BookFactory extends Factory\n{\n    public function withDiscount()\n    {\n        return $this-&gt;state([\n        'price' =&gt; $this-&gt;faker-&gt;numberBetween(5, 10),\n        ]);\n    }\n}\n</code></pre> \u00das d'un estat: <pre><code>Book::factory()-&gt;withDiscount()-&gt;create();\n</code></pre></p>"},{"location":"08laravelDades.html#avantatges-dels-factories","title":"Avantatges dels Factories","text":"<ul> <li>Faciliten la generaci\u00f3 massiva de dades.</li> <li>Simplifiquen les proves i el desenvolupament amb dades fict\u00edcies realistes.</li> <li>Redueixen el temps d'inicialitzaci\u00f3 de les aplicacions.</li> </ul>"},{"location":"08laravelDades.html#7requests-responses-i-validacio-en-laravel","title":"7.Requests, Responses i Validaci\u00f3 en Laravel","text":""},{"location":"08laravelDades.html#1-requests","title":"1. Requests","text":""},{"location":"08laravelDades.html#introduccio_1","title":"Introducci\u00f3","text":"<p>Un Request en Laravel \u00e9s un objecte que encapsula la informaci\u00f3 sobre la petici\u00f3 HTTP, incloent dades, cap\u00e7aleres, par\u00e0metres i fitxers.</p>"},{"location":"08laravelDades.html#acces-a-dades-del-request","title":"Acc\u00e9s a dades del Request","text":"<p>```php $input = $request-&gt;all(); //Accedir a tots els inputs. $name = $request-&gt;input('name'); //Obtenir un input espec\u00edfic. $age = $request-&gt;input('age', 18); //Especificar valors per defecte. $id = $request-&gt;route('id'); //Accedir a par\u00e0metres de ruta. <pre><code>#### **Validaci\u00f3 de pres\u00e8ncia**\n\n```php\nif ($request-&gt;has('email')) {\n    // Input 'email' present\n}\nif ($request-&gt;filled('name')) {\n    // Input 'name' no est\u00e0 buit\n}\n$filtered = $request-&gt;only(['name', 'email']); //Filtrar inputs espec\u00edfics.\n$excluded = $request-&gt;except(['password']); //Excloure certs inputs.\n</code></pre></p>"},{"location":"08laravelDades.html#tractament-de-fitxers","title":"Tractament de fitxers","text":"<pre><code>if ($request-&gt;hasFile('photo')) { //Comprovar si hi ha un fitxer.\n    $file = $request-&gt;file('photo');\n}\n$path = $request-&gt;file('photo')-&gt;store('photos'); //Emmagatzemar un fitxer.\n</code></pre>"},{"location":"08laravelDades.html#2-responses","title":"2. Responses","text":""},{"location":"08laravelDades.html#creacio-de-respostes","title":"Creaci\u00f3 de respostes","text":"<pre><code>return response('Hello World', 200); //Crear una resposta b\u00e0sica.\nreturn response()-&gt;json([\n    'name' =&gt; 'John',\n    'status' =&gt; 'success'\n]); //Crear una resposta JSON.\nreturn redirect('dashboard'); //Redirecci\u00f3 .\nreturn redirect('login')-&gt;with('status', 'Sessi\u00f3 iniciada'); //Redirecci\u00f3 amb dades de sessi\u00f3.\n</code></pre>"},{"location":"08laravelDades.html#manipular-capcaleres","title":"Manipular cap\u00e7aleres","text":"<pre><code>//Afegeix una o m\u00faltiples cap\u00e7aleres.\nreturn response('Hello')-&gt;header('Content-Type', 'text/plain');\nreturn response('Hello')\n-&gt;header('Content-Type', 'application/json')\n-&gt;header('Cache-Control', 'no-cache');\n</code></pre>"},{"location":"08laravelDades.html#respostes-de-fitxers","title":"Respostes de fitxers","text":"<pre><code>return response()-&gt;download($pathToFile); //Desc\u00e0rrega de fitxers.\nreturn response()-&gt;file($pathToFile); //Mostrar fitxers.\n</code></pre>"},{"location":"08laravelDades.html#3-validacio","title":"3. Validaci\u00f3","text":""},{"location":"08laravelDades.html#introduccio_2","title":"Introducci\u00f3","text":"<p>Laravel ofereix un sistema potent i senzill per validar dades d'inputs.</p>"},{"location":"08laravelDades.html#validacio-basica","title":"Validaci\u00f3 b\u00e0sica","text":"<pre><code>    // Validar dades amb un Request.\n$request-&gt;validate([\n    'name' =&gt; 'required|string|max:255',\n    'email' =&gt; 'required|email',\n    'password' =&gt; 'required|min:8',\n]);\n</code></pre> <pre><code>    // Validar manualment.\n$validator = Validator::make($request-&gt;all(), [\n    'title' =&gt; 'required|max:255',\n    'body' =&gt; 'required',\n]);\n\nif ($validator-&gt;fails()) {\n    return redirect('/form')-&gt;withErrors($validator);\n}\n</code></pre>"},{"location":"08laravelDades.html#regles-comunes","title":"Regles comunes","text":"<ul> <li><code>required</code>: Camp obligatori.</li> <li><code>email</code>: Validaci\u00f3 d'un correu electr\u00f2nic.</li> <li><code>min:value</code>: M\u00ednim de car\u00e0cters o valor num\u00e8ric.</li> <li><code>max:value</code>: M\u00e0xim de car\u00e0cters o valor num\u00e8ric.</li> <li><code>unique:table,column</code>: Ha de ser \u00fanic en una taula/columna. Llista sencera de regles</li> </ul>"},{"location":"08laravelDades.html#missatges-personalitzats","title":"Missatges personalitzats","text":"<pre><code>// Es poden definir missatges personalitzats per a les regles de validaci\u00f3.\n\n$request-&gt;validate([\n    'name' =&gt; 'required',\n], [\n    'name.required' =&gt; 'El nom \u00e9s obligatori.',\n]);\n</code></pre>"},{"location":"08laravelDades.html#validacio-condicional","title":"Validaci\u00f3 condicional","text":"<pre><code> // Validaci\u00f3 basada en altres camps o condicions.\n$request-&gt;validate([\n    'password' =&gt; 'required_if:is_admin,true',\n]);\n</code></pre>"},{"location":"08laravelDades.html#validacio-personalitzada","title":"Validaci\u00f3 personalitzada","text":"<pre><code>// Es poden afegir regles personalitzades mitjan\u00e7ant extensions del Validator.\n\nValidator::extend('uppercase', function ($attribute, $value, $parameters, $validator) {\n    return strtoupper($value) === $value;\n});\n</code></pre>"},{"location":"08laravelDades.html#errors-de-validacio","title":"Errors de validaci\u00f3","text":"<pre><code>// Obtenir tots els errors en la vista\n@if ($errors-&gt;any())\n    &lt;ul&gt;\n        @foreach ($errors-&gt;all() as $error)\n            &lt;li&gt;{{ $error }}&lt;/li&gt;\n        @endforeach\n    &lt;/ul&gt;\n@endif\n</code></pre> <pre><code>    // Mostrar errors per camp espec\u00edfic\n@error('name')\n    &lt;div&gt;{{ $message }}&lt;/div&gt;\n@enderror\n</code></pre>"},{"location":"08laravelDades.html#exercici-practic-guia-dequips-de-futbol-femeni-amb-base-de-dades","title":"Exercici Pr\u00e0ctic: Guia d'Equips de Futbol Femen\u00ed amb Base de Dades","text":"<p>L'objectiu d'aquest exercici \u00e9s estendre la Guia d'Equips de Futbol Femen\u00ed per utilitzar una base de dades relacional. Aprendr\u00e0s a crear taules amb migracions, models per gestionar les dades, i a integrar-los amb controladors i vistes.</p>"},{"location":"08laravelDades.html#1-crear-la-migracio-per-a-la-taula-equips","title":"1. Crear la Migraci\u00f3 per a la Taula <code>equips</code>","text":""},{"location":"08laravelDades.html#migracio","title":"Migraci\u00f3","text":"<ol> <li>Genera una migraci\u00f3 per a la taula <code>equips</code> amb la seg\u00fcent estructura:<ul> <li><code>id</code>: Clau prim\u00e0ria, autoincremental.</li> <li><code>nom</code>: Nom de l'equip (cadena, \u00fanic, obligatori).</li> <li><code>estadi</code>: Nom de l'estadi de l'equip (cadena, obligatori).</li> <li><code>titols</code>: Nombre de t\u00edtols guanyats (entero, predeterminat 0).</li> <li><code>created_at</code> i <code>updated_at</code>: Camps de timestamps generats autom\u00e0ticament.</li> </ul> </li> </ol> <pre><code>php artisan make:migration create_equips_table --create=equips\n</code></pre> <ol> <li>Modifica el fitxer de migraci\u00f3 per incloure l'estructura de la taula:</li> </ol> <pre><code>public function up()\n{\n    Schema::create('equips', function (Blueprint $table) {\n        $table-&gt;id();\n        $table-&gt;string('nom')-&gt;unique();\n        $table-&gt;string('estadi');\n        $table-&gt;integer('titols')-&gt;default(0);\n        $table-&gt;timestamps();\n    });\n}\n</code></pre> <ol> <li>Executa la migraci\u00f3 per crear la taula:</li> </ol> <pre><code>php artisan migrate\n</code></pre>"},{"location":"08laravelDades.html#models-i-seeders","title":"Models i Seeders","text":"<ol> <li>Genera un model anomenat <code>Equip</code> per gestionar la taula:</li> </ol> <pre><code>php artisan make:model Equip \n</code></pre> <ol> <li>Modifica el model Equip a app/Models/Equip.php per definir els camps que es poden emplenar mitjan\u00e7ant assignaci\u00f3 massiva:</li> </ol> <pre><code>protected $fillable = ['nom', 'estadi', 'titols'];\n</code></pre> <ol> <li>Crea un seeder per a la taula <code>equips</code>:</li> </ol> <pre><code>php artisan make:seeder EquipsSeeder\n</code></pre> <ol> <li>Modifica el seeder EquipsSeeder per generar dades d'exemple:</li> </ol> <pre><code>public function run()\n{\n    DB::table('equips')-&gt;insert([\n            ['nom' =&gt; 'Bar\u00e7a Femen\u00ed', 'estadi' =&gt; 'Camp Nou', 'titols' =&gt; 30],\n            ['nom' =&gt; 'Atl\u00e8tic de Madrid', 'estadi' =&gt; 'C\u00edvitas Metropolitano', 'titols' =&gt; 10],\n            ['nom' =&gt; 'Real Madrid Femen\u00ed', 'estadi' =&gt; 'Alfredo Di St\u00e9fano', 'titols' =&gt; 5],\n    ]);\n}\n</code></pre> <ol> <li>Afegeix el seeder EquipsSeeder al fitxer DatabaseSeeder:</li> </ol> <pre><code>public function run()\n{\n    $this-&gt;call([\n        EquipsSeeder::class,\n    ]);\n}\n</code></pre> <ol> <li>Executa els seeders per omplir la taula <code>equips</code> amb dades d'exemple:</li> </ol> <pre><code>   php artisan db:seed\n</code></pre>"},{"location":"08laravelDades.html#controladors-i-crud","title":"Controladors i CRUD","text":"<ol> <li>Modifica el m\u00e8tode <code>index</code>,<code>show</code>,<code>create</code>,<code>edit</code> i <code>destroy</code> del controlador per obtenir els equips des de la base de dades:</li> </ol> <pre><code>public function index() {\n     $equips = Equip::all();\n     return view('equips.index', compact('equips'));\n }\n\n public function show(Equip $equip) {\n     return view('equips.show', compact('equip'));\n }\n\n public function create() {\n     return view('equips.create');\n }\n\n public function edit(Equip $equip) {\n     return view('equips.edit', compact('equip'));\n }\n\n public function destroy(Equip $equip) {\n     $equip-&gt;delete();\n     return redirect()-&gt;route('equips.index')-&gt;with('success', 'Equip esborrat correctament!');\n } \n</code></pre>"},{"location":"08laravelDades.html#relacions-entre-taules","title":"Relacions entre Taules","text":"<ol> <li>Anem a crear la migraci\u00f3, model i seeder per la taula <code>estadis</code> i vincular-la amb la taula <code>equips</code>.</li> </ol> <pre><code>php artisan make:migration create_estadis_table\nphp artisan make:migration add_estadi_id_to_equips_table\nphp artisan make:model Estadi\nphp artisan make:seeder EstadisSeeder\n</code></pre> <ol> <li>Modifica la migraci\u00f3 <code>create_estadis_table</code> per incloure l'estructura de la taula <code>estadis</code>:</li> </ol> <pre><code>public function up()\n{\n    Schema::create('estadis', function (Blueprint $table) {\n        $table-&gt;id();\n        $table-&gt;string('nom')-&gt;unique();\n        $table-&gt;integer('capacitat');\n        $table-&gt;timestamps();\n    });\n}\n</code></pre> <ol> <li>Modifica la migraci\u00f3 <code>add_estadi_id_to_equips_table</code> per afegir la clau forana <code>estadi_id</code> a la taula <code>equips</code>:</li> </ol> <pre><code>public function up()\n{\n    Schema::table('equips', function (Blueprint $table) {\n        $table-&gt;dropColumn('estadi'); // Esborra el camp estadi\n        $table-&gt;foreignId('estadi_id')-&gt;constrained(); // Afegir la clau forana\n    });\n }\n\npublic function down()\n{\n    Schema::table('equips', function (Blueprint $table) {\n        $table-&gt;string('estadi');\n        $table-&gt;dropForeign(['estadi_id']);\n        $table-&gt;dropColumn('estadi_id');\n    });\n}\n</code></pre> <ol> <li>Modifica el model <code>Equip</code> per definir la relaci\u00f3 amb l'estadi:</li> </ol> <pre><code>public function estadi()\n{\n    return $this-&gt;belongsTo(Estadi::class);\n}\n</code></pre> <ol> <li>Modifica el model <code>Estadi</code> per definir la relaci\u00f3 amb els equips:</li> </ol> <pre><code>public function equips()\n{\n    return $this-&gt;hasMany(Equip::class);\n}\n</code></pre> <ol> <li>Modifica el seeder <code>EstadisSeeder</code> per generar dades d'exemple per a la taula <code>estadis</code>:</li> </ol> <pre><code>public function run()\n{\n    DB::table('estadis')-&gt;insert([\n        ['nom' =&gt; 'Camp Nou', 'capacitat' =&gt; 99000],\n        ['nom' =&gt; 'Wanda Metropolitano', 'capacitat' =&gt; 68000],\n        ['nom' =&gt; 'Santiago Bernab\u00e9u', 'capacitat' =&gt; 81000],\n    ]);\n}\n</code></pre> <ol> <li>Afegeix el seeder <code>EstadisSeeder</code> al fitxer <code>DatabaseSeeder</code>:</li> </ol> <pre><code>public function run()\n{\n    $this-&gt;call([\n        EstadisSeeder::class,\n        EquipsSeeder::class,\n\n    ]);\n}\n</code></pre> <ol> <li>Modifica el seeder <code>EquipsSeeder</code> per assignar equips a estadis existents:</li> </ol> <pre><code>public function run()\n{\n    $estadi = Estadi::where('nom', 'Camp Nou')-&gt;first();\n    $estadi-&gt;equips()-&gt;create([\n        'nom' =&gt; 'Bar\u00e7a Femen\u00ed',\n        'titols' =&gt; 30,\n    ]);\n    $estadi = Estadi::where('nom', 'Wanda Metropolitano')-&gt;first();\n    $estadi-&gt;equips()-&gt;create([\n        'nom' =&gt; 'Atl\u00e8tic de Madrid',\n        'titols' =&gt; 10,\n    ]);\n    $estadi = Estadi::where('nom', 'Santiago Bernab\u00e9u')-&gt;first();\n    $estadi-&gt;equips()-&gt;create([\n        'nom' =&gt; 'Real Madrid Femen\u00ed',\n        'titols' =&gt; 5,\n    ]);\n }\n</code></pre> <ol> <li>Executa els seeders per omplir les taules <code>equips</code> i <code>estadis</code> amb dades d'exemple:</li> </ol> <pre><code>php artisan migrate:fresh --seed \n</code></pre> <ol> <li>Modifica la vista <code>equips.index</code> per mostrar l'estadi de cada equip:</li> </ol> <p><pre><code>@foreach ($equips as $equip)\n    &lt;tr class=\"hover:bg-gray-100\"&gt;\n        &lt;td class=\"border border-gray-300 p-2\"&gt;\n            &lt;a href=\"{{ route('equips.show', $equip-&gt;id) }}\" class=\"text-blue-700 hover:underline\"&gt;{{ $equip-&gt;nom }}&lt;/a&gt;\n        &lt;/td&gt;\n        &lt;td class=\"border border-gray-300 p-2\"&gt;{{ $equip-&gt;estadi-&gt;nom }}&lt;/td&gt;\n        &lt;td class=\"border border-gray-300 p-2\"&gt;{{ $equip-&gt;titols }}&lt;/td&gt;\n        &lt;td class=\"border border-gray-300 p-2 flex space-x-2\"&gt;\n            &lt;a href=\"{{ route('equips.show', $equip-&gt;id) }}\" class=\"text-green-600 hover:underline\"&gt;Mostrar&lt;/a&gt;\n            &lt;a href=\"{{ route('equips.edit', $equip-&gt;id) }}\" class=\"text-yellow-600 hover:underline\"&gt;Editar&lt;/a&gt;\n        &lt;/td&gt;\n    &lt;/tr&gt;\n@endforeach\n</code></pre> 11. Crea la vista <code>equips.create</code> per incloure un desplegable amb els estadis disponibles:</p> <pre><code>&lt;form action=\"{{ route('equips.store') }}\" method=\"POST\" class=\"bg-white p-6 rounded-lg shadow-md max-w-md mx-auto\"&gt;\n    @csrf\n    &lt;div class=\"mb-4\"&gt;\n        &lt;label for=\"nom\" class=\"block text-sm font-medium text-gray-700 mb-1\"&gt;Nom:&lt;/label&gt;\n        &lt;input type=\"text\" name=\"nom\" id=\"nom\" required\n            class=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500\"&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-4\"&gt;\n        &lt;label for=\"titols\" class=\"block text-sm font-medium text-gray-700 mb-1\"&gt;T\u00edtols:&lt;/label&gt;\n        &lt;input type=\"number\" name=\"titols\" id=\"titols\" required\n            class=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500\"&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-4\"&gt;\n        &lt;label for=\"estadi_id\" class=\"block text-sm font-medium text-gray-700 mb-1\"&gt;Estadi:&lt;/label&gt;\n        &lt;select name=\"estadi_id\" id=\"estadi_id\" required\n            class=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500\"&gt;\n            @foreach ($estadis as $estadi)\n                &lt;option value=\"{{ $estadi-&gt;id }}\"&gt;{{ $estadi-&gt;nom }}&lt;/option&gt;\n            @endforeach\n        &lt;/select&gt;\n    &lt;/div&gt;\n\n    &lt;button type=\"submit\"\n        class=\"w-full bg-blue-500 text-white font-medium py-2 px-4 rounded-lg shadow hover:bg-blue-600 focus:ring focus:ring-blue-300\"&gt;\n        Crear Equip\n    &lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>Cal modificar el controlador <code>EquipController</code> per obtenir els estadis disponibles.</p> <ol> <li>Crea el m\u00e8tode store en el controlador EquipController per emmagatzemar un nou equip:</li> </ol> <p><pre><code>public function store(Request $request) {\n    $validated = $request-&gt;validate([\n        'nom' =&gt; 'required|unique:equips',\n        'estadi_id' =&gt; 'required|exists:estadis,id',\n        'titols' =&gt; 'integer|min:0',\n    ]);\n    Equip::create($validated);\n    return redirect()-&gt;route('equips.index')-&gt;with('success', 'Equip creat correctament!');\n}\n</code></pre> Cal modificat el model <code>Equip</code> per permetre l'assignaci\u00f3 massiva de l'estadi.</p> <ol> <li>Modifica la vista <code>equips.edit</code> per incloure un desplegable amb els estadis disponibles:</li> </ol> <pre><code>&lt;form action=\"{{ route('equips.update', $equip-&gt;id) }}\" method=\"POST\" class=\"bg-white p-6 rounded-lg shadow-md max-w-md mx-auto\"&gt;\n    @csrf\n    @method('PUT')\n\n    &lt;div class=\"mb-4\"&gt;\n        &lt;label for=\"nom\" class=\"block text-sm font-medium text-gray-700 mb-1\"&gt;Nom:&lt;/label&gt;\n        &lt;input type=\"text\" name=\"nom\" id=\"nom\" value=\"{{ old('nom', $equip-&gt;nom) }}\" required\n            class=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500 \n            @error('nom') border-red-500 @enderror\"&gt;\n        @error('nom')\n            &lt;p class=\"text-red-500 text-sm mt-1\"&gt;{{ $message }}&lt;/p&gt;\n        @enderror\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-4\"&gt;\n        &lt;label for=\"titols\" class=\"block text-sm font-medium text-gray-700 mb-1\"&gt;T\u00edtols:&lt;/label&gt;\n        &lt;input type=\"number\" name=\"titols\" id=\"titols\" value=\"{{ old('titols', $equip-&gt;titols) }}\" required\n            class=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500 \n            @error('titols') border-red-500 @enderror\"&gt;\n        @error('titols')\n            &lt;p class=\"text-red-500 text-sm mt-1\"&gt;{{ $message }}&lt;/p&gt;\n        @enderror\n    &lt;/div&gt;\n\n    &lt;div class=\"mb-4\"&gt;\n        &lt;label for=\"estadi_id\" class=\"block text-sm font-medium text-gray-700 mb-1\"&gt;Estadi:&lt;/label&gt;\n        &lt;select name=\"estadi_id\" id=\"estadi_id\" required\n            class=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500 \n            @error('estadi_id') border-red-500 @enderror\"&gt;\n            @foreach ($estadis as $estadi)\n                &lt;option value=\"{{ $estadi-&gt;id }}\" {{ $estadi-&gt;id == $equip-&gt;estadi_id ? 'selected' : '' }}&gt;\n                    {{ $estadi-&gt;nom }}\n                &lt;/option&gt;\n            @endforeach\n        &lt;/select&gt;\n        @error('estadi_id')\n            &lt;p class=\"text-red-500 text-sm mt-1\"&gt;{{ $message }}&lt;/p&gt;\n        @enderror\n    &lt;/div&gt;\n\n    &lt;button type=\"submit\"\n        class=\"w-full bg-blue-500 text-white font-medium py-2 px-4 rounded-lg shadow hover:bg-blue-600 focus:ring focus:ring-blue-300\"&gt;\n        Actualitzar Equip\n    &lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <ol> <li>Crea el m\u00e8tode update en el controlador EquipController per actualitzar un equip existent:</li> </ol> <pre><code>public function update(Request $request, $id) {\n    $validated = $request-&gt;validate([\n        'nom' =&gt; 'required|unique:equips,nom,'.$id,\n        'estadi_id' =&gt; 'required|exists:estadis,id',\n        'titols' =&gt; 'integer|min:0',\n    ]);\n    $equip = Equip::findOrFail($id);\n    $equip-&gt;update($validated);\n    return redirect()-&gt;route('equips.index')-&gt;with('success', 'Equip actualitzat correctament!');\n}\n</code></pre>"},{"location":"08laravelDades.html#afegir-un-escut-a-lequip","title":"Afegir un escut a l'equip","text":"<ol> <li>Crea una migraci\u00f3 per afegir un camp <code>escut</code> a la taula <code>equips</code>:</li> </ol> <pre><code>php artisan make:migration add_escut_to_equips_table\n</code></pre> <ol> <li>Modifica la migraci\u00f3 <code>add_escut_to_equips_table</code> per incloure el camp <code>escut</code>:</li> </ol> <pre><code>public function up()\n{\n    Schema::table('equips', function (Blueprint $table) {\n        $table-&gt;string('escut')-&gt;nullable();\n    });\n}\npublic function down()\n{\n    Schema::table('equips', function (Blueprint $table) {\n        $table-&gt;dropColumn('escut');\n    });\n}\n</code></pre> <ol> <li>Aplicar la migraci\u00f3</li> </ol> <pre><code>php artisan migrate\n</code></pre> <ol> <li>Modifica el model <code>Equip</code> per incloure el camp <code>escut</code>:</li> </ol> <pre><code>protected $fillable = ['nom', 'estadi_id', 'titols', 'escut'];\n</code></pre> <ol> <li>Modifica la vista <code>equips.create</code> per incloure un camp d'arxiu per pujar l'escut de l'equip:</li> </ol> <pre><code>&lt;div class=\"mb-4\"&gt;\n    &lt;label for=\"escut\" class=\"block text-sm font-medium text-gray-700 mb-1\"&gt;Escut:&lt;/label&gt;\n    &lt;input type=\"file\" name=\"escut\" id=\"escut\"\n        class=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500\"&gt;\n&lt;/div&gt;\n</code></pre> <ol> <li>Modifica la vista <code>equips.edit</code> per incloure un camp d'arxiu per actualitzar l'escut de l'equip:</li> </ol> <pre><code>&lt;div class=\"mb-4\"&gt;\n    &lt;label for=\"escut\" class=\"block text-sm font-medium text-gray-700 mb-1\"&gt;Escut:&lt;/label&gt;\n    &lt;input type=\"file\" name=\"escut\" id=\"escut\" \n        class=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500\"&gt;\n    @if ($equip-&gt;escut)\n        &lt;p class=\"mt-2 text-sm text-gray-500\"&gt;Escut actual:&lt;/p&gt;\n        &lt;img src=\"{{ asset('storage/' . $equip-&gt;escut) }}\" alt=\"Escut de {{ $equip-&gt;nom }}\" class=\"h-16 mt-2\"&gt;\n    @endif\n&lt;/div&gt;\n</code></pre> <ol> <li>Afegeix enctype=\"multipart/form-data\" al dos formularis:</li> </ol> <pre><code>&lt;form action=\"{{ route('equips.store') }}\" method=\"POST\" enctype=\"multipart/form-data\"&gt;\n</code></pre> <ol> <li>Crea un enlla\u00e7 simb\u00f2lic a la carpeta storage</li> </ol> <pre><code>php artisan storage:link\n</code></pre> <ol> <li>Actualitza el m\u00e8tode store del controlador</li> </ol> <pre><code>public function store(Request $request)\n{\n    $validated = $request-&gt;validate([\n        'nom' =&gt; 'required|unique:equips',\n        'titols' =&gt; 'integer|min:0',\n        'estadi_id' =&gt; 'required|exists:estadis,id',\n        'escut' =&gt; 'nullable|image|mimes:jpeg,png,jpg|max:2048', // Validaci\u00f3 del fitxer\n    ]);\n\n    if ($request-&gt;hasFile('escut')) {\n        $path = $request-&gt;file('escut')-&gt;store('escuts', 'public');\n        $validated['escut'] = $path;\n    }\n\n    Equip::create($validated);\n\n    return redirect()-&gt;route('equips.index')-&gt;with('success', 'Equip creat correctament!');\n}\n</code></pre> <ol> <li>Actualitza el m\u00e8tode update del controlador</li> </ol> <pre><code>public function update(Request $request, $id)\n{\n    $validated = $request-&gt;validate([\n        'nom' =&gt; 'required|unique:equips,nom,' . $id,\n        'titols' =&gt; 'integer|min:0',\n        'estadi_id' =&gt; 'required|exists:estadis,id',\n        'escut' =&gt; 'nullable|image|mimes:jpeg,png,jpg|max:2048',\n    ]);\n\n    $equip = Equip::findOrFail($id);\n\n    if ($request-&gt;hasFile('escut')) {\n        if ($equip-&gt;escut) {\n            Storage::disk('public')-&gt;delete($equip-&gt;escut); // Esborra l'escut antic\n        }\n        $path = $request-&gt;file('escut')-&gt;store('escuts', 'public');\n        $validated['escut'] = $path;\n    }\n\n    $equip-&gt;update($validated);\n\n    return redirect()-&gt;route('equips.index')-&gt;with('success', 'Equip actualitzat correctament!');\n}\n</code></pre> <ol> <li>Crea el m\u00e8tode delete per esborrar l'escut de l'equip:</li> </ol> <pre><code>public function delete(Equip $equip)\n{\n    if ($equip-&gt;escut) {\n        Storage::disk('public')-&gt;delete($equip-&gt;escut);\n    }\n    $equip-&gt;delete();\n    return redirect()-&gt;route('equips.index')-&gt;with('success', 'Equip esborrat correctament!');\n}\n</code></pre> <ol> <li>Modificat el component de la vista <code>equips.show</code> per mostrar l'escut de l'equip:</li> </ol> <pre><code>&lt;div class=\"equip border rounded-lg shadow-md p-4 bg-white\"&gt;\n      @if ($escut)\n          &lt;td class=\"border border-gray-300 p-2\"&gt;\n              &lt;img src=\"{{ asset('storage/' . $escut) }}\" alt=\"Escut de {{ $nom }}\" class=\"h-8 w-8 object-cover rounded-full\"&gt;\n          &lt;/td&gt;\n      @endif\n    &lt;h2 class=\"text-xl font-bold text-blue-800\"&gt;{{ $nom }}&lt;/h2&gt;\n    &lt;p&gt;&lt;strong&gt;Estadi:&lt;/strong&gt; {{ $estadi }}&lt;/p&gt;\n    &lt;p&gt;&lt;strong&gt;T\u00edtols:&lt;/strong&gt; {{ $titols }}&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"08laravelDades.html#utilitzar-factories-per-a-dades-dexemple","title":"Utilitzar Factories per a Dades d'Exemple","text":"<ol> <li>Crea un factory per a la taula <code>equips</code>:</li> </ol> <pre><code>php artisan make:factory EquipFactory --model=Equip\n</code></pre> <ol> <li>Modifica el factory <code>EquipFactory</code> per generar dades aleat\u00f2ries:</li> </ol> <pre><code>public function definition()\n{\n       return [\n           'nom' =&gt; $this-&gt;faker-&gt;unique()-&gt;company,\n           'titols' =&gt; $this-&gt;faker-&gt;numberBetween(0, 50),\n           'estadi_id' =&gt; \\App\\Models\\Estadi::factory(),\n           'escut' =&gt; 'escuts/dummy.png', // Imatge de prova predefinida\n        ];\n    }\n}\n</code></pre> <ol> <li>Actualitza el seeder <code>EquipsSeeder</code> per utilitzar el factory:</li> </ol> <pre><code>public function run()\n{\n    ...\n    Equip::factory()-&gt;count(10)-&gt;create();\n}\n</code></pre> <ol> <li>Modifica el model <code>Equip</code> per permetre els factories:</li> </ol> <pre><code>use Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Estadi extends Model\n{\n    use HasFactory;\n ...  \n}\n</code></pre> <ol> <li>Crea el factory per a la taula <code>estadis</code>:</li> </ol> <pre><code>php artisan make:factory EstadiFactory --model=Estadi\n</code></pre> <ol> <li>Modifica el factory <code>EstadiFactory</code> per generar dades aleat\u00f2ries:</li> </ol> <pre><code>public function definition()\n{\n    return [\n        'nom' =&gt; $this-&gt;faker-&gt;unique()-&gt;city.' Stadium',\n        'capacitat' =&gt; $this-&gt;faker-&gt;numberBetween(10000, 100000),\n    ];\n}\n</code></pre> <ol> <li>Executa els seeders per omplir la taula <code>equips</code> amb dades generades pel factory:</li> </ol> <pre><code>php artisan migrate:fresh --seed\n</code></pre>"},{"location":"08laravelDades.html#exercici-guia-de-futbol-femeni-amb-base-de-dades","title":"Exercici: Guia de Futbol Femen\u00ed amb Base de Dades","text":"<p>Passos a Seguir:</p> <ol> <li>Completa estadis el CRUD de l'estadi</li> </ol> <ul> <li>Afegeix els m\u00e8todes create, store, edit, update i destroy al controlador EstadiController.</li> <li>Modifica les vistes per a la gesti\u00f3 de l'estadi (index, show, create, edit).</li> <li>Modifica el component d'estadi per mostrar els equips que hi juguen.</li> </ul> <ol> <li>Jugadores i partides: Crear Migracions i Models</li> </ol> <ul> <li>Genera una migraci\u00f3 per a les jugadores, associant-les amb un equip i amb la possibilitat de posar una foto de la jugadora.</li> <li>Afegeix una migraci\u00f3 per a la taula partits, incloent equips locals i visitants, data del partit i resultat.</li> <li>Executa totes les migracions.</li> </ul> <ol> <li>Seeders i Factories</li> </ol> <ul> <li>Crea seeders per a les taules jugadores i partits.</li> <li>Utilitza factories per generar dades d'exemple per a jugadores i partits.</li> </ul> <ol> <li>Models i Relacions</li> </ol> <p>Defineix les relacions en els models:</p> <ul> <li>Un equip t\u00e9 moltes jugadores.</li> <li>Un equip pot tenir molts partits com a local o visitant.</li> <li>Un partit t\u00e9 un equip local i un equip visitant.</li> <li>Defineix les relacions inverses i ajusta les configuracions segons les necessitats.</li> </ul> <ol> <li>Desenvolupa les funcionalitats de Creaci\u00f3 i Edici\u00f3 de jugadores i partits</li> </ol> <ul> <li>Implementa formularis per crear i editar  jugadores  i partits.</li> <li>Assegura\u2019t que els camps estiguin validats correctament abans de desar les dades.</li> <li>Cada jugador pot tindre o no una foto.</li> </ul> <ol> <li>Vistes i Components</li> </ol> <ul> <li>Modifica el component d'equips per mostrar les jugadores. </li> </ul>"},{"location":"08laravelDades.html#questions-per-reflexio","title":"Q\u00fcestions per Reflexi\u00f3","text":"<ol> <li>Migracions: Quins avantatges t\u00e9 utilitzar migracions per gestionar l'esquema de la base de dades?</li> <li>Relacions: Com gestionaries les relacions many-to-many (per exemple, entre equips i partits)?</li> <li>Blade i Components: Quins beneficis aporta l'\u00fas de components Blade en formularis complexos?</li> </ol>"},{"location":"08restAnt.html","title":"08restAnt","text":""},{"location":"08restAnt.html#servicios-rest","title":"Servicios REST","text":"<p>Duraci\u00f3n estimada: 32 sesiones</p>"},{"location":"08restAnt.html#api","title":"API","text":"<p>Una API (Application Programming Interface) es un conjunto de funciones y procedimientos por los cuales, una aplicaci\u00f3n externa accede a los datos, a modo de biblioteca como una capa de abstracci\u00f3n y la API se encarga de enviar el dato solicitado.</p> <p>Una de las caracter\u00edsticas fundamentales de las API es que son Sateless, lo que quiere decir que las peticiones se hacen y desaparecen, no hay usuarios logueados ni datos que se quedan almacenados.</p> <p>Ejemplos de APIs gratuitas:</p> <ul> <li>ChuckNorris IO</li> <li>OMDB</li> <li>PokeAPI - Pokemon</li> <li>RAWg - Videojuegos</li> <li>The Star Wars API</li> </ul>"},{"location":"08restAnt.html#per-a-fer-proves-amb-aquestes-apis-podem-implementar-el-codi-per-a-consumir-les-o-utilitzar-un-client-especial-per-al-consum-daquests-serveis","title":"Per a fer proves amb aquestes APIs podem implementar el codi per a consumir-les o utilitzar un client especial per al consum d'aquests serveis.","text":"<ul> <li>PostMan</li> <li>Thunder Client</li> <li>Insomnia</li> <li>Advance REST Client (desde el navegador)</li> </ul>"},{"location":"08restAnt.html#rest","title":"REST","text":"<p>Con esta metodolog\u00eda llamada REST vamos a poder construir APIs para que desde un cliente externo se puedan consumir.</p> <p>Gracias a este standard de la arquitectura del software vamos a poder montar un API que utilice los m\u00e9todos standard GET, POST, PUT y DELETE.</p>"},{"location":"08restAnt.html#creando-recurso-resource","title":"Creando Recurso (Resource)","text":"<p>Para crear un recurso dentro de nuestra aplicaci\u00f3n hecha con Laravel, necesitamos crear un controlador del tipo resource donde establezcamos los m\u00e9todos que nosotros queramos realizar a la hora de trabajar con los datos</p> <pre><code>php artisan make:controller ChollosController --resource\n</code></pre> <p>Artisan nos crear\u00e1 un nuevo controlador en la carpeta <code>controllers</code> con el nombre <code>ChollosController</code> o el nombre que le hayamos pasado.</p> <p>La estructura de este archivo es un poco diferente a los controladores que ya hemos visto anteriormente. Ahora tenemos los siguientes m\u00e9todos creados de manera autom\u00e1tica:</p> <ul> <li><code>index()</code> normalmente para listar, en nuestro caso los chollos</li> <li><code>create()</code> para crear plantillas (no lo vamos a usar)</li> <li><code>store()</code> para guardar los datos que pasemos a la API</li> <li><code>update()</code> para actualizar un dato ya existente en la BDD</li> <li><code>delete()</code> para eliminar un dato ya existente en la BDD</li> </ul> <p>En el caso de devolver un listado con todos los chollos, lo primero que debemos hacer es importar nuestro modelo Chollo.</p> <pre><code>&lt;?php\n\nuse App\\Models\\Chollo;\n</code></pre> <p>Y como hemos ido haciendo en controladores anteriores, necesitamos hacer la consulta apropiada para devolver todos los chollos. CUIDADO CON EL RETURN porque ahora no estamos devolviendo una vista sino un array de datos en formato JSON.</p> <pre><code>&lt;?php\n\npublic function index()\n{\n    $chollos = Chollo::all();\n    return $chollos;\n}\n</code></pre> <p>El \u00faltimo paso ser\u00eda configurar el archivo de rutas, pero en este caso el archivo de rutas de la api se llama <code>api.php</code></p> <pre><code>&lt;?php\n// estamos en \u2593\u2593\u2593 api.php \n\nuse App\\Http\\Controllers\\ChollosController;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Route;\n\nRoute::get('/chollos', [ ChollosController::class, 'index' ]);\n</code></pre> <p>Una vez hecho \u00e9sto, debemos poner en marcha nuestro servidor.</p> <pre><code>php artisan serve\n</code></pre> <p>Ahora ya podemos usar el Postman o cualquier cliente de la misma \u00edndole para testear nuestra API a trav\u00e9s de la URL de nuestro servidor <code>http://127.0.0.1:8000/api/chollos</code></p>"},{"location":"08restAnt.html#recuperando-datos-en-vista-blade","title":"Recuperando datos en vista BLADE","text":"<p>Ya tenemos nuestra API montada y puede ser consumida a trav\u00e9s del navegador o cualquier cliente como <code>PostMan</code> o <code>Thunder Client</code> pero lo que nos interesa ahora es poder listar la informaci\u00f3n en una vista como hac\u00edamos en el tema anterior.</p> <p>Lo que vamos a tener que hacer es lo siguiente</p> <ul> <li>Modificar el <code>Controlador</code> para que consuma de la API</li> <li>Convertir el tipo de dato que nos devuelve la API como respuesta</li> <li>Utilizar una estructura de control <code>forEach</code> dentro de nuestra vista</li> <li>Acceder a cada clave del objeto JSON recibido en la vista <code>blade</code></li> </ul> <p>Vamos a modificar el controlador para que consuma de la API y convertimos los datos con el m\u00e9todo <code>collect()</code>.</p> <p>Para la llamada debemos importar <code>Http</code>.</p> <pre><code>&lt;?php\n\n// estamos en \u2593\u2593\u2593 CholloController.php\n\nuse App\\Models\\Chollo; // EN CASO DE API LOCAL\nuse Illuminate\\Support\\Facades\\Http; // INDISPENSABLE EN CASO DE API EXTERNA\n\nclass RestController extends Controller\n{\n    public function index() {\n        // $restChollos = Http::get('http://localhost/api/chollos')-&gt;collect(); // PARA API EXTERNA\n\n        $chollos = Chollo::all();\n\n        return view('rest', compact('chollos'));\n    }\n}\n</code></pre> <p>Modifiquem la nostra vista <code>blade</code> per a poder llistar les dades correctament o si ho prefereixes, pots crear una ruta nova i fins i tot un nou controlador que s'encarregue de manejar les anomenades a la API.</p> <p>El nom que va entre claud\u00e0tors \u00e9s el nom de les columnes de la taula de la base de dades <pre><code>&lt;?php\n// estamos en \u2593\u2593\u2593 movies.blade.php\n\n@foreach ($movies as $movie)\n    &lt;p&gt;ID:  {{ $movie -&gt; id }}&lt;/p&gt; // Columna ID\n    &lt;p&gt;Nombre:  {{ $movie -&gt; name }}&lt;/p&gt;  // Columna NAME\n    &lt;p&gt;Descripci\u00f3n:  {{ $movie -&gt; description }}&lt;/p&gt;  // Columna DESCRIPTION\n\n    // [...]\n    &lt;hr&gt;\n@endforeach\n</code></pre></p>"},{"location":"08restAnt.html#enviando-datos-post","title":"Enviando datos (POST)","text":"<p>En una API, para poder enviar datos y que se guarden en la base de datos, debemos usar el m\u00e9todo post bajo <code>Http</code> y pasarle los nuevos datos como un array asociativo, poniendo como <code>clave</code> el nombre de las columnas de la base de datos</p> <pre><code>&lt;?php\n\n$response = Http::post('http://localhost:8000/api/chollo-severo', [\n    'titulo' =&gt; 'Chollazo para este producto',\n    'descripcion' =&gt; 'Lorem ipsum dolo...',\n\n// [...]\n]);\n</code></pre>"},{"location":"08restAnt.html#actividades","title":"Actividades","text":"<p>801 Chollo Severo V 2.0 .</p>"},{"location":"09laravelAvan.html","title":"Laravel Avan\u00e7at","text":""},{"location":"09laravelAvan.html#autenticacio-i-autoritzacio-amb-laravel","title":"Autenticaci\u00f3 i Autoritzaci\u00f3 amb Laravel","text":""},{"location":"09laravelAvan.html#1-autenticacio","title":"1. Autenticaci\u00f3","text":""},{"location":"09laravelAvan.html#11-configuracio-inicial","title":"1.1 Configuraci\u00f3 inicial","text":"<p>Laravel ofereix dos paquets principals per implementar l\u2019autenticaci\u00f3:</p> <ol> <li>Laravel Breeze: Simple i lleuger, ideal per a projectes educatius i senzills.</li> <li>Laravel Jetstream: Robust i complet, inclou funcionalitats avan\u00e7ades com equips, autenticaci\u00f3 de dos factors i gesti\u00f3 d'API.</li> </ol> <p>Instal\u00b7laci\u00f3 de Laravel Breeze <pre><code>composer require laravel/breeze --dev\nphp artisan breeze:install\nnpm install &amp;&amp; npm run dev\nphp artisan migrate\n</code></pre></p> <p>Aquestes ordres configuren:</p> <ul> <li>Rutes per login, registre, restabliment de contrasenya, etc.</li> <li>Plantilles Blade predefinides amb Tailwind CSS.</li> </ul>"},{"location":"09laravelAvan.html#12-recuperacio-de-lusuari-autenticat","title":"1.2 Recuperaci\u00f3 de l'usuari autenticat","text":"<p>Un cop l'usuari ha fet login, podem accedir a les seues dades: <pre><code>use Illuminate\\Support\\Facades\\Auth;\n\n// Usuari autenticat\n$user = Auth::user();\n\n// ID de l'usuari autenticat\n$id = Auth::id();\n</code></pre></p> <p>Tamb\u00e9 podem obtenir l\u2019usuari des d'una petici\u00f3 injectada al controlador: <pre><code>public function dashboard(Request $request)\n{\n    $user = $request-&gt;user(); // Equivalent a Auth::user()\n}\n</code></pre></p>"},{"location":"09laravelAvan.html#13-protegir-rutes-amb-middleware","title":"1.3 Protegir rutes amb middleware","text":"<p>El middleware <code>auth</code> assegura que nom\u00e9s els usuaris autenticats poden accedir a una ruta: <pre><code>Route::get('/dashboard', function () {\n    return view('dashboard');\n})-&gt;middleware('auth');\n</code></pre></p>"},{"location":"09laravelAvan.html#14-logout","title":"1.4 Logout","text":"<p>Laravel Breeze inclou logout preconfigurat: <pre><code>&lt;form method=\"POST\" action=\"{{ route('logout') }}\"&gt;\n    @csrf\n    &lt;button type=\"submit\"&gt;Logout&lt;/button&gt;\n&lt;/form&gt;\n</code></pre></p>"},{"location":"09laravelAvan.html#15-restabliment-de-contrasenya","title":"1.5 Restabliment de contrasenya","text":"<p>Per habilitar el restabliment de contrasenya:</p> <ol> <li>Configura el correu SMTP al fitxer <code>.env</code>.</li> <li>Laravel Breeze genera autom\u00e0ticament els formularis i la l\u00f2gica necess\u00e0ria.</li> </ol>"},{"location":"09laravelAvan.html#2-autoritzacio","title":"2. Autoritzaci\u00f3","text":""},{"location":"09laravelAvan.html#21-rols-i-permisos","title":"2.1 Rols i permisos","text":"<p>Afegir un camp <code>role</code> a la taula <code>users</code> Per implementar rols: 1. Crear una migraci\u00f3:    <pre><code>php artisan make:migration add_role_to_users_table --table=users\n</code></pre> 2. Afegir el camp <code>role</code>:    <pre><code>Schema::table('users', function (Blueprint $table) {\n    $table-&gt;string('role')-&gt;default('user'); // Opcions: 'user', 'admin', etc.\n});\n</code></pre> 3. Actualitzar el model <code>User</code>:    <pre><code>class User extends Authenticatable\n{\n    protected $fillable = ['name', 'email', 'password', 'role'];\n}\n</code></pre></p> <p>Middleware per a rols 1. Crear un middleware:    <pre><code>php artisan make:middleware RoleMiddleware\n</code></pre> 2. Definir el rol al middleware:    <pre><code>public function handle($request, Closure $next, $role)\n{\n    if (Auth::check() &amp;&amp; Auth::user()-&gt;role === $role) {\n        return $next($request);\n    }\n    return redirect('/');\n}\n</code></pre> 3. Registrar-lo a <code>Kernel.php</code>:    <pre><code>protected $routeMiddleware = [\n    'role' =&gt; \\App\\Http\\Middleware\\RoleMiddleware::class,\n];\n</code></pre> 4. Aplicar-lo a una ruta:    <pre><code>Route::get('/admin', function () {\n    return view('admin.dashboard');\n})-&gt;middleware('role:admin');\n</code></pre></p>"},{"location":"09laravelAvan.html#que-es-un-middleware","title":"Qu\u00e8 \u00e9s un Middleware?","text":"<p>Un middleware \u00e9s una classe que actua com a intermediari entre una sol\u00b7licitud HTTP i la seua resposta. En Laravel, els middleware s'utilitzen per executar codi abans o despr\u00e9s que una sol\u00b7licitud arribe al controlador, permetent aix\u00ed gestionar tasques com: - Autenticaci\u00f3 d'usuaris. - Validaci\u00f3 de permisos o rols. - Filtratge de dades de la petici\u00f3. - Modificaci\u00f3 de respostes.</p> <p>Els middleware s\u00f3n ideals per encapsular l\u00f2gica comuna que cal aplicar a diverses rutes, com per exemple assegurar que nom\u00e9s usuaris autenticats poden accedir a certes \u00e0rees de l'aplicaci\u00f3.</p> <p>Exemple d'\u00fas: <pre><code>public function handle($request, Closure $next)\n{\n    if (Auth::check()) {\n        return $next($request); // Continua amb la sol\u00b7licitud\n    }\n    return redirect('login'); // Redirigeix si no est\u00e0 autenticat\n}\n</code></pre></p> <p>Els middleware es registren al fitxer <code>Kernel.php</code>, i poden aplicar-se a rutes espec\u00edfiques o a tot l'aplicatiu.</p>"},{"location":"09laravelAvan.html#22-policies-per-a-acces-granular","title":"2.2 Policies per a acc\u00e9s granular","text":"<p>Creaci\u00f3 d'una Policy </p> <p>Les policies permeten definir regles d'autoritzaci\u00f3 espec\u00edfiques:</p> <pre><code>php artisan make:policy PostPolicy --model=Post\n</code></pre> <p>Exemple per permetre que un usuari nom\u00e9s puga editar els seus posts: <pre><code>public function update(User $user, Post $post)\n{\n    return $user-&gt;id === $post-&gt;user_id;\n}\n</code></pre> Registrar la pol\u00edtica a <code>AuthServiceProvider</code>: <pre><code>protected $policies = [\n    Post::class =&gt; PostPolicy::class,\n];\n</code></pre></p> <p>\u00das de la pol\u00edtica en un controlador: <pre><code>public function edit(Post $post)\n{\n    $this-&gt;authorize('update', $post);\n    return view('posts.edit', compact('post'));\n}\n</code></pre></p>"},{"location":"09laravelAvan.html#3utilitzar-form-requests-per-a-validacions-mes-complexes","title":"3.Utilitzar Form Requests per a Validacions m\u00e9s Complexes","text":"<p>Els Form Requests s\u00f3n classes dedicades que encapsulen la l\u00f2gica de validaci\u00f3 d'una sol\u00b7licitud HTTP. Aquestes classes permeten organitzar millor el codi, especialment en formularis amb moltes regles de validaci\u00f3.</p>"},{"location":"09laravelAvan.html#1-crear-un-form-request","title":"1. Crear un Form Request","text":"<p>Per crear un Form Request, utilitzem l'eina Artisan: <pre><code>php artisan make:request MoviePost\n</code></pre> Aix\u00f2 genera una nova classe a la carpeta <code>app/Http/Requests</code>. Aquesta classe cont\u00e9 dos m\u00e8todes principals:</p> <ol> <li> <p>authorize()    Retorna <code>true</code> o <code>false</code> segons si l'usuari est\u00e0 autoritzat a fer la sol\u00b7licitud. Per defecte, podem retornar <code>true</code> per permetre totes les sol\u00b7licituds:     <pre><code>public function authorize()\n{\n    return true;\n}\n</code></pre></p> </li> <li> <p>rules()    Retorna un array amb les regles de validaci\u00f3:     <pre><code>public function rules()\n{\n    return [\n        'title' =&gt; 'required|min:3',\n        'director' =&gt; 'required',\n        'year' =&gt; 'required|numeric|min:1900',\n    ];\n}\n</code></pre></p> </li> </ol>"},{"location":"09laravelAvan.html#2-utilitzar-el-form-request-en-un-controlador","title":"2. Utilitzar el Form Request en un Controlador","text":"<p>En lloc d'especificar les regles de validaci\u00f3 directament al controlador, podem injectar el Form Request al m\u00e8tode del controlador: <pre><code>public function store(MoviePost $request)\n{\n    // Si arribem aqu\u00ed, les dades s\u00f3n v\u00e0lides.\n    // Accedim a les dades validades:\n    $validated = $request-&gt;validated();\n\n    // Crear una nova pel\u00b7l\u00edcula\n    $movie = new Movie($validated);\n    $movie-&gt;save();\n\n    return redirect()-&gt;route('movies.index');\n}\n</code></pre> El m\u00e8tode <code>validated()</code> retorna nom\u00e9s les dades que han passat les regles de validaci\u00f3.</p>"},{"location":"09laravelAvan.html#3-personalitzar-missatges-derror","title":"3. Personalitzar Missatges d'Error","text":"<p>Podem personalitzar els missatges d'error sobreescrivint el m\u00e8tode messages() dins del Form Request: <pre><code>public function messages()\n{\n    return [\n        'title.required' =&gt; 'El camp t\u00edtol \u00e9s obligatori.',\n        'title.min' =&gt; 'El camp t\u00edtol ha de tindre almenys 3 car\u00e0cters.',\n        'year.required' =&gt; 'El camp any \u00e9s obligatori.',\n    ];\n}\n</code></pre></p>"},{"location":"09laravelAvan.html#4-mostrar-errors-de-validacio-a-la-vista","title":"4. Mostrar Errors de Validaci\u00f3 a la Vista","text":"<p>Quan es produeixen errors de validaci\u00f3, Laravel redirigeix autom\u00e0ticament a la vista anterior amb la variable global <code>$errors</code>, que cont\u00e9 els errors de validaci\u00f3.</p> <p>Exemple de com mostrar un llistat d'errors al comen\u00e7ament del formulari: <pre><code>@if ($errors-&gt;any())\n    &lt;ul&gt;\n        @foreach($errors-&gt;all() as $error)\n            &lt;li&gt;{{ $error }}&lt;/li&gt;\n        @endforeach\n    &lt;/ul&gt;\n@endif\n</code></pre></p> <p>Per mostrar errors espec\u00edfics sota un camp: <pre><code>&lt;div class=\"form-group\"&gt;\n    &lt;label for=\"title\"&gt;T\u00edtol:&lt;/label&gt;\n    &lt;input type=\"text\" name=\"title\" id=\"title\" class=\"form-control\" value=\"{{ old('title') }}\"&gt;\n    @if ($errors-&gt;has('title'))\n        &lt;div class=\"text-danger\"&gt;{{ $errors-&gt;first('title') }}&lt;/div&gt;\n    @endif\n&lt;/div&gt;\n</code></pre></p>"},{"location":"09laravelAvan.html#us-didiomes-en-laravel","title":"\u00das d'idiomes en Laravel","text":"<p>Laravel proporciona eines senzilles i potents per a la localitzaci\u00f3 d'aplicacions, permetent suportar m\u00faltiples idiomes. Aquesta funcionalitat \u00e9s ideal per a desenvolupar aplicacions accessibles a usuaris de diferents regions i lleng\u00fces.</p>"},{"location":"09laravelAvan.html#1-configuracio-inicial","title":"1. Configuraci\u00f3 Inicial","text":""},{"location":"09laravelAvan.html#11-idioma-predeterminat","title":"1.1 Idioma Predeterminat","text":"<p>L'idioma predeterminat s'estableix al fitxer <code>config/app.php</code> mitjan\u00e7ant el par\u00e0metre <code>locale</code>: <pre><code>'locale' =&gt; 'en', // Idioma predeterminat\n</code></pre></p>"},{"location":"09laravelAvan.html#12-idioma-alternatiu","title":"1.2 Idioma Alternatiu","text":"<p>Es pot definir un idioma \"alternatiu\" que s'utilitzar\u00e0 quan no es troben traduccions en l'idioma actiu: <pre><code>'fallback_locale' =&gt; 'en', // Idioma alternatiu\n</code></pre></p>"},{"location":"09laravelAvan.html#2-treballant-amb-fitxers-de-traduccio","title":"2. Treballant amb Fitxers de Traducci\u00f3","text":""},{"location":"09laravelAvan.html#21-organitzacio-dels-fitxers","title":"2.1 Organitzaci\u00f3 dels Fitxers","text":"<p>Els fitxers de traducci\u00f3 es guarden al directori <code>lang</code>. Cada idioma t\u00e9 la seua pr\u00f2pia carpeta, amb fitxers <code>.php</code> que contenen arrays clau-valor per a les traduccions:</p> <p>Exemple d'estructura: <pre><code>/lang\n    /en\n        messages.php\n    /es\n        messages.php\n</code></pre></p>"},{"location":"09laravelAvan.html#22-crear-un-fitxer-de-traduccio","title":"2.2 Crear un Fitxer de Traducci\u00f3","text":"<p>Un fitxer de traducci\u00f3 t\u00edpic cont\u00e9 un array de cadenes: <pre><code>// lang/en/messages.php\nreturn [\n    'welcome' =&gt; 'Welcome to our application!',\n];\n</code></pre></p> <p>Per a altres idiomes: <pre><code>// lang/es/messages.php\nreturn [\n    'welcome' =&gt; '\u00a1Bienvenido a nuestra aplicaci\u00f3n!',\n];\n</code></pre></p>"},{"location":"09laravelAvan.html#3-us-de-traduccions-en-el-codi","title":"3. \u00das de Traduccions en el Codi","text":""},{"location":"09laravelAvan.html#31-recuperar-traduccions","title":"3.1 Recuperar Traduccions","text":"<p>Utilitza la funci\u00f3 auxiliar <code>__()</code> per obtenir les traduccions: <pre><code>echo __('messages.welcome'); // Welcome to our application!\n</code></pre></p> <p>Si la traducci\u00f3 no existeix, es retorna la clau proporcionada: <pre><code>echo __('messages.unknown'); // messages.unknown\n</code></pre></p>"},{"location":"09laravelAvan.html#32-traduccions-amb-parametres","title":"3.2 Traduccions amb Par\u00e0metres","text":"<p>\u00c9s possible definir par\u00e0metres dins de les traduccions utilitzant el s\u00edmbol <code>:</code>, que es substitueix quan es crida a la funci\u00f3: <pre><code>// lang/en/messages.php\nreturn [\n    'greeting' =&gt; 'Hello, :name!',\n];\n</code></pre> <pre><code>echo __('messages.greeting', ['name' =&gt; 'John']); // Hello, John!\n</code></pre></p>"},{"location":"09laravelAvan.html#4-localitzacio-en-temps-dexecucio","title":"4. Localitzaci\u00f3 en Temps d'Execuci\u00f3","text":""},{"location":"09laravelAvan.html#41-canviar-lidioma-actiu","title":"4.1 Canviar l'Idioma Actiu","text":"<p>Per canviar l'idioma de l'aplicaci\u00f3 en temps d'execuci\u00f3, utilitza el m\u00e8tode <code>App::setLocale()</code>: <pre><code>use Illuminate\\Support\\Facades\\App;\n\nApp::setLocale('es'); // Canvia a espanyol\n</code></pre></p> <p>Aquesta configuraci\u00f3 nom\u00e9s afecta la petici\u00f3 actual.</p>"},{"location":"09laravelAvan.html#5-traduccions-amb-fitxers-json","title":"5. Traduccions amb Fitxers JSON","text":"<p>Laravel permet utilitzar fitxers JSON per a traduccions simples. Aquest enfocament \u00e9s \u00fatil per a aplicacions amb cadenes de traducci\u00f3 \u00faniques i desordenades.</p> <p>Exemple de Fitxer JSON: <pre><code>// lang/es.json\n{\n    \"I love programming.\": \"Me encanta programar.\"\n}\n</code></pre></p> <p>Per accedir a aquestes cadenes: <pre><code>echo __('I love programming.');\n</code></pre></p>"},{"location":"09laravelAvan.html#enviament-de-correus-en-laravel","title":"Enviament de Correus en Laravel","text":"<p>Laravel ofereix una API senzilla i flexible per gestionar l'enviament de correus electr\u00f2nics. Aquesta funcionalitat \u00e9s \u00fatil per a notificacions, restabliment de contrasenyes i altres comunicacions amb els usuaris.</p>"},{"location":"09laravelAvan.html#1-configuracio-inicial_1","title":"1. Configuraci\u00f3 Inicial","text":""},{"location":"09laravelAvan.html#11-configurar-el-servei-de-correu","title":"1.1 Configurar el Servei de Correu","text":"<p>Laravel suporta m\u00faltiples serveis d'enviament de correu com SMTP, Mailgun, Postmark, Amazon SES, entre altres. La configuraci\u00f3 es defineix al fitxer <code>.env</code>:</p> <p>Exemple de configuraci\u00f3 SMTP per Gmail: <pre><code>MAIL_MAILER=smtp\nMAIL_HOST=smtp.gmail.com\nMAIL_PORT=587\nMAIL_USERNAME=el_teu_email@gmail.com\nMAIL_PASSWORD=la_teua_contrasenya\nMAIL_ENCRYPTION=tls\nMAIL_FROM_ADDRESS=el_teu_email@gmail.com\nMAIL_FROM_NAME=\"Nom del Projecte\"\n</code></pre></p>"},{"location":"09laravelAvan.html#12-configurar-el-fitxer-configmailphp","title":"1.2 Configurar el Fitxer <code>config/mail.php</code>","text":"<p>Aquest fitxer cont\u00e9 la configuraci\u00f3 global per al sistema de correu. Normalment, no \u00e9s necessari modificar-lo si es configura correctament el <code>.env</code>.</p>"},{"location":"09laravelAvan.html#2-crear-correus","title":"2. Crear Correus","text":""},{"location":"09laravelAvan.html#21-crear-una-classe-de-correu","title":"2.1 Crear una Classe de Correu","text":"<p>Les classes de correu es generen amb Artisan: <pre><code>php artisan make:mail WelcomeMail\n</code></pre></p> <p>Aquest comandament crea una classe al directori <code>App\\Mail</code>. Aquesta classe \u00e9s on es defineix el contingut i el disseny del correu.</p>"},{"location":"09laravelAvan.html#22-exemple-duna-classe-de-correu","title":"2.2 Exemple d'una Classe de Correu","text":"<pre><code>namespace App\\Mail;\n\nuse Illuminate\\Bus\\Queueable;\nuse Illuminate\\Mail\\Mailable;\nuse Illuminate\\Queue\\SerializesModels;\n\nclass WelcomeMail extends Mailable\n{\n    use Queueable, SerializesModels;\n\n    public $user;\n\n    public function __construct($user)\n    {\n        $this-&gt;user = $user;\n    }\n\n    public function build()\n    {\n        return $this-&gt;view('emails.welcome')\n                    -&gt;subject('Benvingut a la nostra aplicaci\u00f3');\n    }\n}\n</code></pre>"},{"location":"09laravelAvan.html#3-enviar-correus","title":"3. Enviar Correus","text":""},{"location":"09laravelAvan.html#31-enviar-un-correu-des-dun-controlador","title":"3.1 Enviar un Correu des d'un Controlador","text":"<p>Utilitza la fa\u00e7ana <code>Mail</code> per enviar correus: <pre><code>use App\\Mail\\WelcomeMail;\nuse Illuminate\\Support\\Facades\\Mail;\n\nMail::to('usuari@example.com')-&gt;send(new WelcomeMail($user));\n</code></pre></p>"},{"location":"09laravelAvan.html#32-enviar-a-multiples-receptors","title":"3.2 Enviar a M\u00faltiples Receptors","text":"<p>Laravel permet enviar correus a m\u00faltiples destinataris: <pre><code>Mail::to(['user1@example.com', 'user2@example.com'])-&gt;send(new WelcomeMail($user));\n</code></pre></p>"},{"location":"09laravelAvan.html#4-plantilles-de-correus","title":"4. Plantilles de Correus","text":""},{"location":"09laravelAvan.html#41-crear-una-vista-per-al-correu","title":"4.1 Crear una Vista per al Correu","text":"<p>Les vistes per a correus es guarden al directori <code>resources/views/emails</code>. Exemple de plantilla Blade: <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Benvingut&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Hola, {{ $user-&gt;name }}&lt;/h1&gt;\n    &lt;p&gt;Gr\u00e0cies per registrar-te a la nostra aplicaci\u00f3!&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p>"},{"location":"09laravelAvan.html#42-utilitzar-components-i-markdown","title":"4.2 Utilitzar Components i Markdown","text":"<p>Laravel permet crear correus amb components de Markdown. Generem un correu amb components: <pre><code>php artisan make:mail WelcomeMail --markdown=emails.welcome\n</code></pre></p> <p>Aquest comandament crea una plantilla Markdown a <code>resources/views/emails</code>.</p> <p>Exemple de plantilla Markdown: <pre><code># Benvingut, {{ $user-&gt;name }}\n\nGr\u00e0cies per unir-te a la nostra aplicaci\u00f3.\n\n@component('mail::button', ['url' =&gt; 'https://example.com'])\nVisita el nostre lloc web\n@endcomponent\n\nGr\u00e0cies,&lt;br&gt;\n{{ config('app.name') }}\n</code></pre></p>"},{"location":"09laravelAvan.html#5-correu-en-cua","title":"5. Correu en Cua","text":"<p>Per enviar correus de manera as\u00edncrona i millorar el rendiment de l'aplicaci\u00f3, podem utilitzar cues: <pre><code>Mail::to('usuari@example.com')-&gt;queue(new WelcomeMail($user));\n</code></pre></p> <p>Assegura't que el sistema de cues estiga configurat al fitxer <code>.env</code>: <pre><code>QUEUE_CONNECTION=database\n</code></pre></p>"},{"location":"09laravelAvan.html#sistema-de-fitxers-en-laravel","title":"Sistema de Fitxers en Laravel","text":"<p>Laravel proporciona una API unificada per treballar amb diferents sistemes de fitxers com el sistema local, Amazon S3, FTP, i altres. Aquesta funcionalitat permet gestionar l'emmagatzematge de fitxers d'una manera senzilla i flexible.</p>"},{"location":"09laravelAvan.html#1-configuracio-inicial_2","title":"1. Configuraci\u00f3 Inicial","text":""},{"location":"09laravelAvan.html#11-configurar-els-discs-demmagatzematge","title":"1.1 Configurar els Discs d'Emmagatzematge","text":"<p>Els discos d'emmagatzematge es defineixen al fitxer <code>config/filesystems.php</code>. Per defecte, Laravel inclou els seg\u00fcents discos: - local: Emmagatzematge en el sistema local. - public: Per fitxers p\u00fablics accessibles des d'un navegador. - s3: Per emmagatzematge a Amazon S3.</p>"},{"location":"09laravelAvan.html#12-configuracio-del-env","title":"1.2 Configuraci\u00f3 del <code>.env</code>","text":"<p>Exemple de configuraci\u00f3: <pre><code>FILESYSTEM_DISK=local\nAWS_ACCESS_KEY_ID=el_teu_access_key\nAWS_SECRET_ACCESS_KEY=el_teu_secret_key\nAWS_DEFAULT_REGION=us-east-1\nAWS_BUCKET=el_teu_bucket\n</code></pre></p>"},{"location":"09laravelAvan.html#2-treballar-amb-el-sistema-de-fitxers","title":"2. Treballar amb el Sistema de Fitxers","text":""},{"location":"09laravelAvan.html#21-accedir-a-un-disc","title":"2.1 Accedir a un Disc","text":"<p>Utilitza la fa\u00e7ana <code>Storage</code> per accedir al sistema de fitxers: <pre><code>use Illuminate\\Support\\Facades\\Storage;\n\n$disk = Storage::disk('local'); // Accedir al disc local\n</code></pre></p> <p>Si no especifiques cap disc, Laravel utilitza el disc predeterminat (<code>FILESYSTEM_DISK</code> al <code>.env</code>).</p>"},{"location":"09laravelAvan.html#3-operacions-basiques-amb-fitxers","title":"3. Operacions B\u00e0siques amb Fitxers","text":""},{"location":"09laravelAvan.html#31-guardar-fitxers","title":"3.1 Guardar Fitxers","text":"<pre><code>use Illuminate\\Support\\Facades\\Storage;\n\n// Guardar un fitxer amb contingut\nStorage::put('documents/file.txt', 'Contingut del fitxer');\n\n// Guardar un fitxer pujat\n$file = $request-&gt;file('document');\nStorage::putFile('uploads', $file);\n\n// Guardar amb un nom personalitzat\nStorage::putFileAs('uploads', $file, 'custom_name.txt');\n</code></pre>"},{"location":"09laravelAvan.html#32-obtenir-fitxers","title":"3.2 Obtenir Fitxers","text":"<pre><code>// Obtenir el contingut d'un fitxer\n$content = Storage::get('documents/file.txt');\n\n// Verificar si un fitxer existeix\nif (Storage::exists('documents/file.txt')) {\n    // Fitxer existeix\n}\n</code></pre>"},{"location":"09laravelAvan.html#33-eliminar-fitxers","title":"3.3 Eliminar Fitxers","text":"<pre><code>// Eliminar un fitxer\nStorage::delete('documents/file.txt');\n\n// Eliminar m\u00faltiples fitxers\nStorage::delete(['file1.txt', 'file2.txt']);\n</code></pre>"},{"location":"09laravelAvan.html#34-llistar-fitxers","title":"3.4 Llistar Fitxers","text":"<pre><code>// Llistar tots els fitxers d'un directori\n$files = Storage::files('documents');\n\n// Llistar fitxers recursivament\n$allFiles = Storage::allFiles('documents');\n\n// Llistar carpetes\n$directories = Storage::directories('documents');\n\n// Llistar carpetes recursivament\n$allDirectories = Storage::allDirectories('documents');\n</code></pre>"},{"location":"09laravelAvan.html#4-fitxers-publics","title":"4. Fitxers P\u00fablics","text":""},{"location":"09laravelAvan.html#41-publicar-fitxers","title":"4.1 Publicar Fitxers","text":"<p>Per fer fitxers accessibles p\u00fablicament, utilitza el disc <code>public</code>. Assegura't de crear un enlla\u00e7 simb\u00f2lic per al directori <code>storage/app/public</code> al directori <code>public/storage</code>: <pre><code>php artisan storage:link\n</code></pre></p>"},{"location":"09laravelAvan.html#42-obtenir-una-url-publica","title":"4.2 Obtenir una URL P\u00fablica","text":"<pre><code>$url = Storage::url('documents/file.txt'); // Genera una URL p\u00fablica\n</code></pre>"},{"location":"09laravelAvan.html#5-treballar-amb-amazon-s3","title":"5. Treballar amb Amazon S3","text":""},{"location":"09laravelAvan.html#51-configuracio","title":"5.1 Configuraci\u00f3","text":"<p>Inclou les credencials d'Amazon S3 al fitxer <code>.env</code>: <pre><code>AWS_ACCESS_KEY_ID=el_teu_access_key\nAWS_SECRET_ACCESS_KEY=el_teu_secret_key\nAWS_DEFAULT_REGION=us-east-1\nAWS_BUCKET=el_teu_bucket\n</code></pre></p>"},{"location":"09laravelAvan.html#52-exemple","title":"5.2 Exemple","text":"<pre><code>use Illuminate\\Support\\Facades\\Storage;\n\n// Guardar un fitxer a S3\nStorage::disk('s3')-&gt;put('documents/file.txt', 'Contingut');\n\n// Obtenir una URL\n$url = Storage::disk('s3')-&gt;url('documents/file.txt');\n</code></pre>"},{"location":"09laravelAvan.html#gestio-de-sessions-en-laravel","title":"Gesti\u00f3 de Sessions en Laravel","text":"<p>Laravel ofereix una API senzilla i segura per gestionar sessions d'usuari. Les sessions permeten emmagatzemar dades temporals associades a cada usuari mentre interactua amb l'aplicaci\u00f3.</p>"},{"location":"09laravelAvan.html#1-tipus-de-controladors-de-sessio","title":"1. Tipus de Controladors de Sessi\u00f3","text":"<p>Laravel suporta diversos tipus de controladors per gestionar sessions. Es defineixen al fitxer <code>config/session.php</code> amb el par\u00e0metre <code>SESSION_DRIVER</code>.</p>"},{"location":"09laravelAvan.html#tipus-de-controladors","title":"Tipus de Controladors","text":"<ul> <li>file: Emmagatzema les dades en fitxers al servidor (predeterminat).</li> <li>cookie: Desa les dades en cookies xifrades al navegador.</li> <li>database: Desa les dades en una taula de base de dades.</li> <li>redis: Utilitza Redis per a una gesti\u00f3 r\u00e0pida i distribu\u00efda.</li> <li>array: Desa les dades en mem\u00f2ria, nom\u00e9s per a proves.</li> </ul> <p>Configuraci\u00f3 en el fitxer <code>.env</code>: <pre><code>SESSION_DRIVER=file\n</code></pre></p>"},{"location":"09laravelAvan.html#2-configuracio-de-les-sessions","title":"2. Configuraci\u00f3 de les Sessions","text":""},{"location":"09laravelAvan.html#opcions-clau-al-fitxer-configsessionphp","title":"Opcions Clau al Fitxer <code>config/session.php</code>","text":"<ul> <li>lifetime: Temps d'expiraci\u00f3 de la sessi\u00f3 en minuts:   <pre><code>'lifetime' =&gt; 120,\n</code></pre></li> <li>expire_on_close: Expira quan es tanca el navegador:   <pre><code>'expire_on_close' =&gt; false,\n</code></pre></li> <li>encrypt: Si es volen xifrar les dades de sessi\u00f3:   <pre><code>'encrypt' =&gt; false,\n</code></pre></li> </ul>"},{"location":"09laravelAvan.html#3-us-de-sessions","title":"3. \u00das de Sessions","text":""},{"location":"09laravelAvan.html#31-afegir-dades-a-la-sessio","title":"3.1 Afegir Dades a la Sessi\u00f3","text":"<p>Utilitza el m\u00e8tode <code>put</code> per guardar dades: <pre><code>session(['key' =&gt; 'value']);\n\n// Alternativa amb l'helper:\nSession::put('key', 'value');\n</code></pre></p>"},{"location":"09laravelAvan.html#32-obtenir-dades-de-la-sessio","title":"3.2 Obtenir Dades de la Sessi\u00f3","text":"<p>Utilitza el m\u00e8tode <code>get</code> per recuperar dades: <pre><code>$value = session('key', 'valor_per_defecte'); // Helper\n$value = Session::get('key', 'valor_per_defecte'); // Fa\u00e7ana\n</code></pre></p>"},{"location":"09laravelAvan.html#33-eliminar-dades-de-la-sessio","title":"3.3 Eliminar Dades de la Sessi\u00f3","text":"<p>Elimina una clau espec\u00edfica: <pre><code>Session::forget('key');\n</code></pre></p> <p>Elimina totes les dades de la sessi\u00f3: <pre><code>Session::flush();\n</code></pre></p>"},{"location":"09laravelAvan.html#4-sessio-flash","title":"4. Sessi\u00f3 Flash","text":"<p>Les dades flash nom\u00e9s existeixen per a la seg\u00fcent petici\u00f3 HTTP. S\u00f3n \u00fatils per missatges temporals com alertes d'\u00e8xit o errors.</p>"},{"location":"09laravelAvan.html#41-afegir-dades-flash","title":"4.1 Afegir Dades Flash","text":"<pre><code>Session::flash('status', 'La tasca s'ha completat!');\n</code></pre>"},{"location":"09laravelAvan.html#42-recuperar-dades-flash","title":"4.2 Recuperar Dades Flash","text":"<pre><code>$value = Session::get('status');\n</code></pre>"},{"location":"09laravelAvan.html#5-sessio-basada-en-base-de-dades","title":"5. Sessi\u00f3 Basada en Base de Dades","text":""},{"location":"09laravelAvan.html#51-crear-la-taula-de-sessio","title":"5.1 Crear la Taula de Sessi\u00f3","text":"<p>Per utilitzar el controlador <code>database</code>, primer cal crear una taula de base de dades amb el comandament Artisan: <pre><code>php artisan session:table\nphp artisan migrate\n</code></pre></p> <p>Aix\u00f2 crea una taula anomenada <code>sessions</code> amb els camps necessaris.</p>"},{"location":"09laravelAvan.html#52-configurar-el-driver","title":"5.2 Configurar el Driver","text":"<p>Al fitxer <code>.env</code>, estableix: <pre><code>SESSION_DRIVER=database\n</code></pre></p>"},{"location":"09laravelAvan.html#testing-en-laravel","title":"Testing en Laravel","text":"<p>Laravel proporciona un ecosistema complet per realitzar proves en les aplicacions. Les proves s\u00f3n essencials per assegurar que el codi funciona correctament i evitar regressions.</p>"},{"location":"09laravelAvan.html#1-tipus-de-proves-en-laravel","title":"1. Tipus de Proves en Laravel","text":""},{"location":"09laravelAvan.html#11-proves-unitaries","title":"1.1 Proves Unit\u00e0ries","text":"<p>Les proves unit\u00e0ries validen la funcionalitat de components individuals del codi, com models o serveis.</p>"},{"location":"09laravelAvan.html#12-proves-dintegracio","title":"1.2 Proves d'Integraci\u00f3","text":"<p>Verifiquen la interacci\u00f3 entre m\u00faltiples components de l'aplicaci\u00f3.</p>"},{"location":"09laravelAvan.html#13-proves-http","title":"1.3 Proves HTTP","text":"<p>Validen rutes, controladors i respostes HTTP.</p>"},{"location":"09laravelAvan.html#14-proves-de-base-de-dades","title":"1.4 Proves de Base de Dades","text":"<p>Asseguren que les dades es processen i emmagatzemen correctament.</p>"},{"location":"09laravelAvan.html#15-proves-dinterficie-amb-dusk","title":"1.5 Proves d'Interf\u00edcie amb Dusk","text":"<p>Simulen la interacci\u00f3 amb el navegador per provar la interf\u00edcie d'usuari.</p>"},{"location":"09laravelAvan.html#2-configuracio","title":"2. Configuraci\u00f3","text":""},{"location":"09laravelAvan.html#21-configurar-lambient-de-proves","title":"2.1 Configurar l'Ambient de Proves","text":"<p>Laravel utilitza el fitxer <code>.env.testing</code> per definir la configuraci\u00f3 de les proves. Per exemple: <pre><code>APP_ENV=testing\nDB_CONNECTION=sqlite\nDB_DATABASE=:memory:\n</code></pre></p>"},{"location":"09laravelAvan.html#22-executar-proves","title":"2.2 Executar Proves","text":"<p>Utilitza PHPUnit per executar les proves: <pre><code>php artisan test\n</code></pre></p>"},{"location":"09laravelAvan.html#3-proves-http","title":"3. Proves HTTP","text":""},{"location":"09laravelAvan.html#31-crear-proves","title":"3.1 Crear Proves","text":"<p>Genera una prova amb Artisan: <pre><code>php artisan make:test ExampleTest\n</code></pre></p>"},{"location":"09laravelAvan.html#32-exemple-de-prova-http","title":"3.2 Exemple de Prova HTTP","text":"<pre><code>namespace Tests\\Feature;\n\nuse Tests\\TestCase;\n\nclass ExampleTest extends TestCase\n{\n    public function test_homepage_loads_correctly()\n    {\n        $response = $this-&gt;get('/');\n\n        $response-&gt;assertStatus(200);\n        $response-&gt;assertSee('Benvingut');\n    }\n}\n</code></pre>"},{"location":"09laravelAvan.html#4-proves-de-base-de-dades","title":"4. Proves de Base de Dades","text":""},{"location":"09laravelAvan.html#41-migracions-en-proves","title":"4.1 Migracions en Proves","text":"<p>Utilitza el trait <code>RefreshDatabase</code> per executar les migracions abans de cada prova: <pre><code>use Illuminate\\Foundation\\Testing\\RefreshDatabase;\n\nclass ExampleTest extends TestCase\n{\n    use RefreshDatabase;\n\n    public function test_database_interaction()\n    {\n        $user = User::factory()-&gt;create();\n\n        $this-&gt;assertDatabaseHas('users', [\n            'email' =&gt; $user-&gt;email,\n        ]);\n    }\n}\n</code></pre></p>"},{"location":"09laravelAvan.html#42-factories","title":"4.2 Factories","text":"<p>Utilitza factories per generar dades de prova: <pre><code>$user = User::factory()-&gt;create();\n</code></pre></p>"},{"location":"09laravelAvan.html#laravel-livewire-introduccio","title":"Laravel Livewire: Introducci\u00f3","text":"<p>Laravel Livewire \u00e9s un framework que permet construir components d'interf\u00edcie d'usuari din\u00e0mics sense haver d'escriure JavaScript. Amb Livewire, pots utilitzar PHP per gestionar la l\u00f2gica del client, mentre que Livewire s'encarrega de la comunicaci\u00f3 asincr\u00f2nica amb el servidor.</p>"},{"location":"09laravelAvan.html#1-installacio","title":"1. Instal\u00b7laci\u00f3","text":""},{"location":"09laravelAvan.html#11-requisits","title":"1.1 Requisits","text":"<p>Laravel Livewire funciona amb aplicacions Laravel. Assegura't de tenir Laravel instal\u00b7lat.</p>"},{"location":"09laravelAvan.html#12-installar-livewire","title":"1.2 Instal\u00b7lar Livewire","text":"<p>Utilitza Composer per instal\u00b7lar el paquet: <pre><code>composer require livewire/livewire\n</code></pre></p> <p>Publica els actius de Livewire: <pre><code>php artisan livewire:publish\n</code></pre></p> <p>Inclou els scripts de Livewire en les teues vistes Blade: <pre><code>@livewireStyles\n@livewireScripts\n</code></pre></p>"},{"location":"09laravelAvan.html#2-crear-components-livewire","title":"2. Crear Components Livewire","text":""},{"location":"09laravelAvan.html#21-generar-un-component","title":"2.1 Generar un Component","text":"<p>Utilitza Artisan per crear un component: <pre><code>php artisan make:livewire HelloWorld\n</code></pre></p> <p>Aix\u00f2 genera: - Un fitxer de classe PHP: <code>app/Http/Livewire/HelloWorld.php</code> - Una plantilla Blade: <code>resources/views/livewire/hello-world.blade.php</code></p>"},{"location":"09laravelAvan.html#22-exemple-de-component","title":"2.2 Exemple de Component","text":"<p>Classe del Component: <pre><code>namespace App\\Http\\Livewire;\n\nuse Livewire\\Component;\n\nclass HelloWorld extends Component\n{\n    public $message = \"Hola, m\u00f3n!\";\n\n    public function render()\n    {\n        return view('livewire.hello-world');\n    }\n}\n</code></pre></p> <p>Plantilla Blade: <pre><code>&lt;div&gt;\n    &lt;h1&gt;{{ $message }}&lt;/h1&gt;\n&lt;/div&gt;\n</code></pre></p> <p>Inclou el component en una vista: <pre><code>&lt;livewire:hello-world /&gt;\n</code></pre></p>"},{"location":"09laravelAvan.html#3-interactivitat-amb-livewire","title":"3. Interactivitat amb Livewire","text":""},{"location":"09laravelAvan.html#31-propietats-dinamiques","title":"3.1 Propietats Din\u00e0miques","text":"<p>Les propietats de la classe PHP es poden vincular directament als camps d'un formulari HTML: <pre><code>class Counter extends Component\n{\n    public $count = 0;\n\n    public function increment()\n    {\n        $this-&gt;count++;\n    }\n\n    public function render()\n    {\n        return view('livewire.counter');\n    }\n}\n</code></pre></p> <p>Plantilla Blade: <pre><code>&lt;div&gt;\n    &lt;button wire:click=\"increment\"&gt;Incrementar&lt;/button&gt;\n    &lt;h1&gt;{{ $count }}&lt;/h1&gt;\n&lt;/div&gt;\n</code></pre></p>"},{"location":"09laravelAvan.html#32-validacio-en-temps-real","title":"3.2 Validaci\u00f3 en Temps Real","text":"<p>Livewire permet validar dades a mesura que l'usuari interactua amb el formulari: <pre><code>class Form extends Component\n{\n    public $name;\n    public $email;\n\n    protected $rules = [\n        'name' =&gt; 'required|min:3',\n        'email' =&gt; 'required|email',\n    ];\n\n    public function submit()\n    {\n        $this-&gt;validate();\n\n        // Processar les dades\n    }\n\n    public function render()\n    {\n        return view('livewire.form');\n    }\n}\n</code></pre></p> <p>Plantilla Blade: <pre><code>&lt;div&gt;\n    &lt;form wire:submit.prevent=\"submit\"&gt;\n        &lt;input type=\"text\" wire:model=\"name\"&gt;\n        @error('name') &lt;span class=\"text-danger\"&gt;{{ $message }}&lt;/span&gt; @enderror\n\n        &lt;input type=\"email\" wire:model=\"email\"&gt;\n        @error('email') &lt;span class=\"text-danger\"&gt;{{ $message }}&lt;/span&gt; @enderror\n\n        &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n    &lt;/form&gt;\n&lt;/div&gt;\n</code></pre></p>"},{"location":"09laravelAvan.html#4-avantatges-de-livewire","title":"4. Avantatges de Livewire","text":"<ul> <li>Simplicitat: Evita la necessitat de gestionar JavaScript per funcionalitats comunes.</li> <li>Reactivitat: Actualitza la interf\u00edcie autom\u00e0ticament en resposta a canvis de dades.</li> <li>Integraci\u00f3: Es combina perfectament amb Blade i Laravel.</li> </ul>"},{"location":"09laravelAvan.html#exercici-practic-guia-dequips-de-futbol-femeni-amb-base-de-dades","title":"Exercici Pr\u00e0ctic: Guia d'Equips de Futbol Femen\u00ed amb Base de Dades","text":"<p>L'objectiu d'aquest exercici \u00e9s estendre la Guia d'Equips de Futbol Femen\u00ed amb les funcionalitats tractades en este tema. </p>"},{"location":"09laravelAvan.html#pas-1-configurar-lautenticacio-amb-laravel-breeze","title":"Pas 1: Configurar l'autenticaci\u00f3 amb Laravel Breeze","text":"<ol> <li>Copia el fitxer app.blade.php de la carpeta resources/views/layouts a equips.blade.php.</li> <li>Guarda les rutes de la Guia d'Equips de Futbol Femen\u00ed en algun fitxer per utilitzar despr\u00e9s.  </li> <li>Instal\u00b7la Laravel Breeze:</li> </ol> <pre><code>composer require laravel/breeze --dev\nphp artisan breeze:install\nnpm install &amp;&amp; npm run dev\nphp artisan migrate\n</code></pre>"},{"location":"09laravelAvan.html#pas-2-afegir-els-rols-al-sistema","title":"Pas 2: Afegir els rols al sistema","text":""},{"location":"09laravelAvan.html#migracio-per-al-camp-role-als-usuaris","title":"Migraci\u00f3 per al camp <code>role</code> als usuaris","text":"<ol> <li>Crea una nova migraci\u00f3 per afegir el camp <code>role</code> a usuaris:    <pre><code>php artisan make:migration add_role_to_users_table --table=users\n</code></pre>    Afegeix el camp:    <pre><code>Schema::table('users', function (Blueprint $table) {\n    $table-&gt;string('role')-&gt;default('arbitre');\n});\n</code></pre>    Aplica la migraci\u00f3:    <pre><code>php artisan migrate\n</code></pre></li> </ol>"},{"location":"09laravelAvan.html#crea-el-seeders-dusuaris-i-crea-un-usuari-administrador","title":"Crea el seeders d'usuaris i crea un usuari administrador","text":"<pre><code>User::create([\n    'name' =&gt; 'Admin',\n    'email' =&gt; 'admin@example.com',\n    'password' =&gt; Hash::make('password'),\n    'role' =&gt; 'administrador',\n]);\n</code></pre>"},{"location":"09laravelAvan.html#pas-3-middleware-per-a-permisos-de-rol-i-manager","title":"Pas 3: Middleware per a permisos de rol i manager","text":""},{"location":"09laravelAvan.html#crear-middleware-per-a-gestionar-els-rols","title":"Crear Middleware per a gestionar els rols","text":"<ol> <li>Genera el middleware:    <pre><code>php artisan make:middleware RoleMiddleware\n</code></pre></li> <li>Defineix el control dels rols:    <pre><code>public function handle($request, Closure $next, $role)\n{\n    if (auth()-&gt;user()-&gt;role !== $role) {\n        return redirect('/')-&gt;with('error', 'No tens perm\u00eds per accedir a aquesta p\u00e0gina.');\n    }\n    return $next($request);\n}\n</code></pre></li> </ol>"},{"location":"09laravelAvan.html#aplicar-middleware-a-rutes","title":"Aplicar Middleware a rutes","text":"<ul> <li>Protegeix les rutes per tal que els equips,estadis soles puguen modificar-los els administradors:   <pre><code>  Route::middleware(['auth', RoleMiddleware::class.':administrador' ])-&gt;group(function (){\n      Route::resource('/equips', EquipController::class)-&gt;except(['index', 'show']);\n      Route::resource('/estadis', EstadisController::class)-&gt;except(['index', 'show']);\n  });\n  Route::resource('/equips', EquipController::class)-&gt;only(['index', 'show']);\n  Route::resource('/estadis', EstadisController::class)-&gt;only(['index', 'show']);\n</code></pre></li> </ul>"},{"location":"09laravelAvan.html#pas-4-associar-managers-a-equips","title":"Pas 4: Associar managers a equips","text":""},{"location":"09laravelAvan.html#migracio-per-a-lassociacio-entre-usuaris-i-equips","title":"Migraci\u00f3 per a l\u2019associaci\u00f3 entre usuaris i equips","text":"<ol> <li>Crea una migraci\u00f3 nova:    <pre><code>php artisan make:migration add_team_id_to_users_table --table=users\n</code></pre></li> <li>Afegeix el camp <code>team_id</code>:    <pre><code>Schema::table('users', function (Blueprint $table) {\n    $table-&gt;unsignedBigInteger('equip_id')-&gt;nullable();\n    $table-&gt;foreign('equip_id')-&gt;references('id')-&gt;on('equips')-&gt;onDelete('set null');\n});\n</code></pre></li> <li>Aplica la migraci\u00f3:    <pre><code>php artisan migrate\n</code></pre></li> </ol>"},{"location":"09laravelAvan.html#assignar-equips-als-managers","title":"Assignar equips als managers","text":"<ul> <li>Crea un manager per equip i assigna-li  :   <pre><code>foreach (Equip::all() as $equip){\n          User::create([\n              'name' =&gt; 'Manager  '.$equip-&gt;nom,\n              'email' =&gt; $equip-&gt;nom.'@manager.com',\n              'password' =&gt; Hash::make('1234'),\n              'role' =&gt; 'manager',\n              'equip_id' =&gt; $equip-&gt;id,\n          ]);\n      }\n</code></pre></li> </ul>"},{"location":"09laravelAvan.html#relacio-entre-models","title":"Relaci\u00f3 entre models","text":"<ul> <li>Defineix la relaci\u00f3 al model <code>User</code>:   <pre><code>public function equip()\n{\n    return $this-&gt;belongsTo(Equip::class );\n}\n</code></pre></li> <li>Defineix la relaci\u00f3 inversa al model <code>Equip</code>:   <pre><code>public function manager()\n{\n    return $this-&gt;hasOne(User::class );\n}\n</code></pre></li> </ul>"},{"location":"09laravelAvan.html#pas-5-adaptar-les-vistes-al-component-layout-de-breeze","title":"Pas 5: Adaptar les vistes al component layout de Breeze","text":"<ol> <li>Modificar equips.blade.php per a utilitzar el layout de Breeze.</li> </ol> <pre><code>&lt;x-app-layout&gt;\n    &lt;x-slot name=\"header\"&gt;\n        &lt;h2 class=\"font-semibold text-xl text-gray-800 dark:text-gray-200 leading-tight\"&gt;\n            @yield('title','Guia de futbol femen\u00ed')\n        &lt;/h2&gt;\n    &lt;/x-slot&gt;\n\n    &lt;div class=\"py-12\"&gt;\n        &lt;div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\"&gt;\n            &lt;div class=\"bg-white dark:bg-gray-800 overflow-hidden shadow-sm sm:rounded-lg\"&gt;\n                &lt;div class=\"p-6 text-gray-900 dark:text-gray-100\"&gt;\n                    @yield('content')\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;footer&gt;\n        &lt;p&gt;&amp;copy; 2024 Guia de Futbol Femen\u00ed&lt;/p&gt;\n    &lt;/footer&gt;\n&lt;/x-app-layout&gt;\n</code></pre> <ol> <li>Modificar la vista de l'equip per a utilitzar el layout de Breeze.</li> </ol> <pre><code>@extends('layouts.equips')\n</code></pre> <ol> <li>Modificar el layout de Breeze per a incloure el men\u00fa de navegaci\u00f3 .</li> </ol> <p>En navigation.blade.php: <pre><code>    ...\n    &lt;!-- Navigation Links --&gt;\n    &lt;div class=\"hidden space-x-8 sm:-my-px sm:ms-10 sm:flex\"&gt;\n        &lt;x-nav-link :href=\"route('dashboard')\" :active=\"request()-&gt;routeIs('dashboard')\"&gt;\n            {{ __('Dashboard') }}\n        &lt;/x-nav-link&gt;\n    &lt;/div&gt;\n    @include('partials.menu')\n    ...\n</code></pre></p> <ol> <li>En partials/menu.blade.php: <pre><code>    ...\n    &lt;div class=\"hidden space-x-8 sm:-my-px sm:ms-10 sm:flex\"&gt;\n        &lt;x-nav-link :href=\"route('equips.index')\" :active=\"request()-&gt;routeIs('dashboard')\"&gt;\n            {{ __('Guia Equips') }}\n        &lt;/x-nav-link&gt;\n    &lt;/div&gt;\n    &lt;div class=\"hidden space-x-8 sm:-my-px sm:ms-10 sm:flex\"&gt;\n        &lt;x-nav-link :href=\"route('estadis.index')\" :active=\"request()-&gt;routeIs('dashboard')\"&gt;\n            {{ __('Estadis') }}\n        &lt;/x-nav-link&gt;\n    &lt;/div&gt;\n    ...\n</code></pre></li> </ol>"},{"location":"09laravelAvan.html#pas-6-el-manager-soles-puga-editar-el-seu-equip","title":"Pas 6: El manager soles puga editar el seu equip","text":""},{"location":"09laravelAvan.html#1-crear-la-politica","title":"1. Crear la Pol\u00edtica","text":"<p>Executa el seg\u00fcent comandament per generar la pol\u00edtica associada al model <code>Equip</code>: <pre><code>php artisan make:policy EquipPolicy --model=Equip\n</code></pre></p>"},{"location":"09laravelAvan.html#2-definir-la-logica-a-la-politica","title":"2. Definir la L\u00f2gica a la Pol\u00edtica","text":"<p>Edita el fitxer generat <code>app/Policies/EquipPolicy.php</code> i afegeix les regles de permisos.</p> <pre><code>namespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Equip;\n\nclass EquipPolicy\n{\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        // Nom\u00e9s els administradors poden crear equips\n        return $user-&gt;role === 'administrador';\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Equip $equip)\n    {\n        // Permetre si l'usuari \u00e9s un administrador o un manager i est\u00e0 assignat a aquest equip\n        return $user-&gt;role === 'administrador' || ($user-&gt;role === 'manager' &amp;&amp; $user-&gt;equip_id === $equip-&gt;id);\n    }\n\n    /**\n     * Determina si l'usuari pot eliminar l'equip.\n     *\n     * @param  \\App\\Models\\User  $user\n     * @param  \\App\\Models\\Equip $equip\n     * @return bool\n     */\n    public function delete(User $user, Equip $equip)\n    {\n        // Nom\u00e9s els administradors poden eliminar equips\n        return $user-&gt;role === 'administrador';\n    }\n}\n</code></pre>"},{"location":"09laravelAvan.html#3-utilitzar-la-politica-al-controlador","title":"3. Utilitzar la Pol\u00edtica al Controlador","text":"<p>Al controlador <code>EquipController</code>, utilitza el m\u00e8tode <code>authorize</code> per aplicar la pol\u00edtica abans de permetre accions.</p> <pre><code>class EquipController extends Controller\n{\n\n    use AuthorizesRequests;\n\n    public function index() {\n        $equips = Equip::all();\n        return view('equips.index', compact('equips'));\n    }\n\n    public function show(Equip $equip) {\n        return view('equips.show', compact('equip'));\n    }\n\n    public function create() {\n        $this-&gt;authorize('create');\n        $estadis = Estadi::all();\n        return view('equips.create',compact('estadis'));\n    }\n\n    public function edit(Equip $equip) {\n        $this-&gt;authorize('update', $equip);\n        $estadis = Estadi::all();\n        return view('equips.edit', compact('equip','estadis'));\n    }\n\n\n    public function store(Request $request)\n    {\n        $this-&gt;authorize('create');\n        $validated = $request-&gt;validate([\n            'nom' =&gt; 'required|unique:equips',\n            'titols' =&gt; 'integer|min:0',\n            'estadi_id' =&gt; 'required|exists:estadis,id',\n            'escut' =&gt; 'nullable|image|mimes:jpeg,png,jpg|max:2048', // Validaci\u00f3 del fitxer\n        ]);\n\n        if ($request-&gt;hasFile('escut')) {\n            $path = $request-&gt;file('escut')-&gt;store('escuts', 'public');\n            $validated['escut'] = $path;\n        }\n\n        Equip::create($validated);\n\n        return redirect()-&gt;route('equips.index')-&gt;with('success', 'Equip creat correctament!');\n    }\n\n\n    public function update(Request $request, Equip $equip)\n    {\n        $this-&gt;authorize('update', $equip);\n        $validated = $request-&gt;validate([\n            'nom' =&gt; 'required|unique:equips,nom,' . $equip-&gt;id,\n            'titols' =&gt; 'integer|min:0',\n            'estadi_id' =&gt; 'required|exists:estadis,id',\n            'escut' =&gt; 'nullable|image|mimes:jpeg,png,jpg|max:2048',\n        ]);\n\n\n        if ($request-&gt;hasFile('escut')) {\n            if ($equip-&gt;escut) {\n                Storage::disk('public')-&gt;delete($equip-&gt;escut); // Esborra l'escut antic\n            }\n            $path = $request-&gt;file('escut')-&gt;store('escuts', 'public');\n            $validated['escut'] = $path;\n        }\n\n        $equip-&gt;update($validated);\n\n        return redirect()-&gt;route('equips.index')-&gt;with('success', 'Equip actualitzat correctament!');\n    }\n\n    public function destroy(Equip $equip)\n    {\n        $this-&gt;authorize('delete', $equip);\n        if ($equip-&gt;escut) {\n            Storage::disk('public')-&gt;delete($equip-&gt;escut);\n        }\n        $equip-&gt;delete();\n        return redirect()-&gt;route('equips.index')-&gt;with('success', 'Equip esborrat correctament!');\n    }\n\n\n}\n</code></pre>"},{"location":"09laravelAvan.html#4-utilitzar-la-politica-a-les-vistes","title":"4. Utilitzar la Pol\u00edtica a les Vistes","text":"<p>A les vistes Blade, pots utilitzar les directives <code>@can</code> per verificar els permisos.</p> <pre><code>@can('update', $equip)\n    &lt;a href=\"{{ route('equips.edit', $equip-&gt;id) }}\" class=\"text-yellow-600 hover:underline\"&gt;Editar&lt;/a&gt;\n@endcan\n</code></pre>"},{"location":"09laravelAvan.html#pas-7-afegir-formrequest-per-a-la-validacio","title":"Pas 7. Afegir FormRequest per a la validaci\u00f3","text":""},{"location":"09laravelAvan.html#1-generar-el-form-request","title":"1. Generar el Form Request","text":"<p>Executa el seg\u00fcent comandament per crear un Form Request:</p> <pre><code>php artisan make:request StoreEquipRequest\nphp artisan make:request UpdateEquipRequest\n</code></pre> <p>Aquest comandament crear\u00e0 una classe <code>StoreEquipRequest</code> i altra <code>UpdateEquipRequest  al directori</code>app/Http/Requests`.</p>"},{"location":"09laravelAvan.html#2-definir-les-regles-de-validacio","title":"2. Definir les regles de validaci\u00f3","text":"<p>Obre el fitxer <code>StoreEquipRequest.php</code> i defineix les regles de validaci\u00f3 al m\u00e8tode <code>rules</code>.</p>"},{"location":"09laravelAvan.html#exemple-de-validacio","title":"Exemple de validaci\u00f3:","text":"<pre><code>namespace App\\Http\\Requests;\n\nuse Illuminate\\Foundation\\Http\\FormRequest;\n\nclass StoreEquipRequest extends FormRequest\n{\n    /**\n     * Determina si l'usuari est\u00e0 autoritzat a fer aquesta petici\u00f3.\n     *\n     * @return bool\n     */\n    public function authorize(): bool\n    {\n         return $this-&gt;user()-&gt;can('create', Equip::class);\n    }\n\n    /**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array&lt;string, \\Illuminate\\Contracts\\Validation\\ValidationRule|array&lt;mixed&gt;|string&gt;\n     */\n    public function rules(): array\n    {\n        return [\n            'nom' =&gt; 'required|unique:equips',\n            'titols' =&gt; 'integer|min:0',\n            'estadi_id' =&gt; 'required|exists:estadis,id',\n            'escut' =&gt; 'nullable|image|mimes:jpeg,png,jpg|max:2048', // Validaci\u00f3 del fitxer\n        ];\n    }\n\n    public function messages()\n    {\n        return [\n            'nom.required' =&gt; 'El camp \"Nom\" \u00e9s obligatori.',\n            'nom.unique' =&gt; 'Aquest nom ja est\u00e0 en \u00fas. Si us plau, tria un altre.',\n            'titols.integer' =&gt; 'El camp \"T\u00edtols\" ha de ser un n\u00famero enter.',\n            'titols.min' =&gt; 'El nombre de t\u00edtols no pot ser inferior a zero.',\n            'estadi_id.required' =&gt; 'El camp \"Estadi\" \u00e9s obligatori.',\n            'estadi_id.exists' =&gt; 'L\\'estadi seleccionat no \u00e9s v\u00e0lid.',\n            'escut.image' =&gt; 'El camp \"Escut\" ha de ser una imatge.',\n            'escut.mimes' =&gt; 'El camp \"Escut\" nom\u00e9s accepta formats: jpeg, png, jpg.',\n            'escut.max' =&gt; 'La mida de l\\'escut no pot superar els 2 MB.',\n        ];\n    }\n}\n</code></pre>"},{"location":"09laravelAvan.html#3-modificar-el-controlador-per-utilitzar-el-form-request","title":"3. Modificar el Controlador per Utilitzar el Form Request","text":"<p>Substitueix la injecci\u00f3 de <code>Request</code> pel nou <code>StoreEquipRequest</code> al m\u00e8tode <code>store</code> del controlador <code>EquipController</code>.</p>"},{"location":"09laravelAvan.html#exemple","title":"Exemple:","text":"<pre><code>use App\\Http\\Requests\\StoreEquipRequest;\n\npublic function store(StoreEquipRequest $request)\n{\n\n    $validated = $request-&gt;validated(); // Obt\u00e9 les dades validades\n\n    if ($request-&gt;hasFile('escut')) {\n        $path = $request-&gt;file('escut')-&gt;store('escuts', 'public');\n        $validated['escut'] = $path;\n    }\n\n    Equip::create($validated);\n\n    return redirect()-&gt;route('equips.index')-&gt;with('success', 'Equip creat correctament!');\n}\n</code></pre>"},{"location":"09laravelAvan.html#4-fes-el-mateix-per-al-metode-update","title":"4. Fes el mateix per al M\u00e8tode <code>update</code>","text":"<p>Defineix les regles al m\u00e8tode <code>rules</code>, incloent l'excepci\u00f3 per al camp \u00fanic (en aquest cas, el <code>nom</code>):</p> <pre><code>use App\\Http\\Requests\\StoreEquipRequest;\n\npublic function authorize()\n{\n    $equip = $this-&gt;route('equip'); // Obt\u00e9 l'equip de la ruta\n    return $this-&gt;user()-&gt;can('update', $equip);\n}\n\npublic function rules()\n{\n    $equipId = $this-&gt;route('equip')-&gt;id; // Obt\u00e9 l'ID de l'equip actual\n\n    return [\n        'nom' =&gt; 'required|unique:equips,nom,' . $equipId,\n        'titols' =&gt; 'integer|min:0',\n        'estadi_id' =&gt; 'required|exists:estadis,id',\n        'escut' =&gt; 'nullable|image|mimes:jpeg,png,jpg|max:2048',\n    ];\n} \n</code></pre>"},{"location":"09laravelAvan.html#pas-8-idiomes-al-projecte","title":"Pas 8. Idiomes al projecte","text":""},{"location":"09laravelAvan.html#1-publicar-els-fitxers-de-llenguatge","title":"1. Publicar els Fitxers de Llenguatge","text":"<p>Per defecte, Laravel no inclou el directori <code>lang</code>. Per personalitzar els fitxers de llenguatge o crear-ne de nous, executa:</p> <pre><code>php artisan lang:publish\n</code></pre> <p>Aquesta comanda crear\u00e0 el directori <code>lang</code> i publicar\u00e0 els fitxers de llenguatge predeterminats de Laravel.</p>"},{"location":"09laravelAvan.html#2-configurar-lidioma-predeterminat","title":"2. Configurar l'Idioma Predeterminat","text":"<p>Al fitxer <code>.env</code>, ajusta l'opcions <code>locale</code> per establir l'idioma predeterminat:</p> <pre><code>APP_LOCALE=ca\nAPP_FALLBACK_LOCALE=en\n</code></pre>"},{"location":"09laravelAvan.html#3-definir-les-traduccions","title":"3. Definir les Traduccions","text":"<p>Les cadenes de traducci\u00f3 es poden emmagatzemar en fitxers PHP o JSON dins del directori <code>lang</code>.</p>"},{"location":"09laravelAvan.html#utilitzant-fitxers-php","title":"Utilitzant Fitxers PHP","text":"<p>Crea subdirectoris per a cada idioma dins de <code>lang</code> i afegeix els fitxers de traducci\u00f3 corresponents. Per exemple:</p> <pre><code>/lang\n     ca.json\n     es.json \n     en.json\n</code></pre> <p>Cada fitxer ha de retornar un array de cadenes tradu\u00efdes:</p> <p><pre><code> {\n  \"Creaci\u00f3 d'Equip\": \"Creaci\u00f3 d'Equip\",\n  \"Guia d'Equips\": \"Guia d'Equips\",\n  \"Modificaci\u00f3 d'Equip\": \"Modificaci\u00f3 d'Equip\",\n  \"Escut actual\": \"Escut actual\",\n  \"Escut\": \"Escut\",\n  \"Estadi\": \"Estadi\",\n  \"Nom\": \"Nom\",\n  \"T\u00edtols\": \"T\u00edtols\",\n  \"Guardar\": \"Guardar\",\n  \"Actualitzar\": \"Actualitzar\",\n  \"Esborrar\": \"Esborrar\",\n  \"Crear Equip\": \"Crear Equip\"  \n}\n</code></pre> <pre><code>{\n  \"Creaci\u00f3 d'Equip\": \"Creaci\u00f3n de Equipo\",\n  \"Guia d'Equips\": \"Gu\u00eda de Equipos\",\n  \"Modificaci\u00f3 d'Equip\": \"Modificaci\u00f3n de Equipo\",\n  \"Escut actual\": \"Escudo actual\",\n  \"Escut\": \"Escudo\",\n  \"Estadi\": \"Estadio\",\n  \"Nom\": \"Nombre\",\n  \"T\u00edtols\": \"T\u00edtulos\",\n  \"Guardar\": \"Guardar\",\n  \"Actualitzar\": \"Actualizar\",\n  \"Esborrar\": \"Borrar\",\n  \"Crear Equip\": \"Crear Equipo\"\n} \n</code></pre> <pre><code>{\n  \"Creaci\u00f3 d'Equip\": \"Team Creation\",\n  \"Guia d'Equips\": \"Team Guide\",\n  \"Modificaci\u00f3 d'Equip\": \"Team Modification\",\n  \"Escut actual\": \"Current Shield\",\n  \"Escut\": \"Shield\",\n  \"Estadi\": \"Stadium\",\n  \"Nom\": \"Name\",\n  \"T\u00edtols\": \"Titles\",\n  \"Guardar\": \"Save\",\n  \"Actualitzar\": \"Update\",\n  \"Esborrar\": \"Delete\",\n  \"Crear Equip\": \"Create Team\"\n}\n</code></pre></p>"},{"location":"09laravelAvan.html#4-recuperar-cadenes-de-traduccio","title":"4. Recuperar Cadenes de Traducci\u00f3","text":"<p>Utilitza la funci\u00f3 <code>__</code> per obtenir les cadenes tradu\u00efdes:</p> <pre><code> @extends('layouts.equips')\n\n@section('title', __(\"Creaci\u00f3 d'Equips\"))\n\n@section('content')\n    &lt;form action=\"{{ route('equips.store') }}\" method=\"POST\" enctype=\"multipart/form-data\" class=\"bg-white p-6 rounded-lg shadow-md max-w-md mx-auto\"&gt;\n        @csrf\n        &lt;div class=\"mb-4\"&gt;\n            &lt;label for=\"nom\" class=\"block text-sm font-medium text-gray-700 mb-1\"&gt;{{ __('Nom')}}:&lt;/label&gt;\n            &lt;input type=\"text\" name=\"nom\" id=\"nom\" required\n                   class=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500\"&gt;\n        &lt;/div&gt;\n\n        &lt;div class=\"mb-4\"&gt;\n            &lt;label for=\"titols\" class=\"block text-sm font-medium text-gray-700 mb-1\"&gt;{{__('T\u00edtols')}}:&lt;/label&gt;\n            &lt;input type=\"number\" name=\"titols\" id=\"titols\" required\n                   class=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500\"&gt;\n        &lt;/div&gt;\n\n        &lt;div class=\"mb-4\"&gt;\n            &lt;label for=\"estadi_id\" class=\"block text-sm font-medium text-gray-700 mb-1\"&gt;{{__('Estadi')}}:&lt;/label&gt;\n            &lt;select name=\"estadi_id\" id=\"estadi_id\" required\n                    class=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500\"&gt;\n                @foreach ($estadis as $estadi)\n                    &lt;option value=\"{{ $estadi-&gt;id }}\"&gt;{{ $estadi-&gt;nom }}&lt;/option&gt;\n                @endforeach\n            &lt;/select&gt;\n        &lt;/div&gt;\n\n        &lt;div class=\"mb-4\"&gt;\n            &lt;label for=\"escut\" class=\"block text-sm font-medium text-gray-700 mb-1\"&gt;{{__('Escut')}}:&lt;/label&gt;\n            &lt;input type=\"file\" name=\"escut\" id=\"escut\"\n                   class=\"w-full border-gray-300 rounded-lg shadow-sm focus:ring-blue-500 focus:border-blue-500\"&gt;\n        &lt;/div&gt;\n\n        &lt;button type=\"submit\"\n                class=\"w-full bg-blue-500 text-white font-medium py-2 px-4 rounded-lg shadow hover:bg-blue-600 focus:ring focus:ring-blue-300\"&gt;\n            {{__('Crear Equip')}}\n        &lt;/button&gt;\n    &lt;/form&gt;\n@endsection\n</code></pre>"},{"location":"09laravelAvan.html#5-canviar-lidioma-dinamicament","title":"5. Canviar l'Idioma Din\u00e0micament","text":"<p>Per canviar l'idioma durant l'execuci\u00f3, utilitza el m\u00e8tode <code>setLocale</code>:</p> <pre><code>App::setLocale('es');\n</code></pre> <p>Per facilitar als usuaris la selecci\u00f3 de l'idioma, pots crear rutes o enlla\u00e7os que estableixin l'idioma desitjat.</p>"},{"location":"09laravelAvan.html#7-traduir-missatges-de-validacio","title":"7. Traduir Missatges de Validaci\u00f3","text":"<p>Els missatges de validaci\u00f3 es poden personalitzar als fitxers de llenguatge corresponents. Per exemple, al fitxer <code>resources/lang/ca/validation.php</code>:</p> <pre><code>&lt;?php\n\nreturn [\n    /*\n    |--------------------------------------------------------------------------\n    | Missatges de validaci\u00f3\n    |--------------------------------------------------------------------------\n    |\n    | Les seg\u00fcents l\u00ednies contenen els missatges d'error per a les diferents\n    | regles de validaci\u00f3. Pots ajustar aquests missatges segons les\n    | necessitats de la teva aplicaci\u00f3.\n    |\n    */\n\n    'accepted' =&gt; 'El camp :attribute ha de ser acceptat.',\n    'active_url' =&gt; 'El camp :attribute no \u00e9s una URL v\u00e0lida.',\n    'after' =&gt; 'El camp :attribute ha de ser una data posterior a :date.',\n    'after_or_equal' =&gt; 'El camp :attribute ha de ser una data igual o posterior a :date.',\n    'alpha' =&gt; 'El camp :attribute nom\u00e9s pot contenir lletres.',\n    'alpha_dash' =&gt; 'El camp :attribute nom\u00e9s pot contenir lletres, n\u00fameros, guions i guions baixos.',\n    'alpha_num' =&gt; 'El camp :attribute nom\u00e9s pot contenir lletres i n\u00fameros.',\n    'array' =&gt; 'El camp :attribute ha de ser un array.',\n    'before' =&gt; 'El camp :attribute ha de ser una data anterior a :date.',\n    'before_or_equal' =&gt; 'El camp :attribute ha de ser una data igual o anterior a :date.',\n    'between' =&gt; [\n        'numeric' =&gt; 'El camp :attribute ha d\\'estar entre :min i :max.',\n        'file' =&gt; 'El camp :attribute ha de tenir entre :min i :max kilobytes.',\n        'string' =&gt; 'El camp :attribute ha de tenir entre :min i :max car\u00e0cters.',\n        'array' =&gt; 'El camp :attribute ha de tenir entre :min i :max elements.',\n    ],\n    'boolean' =&gt; 'El camp :attribute ha de ser verdader o fals.',\n    'confirmed' =&gt; 'La confirmaci\u00f3 del camp :attribute no coincideix.',\n    'date' =&gt; 'El camp :attribute no \u00e9s una data v\u00e0lida.',\n    'date_format' =&gt; 'El camp :attribute no coincideix amb el format :format.',\n    'different' =&gt; 'Els camps :attribute i :other han de ser diferents.',\n    'digits' =&gt; 'El camp :attribute ha de tenir :digits d\u00edgits.',\n    'digits_between' =&gt; 'El camp :attribute ha de tenir entre :min i :max d\u00edgits.',\n    'dimensions' =&gt; 'El camp :attribute t\u00e9 dimensions d\\'imatge no v\u00e0lides.',\n    'distinct' =&gt; 'El camp :attribute t\u00e9 un valor duplicat.',\n    'email' =&gt; 'El camp :attribute ha de ser una adre\u00e7a de correu electr\u00f2nic v\u00e0lida.',\n    'exists' =&gt; 'El camp :attribute seleccionat no \u00e9s v\u00e0lid.',\n    'file' =&gt; 'El camp :attribute ha de ser un fitxer.',\n    'filled' =&gt; 'El camp :attribute ha de tenir un valor.',\n    'gt' =&gt; [\n        'numeric' =&gt; 'El camp :attribute ha de ser m\u00e9s gran que :value.',\n        'file' =&gt; 'El camp :attribute ha de tenir m\u00e9s de :value kilobytes.',\n        'string' =&gt; 'El camp :attribute ha de tenir m\u00e9s de :value car\u00e0cters.',\n        'array' =&gt; 'El camp :attribute ha de tenir m\u00e9s de :value elements.',\n    ],\n    'gte' =&gt; [\n        'numeric' =&gt; 'El camp :attribute ha de ser m\u00e9s gran o igual a :value.',\n        'file' =&gt; 'El camp :attribute ha de tenir com a m\u00ednim :value kilobytes.',\n        'string' =&gt; 'El camp :attribute ha de tenir com a m\u00ednim :value car\u00e0cters.',\n        'array' =&gt; 'El camp :attribute ha de tenir com a m\u00ednim :value elements.',\n    ],\n    'image' =&gt; 'El camp :attribute ha de ser una imatge.',\n    'in' =&gt; 'El camp :attribute seleccionat no \u00e9s v\u00e0lid.',\n    'in_array' =&gt; 'El camp :attribute no existeix a :other.',\n    'integer' =&gt; 'El camp :attribute ha de ser un nombre enter.',\n    'ip' =&gt; 'El camp :attribute ha de ser una adre\u00e7a IP v\u00e0lida.',\n    'ipv4' =&gt; 'El camp :attribute ha de ser una adre\u00e7a IPv4 v\u00e0lida.',\n    'ipv6' =&gt; 'El camp :attribute ha de ser una adre\u00e7a IPv6 v\u00e0lida.',\n    'json' =&gt; 'El camp :attribute ha de ser una cadena JSON v\u00e0lida.',\n    'lt' =&gt; [\n        'numeric' =&gt; 'El camp :attribute ha de ser m\u00e9s petit que :value.',\n        'file' =&gt; 'El camp :attribute ha de tenir menys de :value kilobytes.',\n        'string' =&gt; 'El camp :attribute ha de tenir menys de :value car\u00e0cters.',\n        'array' =&gt; 'El camp :attribute ha de tenir menys de :value elements.',\n    ],\n    'lte' =&gt; [\n        'numeric' =&gt; 'El camp :attribute ha de ser m\u00e9s petit o igual a :value.',\n        'file' =&gt; 'El camp :attribute ha de tenir com a m\u00e0xim :value kilobytes.',\n        'string' =&gt; 'El camp :attribute ha de tenir com a m\u00e0xim :value car\u00e0cters.',\n        'array' =&gt; 'El camp :attribute no ha de tenir m\u00e9s de :value elements.',\n    ],\n    'max' =&gt; [\n        'numeric' =&gt; 'El camp :attribute no pot ser m\u00e9s gran que :max.',\n        'file' =&gt; 'El camp :attribute no pot tenir m\u00e9s de :max kilobytes.',\n        'string' =&gt; 'El camp :attribute no pot tenir m\u00e9s de :max car\u00e0cters.',\n        'array' =&gt; 'El camp :attribute no pot tenir m\u00e9s de :max elements.',\n    ],\n    'mimes' =&gt; 'El camp :attribute ha de ser un fitxer de tipus: :values.',\n    'mimetypes' =&gt; 'El camp :attribute ha de ser un fitxer de tipus: :values.',\n    'min' =&gt; [\n        'numeric' =&gt; 'El camp :attribute ha de ser com a m\u00ednim :min.',\n        'file' =&gt; 'El camp :attribute ha de tenir com a m\u00ednim :min kilobytes.',\n        'string' =&gt; 'El camp :attribute ha de tenir com a m\u00ednim :min car\u00e0cters.',\n        'array' =&gt; 'El camp :attribute ha de tenir com a m\u00ednim :min elements.',\n    ],\n    'not_in' =&gt; 'El camp :attribute seleccionat no \u00e9s v\u00e0lid.',\n    'not_regex' =&gt; 'El format del camp :attribute no \u00e9s v\u00e0lid.',\n    'numeric' =&gt; 'El camp :attribute ha de ser un nombre.',\n    'present' =&gt; 'El camp :attribute ha de ser present.',\n    'regex' =&gt; 'El format del camp :attribute no \u00e9s v\u00e0lid.',\n    'required' =&gt; 'El camp :attribute \u00e9s obligatori.',\n    'required_if' =&gt; 'El camp :attribute \u00e9s obligatori quan :other \u00e9s :value.',\n    'required_unless' =&gt; 'El camp :attribute \u00e9s obligatori excepte si :other \u00e9s a :values.',\n    'required_with' =&gt; 'El camp :attribute \u00e9s obligatori quan :values \u00e9s present.',\n    'required_with_all' =&gt; 'El camp :attribute \u00e9s obligatori quan :values s\u00f3n presents.',\n    'required_without' =&gt; 'El camp :attribute \u00e9s obligatori quan :values no \u00e9s present.',\n    'required_without_all' =&gt; 'El camp :attribute \u00e9s obligatori quan cap de :values s\u00f3n presents.',\n    'same' =&gt; 'Els camps :attribute i :other han de coincidir.',\n    'size' =&gt; [\n        'numeric' =&gt; 'El camp :attribute ha de tenir la mida :size.',\n        'file' =&gt; 'El camp :attribute ha de tenir :size kilobytes.',\n        'string' =&gt; 'El camp :attribute ha de tenir :size car\u00e0cters.',\n        'array' =&gt; 'El camp :attribute ha de contenir :size elements.',\n    ],\n    'starts_with' =&gt; 'El camp :attribute ha de comen\u00e7ar amb un dels valors seg\u00fcents: :values.',\n    'string' =&gt; 'El camp :attribute ha de ser una cadena de text.',\n    'timezone' =&gt; 'El camp :attribute ha de ser una zona hor\u00e0ria v\u00e0lida.',\n    'unique' =&gt; 'El camp :attribute ja est\u00e0 en \u00fas.',\n    'uploaded' =&gt; 'El camp :attribute ha fallat en pujar.',\n    'url' =&gt; 'El format del camp :attribute no \u00e9s v\u00e0lid.',\n    'uuid' =&gt; 'El camp :attribute ha de ser un identificador UUID v\u00e0lid.',\n\n    /*\n    |--------------------------------------------------------------------------\n    | Missatges personalitzats per a atributs\n    |--------------------------------------------------------------------------\n    |\n    | Pots utilitzar aquesta secci\u00f3 per personalitzar els noms dels atributs.\n    |\n    */\n\n    'attributes' =&gt; [],\n];\n</code></pre> <p>Aix\u00f2 assegura que els missatges de validaci\u00f3 es mostren en l'idioma seleccionat.</p>"},{"location":"09laravelAvan.html#pas-9-crear-proves","title":"Pas 9. Crear proves","text":"<ol> <li> <p>Crea un fitxer de proves per al CRUD d'equips: <pre><code>php artisan make:test EquipCRUDTest\n</code></pre></p> </li> <li> <p>Modifica el fitxer de proves <code>tests/Feature/EquipCRUDTest.php</code>: <pre><code>namespace Tests\\Feature;\n\nuse App\\Models\\Estadi;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\nuse Tests\\TestCase;\nuse App\\Models\\Equip;\n\nclass EquipCrudTest extends TestCase\n{\n    use RefreshDatabase;\n\n    /** @test */\n    public function es_pot_crear_un_equip_correctament()\n    {\n        // Actuar: Crear un equip\n        $estadi = Estadi::create([\n            'nom' =&gt; 'Camp Nou',\n            'ciutat' =&gt; 'Barcelona',\n            'capacitat' =&gt; 99354,\n        ]);\n        $equip = Equip::create([\n            'nom' =&gt; 'FC Barcelona',\n             'titols' =&gt;30,\n             'estadi_id' =&gt; 1,\n        ]);\n\n        // Comprovar que l\u2019equip es guarda a la base de dades\n        $this-&gt;assertDatabaseHas('equips', [\n            'nom' =&gt; 'FC Barcelona',\n            'titols' =&gt; 30,\n            'estadi_id' =&gt; 1,\n        ]);\n    }\n\n    public function es_poden_llistar_els_equips()\n    {\n        // Arrange: Crear equips\n        Equip::factory()-&gt;create(['nom' =&gt; 'FC Barcelona']);\n        Equip::factory()-&gt;create(['nom' =&gt; 'Real Madrid']);\n\n        // Actuar: Obtenir la llista d\u2019equips\n        $equips = Equip::all();\n\n        // Comprovar que la llista cont\u00e9 els equips creats\n        $this-&gt;assertCount(2, $equips);\n        $this-&gt;assertEquals('FC Barcelona', $equips[0]-&gt;nom);\n        $this-&gt;assertEquals('Real Madrid', $equips[1]-&gt;nom);\n    }\n\n    public function es_pot_actualitzar_un_equip()\n    {\n        // Arrange: Crear un equip\n        $equip = Equip::create([\n            'nom' =&gt; 'FC Barcelona',\n            'ciutat' =&gt; 'Barcelona',\n        ]);\n\n        // Actuar: Actualitzar l\u2019equip\n        $equip-&gt;update([\n            'nom' =&gt; 'Bar\u00e7a',\n            'ciutat' =&gt; 'Catalunya',\n        ]);\n\n        // Comprovar que els canvis es reflecteixen a la base de dades\n        $this-&gt;assertDatabaseHas('equips', [\n            'nom' =&gt; 'Bar\u00e7a',\n            'ciutat' =&gt; 'Catalunya',\n        ]);\n    }\n\n    public function es_pot_esborrar_un_equip()\n    {\n        // Arrange: Crear un equip\n        $equip = Equip::create([\n            'nom' =&gt; 'FC Barcelona',\n            'ciutat' =&gt; 'Barcelona',\n        ]);\n\n        // Actuar: Esborrar l\u2019equip\n        $equip-&gt;delete();\n\n        // Comprovar que l\u2019equip ja no existeix a la base de dades\n        $this-&gt;assertDatabaseMissing('equips', [\n            'nom' =&gt; 'FC Barcelona',\n            'ciutat' =&gt; 'Barcelona',\n        ]);\n    }\n\n    public function no_es_pot_crear_un_equip_sense_nom()\n    {\n        $this-&gt;expectException(\\Illuminate\\Database\\QueryException::class);\n\n        // Intentar crear un equip sense nom\n        Equip::create([\n            'ciutat' =&gt; 'Barcelona',\n        ]);\n    }\n}\n</code></pre></p> </li> <li>Copia el .env en .env.testing i modifica'l per a executar les proves en una BBDD de testing</li> </ol> <pre><code>DB_CONNECTION=mysql\nDB_HOST=mysql\nDB_PORT=3306\nDB_DATABASE=testing\nDB_USERNAME=sail\nDB_PASSWORD=password\n</code></pre> <ol> <li>Executa les proves: <pre><code>php artisan test\n</code></pre></li> </ol>"},{"location":"09laravelAvan.html#pas-10-generar-un-correu-electronic-amb-la-jornada-actual-partits-programats-i-enviar-lo-als-managers-dels-equips","title":"Pas 10. Generar un correu electr\u00f2nic amb la jornada actual (partits programats) i enviar-lo als managers dels equips.","text":""},{"location":"09laravelAvan.html#1-crear-una-comanda-artisan","title":"1. Crear una Comanda Artisan","text":"<pre><code>php artisan make:command EnviarJornadaManagers\n</code></pre> <p>Al fitxer <code>app/Console/Commands/EnviarJornadaManagers.php</code>:</p> <pre><code>namespace App\\Console\\Commands;\n\nuse App\\Models\\User;\nuse Carbon\\Carbon;\nuse Illuminate\\Console\\Command;\nuse Illuminate\\Support\\Facades\\Mail;\nuse App\\Models\\Partit;\nuse App\\Mail\\JornadaMail;\n\nclass EnviarJornadaManagers extends Command\n{\n    protected $signature = 'jornada:enviar';\n    protected $description = 'Envia la jornada actual als managers';\n\n    public function handle()\n    {\n        $partit = Partit::whereDate('data', '&gt;', Carbon::now()) // Filtra partits posteriors a avui\n            -&gt;orderBy('data', 'asc') // Ordena per la data m\u00e9s propera\n            -&gt;first();\n        $partits = Partit::with(['equipLocal', 'equipVisitant'])-&gt;where('jornada',$partit-&gt;jornada)-&gt;get();\n\n        // L\u00f2gica per obtenir els correus dels managers\n        $managers = User::where('role','manager')-&gt;get();\n\n\n        foreach ($managers as $manager) {\n            Mail::to($manager-&gt;email)-&gt;send(new JornadaMail($partits));\n            $this-&gt;info($manager-&gt;name . ' ha rebut la jornada.');\n\n        }\n\n        $this-&gt;info('La jornada s\\'ha enviat correctament als managers.');\n    }\n}\n\n#### **2. Crear el Mail**\n```bash\nphp artisan make:mail JornadaMail --markdown=emails.jornada\n</code></pre> <p>Al fitxer <code>app/Mail/JornadaMail.php</code>:</p> <pre><code>namespace App\\Mail;\n\nuse Illuminate\\Bus\\Queueable;\nuse Illuminate\\Contracts\\Queue\\ShouldQueue;\nuse Illuminate\\Mail\\Mailable;\nuse Illuminate\\Mail\\Mailables\\Content;\nuse Illuminate\\Queue\\SerializesModels;\n\nclass JornadaMail extends Mailable\n{\n    use Queueable, SerializesModels;\n\n    public $partits;\n\n    public function __construct($partits)\n    {\n        $this-&gt;partits = $partits;\n    }\n\n\n\n    public function content(): Content\n    {\n        return new Content(\n            markdown: 'emails.jornada',\n            with: [\n                'partits' =&gt; $this-&gt;partits,\n            ],\n        );\n    }\n}\n</code></pre>"},{"location":"09laravelAvan.html#3-crear-la-vista-del-correu","title":"3. Crear la Vista del Correu","text":"<p>Al fitxer <code>resources/views/emails/jornada.blade.php</code>:</p> <pre><code>&lt;x-mail::message&gt;\n    # Jornada {{ $partits-&gt;first()-&gt;jornada }}\n\n    ## Partits Programats:\n    @foreach($partits as $partit)\n        - **{{ $partit-&gt;equipLocal-&gt;nom }}** vs **{{ $partit-&gt;equipVisitant-&gt;nom }}** ({{ $partit-&gt;data }})\n    @endforeach\n\n    Gr\u00e0cies,\n    **{{ config('app.name') }}**\n&lt;/x-mail::message&gt;\n</code></pre>"},{"location":"09laravelAvan.html#4-efectuar-lenviament","title":"4. Efectuar l'Enviament","text":"<p>Pots enviar els correus manualment executant la comanda:</p> <pre><code>php artisan jornada:enviar\n</code></pre> <p>Pots programar la comanda al <code>Kernel.php</code>:</p> <pre><code>protected function schedule(Schedule $schedule)\n{\n    $schedule-&gt;command('jornada:enviar')-&gt;weeklyOn(1, '8:00');\n}\n</code></pre>"},{"location":"09laravelAvan.html#pas-11-crear-un-component-livewire-per-a-mostrar-un-historic-de-partits","title":"Pas 11. Crear un component livewire per a mostrar un hist\u00f2ric de partits","text":"<ol> <li> <p>Instal\u00b7la Livewire: <pre><code>composer require livewire/livewire\nphp artisan livewire:publish\n</code></pre></p> </li> <li> <p>Afegeix els scripts de Livewire a la plantilla Blade:</p> </li> </ol> <p><pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"{{ str_replace('_', '-', app()-&gt;getLocale()) }}\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n    &lt;meta name=\"csrf-token\" content=\"{{ csrf_token() }}\"&gt;\n\n    &lt;title&gt;{{ config('app.name', 'Laravel') }}&lt;/title&gt;\n\n    &lt;!-- Fonts --&gt;\n    &lt;link rel=\"preconnect\" href=\"https://fonts.bunny.net\"&gt;\n    &lt;link href=\"https://fonts.bunny.net/css?family=figtree:400,500,600&amp;display=swap\" rel=\"stylesheet\" /&gt;\n\n    &lt;!-- Scripts --&gt;\n    @vite(['resources/css/app.css', 'resources/js/app.js'])\n    @livewireStyles\n&lt;/head&gt;\n&lt;body class=\"font-sans antialiased\"&gt;\n&lt;div class=\"min-h-screen bg-gray-100 dark:bg-gray-900\"&gt;\n    @include('layouts.navigation')\n\n    &lt;!-- Page Heading --&gt;\n    @isset($header)\n    &lt;header class=\"bg-white dark:bg-gray-800 shadow\"&gt;\n        &lt;div class=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\"&gt;\n            {{ $header }}\n        &lt;/div&gt;\n    &lt;/header&gt;\n    @endisset\n\n    &lt;!-- Page Content --&gt;\n    &lt;main&gt;\n        {{ $slot }}\n    &lt;/main&gt;\n&lt;/div&gt;\n@livewireScripts\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> 3. Genera el component Livewire: <pre><code> php artisan make:livewire HistorialPartits\n</code></pre></p> <ol> <li>Modifica el component Livewire <code>app/Livewire/HistorialPartits.php</code>: <pre><code>namespace App\\Livewire;\n\nuse App\\Models\\Partit;\nuse Livewire\\Component;\n\nclass HistorialPartits extends Component\n{\n    public $partits;\n    public $equip = '';\n    public $data = '';\n\n    public function mount()\n    {\n        $this-&gt;partits = Partit::with(['equipLocal', 'equipVisitant', 'estadi', 'arbitre'])-&gt;get();\n    }\n\n\n    public function filtrar()\n    {\n        $this-&gt;partits = Partit::with(['equipLocal', 'equipVisitant', 'estadi', 'arbitre'])\n            -&gt;when($this-&gt;equip, function ($query) {\n                $query-&gt;whereHas('equipLocal', fn($q) =&gt; $q-&gt;where('nom', 'like', \"%{$this-&gt;equip}%\"))\n                    -&gt;orWhereHas('equipVisitant', fn($q) =&gt; $q-&gt;where('nom', 'like', \"%{$this-&gt;equip}%\"));\n            })\n            -&gt;when($this-&gt;data, function ($query) {\n                $query-&gt;whereDate('data', $this-&gt;data);\n            })\n            -&gt;get();\n    }\n\n    public function render()\n    {\n        return view('livewire.historial-partits', ['partits' =&gt; $this-&gt;partits]);\n    }\n}\n</code></pre></li> <li>Modifica la vista del component Livewire <code>resources/views/livewire/historial-partits.blade.php</code>: <pre><code>&lt;div&gt;\n    &lt;div class=\"flex space-x-4\"&gt;\n        &lt;input wire:model=\"equip\" type=\"text\" placeholder=\"Cerca equip\" class=\"border px-4 py-2\"&gt;\n        &lt;input wire:model=\"data\" type=\"date\" class=\"border px-4 py-2\"&gt;\n        &lt;button wire:click=\"filtrar\" class=\"bg-blue-500 text-white px-4 py-2\"&gt;Filtrar&lt;/button&gt;\n    &lt;/div&gt;\n\n    &lt;table class=\"table-auto w-full mt-4\"&gt;\n        &lt;thead&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Data&lt;/th&gt;\n            &lt;th&gt;Equip Local&lt;/th&gt;\n            &lt;th&gt;Equip Visitant&lt;/th&gt;\n            &lt;th&gt;Resultat&lt;/th&gt;\n            &lt;th&gt;Estadi&lt;/th&gt;\n            &lt;th&gt;\u00c0rbitre&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n        @foreach($partits as $partit)\n            &lt;tr&gt;\n                &lt;td&gt;{{ $partit-&gt;data }}&lt;/td&gt;\n                &lt;td&gt;{{ $partit-&gt;equipLocal-&gt;nom }}&lt;/td&gt;\n                &lt;td&gt;{{ $partit-&gt;equipVisitant-&gt;nom }}&lt;/td&gt;\n                &lt;td&gt;{{ $partit-&gt;resultat }}&lt;/td&gt;\n                &lt;td&gt;{{ $partit-&gt;estadi-&gt;nom }}&lt;/td&gt;\n                &lt;td&gt;{{ $partit-&gt;arbitre-&gt;name }}&lt;/td&gt;\n            &lt;/tr&gt;\n        @endforeach\n        &lt;/tbody&gt;\n    &lt;/table&gt;\n&lt;/div&gt;\n</code></pre></li> <li>Crea la vista <code>resources/views/partits/historic.blade.php</code>: <pre><code>@extends('layouts.futbolFemeni')\n\n@section('title', __('Hist\u00f2ric de partits' ))\n\n@section('content')\n\n    &lt;!-- Afegim el component Livewire aqu\u00ed --&gt;\n    &lt;div class=\"mt-8\"&gt;\n        @livewire('historial-partits')\n    &lt;/div&gt;\n@endsection\n</code></pre></li> <li>Modifica la ruta <code>routes/web.php</code>: <pre><code>Route::get('/historic', [PartitController::class, 'historic'])-&gt;name('partits.historic');\n</code></pre></li> <li>Modifica el controlador <code>app/Http/Controllers/PartitController.php</code>: <pre><code>public function historic()\n{\n    return view('partits.historic');\n}\n</code></pre></li> <li>Afegix entrada en el men\u00fa <code>resources/views/layouts/navigation.blade.php</code>: <pre><code>&lt;div class=\"hidden space-x-8 sm:-my-px sm:ms-10 sm:flex\"&gt;\n    &lt;x-nav-link :href=\"route('partits.historic')\" :active=\"request()-&gt;routeIs('partits.historic')\"&gt;\n        {{ __('Hist\u00f2ric Partits') }}\n    &lt;/x-nav-link&gt;\n&lt;/div&gt;\n</code></pre></li> </ol>"},{"location":"09laravelAvan.html#exercicis","title":"Exercicis","text":""},{"location":"09laravelAvan.html#1-ordenacio-de-la-bbdd-seeders-i-factories","title":"1. Ordenaci\u00f3 de la BBDD, seeders i factories","text":"<ul> <li>Anem a afegir els seg\u00fcents camps a la BBDD</li> <li>Afegir el camp <code>data_naixement</code> a la taula <code>jugadores</code> de tipus <code>date</code>.</li> <li>Afegir el camp <code>estadi_id</code> a la taula <code>partits</code> clau for\u00e0nia</li> <li>Afegir el camp <code>arbitre_id</code> a la taula <code>partits</code> clau for\u00e0nia.</li> <li>Afegir el camp <code>data</code> a la taula partits de tipus date.</li> <li>Afegir el camp <code>dorsal</code> a la taula jugadores de tipus integer.</li> <li>Afegir el camp <code>jornada</code> a la taula partits de tipus integer.</li> <li>Fes que el seeder de usuaris cree 30 amb el rol <code>arbitre</code>.</li> <li>Fes que el seeder de equips nom\u00e9s en cree 18.</li> <li>Anem a crear el calendari utilitzant el chatgpt.  </li> </ul> <pre><code>&lt;?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\nuse App\\Models\\Equip;\nuse App\\Models\\Partit;\nuse App\\Models\\User;\nuse Carbon\\Carbon;\nuse Exception;\n\nclass PartitsSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        $arbitres = User::where('role', 'arbitre')-&gt;get();\n\n        if ($arbitres-&gt;isEmpty()) {\n            throw new Exception('No hi ha cap \u00e0rbitre disponible.');\n        }\n\n        $equips = Equip::all();\n        $numEquips = $equips-&gt;count();\n\n        if ($numEquips % 2 !== 0 || $numEquips &lt; 2) {\n            throw new Exception('El nombre d\\'equips ha de ser parell i almenys 2.');\n        }\n\n        $numJornades = $numEquips - 1; // Nombre de jornades per anada\n        $partitsPerJornada = $numEquips / 2;\n        $dataInicial = Carbon::create(2024, 9, 7); // Comen\u00e7a el 7 de setembre\n        $dataLimitResultats = Carbon::create(2024, 12, 15); // Fins al 15 de desembre\n        $arbitres = $arbitres-&gt;shuffle();\n\n        // Generem el calendari d'anada\n        $jornades = [];\n        for ($jornada = 1; $jornada &lt;= $numJornades; $jornada++) {\n            $dataJornada = $dataInicial-&gt;copy()-&gt;addWeeks($jornada - 1); // Una jornada per setmana\n            $jornades[$jornada] = []; // Guardem els partits d'aquesta jornada\n\n            // Distribu\u00efm els equips\n            $equipsActuals = $equips-&gt;toArray();\n            $localEquips = array_slice($equipsActuals, 0, $partitsPerJornada);\n            $visitantEquips = array_reverse(array_slice($equipsActuals, $partitsPerJornada));\n\n            for ($i = 0; $i &lt; $partitsPerJornada; $i++) {\n                $local = $localEquips[$i];\n                $visitant = $visitantEquips[$i];\n\n                // Alternan\u00e7a casa i fora\n                if ($jornada % 2 === 0) { // Invertim en jornades parells\n                    $temp = $local;\n                    $local = $visitant;\n                    $visitant = $temp;\n                }\n\n                $dataAleatoria = $dataJornada-&gt;copy()-&gt;addDays(rand(-2, 2)); // Data aleat\u00f2ria dins del rang [-2, 2]\n                $partit = Partit::create([\n                    'local_id' =&gt; $local['id'],\n                    'visitant_id' =&gt; $visitant['id'],\n                    'estadi_id' =&gt; $local['estadi_id'],\n                    'arbitre_id' =&gt; $arbitres-&gt;random()-&gt;id,\n                    'jornada' =&gt; $jornada,\n                    'data' =&gt; $dataAleatoria,\n                    'gol_local' =&gt; $dataAleatoria &lt; $dataLimitResultats ? rand(0, 5) :null,\n                    'gol_visitant' =&gt; $dataAleatoria &lt; $dataLimitResultats ? rand(0, 5) :null,\n                ]);\n                $jornades[$jornada][] = $partit;\n            }\n\n            // Rotaci\u00f3 dels equips (round-robin)\n            $equips-&gt;push($equips-&gt;splice(1, 1)[0]);\n        }\n\n        // Generem el calendari de tornada\n        foreach ($jornades as $jornada =&gt; $partits) {\n            $dataJornadaTornada = $dataInicial-&gt;copy()-&gt;addWeeks($numJornades + $jornada - 1); // Jornades de tornada despr\u00e9s de les d'anada\n\n            foreach ($partits as $partit) {\n                $dataAleatoria = $dataJornadaTornada-&gt;copy()-&gt;addDays(rand(-2, 2)); // Data aleat\u00f2ria dins del rang [-2, 2]\n                Partit::create([\n                    'local_id' =&gt; $partit-&gt;visitant_id, // Invertim local i visitant\n                    'visitant_id' =&gt; $partit-&gt;local_id,\n                    'estadi_id' =&gt; $partit-&gt;visitant_id ? Equip::find($partit-&gt;visitant_id)-&gt;estadi_id : null,\n                    'arbitre_id' =&gt; $arbitres-&gt;random()-&gt;id,\n                    'jornada' =&gt; $jornada + $numJornades, // Jornada de tornada\n                    'data' =&gt; $dataAleatoria,\n                    'gol_local' =&gt; $dataAleatoria &lt; $dataLimitResultats ? rand(0, 5) : null,\n                    'gol_visitant' =&gt; $dataAleatoria &lt; $dataLimitResultats ? rand(0, 5) : null,\n                ]);\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"09laravelAvan.html#2-creacio-dels-form-requests","title":"2. Creaci\u00f3 dels Form Requests","text":"<ul> <li>Genera els Form Requests per als models <code>Estadi</code>, <code>Jugadora</code> i <code>Partit</code> utilitzant Artisan.</li> <li> <p>Implementa les regles de validaci\u00f3 seg\u00fcents:</p> <ul> <li>Estadis:<ul> <li><code>nom</code>: Obligatori, text amb un m\u00e0xim de 255 car\u00e0cters.</li> <li><code>capacitat</code>: Obligatori, n\u00famero enter positiu.</li> <li><code>ciutat</code>: Obligatori, text amb un m\u00e0xim de 255 car\u00e0cters.</li> </ul> </li> <li>Jugadores  :<ul> <li><code>nom</code>: Obligatori, text amb un m\u00e0xim de 255 car\u00e0cters.</li> <li><code>posici\u00f3</code>: Obligatori, una de les opcions <code>defensa</code>, <code>migcampista</code>, <code>davantera</code> o <code>porter</code>.</li> <li><code>equip_id</code>: Obligatori, identificador existent a la taula <code>equips</code>.</li> <li><code>data_naixement</code>: Obligatori, data v\u00e0lida anterior a la data actual i de minim 16 anys.</li> <li><code>foto</code>: Opcional, pero si est\u00e0 ha de ser una foto .png i amb un tamany m\u00e0xim.</li> </ul> </li> <li>Partits  :<ul> <li><code>goles_local</code>: Obligatori, igual o major que 0.</li> <li><code>goles_visitant</code>: Obligatori, igual o major que 0.</li> </ul> </li> </ul> </li> <li> <p>Substitueix la validaci\u00f3 manual al controlador pels Form Requests creats.</p> </li> <li>Personalitza els missatges d'error perqu\u00e8 siguen m\u00e9s clars per als usuaris.</li> <li>Si algun camp no est\u00e0 dona'l d'alta a les migracions, seeders i factories.</li> </ul>"},{"location":"09laravelAvan.html#3-restriccio-de-les-operaciones-per-als-usuaris-no-autenticants","title":"3. Restricci\u00f3 de les operaciones per als usuaris no autenticants","text":"<ul> <li>Sabent que @auth @endauth son les directives per a autenticaci\u00f3, modifica les vistes per a que els usuaris no autenticats no vegen les operacions, ni en la columna en la taula.</li> </ul>"},{"location":"09laravelAvan.html#4-restriccio-de-permisos-per-als-partits","title":"4. Restricci\u00f3 de permisos per als partits","text":"<p>Assegurar que nom\u00e9s els usuaris amb rol d'<code>\u00e0rbitre</code> puguin modificar partits. Ning\u00fa pot crear-ne.</p> <ul> <li>Modifica el Form Request de <code>Partit</code> per incloure una validaci\u00f3 que nom\u00e9s permeta accedir als usuaris amb rol d'<code>\u00e0rbitre</code>.</li> <li>Utilitza el m\u00e8tode <code>authorize()</code> del Form Request per implementar aquesta restricci\u00f3.</li> <li>Verifica que el middleware de rol ja implementat tamb\u00e9 assegure que nom\u00e9s els \u00e0rbitres poden accedir a les rutes de  modificaci\u00f3 de partits.</li> <li>Inhabilita les rutes de creaci\u00f3 i esborrat de partits. </li> </ul>"},{"location":"09laravelAvan.html#5-jugadores","title":"5. Jugadores","text":"<ul> <li>Assegurat que soles els manager puguen crear, modificar o esborrar a les seues jugadores.</li> <li>Aix\u00ed mateix quan un manager crea una jugadora aquesta ha de ser assignada al seu equip.</li> <li>Modifica el component de jugadora per poder vore-la en els equips de forma semblant. </li> </ul> Exemple d'equip"},{"location":"09laravelAvan.html#6-calendari","title":"6. Calendari","text":"<ul> <li>Crea una vista per a vore les jornades i el resultats dels partits.  </li> <li>Si l'usuari \u00e9s un arbitre aleshores soles vora els seus partits i podr\u00e0 modificar-los.</li> </ul> Exemple de jornada"},{"location":"09laravelAvan.html#7-equips","title":"7. Equips","text":"<ul> <li>Crea un camp calculat per a vore l'edat mitjana de les jugadores de l'equip. </li> <li>Fes que baix de les jugadores isquen els ultims 5 resultats jugats per l'equip.</li> </ul>"},{"location":"09laravelAvan.html#8-classificacio","title":"8. Classificaci\u00f3","text":"<ul> <li> <p>Crea un component livewire per mostrar la classificaci\u00f3 en temps real.</p> </li> <li> <p>Genera una taula que mostre, per a cada equip:</p> </li> <li>Nom de l\u2019equip.</li> <li>Total de punts.</li> <li>Partits jugats.</li> <li>Partits guanyats, empatats i perduts.</li> <li>Gols a favor i en contra.</li> <li> <p>Difer\u00e8ncia de gols.</p> </li> <li> <p>Ordena autom\u00e0ticament els equips per punts (i per difer\u00e8ncia de gols en cas d\u2019empat).</p> </li> </ul>"},{"location":"09laravelAvan.html#condicionants","title":"Condicionants","text":"<ol> <li>Implementar la funcionalitat com a component Livewire.</li> <li>Fer servir una combinaci\u00f3 de Eloquent i c\u00e0lculs personalitzats per generar la classificaci\u00f3.</li> <li>Presentar el resultat en temps real.</li> <li>Sense filtres ni opcions addicionals, simplement la taula de classificaci\u00f3 actualitzada.</li> </ol>"},{"location":"09laravelAvan.html#9-proves","title":"9. Proves","text":"<ol> <li>Crea proves per jugadoresController, EstadiController i PartitController.</li> </ol>"},{"location":"09laravelAvan.html#10-correu","title":"10. Correu","text":"<ol> <li>Crea un correu per a enviar a tots els arbitres el seu calendari anual de partits.</li> </ol>"},{"location":"09mailLaravel.html","title":"Introducci\u00f3","text":"<p>No cal complicar enviar correus electr\u00f2nics. Laravel proporciona una API de correu electr\u00f2nic neta i senzilla alimentada pel popular component Symfony Mailer. El Laravel i el Symfony Mailer proporcionen controladors per enviar correus electr\u00f2nics via SMTP, Mailgun, Postmark, Amazon SES i sendmail, permetent-vos comen\u00e7ar r\u00e0pidament a enviar correus a trav\u00e9s d'un servei local o basat en el n\u00favol de la vostra elecci\u00f3.</p>"},{"location":"09mailLaravel.html#configuracio","title":"Configuraci\u00f3","text":"<p>Els serveis de correu electr\u00f2nic de Laravel es poden configurar a trav\u00e9s del fitxer de configuraci\u00f3 config/mail.php de la vostra aplicaci\u00f3.  Cada mailer configurat dins d'aquest fitxer pot tenir la seva pr\u00f2pia configuraci\u00f3 \u00fanica i fins i tot el seu propi \"transport\", permetent a la vostra aplicaci\u00f3 utilitzar diferents serveis de correu electr\u00f2nic per enviar certs missatges de correu electr\u00f2nic.  Per exemple, la vostra aplicaci\u00f3 pot utilitzar Postmark per enviar correus electr\u00f2nics transaccionals mentre s'utilitza Amazon SES per enviar correus electr\u00f2nics massius.</p> <p>Dins del fitxer de configuraci\u00f3 de correu, trobareu una matriu de configuraci\u00f3 de mailers. Aquesta matriu cont\u00e9 una entrada de configuraci\u00f3 d'exemple per a cadascun dels principals controladors de correu / transports admesos per Laravel, mentre que el valor de configuraci\u00f3 predeterminat determina quin gestor de correu s'utilitzar\u00e0 per defecte quan la vostra aplicaci\u00f3 hagi d'enviar un missatge de correu electr\u00f2nic.</p>"},{"location":"09mailLaravel.html#generant-els-mailables","title":"Generant els mailables","text":"<p>Quan es construeixen aplicacions Laravel, cada tipus de correu electr\u00f2nic enviat per la vostra aplicaci\u00f3 es representa com una classe \"mailable\". Aquestes classes s'emmagatzemen al directori app/mail. No us preocupeu si no veieu aquest directori a la vostra aplicaci\u00f3, ja que es generar\u00e0 quan creeu la primera classe de mailable utilitzant l'ordre make:mail d'Artisan</p> <pre><code>php artisan make:mail OrdreShipped\n</code></pre>"},{"location":"09mailLaravel.html#escriure-mailables","title":"Escriure Mailables","text":"<p>Un cop heu generat una classe de correu, obriu-la perqu\u00e8 poder explorar el seu contingut. La configuraci\u00f3 de la classe mailable es fa en diversos m\u00e8todes, incloent-hi els m\u00e8todes de envelope, content i attachments.</p> <p>El m\u00e8tode de envelope retorna un objecte Illuminate\\Mail\\Mailables\\Envelope que defineix l'assumpte i, de vegades, els destinataris del missatge.  El m\u00e8tode de content retorna un objecte Illuminate\\Mail\\Mailables\\Content que defineix la plantilla Blade que s'utilitzar\u00e0 per generar el contingut del missatge.</p>"},{"location":"09mailLaravel.html#configurar-el-remitent","title":"Configurar el remitent","text":""},{"location":"09mailLaravel.html#us-metode-envelope","title":"\u00das m\u00e8tode envelope","text":"<p>Primer, explorem la configuraci\u00f3 del remitent del correu electr\u00f2nic. O, en altres paraules, de qui ser\u00e0 el correu electr\u00f2nic. Hi ha dues maneres de configurar el remitent. Primer, podeu especificar l'adre\u00e7a \u00abde\u00bb en el from del missatge:</p> <pre><code>use Illuminate\\Mail\\Mailables\\Address;\nuse Illuminate\\Mail\\Mailables\\Envelope;\n\n/**\n* Get the message envelope.\n*\n* @return \\Illuminate\\Mail\\Mailables\\Envelope\n  */\n  public function envelope()\n  {\n      return new Envelope(\n          from: new Address('jeffrey@example.com', 'Jeffrey Way'),\n          subject: 'Order Shipped',\n      );\n  }\n</code></pre> <p>Si ho desitgeu, tamb\u00e9 podeu especificar una adre\u00e7a \u00abreplyTo\u00bb:</p> <pre><code>return new Envelope(\n    from: new Address('jeffrey@example.com', 'Jeffrey Way'),\n    replyTo: [\n        new Address('taylor@example.com', 'Taylor Otwell'),\n    ],\n    subject: 'Order Shipped',\n);\n</code></pre>"},{"location":"09mailLaravel.html#us-duna-adreca-global-des-de","title":"\u00das d'una adre\u00e7a global des de","text":"<p>No obstant aix\u00f2, si la vostra aplicaci\u00f3 utilitza la mateixa adre\u00e7a \u00abdes de\u00bb per a tots els seus correus electr\u00f2nics, pot resultar dif\u00edcil trucar al m\u00e8tode \u00abdes de\u00bb en cada classe de correu que genereu. En lloc d'aix\u00f2, podeu especificar una adre\u00e7a global \u00abfrom\u00bb al fitxer de configuraci\u00f3 config/mail.php. Aquesta adre\u00e7a s'utilitzar\u00e0 si no s'especifica cap altra adre\u00e7a \"de\" dins de la classe de correu:</p> <pre><code>'from' =&gt; ['address' =&gt; 'example@example.com', 'name' =&gt; 'App Name'],\n</code></pre> <p>A m\u00e9s, podeu definir una adre\u00e7a global \u00abreply\"to\u00bb dins del fitxer de configuraci\u00f3 config/mail.php:</p> <pre><code>'reply_to' =&gt; ['adre\u00e7a' = = 'exemple@exemple.com', 'nom' =  'nom d'aplicaci\u00f3'],\n</code></pre>"},{"location":"09mailLaravel.html#configurar-la-vista","title":"Configurar la vista","text":"<p>Dins del m\u00e8tode content d'una classe de correu, podeu definir la vista, o quina plantilla s'ha d'utilitzar quan es renderitza el contingut del correu electr\u00f2nic.  At\u00e8s que cada correu electr\u00f2nic normalment utilitza una plantilla de Blade per representar el seu contingut, teniu tota la pot\u00e8ncia i conveni\u00e8ncia del motor de templating Blade en construir l'HTML del vostre correu electr\u00f2nic:</p> <pre><code>/**\n* Get the message content definition.\n*\n* @return \\Illuminate\\Mail\\Mailables\\Content\n  */\n  public function content()\n  {\n      return new Content(\n        view: 'emails.orders.shipped',\n      );\n  }\n</code></pre>"},{"location":"09mailLaravel.html#mostra-les-dades","title":"Mostra les dades","text":""},{"location":"09mailLaravel.html#via-propietats-publiques","title":"Via Propietats p\u00fabliques","text":"<p>Normalment, voldreu passar algunes dades a la vostra vista que podeu utilitzar en renderitzar l'HTML del correu electr\u00f2nic.  Hi ha dues maneres de posar les dades a disposici\u00f3 de la vostra vista. Primer, qualsevol propietat p\u00fablica definida a la vostra classe de correu es posar\u00e0 autom\u00e0ticament a disposici\u00f3 de la vista.  Aix\u00ed, per exemple, podeu passar dades al constructor de la classe de correu i establir aquestes dades a les propietats p\u00fabliques definides a la classe:</p> <pre><code>&lt;?php\nnamespace App\\Mail;\n\nuse App\\Models\\Order;\nuse Illuminate\\Bus\\Queueable;\nuse Illuminate\\Mail\\Mailable;\nuse Illuminate\\Mail\\Mailables\\Content;\nuse Illuminate\\Queue\\SerializesModels;\n\nclass OrderShipped extends Mailable\n{\nuse Queueable, SerializesModels;\n\n    /**\n     * The order instance.\n     *\n     * @var \\App\\Models\\Order\n     */\n    public $order;\n\n    /**\n     * Create a new message instance.\n     *\n     * @param  \\App\\Models\\Order  $order\n     * @return void\n     */\n    public function __construct(Order $order)\n    {\n        $this-&gt;order = $order;\n    }\n\n    /**\n     * Get the message content definition.\n     *\n     * @return \\Illuminate\\Mail\\Mailables\\Content\n     */\n    public function content()\n    {\n        return new Content(\n            view: 'emails.orders.shipped',\n        );\n    }\n}\n</code></pre> <p>Una vegada que les dades s'hagin establert en una propietat p\u00fablica, estaran disponibles autom\u00e0ticament a la vostra vista, de manera que podreu accedir-hi com ho far\u00edeu amb qualsevol altra dada a les vostres plantilles de Blade:</p> <pre><code>&lt;div&gt;\n    Price: {{ $order-&gt;price }}\n&lt;/div&gt;\n</code></pre>"},{"location":"09mailLaravel.html#via-parametre","title":"Via par\u00e0metre","text":"<p>Si voleu personalitzar el format de les dades del vostre correu electr\u00f2nic abans d'enviar-les a la plantilla, podeu passar manualment les vostres dades a la vista mitjan\u00e7ant la definici\u00f3 de contingut amb el par\u00e0metre. Normalment, encara passareu dades a trav\u00e9s del constructor de la classe de correu; no obstant aix\u00f2, haureu d'establir aquestes dades a propietats protegides o privades, de manera que les dades no estiguin disponibles autom\u00e0ticament a la plantilla:</p> <pre><code>&lt;?php\n\nnamespace App\\Mail;\n\nuse App\\Models\\Order;\nuse Illuminate\\Bus\\Queueable;\nuse Illuminate\\Mail\\Mailable;\nuse Illuminate\\Mail\\Mailables\\Content;\nuse Illuminate\\Queue\\SerializesModels;\n\nclass OrderShipped extends Mailable\n{\n    use Queueable, SerializesModels;\n\n    /**\n     * The order instance.\n     *\n     * @var \\App\\Models\\Order\n     */\n    protected $order;\n\n    /**\n     * Create a new message instance.\n     *\n     * @param  \\App\\Models\\Order  $order\n     * @return void\n     */\n    public function __construct(Order $order)\n    {\n        $this-&gt;order = $order;\n    }\n\n    /**\n     * Get the message content definition.\n     *\n     * @return \\Illuminate\\Mail\\Mailables\\Content\n     */\n    public function content()\n    {\n        return new Content(\n            view: 'emails.orders.shipped',\n            with: [\n                'orderName' =&gt; $this-&gt;order-&gt;name,\n                'orderPrice' =&gt; $this-&gt;order-&gt;price,\n            ],\n        );\n    }\n}\n</code></pre>"},{"location":"09mailLaravel.html#attachments","title":"Attachments","text":"<p>Per a afegir adjunts a un correu electr\u00f2nic, afegireu adjunts a la matriu retornada pel m\u00e8tode d'adjunts del missatge. En primer lloc, podeu afegir un adjunt proporcionant un cam\u00ed de fitxer al m\u00e8tode fromPath proporcionat per la classe attachment:</p> <pre><code>use Illuminate\\Mail\\Mailables\\Attachment;\n\n/**\n* Get the attachments for the message.\n*\n* @return \\Illuminate\\Mail\\Mailables\\Attachment[]\n  */\n  public function attachments()\n  {\n    return [\n        Attachment::fromPath('/path/to/file'),\n    ];\n  }\n</code></pre> <p>En adjuntar fitxers a un missatge, tamb\u00e9 podeu especificar el nom a mostrar i / o tipus MIME per a l'adjunt usant els m\u00e8todes as i withMime:</p> <pre><code>/**\n* Get the attachments for the message.\n*\n* @return \\Illuminate\\Mail\\Mailables\\Attachment[]\n  */\n  public function attachments()\n  {\n  return [\n        Attachment::fromPath('/path/to/file')\n        -&gt;as('name.pdf')\n        -&gt;withMime('application/pdf'),\n    ];\n  }\n</code></pre>"},{"location":"09mailLaravel.html#enviant-correu","title":"Enviant correu","text":"<p>Per enviar un missatge, utilitzeu el m\u00e8tode to a la fa\u00e7ana del Correu. El m\u00e8tode to accepta una adre\u00e7a de correu electr\u00f2nic, una inst\u00e0ncia d'usuari o una col\u00b7lecci\u00f3 d'usuaris. Si passeu un objecte o una col\u00b7lecci\u00f3 d'objectes, el mailer utilitzar\u00e0 autom\u00e0ticament les seves propietats de correu electr\u00f2nic i de nom quan determini els destinataris del correu, aix\u00ed que assegureu-vos que aquests atributs estiguin disponibles en els vostres objectes. Un cop h\u00e0giu especificat els destinataris, podeu passar una inst\u00e0ncia de la vostra classe de correu al m\u00e8tode d'enviament:</p> <pre><code>&lt;?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Mail\\OrderShipped;\nuse App\\Models\\Order;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Mail;\n\nclass OrderShipmentController extends Controller\n{\n    /**\n     * Ship the given order.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        $order = Order::findOrFail($request-&gt;order_id);\n\n        // Ship the order...\n\n        Mail::to($request-&gt;user())-&gt;send(new OrderShipped($order));\n    }\n}\n</code></pre> <p>No esteu limitat a especificar els destinataris \u00aba\u00bb quan envieu un missatge. Sou lliure d'establir els destinataris \"a\", \"cc\" i \"bcc\" encadenant els seus respectius m\u00e8todes junts:</p> <pre><code>Mail::to($request-&gt;user())\n-&gt;cc($moreUsers)\n-&gt;bcc($evenMoreUsers)\n-&gt;send(new OrderShipped($order));\n</code></pre>"},{"location":"10laravelRestul.html","title":"10laravelRestul","text":""},{"location":"10laravelRestul.html#servicios-rest","title":"Servicios REST","text":"<p>Duraci\u00f3n estimada: 16 sesiones</p>"},{"location":"10laravelRestul.html#introduccio-als-serveis-rest","title":"Introducci\u00f3 als serveis REST","text":"<p>Video</p> <p>Una API (Application Programming Interface) \u00e9s un conjunt de funcions i procediments pels quals, una aplicaci\u00f3 externa accedeix a les dades, a manera de biblioteca com una capa d'abstracci\u00f3 i la API s'encarrega d'enviar la dada sol\u00b7licitada.</p> <p>Una de les caracter\u00edstiques fonamentals de les API \u00e9s que s\u00f3n Sateless, la qual cosa vol dir que les peticions es fan i desapareixen, no hi ha usuaris loguejats ni dades que es queden emmagatzemats.</p>"},{"location":"10laravelRestul.html#caracteristiques-fonamentals-de-rest","title":"Caracter\u00edstiques fonamentals de REST:","text":"<ul> <li>Stateless: Cada petici\u00f3 HTTP cont\u00e9 tota la informaci\u00f3 necess\u00e0ria per processar-la.</li> <li>M\u00e8todes HTTP: Utilitza m\u00e8todes com GET, POST, PUT i DELETE.</li> <li>Formats d'intercanvi de dades: Habitualment JSON o XML.</li> </ul>"},{"location":"10laravelRestul.html#els-serveis-rest","title":"Els serveis REST","text":""},{"location":"10laravelRestul.html#consultar-una-api-externa","title":"Consultar una API externa","text":"<p>Per consultar una API externa com https://swapi.dev/ des de Laravel, pots utilitzar la biblioteca HTTP client de Laravel, que proporciona una interf\u00edcie senzilla per a realitzar peticions HTTP. Ac\u00ed tens un exemple de com fer una petici\u00f3 GET per a obtenir informaci\u00f3 sobre personatges de \"Star Wars\":</p> <p>Instal\u00b7la la Biblioteca HTTP Client: Si no est\u00e0 ja instal\u00b7lat, pots afegir la biblioteca HTTP client de Laravel al teu projecte amb Composer:</p> <pre><code>composer require guzzlehttp/guzzle\n</code></pre> <p>Realitza una Petici\u00f3 GET: Despr\u00e9s, pots utilitzar el facade Http per a realitzar una petici\u00f3 GET. Aqu\u00ed tens un exemple de com consultar informaci\u00f3 sobre personatges:</p> <pre><code>use Illuminate\\Support\\Facades\\Http;\n\npublic function getStarWarsCharacters()\n{\n$response = Http::get('https://swapi.dev/api/people/');\n\n    if ($response-&gt;successful()) {\n        $data = $response-&gt;json();\n        // Manipula o mostra les dades com necessites\n    } else {\n        // Maneja l'error\n    }\n}\n</code></pre> <p>En aquest exemple, la petici\u00f3 GET a https://swapi.dev/api/people/ retorna informaci\u00f3 sobre personatges de \"Star Wars\". La resposta es verifica per a comprovar si ha estat exitosa, i despr\u00e9s es processen les dades JSON. Pots adaptar aquest codi per a fer altres tipus de consultes a l'API, depenent de la informaci\u00f3 que necessites.</p>"},{"location":"10laravelRestul.html#construint-una-apirest-basica-amb-laravel","title":"Constru\u00efnt una API/REST b\u00e0sica amb Laravel","text":"<p>Amb aquesta metodologia anomenada REST podrem construir APIs perqu\u00e8 des d'un client extern es puguen consumir.</p> <p>Gr\u00e0cies a aquest standard de l'arquitectura del programari podrem muntar una API que utilitze els m\u00e8todes standard GET, POST, PUT i DELETE.</p>"},{"location":"10laravelRestul.html#installacio-laravel-sanctum","title":"Instal\u00b7laci\u00f3 Laravel Sanctum","text":"<p>Laravel Sanctum proporciona un sistema lleuger d'autenticaci\u00f3 dissenyat per a SPAs (Single Page Applications), aplicacions m\u00f2bils i APIs senzilles basades en tokens. Amb Sanctum, cada usuari de la teua aplicaci\u00f3 pot generar diversos tokens d'API, cadascun amb habilitats o permisos espec\u00edfics que defineixen quines accions poden realitzar amb aquests tokens.</p> <p>Sanctum resol dues necessitats d'autenticaci\u00f3 diferents. Vegem cadascuna abans d'entrar en detall.</p>"},{"location":"10laravelRestul.html#1-tokens-dapi","title":"1. Tokens d'API","text":"<p>Sanctum \u00e9s un paquet senzill que et permet emetre tokens d'API als teus usuaris sense la complexitat d'OAuth. Aquesta funcionalitat est\u00e0 inspirada en plataformes com GitHub, que proporcionen \"tokens d'acc\u00e9s personal\". Per exemple, la p\u00e0gina de configuraci\u00f3 del compte de la teua aplicaci\u00f3 podria incloure una secci\u00f3 on els usuaris generen tokens d'API per als seus comptes. Aquests tokens solen tindre un temps d'expiraci\u00f3 molt llarg (per exemple, anys), per\u00f2 poden ser revocats manualment pels usuaris en qualsevol moment.</p> <p>Sanctum implementa aquesta funcionalitat mitjan\u00e7ant: - L'emmagatzematge dels tokens d'API en una taula espec\u00edfica de la base de dades. - L'autenticaci\u00f3 de les peticions HTTP entrants mitjan\u00e7ant l'encap\u00e7alament <code>Authorization</code>, que ha d'incloure un token d'API v\u00e0lid.</p>"},{"location":"10laravelRestul.html#2-autenticacio-per-a-spas","title":"2. Autenticaci\u00f3 per a SPAs","text":"<p>Sanctum tamb\u00e9 ofereix una forma senzilla d'autenticar aplicacions de p\u00e0gina \u00fanica (SPAs) que necessiten comunicar-se amb una API desenvolupada amb Laravel. Aquestes SPAs poden formar part del mateix repositori que la teua aplicaci\u00f3 Laravel o ser un repositori totalment separat, com una SPA desenvolupada amb Next.js o Nuxt.</p> <p>Per a aquesta funcionalitat: - Sanctum no utilitza tokens, sin\u00f3 que empra els serveis d'autenticaci\u00f3 de sessi\u00f3 basats en galetes (cookies) ja integrats en Laravel. - Normalment, utilitza el sistema d'autenticaci\u00f3 web de Laravel per aconseguir-ho, oferint protecci\u00f3 contra CSRF, autenticaci\u00f3 de sessi\u00f3 i prevenci\u00f3 de filtracions de credencials mitjan\u00e7ant XSS.</p> <p>Sanctum nom\u00e9s intentar\u00e0 autenticar-se amb galetes si la petici\u00f3 prov\u00e9 del frontend de la SPA de la teua pr\u00f2pia aplicaci\u00f3. Quan Sanctum examina una petici\u00f3 HTTP, comprova primer si existeix una galeta d'autenticaci\u00f3. Si no n'hi ha cap, llavors examina l'encap\u00e7alament <code>Authorization</code> per a un token d'API v\u00e0lid.</p>"},{"location":"10laravelRestul.html#installacio","title":"Instal\u00b7laci\u00f3","text":"<p>Es pot instal\u00b7lar amb el comanament d'artisan</p> <pre><code>php artisan install:api\n</code></pre> <p>Vegem ara quins passos donar per a construir una API REST en Laravel que done suport a les operacions b\u00e0siques sobre una o diverses entitats: consultes (GET), insercions (POST), modificacions (PUT) i esborrats (DELETE). Emprarem per a aix\u00f2 els denominats controladors de API i que proporcionen un conjunt de funcions ja definides per a donar suport a cadascun d'aquests comandos.</p>"},{"location":"10laravelRestul.html#definint-els-controlador-de-la-api","title":"Definint els controlador de la API","text":"<p>Per a proporcionar una API REST als clients que ho requerisquen, necessitem definir un controlador (ocontroladors) orientats a oferir aquests serveis REST. Aquests controladors en Laravel es denominen de tipus api, com vam veure en sessions pr\u00e8vies. Normalment es definir\u00e0 un controlador API per cadascun dels models als quals necessitem accedir. </p> <pre><code>php artisan make:controller Api/MovieController --api --model=Movie\n</code></pre> <p>Aix\u00f2 crear\u00e0 el controlador en la carpeta App\\Http\\Controllers\\Api amb una s\u00e8rie de funcions ja predefinides. No \u00e9s obligatori situar-ho en aqueixa subcarpeta, \u00f2bviament, per\u00f2 aix\u00f2 ens servir\u00e0 per a separar els controladors de API de la resta. Aquesta ser\u00e0 l'aparen\u00e7a del controlador generat:</p> <pre><code>&lt;?php\n\nnamespace App\\Http\\Controllers\\Api;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\Movie;\nuse Illuminate\\Http\\Request;\n\nclass MovieController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index()\n    {\n        //\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        //\n    }\n\n    /**\n     * Display the specified resource.\n     *\n     * @param  \\App\\Models\\Movie  $movie\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show(Movie $movie)\n    {\n        //\n    }\n\n    /**\n     * Update the specified resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  \\App\\Models\\Movie  $movie\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, Movie $movie)\n    {\n        //\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     *\n     * @param  \\App\\Models\\Movie  $movie\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy(Movie $movie)\n    {\n        //\n    }\n}\n</code></pre> <p>Observem que s'incorpora autom\u00e0ticament la cl\u00e0usula use per a carregar el model associat, que hem indicat en el par\u00e0metre --model . A m\u00e9s, els m\u00e8todes show , update i destroy ja v\u00e9nen amb un par\u00e0metre de tipus Llibre que facilitar\u00e0 molt algunes tasques.</p>"},{"location":"10laravelRestul.html#establint-les-rutes-endpoints","title":"Establint les rutes (endPoints)","text":"<p>Una vegada tenim el controlador API creat, definirem les rutes associades a cada m\u00e8tode del controlador. Podem emprar el m\u00e8tode Route::apiResource en l'arxiu routes/api.php per a establir autom\u00e0ticament totes les rutes d'un controlador de API. Afegim aquesta l\u00ednia en aquest arxiu routes/api.php :</p> <pre><code>Route::apiResource('movies',Api\\MovieController::class);\n</code></pre> <p>Les rutes de API (aquelles definides en l'arxiu routes/api.php ) per defecte tenen un prefix api , tal com s'estableix en el provider RouteServiceProvider . Per tant, hem definit una ruta general api/movies , de manera que totes les subrutes que es deriven d'ella portaran a l'un o l'altre m\u00e8tode del controlador de API de video. Podem comprovar quines rutes hi ha actives amb aquest comando:</p> <pre><code>php artisan route:list\n\n+--------+-----------+--------------------+----------------+--------------------------------------------------+------------+\n| Domain | Method    | URI                | Name           | Action                                           | Middleware |\n+--------+-----------+--------------------+----------------+--------------------------------------------------+------------+\n|        | GET|HEAD  | /                  |                | App\\Http\\Controllers\\HomeController              | web        |\n|        | GET|HEAD  | api/movies         | movies.index   | App\\Http\\Controllers\\Api\\MovieController@index   | api        |\n|        | POST      | api/movies         | movies.store   | App\\Http\\Controllers\\Api\\MovieController@store   | api        |\n|        | GET|HEAD  | api/movies/{movie} | movies.show    | App\\Http\\Controllers\\Api\\MovieController@show    | api        |\n|        | PUT|PATCH | api/movies/{movie} | movies.update  | App\\Http\\Controllers\\Api\\MovieController@update  | api        |\n|        | DELETE    | api/movies/{movie} | movies.destroy | App\\Http\\Controllers\\Api\\MovieController@destroy | api        |\n|        | GET|HEAD  | api/user           |                | Closure                                          +--------------------------------------------------+------------+\n</code></pre>"},{"location":"10laravelRestul.html#serveis-get","title":"Serveis GET","text":"<p>Comen\u00e7arem per definir el m\u00e8tode index . En aquest cas, obtindrem el conjunt de videos de labase de dades i retornar-lo tal qual:</p> <pre><code>public function index()\n{\n    $movies = Movie::get();\n    return $movies;\n}\n</code></pre> <p>Si accedim a la ruta api/videos des del navegador, s'activar\u00e0 el m\u00e8tode index que acabem d'implementar, i rebrem els llibres de la base de dades, directament en format JSON.</p> <pre><code>{\n\"id\": 1,\n\"title\": \"El padrino\",\n\"year\": \"1972\",\n\"director\": \"Francis Ford Coppola\",\n\"poster\": \"http://ia.media-imdb.cimages/M/MV5BMjEyMjcyNDI4MF5BMl5BanBnXkFtZTcwMDA5Mzg3OA@@._V1_SX214_AL_.jpg\",\n\"rented\": 0,\n\"synopsis\": \"Don Vito Corleone (Marlon Brando) es el respetado y temido jefe de una de las cinco familias de la mafia de Nueva York. Tiene cuatro hijos: Connie (Talia Shire), el impulsivo Sonny (James Caan), el pusil\u00e1nime Freddie (John Cazale) y Michael (Al Pacino), que no quiere saber nada de los negocios de su padre. Cuando Corleone, en contra de los consejos de 'Il consigliere' Tom Hagen (Robert Duvall), se niega a intervenir en el negocio de las drogas, el jefe de otra banda ordena su asesinato. Empieza entonces una violenta y cruenta guerra entre las familias mafiosas.\",\n\"created_at\": \"2020-12-03T11:19:19.000000Z\",\n\"updated_at\": \"2020-12-21T10:36:20.000000Z\"\n},\n{\n\"id\": 2,\n\"title\": \"El Padrino. Parte II\",\n\"year\": \"1974\",\n\"director\": \"Francis Ford Coppola\",\n\"poster\": \"http://ia.media-imdb.cimages/M/MV5BNDc2NTM3MzU1Nl5BMl5BanBnXkFtZTcwMTA5Mzg3OA@@._V1_SX214_AL_.jpg\",\n\"rented\": 0,\n\"synopsis\": \"Continuaci\u00f3n de la historia de los Corleone por medio de dos historias paralelas: la elecci\u00f3n de Michael Corleone como jefe de los negocios familiares y los or\u00edgenes del patriarca, el ya fallecido Don Vito, primero en Sicilia y luego en Estados Unidos, donde, empezando desde abajo, lleg\u00f3 a ser un poderos\u00edsimo jefe de la mafia de Nueva York.\",\n\"created_at\": \"2020-12-03T11:19:19.000000Z\",\n\"updated_at\": \"2020-12-03T11:19:19.000000Z\"\n}}\n</code></pre> <p>D'una forma similar, podr\u00edem implementar i provar el m\u00e8tode show</p> <pre><code>public function show(Movie $movie)\n{\n    return $movie;\n}\n</code></pre> <p>En aquest cas, si accedim a la URI api/movies/1 , obtindrem la informaci\u00f3 del video amb id = 1. Notar que Laravel s'encarrega autom\u00e0ticament de buscar el llibre per nosaltres (fer la corresponent operaci\u00f3 find per a l'id proporcionat). \u00c9s el que es coneix com a enlla\u00e7 impl\u00edcit, i \u00e9s alguna cosa que tamb\u00e9 est\u00e0 disponible en els controladors web normals, sempre que els associem correctament amb el model vinculat. Aix\u00f2 es fa autom\u00e0ticament si creem el controlador juntament amb el model o si usem el par\u00e0metre --model per a associar-ho, com hem fet ac\u00ed.</p>"},{"location":"10laravelRestul.html#maneig-de-respostes-json-en-laravel","title":"Maneig de Respostes JSON en Laravel","text":"<p>Laravel ofereix diverses eines per gestionar respostes JSON, ja siga directament o utilitzant API Resources. Aquesta guia mostra com personalitzar les respostes, controlar els camps visibles i gestionar la paginaci\u00f3.</p>"},{"location":"10laravelRestul.html#1-us-de-response-json","title":"1. \u00das de <code>response()-&gt;json()</code>","text":"<p>Aquest m\u00e8tode et permet retornar respostes JSON personalitzades amb un codi d'estat espec\u00edfic.</p> <pre><code>public function show(Movie $movie)\n{\n    return response()-&gt;json($movie, 200); // JSON amb codi 200 (\u00e8xit)\n}\n</code></pre> Codi Significat 200 Operaci\u00f3 correcta. 201 Recurs creat (ex. POST). 204 Sense contingut (ex. DELETE). 400 Petici\u00f3 incorrecta. 404 No trobat. 500 Error del servidor."},{"location":"10laravelRestul.html#2-camps-ocults-o-visibles-en-models","title":"2. Camps Ocults o Visibles en Models","text":"<p>Laravel permet configurar directament al model quins camps es mostraran o s'ocultaran a les respostes JSON.</p> <ul> <li>Ocultar camps: Utilitza la propietat <code>hidden</code> en el model.</li> </ul> <pre><code>protected $hidden = ['password'];\n</code></pre> <ul> <li>Mostrar nom\u00e9s camps seleccionats: Utilitza la propietat <code>visible</code> en el model.</li> </ul> <pre><code>protected $visible = ['id', 'name', 'email'];\n</code></pre>"},{"location":"10laravelRestul.html#3-personalitzacio-directa-a-controladors","title":"3. Personalitzaci\u00f3 Directa a Controladors","text":"<p>Si necessites un control m\u00e9s gran sobre els camps retornats, pots definir manualment un array al controlador.</p> <pre><code>public function show(Movie $movie)\n{\n    return [\n        'title' =&gt; $movie-&gt;title,\n        'director' =&gt; $movie-&gt;director,\n    ];\n}\n</code></pre>"},{"location":"10laravelRestul.html#4-us-de-recursos-api-resources","title":"4. \u00das de Recursos (API Resources)","text":"<p>Els API Resources permeten controlar millor el format de les respostes JSON, separant la l\u00f2gica de transformaci\u00f3 del model.</p> <p>Generar un recurs: Es pot generar un recurs amb Artisan, i aquest recurs s'utilitza per personalitzar les dades que es retornen.</p> <pre><code>php artisan make:resource MovieResource\n</code></pre> <p>Definir el format al reecurs</p> <pre><code>namespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass MovieResource extends JsonResource\n{\n    public function toArray($request)\n    {\n        return [\n            'id' =&gt; $this-&gt;id,\n            'title' =&gt; $this-&gt;title,\n            'director' =&gt; $this-&gt;director,\n            'release_year' =&gt; $this-&gt;year,\n        ];\n    }\n}\n</code></pre> <p>\u00das al controlador:</p> <pre><code>use App\\Http\\Resources\\MovieResource;\n\npublic function show(Movie $movie)\n{\n    return new MovieResource($movie);\n}\n</code></pre>"},{"location":"10laravelRestul.html#5-colleccions-i-paginacio","title":"5. Col\u00b7leccions i Paginaci\u00f3","text":"<p>Generar un recurs per col\u00b7leccions: Tamb\u00e9 es poden crear recursos per transformar col\u00b7leccions de dades, incloent-hi metadades i enlla\u00e7os addicionals.</p> <pre><code>php artisan make:resource MovieCollection\n</code></pre> <p>Personalitzar les col\u00b7leccions:</p> <pre><code>namespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\ResourceCollection;\n\nclass MovieCollection extends ResourceCollection\n{\n    public function toArray($request)\n    {\n        return [\n            'data' =&gt; $this-&gt;collection,\n            'meta' =&gt; [\n                'total_movies' =&gt; $this-&gt;collection-&gt;total(),\n                'per_page' =&gt; $this-&gt;collection-&gt;perPage(),\n                'current_page' =&gt; $this-&gt;collection-&gt;currentPage(),\n                'last_page' =&gt; $this-&gt;collection-&gt;lastPage(),\n            ],\n            'links' =&gt; [\n                'self' =&gt; url('/api/movies'),\n            ],\n        ];\n    }\n}\n</code></pre>"},{"location":"10laravelRestul.html#paginar-resultats","title":"Paginar resultats:","text":"<p>Utilitza el m\u00e8tode <code>paginate()</code> per retornar resultats paginats. Les respostes amb <code>paginate()</code> inclouen metadades com el nombre total de registres, la p\u00e0gina actual i els enlla\u00e7os de navegaci\u00f3.</p> <pre><code>use App\\Http\\Resources\\MovieCollection;\n\npublic function index()\n{\n    return new MovieCollection(Movie::paginate(10));\n}\n</code></pre>"},{"location":"10laravelRestul.html#respostes-json-amb-paginacio","title":"Respostes JSON amb paginaci\u00f3:","text":"<p>Quan utilitzes <code>paginate()</code>, Laravel afegeix metadades \u00fatils a la resposta JSON, com ara el total de registres, el nombre per p\u00e0gina, la p\u00e0gina actual, etc.</p> <pre><code>{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"title\": \"The Godfather\",\n            \"director\": \"Francis Ford Coppola\",\n            \"release_year\": 1972\n        },\n        {\n            \"id\": 2,\n            \"title\": \"The Godfather: Part II\",\n            \"director\": \"Francis Ford Coppola\",\n            \"release_year\": 1974\n        }\n    ],\n    \"meta\": {\n        \"total_movies\": 50,\n        \"per_page\": 10,\n        \"current_page\": 1,\n        \"last_page\": 5\n    },\n    \"links\": {\n        \"self\": \"http://example.com/api/movies\"\n    }\n}\n</code></pre>"},{"location":"10laravelRestul.html#6-personalitzacio-dels-recursos","title":"6. Personalitzaci\u00f3 dels Recursos","text":"<p>Els recursos tamb\u00e9 poden incloure dades de relacions o camps calculats, com ara informaci\u00f3 agregada o camps derivats.</p> <pre><code>class MovieResource extends JsonResource\n{\n    public function toArray($request)\n    {\n        return [\n            'id' =&gt; $this-&gt;id,\n            'title' =&gt; $this-&gt;title,\n            'director' =&gt; $this-&gt;director,\n            'release_year' =&gt; $this-&gt;year,\n            'genre' =&gt; $this-&gt;genre-&gt;name ?? 'Unknown', // Relaci\u00f3 amb g\u00e8nere\n            'rating' =&gt; $this-&gt;reviews-&gt;avg('rating'), // Mitjana de valoracions\n        ];\n    }\n}\n</code></pre>"},{"location":"10laravelRestul.html#resum","title":"Resum","text":"<ol> <li><code>response()-&gt;json()</code>: \u00datil per a respostes senzilles.</li> <li>Camps ocults o visibles: Control directe al model.</li> <li>API Resources: Separen la l\u00f2gica de transformaci\u00f3 i ofereixen flexibilitat.</li> <li>Paginaci\u00f3: Facilita la navegaci\u00f3 de dades grans amb <code>paginate()</code>.</li> </ol> <p>Laravel 11 fa que el maneig de respostes JSON siga flexible, escalable i f\u00e0cil d'implementar.</p>"},{"location":"10laravelRestul.html#resta-dels-serveis","title":"Resta dels serveis","text":"<p>Vegem ara com implementar la resta de serveis (POST, PUT i DELETE). En el cas de la inserci\u00f3 (POST), haurem de rebre en la petici\u00f3 les dades de l'objecte a inserir (un llibre, en el nostre exemple). Igual que les dades del servidor al client s'envien en format JSON, \u00e9s d'esperar en aplicacions que segueixen l'arquitectura REST que les dades del client al servidor tamb\u00e9 s'envien en format JSON. El nostre m\u00e8tode store , associat al servei POST, podria quedar d'aquesta manera (retornem el codi d'estat 201, que s'utilitza quan s'han inserit elements nous):</p> <pre><code>public function store(MoviePost $request)\n{\n        $movie = new Movie();\n        $movie-&gt;title = $request-&gt;title;\n        $movie-&gt;year = $request-&gt;year;\n        $movie-&gt;director = $request-&gt;director;\n        $movie-&gt;poster = $request-&gt;poster;\n        $movie-&gt;synopsis = $request-&gt;synopsis;\n        $movie-&gt;save();\n        return response()-&gt;json($movie, 201);\n}\n</code></pre> <p>De forma semblant tindriem el m\u00e8tode update per al servei PUT. En est cas tornem un codi 200.</p> <pre><code> public function update(MoviePost $request, Movie $movie)\n    {\n        $movie-&gt;title = $request-&gt;title;\n        $movie-&gt;year = $request-&gt;year;\n        $movie-&gt;director = $request-&gt;director;\n        $movie-&gt;poster = $request-&gt;poster;\n        $movie-&gt;synopsis = $request-&gt;synopsis;\n        $movie-&gt;save();\n        return response()-&gt;json($movie);\n    }\n</code></pre> <p>Finalment, pel servei DELETE, hem d'implementar el m\u00e8tode destroy , que podria quedar aix\u00ed:</p> <pre><code>public function destroy(Movie $movie)\n{\n    $movie-&gt;delete();\n    return response()-&gt;json(null, 204);\n}\n</code></pre> <p>Notar que retornem un codi d'estat 204, que indica que no estem retornant contingut (\u00e9s null). D'altra banda, \u00e9s habitual en aquesta mena d'operacions d'esborrat retornar en format JSON l'objecte que s'ha eliminat, per si de cas es vol desfer l'operaci\u00f3 en un pas posterior. En aquest cas, la resposta del m\u00e8tode d'esborrat seria aix\u00ed:</p> <pre><code>return response()-&gt;json($movie,204);\n</code></pre> <p>Com podem comen\u00e7ar a intuir, provar aquests serveis no \u00e9s tan senzill com provar serveis de tipus GET, ja que no podem simplement teclejar una URL en el navegador. Necessitem un mecanisme per a passar-li les dades al servidor en format JSON, i tamb\u00e9 el m\u00e8tode (POST, PUT o DELETE).</p>"},{"location":"10laravelRestul.html#validacio-de-dades","title":"Validaci\u00f3 de dades","text":"<p>A l'hora de rebre dades en format JSON per a serveis REST, tamb\u00e9 podem establir mecanismes de validaci\u00f3 similars als vistos per als formularis, a trav\u00e9s dels corresponents requests, com ja hem fet en els exemples anteriors.</p>"},{"location":"10laravelRestul.html#respostes-derror","title":"Respostes d'error","text":"<p>D'altra banda, hem d'assegurar-nos que qualsevol error que es produ\u00efsca en la part del API retorne un contingut en format JSON, i no una p\u00e0gina web. Per exemple, si sol\u00b7licitem veure la fitxa d'un llibre que el seu id no existeix, no hauria de retornar-nos una p\u00e0gina d'error 404, sin\u00f3 un codi d'estat 404 amb un missatge d'error en format JSON. Aix\u00f2 no es compleix per defecte, ja que Laravel est\u00e0 configurat per a renderitzar una vista amb l'error produ\u00eft.  Ho podem fer modificant el fitxer bootstrap/app.php.</p> <pre><code>-&gt;withExceptions(function (Exceptions $exceptions) {\n        // Gestionar excepcions en format JSON nom\u00e9s per a rutes API\n        $exceptions-&gt;shouldRenderJsonWhen(function (Request $request, Throwable $e) {\n            // Nom\u00e9s retornar JSON si la ruta comen\u00e7a amb \"api/*\"\n            return $request-&gt;is('api/*');\n        });\n\n        // Renderitzar excepcions personalitzades\n        $exceptions-&gt;render(function (Throwable $e, Request $request) {\n            // Excepcions de validaci\u00f3\n            if ($e instanceof \\Illuminate\\Validation\\ValidationException) {\n                return response()-&gt;json([\n                    'message' =&gt; 'Dades no v\u00e0lides.',\n                    'errors' =&gt; $e-&gt;errors(),\n                ], 422);\n            }\n\n            // Excepcions d'autenticaci\u00f3\n            if ($e instanceof \\Illuminate\\Auth\\AuthenticationException) {\n                return response()-&gt;json([\n                    'message' =&gt; 'No autenticat.',\n                ], 401);\n            }\n\n            // Ruta no trobada\n            if ($e instanceof \\Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException) {\n                if ($request-&gt;is('api/*')) {\n                    return response()-&gt;json([\n                        'message' =&gt; 'Ruta no trobada.',\n                    ], 404);\n                }\n                // Comportament per defecte per a rutes no API (HTML)\n                return parent::render($request, $e);\n            }\n\n            // Recurs no trobat\n            if ($e instanceof \\Illuminate\\Database\\Eloquent\\ModelNotFoundException) {\n                if ($request-&gt;is('api/*')) {\n                    return response()-&gt;json([\n                        'message' =&gt; 'Recurs no trobat.',\n                    ], 404);\n                }\n                return parent::render($request, $e);\n            }\n\n            // Resposta gen\u00e8rica per a errors del servidor\n            if ($request-&gt;is('api/*')) {\n                return response()-&gt;json([\n                    'message' =&gt; 'Error del servidor.',\n                ], 500);\n            }\n\n            // Comportament per defecte per a rutes no API\n            return parent::render($request, $e);\n        });\n</code></pre>"},{"location":"10laravelRestul.html#provant-els-serveis-amb-postman","title":"Provant els serveis amb POSTMAN","text":"<p>Ja hem vist que provar uns serveis de llistat (GET) \u00e9s senzill a trav\u00e9s d'un navegador. Per\u00f2 els serveis d'inserci\u00f3 (POST), modificaci\u00f3 (PUT) o esborrat (DELETE) exigeixen d'altres eines per a poder ser provats. Podr\u00edem definir formularis amb aquests m\u00e8todes encapsulats, per\u00f2 l'esfor\u00e7 de definir aqueixos formularis per a despr\u00e9s no utilitzar-los m\u00e9s no mereix molt la pena. Veurem a continuaci\u00f3 una eina molt \u00fatil per a provar tot tipus de serveis sense necessitat d'implementar gens addicional.</p> <p>Postman \u00e9s una aplicaci\u00f3 gratu\u00efta i multiplataforma que permet enviar tot tipus de peticions a un servidor determinat, i examinar la resposta que aquest produeix. D'aquesta forma, podem comprovar que els serveis ofereixen la informaci\u00f3 adequada abans de ser usats per una aplicaci\u00f3 client real.</p> <p>La primera vegada que l'executem ens preguntar\u00e0 si volem registrar-nos, de manera que puguem compartir els projectes que fem entre els diferents equips en qu\u00e8 estiguem registrats, per\u00f2 podem saltar aquest pas fent clic en l'enlla\u00e7 inferior.</p> <p>Despr\u00e9s d'iniciar l'aplicaci\u00f3, veurem la pantalla d'inici de Postman. Al principi apareixeran diverses opcions en la zona central, per a crear col\u00b7leccions o peticions, encara que tamb\u00e9 les podem crear des del bot\u00f3 New a la cantonada superior esquerra. Per exemple, podem crear una col\u00b7lecci\u00f3 \"Movies\", i apareixer\u00e0 en el panell esquerre:</p> <p>Des del mateix bot\u00f3*New a la cantonada superior esquerra podem crear noves peticions i associar-les a una col\u00b7lecci\u00f3. Existeix una forma alternativa (potser m\u00e9s c\u00f2moda) de crear aqueixes peticions, a trav\u00e9s del panell de pestanyes, afegint noves:</p>"},{"location":"10laravelRestul.html#afegir-peticions-get","title":"Afegir peticions GET","text":"<p>Per a afegir una petici\u00f3, habitualment triarem el tipus de comando sota les pestanyes (GET, POST, PUT, DELETE) i la URL associada a aquest comando. Per exemple:</p> <p></p> <p>Llavors, podem fer clic en el bot\u00f3 \"Save\" en la part dreta, i guardar la petici\u00f3 per a poder-la reutilitzar. En guardar-la, ens demanar\u00e0 que li assignem un nom (per exemple, \"GET movies\" en aquest cas), i la col\u00b7lecci\u00f3 en la qual s'emmagatzemar\u00e0 (la nostra col\u00b7lecci\u00f3 de \"Movies\").</p> <p></p> <p>Despr\u00e9s, podrem veure la prova associada a la col\u00b7lecci\u00f3, en el panell esquerre, i si seleccionem aquesta prova i premem en el bot\u00f3 blau de \"*Send\" (part dreta), podem veure la resposta emesa pel servidor en el panell inferior de resposta (si tenim, \u00e9s clar, el servidor en marxa)</p> <p></p> <p>Seguint aquests mateixos passos, podem tamb\u00e9 crear una nova petici\u00f3 per a obtindre un llibre a partir del seu id, per GET:</p> <p></p> <p>Bastaria amb reempla\u00e7ar l'id de la URL pel qual vulguem consultar realment. Si provem aquesta petici\u00f3, obtindrem la resposta corresponent:</p> <p></p>"},{"location":"10laravelRestul.html#afegir-altres-tipus-de-peticions","title":"Afegir altres tipus de peticions","text":"<p>Les peticions POST difereixen de les peticions GET en qu\u00e8 s'envia certa informaci\u00f3 en el cos de la petici\u00f3. Aquesta informaci\u00f3 normalment s\u00f3n les dades que es volen afegir en el servidor. Com podem fer aix\u00f2 amb Postman? En primer lloc, creem una nova petici\u00f3, triem el comando POST i definim la URL (en el nostre cas, videoclub.my/api/movies o una cosa similar, depenent de com tinguem en marxa el servidor). Llavors, fem clic en la pestanya Body, sota la URL, i establim el tipus com raw perqu\u00e8 ens deixe escriure'l sense restriccions. Tamb\u00e9 conv\u00e9 canviar la propietat Text perqu\u00e8 siga JSON, i que aix\u00ed el servidor reculla el tipus de dada adequada. S'afegir\u00e0 autom\u00e0ticament una cap\u00e7alera de petici\u00f3 (Header) que especificar\u00e0 que el tipus de contingut que s'enviar\u00e0 s\u00f3n dades JSON. Despr\u00e9s, en el quadre de text sota aquestes opcions, especifiquem l'objecte JSON que volem enviar per a inserir:</p> <p></p> <p>Despr\u00e9s d'aix\u00f2, n'hi ha prou amb guardar la petici\u00f3 com hem fet amb les anteriors, i llan\u00e7ar-la per a veure el resultat.</p> <p>Quant a les peticions PUT, procedirem de manera similar a les peticions POST: hem de triar el comando (PUT en aquest cas), la URL, i completar el cos de la petici\u00f3 amb les dades que vulguem modificar del contacte. En aquest cas, a m\u00e9s, l'id del llibre l'enviarem tamb\u00e9 en la pr\u00f2pia URL:</p> <p></p> <p>Per a peticions DELETE, la mec\u00e0nica \u00e9s similar a la fitxa de l'element (operaci\u00f3 GET), canviant el comando GET per DELETE, i sense necessitat d'establir res en el cos de la petici\u00f3:</p> <p></p>"},{"location":"10laravelRestul.html#autenticacio-en-serveis-rest","title":"Autenticaci\u00f3 en serveis REST","text":"<p>En una API REST tamb\u00e9 pot ser necessari protegir certs serveis, de manera que nom\u00e9s puguen accedir a ells els usuaris autenticats. No obstant aix\u00f2, en aquest cas no tenim disponible el mecanisme d'autenticaci\u00f3 basat en sessions que vam veure en temes anteriors, ja que la parteix client que consula la API REST no t\u00e9 per qu\u00e8 estar basada en un navegador. Podr\u00edem accedir des d'una aplicaci\u00f3 d'escriptori feta a Java, per exemple, o des d'una aplicaci\u00f3 m\u00f2bil, i en aquests casos no podr\u00edem disposar de les sessions, pr\u00f2pies de clients web o navegadors. En el seu lloc, emprarem un mecanisme d'autenticaci\u00f3 basat en tokens.</p>"},{"location":"10laravelRestul.html#fonaments-de-lautenticacio-basada-en-tokens","title":"Fonaments de l'autenticaci\u00f3 basada en tokens","text":"<p>L'autenticaci\u00f3 basada en tokens \u00e9s un mecanisme de validaci\u00f3 d'usuaris en aplicacions client/servidor que podr\u00edem dir que \u00e9s m\u00e9s universal que l'autenticaci\u00f3 basada en sessions, ja que permet autenticar usuaris provinents de diferents tipus de clients. El que es fa \u00e9s el seg\u00fcent:</p> <ul> <li>L'usuari necessita enviar les seues credencials (login i password), de manera similar a com es fa en una aplicaci\u00f3 web normal, encara que aquesta vegada les dades s'envien normalment en format JSON.</li> <li>El servidor valida aqueixes credencials i, si s\u00f3n correctes, genera una cadena de text anomenada token, d'una certa longitud, i que servir\u00e0 per a identificar un\u00edvocament a l'usuari a partir d'aqueix moment. Dit token ha de ser enviat de tornada (tamb\u00e9 en format JSON) al client que es va validar.</li> <li>A partir d'aquest punt, el client ha d'adjuntar el token com a part de la informaci\u00f3 en cada petici\u00f3 que realitza a una zona d'acc\u00e9s restringit, de manera que el servidor puga consultar el token i comprovar si correspon amb el d'algun usuari autoritzat. Aquest token normalment s'envia en una cap\u00e7alera de la petici\u00f3 anomenada Authorization, com veurem despr\u00e9s, i el servidor pot consultar el valor d'aquesta cap\u00e7alera per a verificar l'acc\u00e9s del client.</li> </ul>"},{"location":"10laravelRestul.html#generant-tokens","title":"Generant tokens","text":"<p>Sanctum us permet emetre tokens API / tokens d'acc\u00e9s personal que es poden utilitzar per autenticar les peticions API a la vostra aplicaci\u00f3. Quan es fan sol\u00b7licituds utilitzant tokens API, el token s'ha d'incloure a la cap\u00e7alera d'autoritzaci\u00f3 com a token Bearer.</p> <p>Per comen\u00e7ar a emetre tokens per als usuaris, el model d'usuari hauria d'utilitzar el trait Laravel\\Sanctum\\HasApiTokens:</p> <pre><code>use Laravel\\Sanctum\\HasApiTokens;\n\nclass User extends Authenticatable\n{\nuse HasApiTokens, HasFactory, Notifiable;\n}\n</code></pre> <p>Per a emetre un token, podeu utilitzar el m\u00e8tode createToken. El m\u00e8tode createToken retorna una inst\u00e0ncia Laravel\\Sanctum\\NewAccessToken. Els tokens de l'API es generen utilitzant el hash SHA-256 abans de ser emmagatzemats a la vostra base de dades, per\u00f2 podeu accedir al valor de text net del token utilitzant la propietat PlainTextToken de la inst\u00e0ncia NewAccessToken. Per a vincular la generaci\u00f3 del token amb un procediment d'autenticaci\u00f3 podem fer-ho definint un m\u00e8tode login , per exemple, que validar\u00e0 les credencials que li arriben (login i password). Si s\u00f3n correctes, cridar\u00e0 al m\u00e8tode createToken de Sanctum (incorporat a l'usuari a trav\u00e9s del trait HasApiTokens ), associant-lo al login de l'usuari entrant, i li retornar\u00e0 el token en format text pla, com un objecte JSON. En cas que hi haja un error en l'autenticaci\u00f3, enviar\u00e0 de tornada un missatge d'error, amb el codi 401 d'acc\u00e9s no autoritzat.</p> <pre><code>php artisan make:controller Api/AuthController\n</code></pre> <pre><code>namespace App\\Http\\Controllers\\Api;\n use App\\Http\\Controllers\\Controller as Controller;\nclass BaseController extends Controller\n{\n    /**\n     * success response method.\n     *\n     * @return \\Illuminate\\Http\\JsonResponse\n     */\n    public function sendResponse($result, $message, $code = 200)\n    {\n        $response = [\n            'success' =&gt; true,\n            'data'    =&gt; $result,\n            'message' =&gt; $message,\n        ];\n        return response()-&gt;json($response, $code);\n    }\n    /**\n     * return error response.\n     *\n     * @return \\Illuminate\\Http\\JsonResponse\n     */\n    public function sendError($error, $errorMessages = [], $code = 200)\n    {\n        $response = [\n            'success' =&gt; false,\n            'message' =&gt; $error,\n        ];\n        if(!empty($errorMessages)){\n            $response['info'] = $errorMessages;\n        }\n        return response()-&gt;json($response, $code);\n    }\n}\n</code></pre> <pre><code>namespace App\\Http\\Controllers\\Api;\n\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Api\\BaseController as BaseController;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Facades\\Validator;\nuse App\\Models\\User;\n\nclass AuthController extends BaseController\n{\n    public function login(Request $request)\n    {\n        if (Auth::attempt(['email' =&gt; $request-&gt;email, 'password' =&gt; $request-&gt;password])){\n            $authUser = Auth::user();\n            $result['token'] =  $authUser-&gt;createToken('MyAuthApp')-&gt;plainTextToken;\n            $result['name'] =  $authUser-&gt;name;\n\n            return $this-&gt;sendResponse($result, 'User signed in');\n        }\n        return $this-&gt;sendError('Unauthorised.', ['error'=&gt;'incorrect Email/Password']);\n    }\n    public function register(Request $request)\n    {\n        $validator = Validator::make($request-&gt;all(), [\n            'name' =&gt; 'required',\n            'email' =&gt; 'required|email',\n            'password' =&gt; 'required',\n            'confirm_password' =&gt; 'required|same:password',\n        ]);\n\n        if ($validator-&gt;fails()){\n            return $this-&gt;sendError('Error validation', $validator-&gt;errors());\n        }\n\n        try {\n            $input = $request-&gt;all();\n            $input['password'] = bcrypt($input['password']);\n            $user = User::create($input);\n            $result['token'] =  $user-&gt;createToken('MyAuthApp')-&gt;plainTextToken;\n            $result['name'] =  $user-&gt;name;\n\n            return $this-&gt;sendResponse($result, 'User created successfully.');\n        } catch (\\Exception $e) {\n            return $this-&gt;sendError('Registration Error' , $e-&gt;getMessage());\n        }\n    }\n    public function logout(Request $request)\n    {\n\n        $user = request()-&gt;user(); //or Auth::user()\n        $user-&gt;tokens()-&gt;where('id', $user-&gt;currentAccessToken()-&gt;id)-&gt;delete();\n        $success['name'] =  $user-&gt;name;\n         return $this-&gt;sendResponse($success, 'User successfully signed out.');\n    }\n\n}\n</code></pre> <p>Definim en l'arxiu routes/api.php una ruta que redirigisca a aquest m\u00e8tode, per a quan l'usuari vulga autenticar-se (recorda afegir amb use la corresponent classe):</p> <pre><code>Route::post('login', [AuthController::class, 'login'])-&gt;middleware('api');\nRoute::post('register', [AuthController::class, 'register'])-&gt;middleware('api');\n\n\nRoute::middleware(['auth:sanctum','api'])-&gt;group( function () {\n    Route::post('logout', [AuthController::class, 'logout']);\n\n});\n\n ```\n\n##### Protecci\u00f3 de rutes\n\n\nPer protegir rutes de manera que totes les sol\u00b7licituds entrants s'hagin d'autenticar, haur\u00edeu d'adjuntar el guard d'autenticaci\u00f3 sanctum a les rutes protegides dins dels vostres fitxers de rutes/api.php. Aquest guard assegurar\u00e0 que les peticions entrants s'autentiquen com a peticions d'estat, galetes autenticades o continguin una cap\u00e7alera v\u00e0lida de testimoni API si la petici\u00f3 \u00e9s d'un tercer.\n\n\n ```php\n\nRoute::get('/user',[userController::class,'show'])-&gt;middleware('auth:sanctum');\n</code></pre>"},{"location":"10laravelRestul.html#revocant-tokens","title":"Revocant tokens","text":"<p>Podeu \"revocar\" tokens suprimint-los de la base de dades utilitzant la relaci\u00f3 tokens que proporciona el tret Laravel\\Sanctum\\HasApiTokens:</p> <pre><code>// Revoke all tokens...\n$user-&gt;tokens()-&gt;delete();\n\n// Revoke the token that was used to authenticate the current request...\n$request-&gt;user()-&gt;currentAccessToken()-&gt;delete();\n\n// Revoke a specific token...\n$user-&gt;tokens()-&gt;where('id', $tokenId)-&gt;delete();\n</code></pre>"},{"location":"10laravelRestul.html#caducitat-del-tokens","title":"Caducitat del tokens","text":"<p>Per defecte, els tokens de Sanctum no caduquen i nom\u00e9s poden ser invalidats revocant el token. No obstant aix\u00f2, si voleu configurar un temps de venciment per als toekns API de la vostra aplicaci\u00f3, podeu fer-ho mitjan\u00e7ant l'opci\u00f3 de configuraci\u00f3 de venciment definida al fitxer de configuraci\u00f3 de sanctum de la vostra aplicaci\u00f3. Aquesta opci\u00f3 de configuraci\u00f3 defineix el nombre de minuts fins que un token em\u00e8s es consideri expirat:</p> <pre><code>'expiraci\u00f3' =, 525600,\n</code></pre> <p>Si heu configurat un temps de venciment del token per a la vostra aplicaci\u00f3, tamb\u00e9 podeu programar una tasca per a eliminar els tokens caducats de la vostra aplicaci\u00f3. Afortunadament, Sanctum inclou un ordre sanctum:prune-expired Artisan que podeu utilitzar per aconseguir aix\u00f2. Per exemple, podeu configurar les tasques programades per a suprimir tots els registres de la base de dades de tokens caducats que hagin expirat almenys 24 hores:</p> <pre><code>$schedule-&gt;command('sanctum:prune-expired --hours=24')-&gt;daily();\n</code></pre>"},{"location":"10laravelRestul.html#prova-dautenticacio-amb-postman","title":"Prova d'autenticaci\u00f3 amb POSTMAN","text":"<p>Vegem com provar l'autenticaci\u00f3 per token en el projecte de videoclub, per qualsevol dels m\u00e8todes vistos abans. En primer lloc, i despr\u00e9s de posar en marxa el projecte, ens assegurarem que podem accedir sense restriccions als dos serveis que no requereixen autoritzaci\u00f3 ( index o show ), igual que abans.</p> <p>Si accedim a un recurs protegit obtenim </p> <pre><code>{ \"error\": \"Credenciales no v\u00e1lidas\"}\n</code></pre> <p>Ara anem a loguejar-se</p> <p></p> <p>Ara hem de copiar aquest token, i pegar-ho en la petici\u00f3 d'acc\u00e9s restringit. Haurem de pegar-ho en la cap\u00e7alera Authorization (obrir aqueixa pestanya sota la URL de la petici\u00f3 en Postman), i el normal \u00e9s enviar-ho com un Bearer token, segons els est\u00e0ndards. Llavors s\u00ed que tindrem la resposta correcta de l'operaci\u00f3 sol\u00b7licitada.</p> <p></p> <p>A l'hora de traslladar aquestes proves a una aplicaci\u00f3 \"real\", enviar\u00edem les credencials per JSON al servidor, obtindr\u00edem el token de tornada i l'emmagatzemar\u00edem localment en alguna variable o suport (per exemple, en l'element localStorage , si treballem amb algun framework Javascript). Despr\u00e9s, davant cada petici\u00f3 JSON que f\u00e9rem al servidor, adjuntar\u00edem aquest token en la cap\u00e7alera Authorization perqu\u00e8 f\u00f3ra validat pel servidor.</p>"},{"location":"10laravelRestul.html#que-es-swagger","title":"Qu\u00e8 \u00e9s swagger","text":"<p>Video Video</p>"},{"location":"10laravelRestul.html#documentacio","title":"Documentaci\u00f3","text":"<p>Per a poder utilitzar swagger en Laravel podem instal\u00b7lar el seg\u00fcent paquet que utilitza Swagger-php i swagger-ui adaptat per treballar amb Laravel.</p> <pre><code>composer require \"darkaonline/l5-swagger\"\n</code></pre> <p>i publicarem el fitxers de configuraci\u00f3 i vistes</p> <pre><code>php artisan vendor:publish --provider \"L5Swagger\\L5SwaggerServiceProvider\"\n</code></pre> <p>A continuaci\u00f3, obriu un fitxer config/l5-swagger.php.  Passem per les claus essencials:</p> <ul> <li> <p>routes.api - Aquest \u00e9s una URL per accedir a la documentaci\u00f3 d'interf\u00edcie d'usuari.  El vostre equip de frontend l'utilitzar\u00e0 per accedir a la documentaci\u00f3.  Per defecte \u00e9s api/documentaci\u00f3.  Podeu canviar-ho a quelcom m\u00e9s petit com api/docs</p> </li> <li> <p>Generar_always \u2014 Es millor desactivar-ho ja que generar\u00e0 documentaci\u00f3 sobre la marxa.  No \u00e9s \u00fatil amb l'API gran.  Sempre podeu executar manualment</p> </li> </ul> <pre><code>    php artisan config:cache\n    php artisan l5-swagger:generate\n</code></pre> <p>Aquests s\u00f3n els m\u00e9s importants per a comen\u00e7ar.  Ara si intenteu crear documents mitjan\u00e7ant aquesta ordre retornar\u00e0 un error</p> <pre><code>Required @OA\\Info() not found\n</code></pre> <p>Aix\u00f2 vol dir que primer heu de crear aquesta notaci\u00f3.  Aix\u00ed que afegim-ho.  Prefereixo crear un controlador abstracte per a una API, per\u00f2 podeu afegir aix\u00f2 a app/Http/Controllers/Controller.php</p> <pre><code>/**\n * @OA\\Info(\n *    title=\"Futbol Femeni API Documentation\",\n *    version=\"1.0.0\",\n * )\n * @OA\\PathItem(path=\"/api\")\n*/  \n\nclass Controller extends BaseController\n{\n    use AuthorizesRequests, DispatchesJobs, ValidatesRequests;\n}\n</code></pre> <p>A continuaci\u00f3, hem d'afegir documents per a almenys una ruta, per exemple per per app/Http/Controllers/Api/LoginController.php:</p> <pre><code>/**\n * @OA\\Post(\n * path=\"/login\",\n * summary=\"Sign in\",\n * description=\"Login by email, password\",\n * operationId=\"authLogin\",\n * tags={\"auth\"},\n * @OA\\RequestBody(\n *    required=true,\n *    description=\"Pass user credentials\",\n *    @OA\\JsonContent(\n *       required={\"email\",\"password\"},\n *       @OA\\Property(property=\"email\", type=\"string\", format=\"email\", example=\"user1@mail.com\"),\n *       @OA\\Property(property=\"password\", type=\"string\", format=\"password\", example=\"PassWord12345\"),\n *       @OA\\Property(property=\"persistent\", type=\"boolean\", example=\"true\"),\n *    ),\n * ),\n * @OA\\Response(\n *    response=422,\n *    description=\"Wrong credentials response\",\n *    @OA\\JsonContent(\n *       @OA\\Property(property=\"message\", type=\"string\", example=\"Sorry, wrong email address or password. Please try again\")\n *        )\n *     )\n * )\n */\n</code></pre> <p>Ara, est\u00e0s preparat per generar php artisan l5-swagger:generate i v\u00e9s a l'URL que has proporcionat a la teva configuraci\u00f3.  En el meu cas, ser\u00e0 http://videoclub/api/docs.</p> <p>Veur\u00e0s una cosa aix\u00ed:</p> <p></p> <p>Ara mirarem les anotacions.  Intentar\u00e9 explicar com utilitzar-les:</p> <ul> <li>@OA \u2014 significa anotaci\u00f3 d'Open API.  Podeu llegir m\u00e9s aqu\u00ed</li> <li>@OA/POST  \u2014 vol dir petici\u00f3 DE POST.  Hi ha GET, POST, DELETE, etc.</li> <li>Path \u2014 \u00e9s un URL</li> <li>Tags \u2014 us agrupar\u00e0 API per seccions.</li> <li>@OA\\RequestBody \u2014 \u00e9s obvi pel nom.  Hauria de tenir una anotaci\u00f3 JsonContent dins amb propietats (\u00e9s a dir, descripcions de camp).</li> <li>OA\\Response \u2014 podeu tenir tantes respostes com vulgueu.  Haur\u00edeu de proporcionar totes les respostes possibles d'\u00e8xit i error.</li> </ul> <p>Anem a afegir un codi de resposta 200:</p> <pre><code>*   @OA\\Response(\n*     response=200,\n*     description=\"Success\",\n*     @OA\\JsonContent(\n*        @OA\\Property(property=\"user\", type=\"object\", ref=\"#/components/schemas/User\"),\n*     )\n*  ),\n</code></pre> <p>L'anotaci\u00f3 @OA\\Property t\u00e9 una clau de propietat(nom de camp) i un tipus.  El tipus pot tenir valors diferents: string, object, integer, array, boolean, etc. En aquesta resposta, vaig utilitzar el tipus objecte.  Podeu passar una refer\u00e8ncia a aquest objecte.  Crearem un objecte user.  Prefereixo afegir aix\u00f2 a la classe Model.</p> <pre><code>/**\n *\n * @OA\\Schema(\n * required={\"password\"},\n * @OA\\Xml(name=\"User\"),\n * @OA\\Property(property=\"id\", type=\"integer\", readOnly=\"true\", example=\"1\"),\n * @OA\\Property(property=\"role\", type=\"string\", readOnly=\"true\", description=\"User role\"),\n * @OA\\Property(property=\"email\", type=\"string\", readOnly=\"true\", format=\"email\", description=\"User unique email address\", example=\"user@gmail.com\"),\n * @OA\\Property(property=\"email_verified_at\", type=\"string\", readOnly=\"true\", format=\"date-time\", description=\"Datetime marker of verification status\", example=\"2019-02-25 12:59:20\"),\n * @OA\\Property(property=\"first_name\", type=\"string\", maxLength=32, example=\"John\"),\n * @OA\\Property(property=\"last_name\", type=\"string\", maxLength=32, example=\"Doe\"),\n\n * )\n *\n * Class User\n *\n */\n</code></pre> <p>Mireu aquesta notaci\u00f3 @OA\\Xml(nom=\u201d Usuari).  Aquest nom s'utilitzar\u00e0 en una clau ref de la @OA\\Property</p> <p>Ara veureu una icona de bloqueig prop de la ruta.  Quan feu clic sobre aix\u00f2, podreu afegir l'autenticaci\u00f3 de Bearer.</p> <p></p>"},{"location":"10laravelRestul.html#exemple","title":"Exemple","text":"<p>El gran problema d'este component \u00e9s que no est\u00e0 ben documentat. Partint del seg\u00fcent exemple he documentant el m\u00e8tode get i post del videoclub i ha quedat aix\u00ed:</p> <p>Primer cal possar l'inici del swagger en el Controller.php de la seg\u00fcent manera:</p> <p><pre><code>/**\n * @OA\\Info(\n *     title=\"API de Jugadores\",\n *     version=\"1.0.0\",\n *     description=\"Documentaci\u00f3 de l'API per a gestionar jugadores\"\n * )\n * @OA\\SecurityScheme(\n *     securityScheme=\"bearerAuth\",\n *     type=\"http\",\n *     scheme=\"bearer\",\n *     bearerFormat=\"JWT\"\n * )\n */\n</code></pre> La primera part serveix per a identificar el projecte i la segon per a l'autenticaci\u00f3 de la API basada en tokens.</p> <p>Ara omplirem el model Movie.php per a generar el schema Movie.</p> <p><pre><code>/**\n *\n * @OA\\Schema(\n * required={\"id,title\"},\n * @OA\\Xml(name=\"Movie\"),\n * @OA\\Property(property=\"id\", type=\"integer\", readOnly=\"true\", example=\"1\"),\n * @OA\\Property(property=\"title\", type=\"string\", readOnly=\"true\", description=\"User role\"),\n * @OA\\Property(property=\"year\", type=\"integer\", readOnly=\"true\",  description=\"Year\", example=\"1956\"),\n * @OA\\Property(property=\"director\", type=\"string\", readOnly=\"true\",  description=\"Director\", example=\"Copolla\"),\n * @OA\\Property(property=\"genre\", type=\"string\", readOnly=\"true\",  description=\"Genre\", example=\"Thriller\"),\n * )\n */\n</code></pre> Observeu que en el genre retorne un string perqu\u00e8 ser\u00e0 el que voldr\u00e8 retornar, en compte de la id de Genre.</p> <p>Ara generar\u00e8 el schema de la petici\u00f3 request del post de movie. No \u00e9s exactament igual que esta perqu\u00e8 ac\u00ed voldr\u00e9 el genre amb ID i restriccions en alguns camps. Ho puc fer en el MoviePost.php dins de request.</p> <p><pre><code>/**\n * @OA\\Schema(\n *      title=\"Store Movie Request\",\n *      required={\"title,director,year\"},\n *      description=\"Store Movie request body data\",\n *      @OA\\Xml(name=\"MoviePost\"),\n * )\n */\n /**\n     * @OA\\Property(\n     *      property = \"title\",\n     *      title=\"name\",\n     *      description=\"Title\",\n     *      example=\"Titanic\"\n     * )\n     *\n     * @var string\n     */\n  /**\n     * @OA\\Property(\n     *      property = \"year\",\n     *      title=\"year\",\n     *      description=\"Year\",\n     *      example=\"1998\"\n     * )\n     *\n     * @var integer\n     */\n /**\n     * @OA\\Property(\n     *      property = \"genre\",\n     *      title=\"genre\",\n     *      description=\"Genre\",\n     *      example=\"1\"\n     * )\n     *\n     * @var integer\n     */\n /**\n     * @OA\\Property(\n     *      property = \"director\",\n     *      title=\"director\",\n     *      description=\"Director\",\n     *      example=\"Steven Spilberg\"\n     * )\n     *\n     * @var string\n     */\n    /**\n     * @OA\\Property(\n     *      property = \"synopsis\",\n     *      title=\"synopsis\",\n     *      description=\"Synopsis\",\n     *      example=\"De que va la pelicula\"\n     * )\n     *\n     * @var string\n     */\n\n    /**\n     * @OA\\Property(\n     *      property = \"poster\",\n     *      title=\"poster\",\n     *      description=\"Poster\",\n     *      example=\"adre\u00e7a del poster\"\n     * )\n     *\n     * @var string\n     */         \n</code></pre> No he pogut fer-ho d'un altra manera. Diferix un poc de la que he utilitzat al model Movie, per\u00f2 si no ho feia aix\u00ed no funcionaba.</p> <p>Falta ara generar la resposta de totes les pelicules per al index. Per a\u00e7o genere un Resource per a Movies, amb el seg\u00fcent codi.</p> <p><pre><code>&lt;?php\n\nnamespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n/**\n * @OA\\Schema(\n *     title=\"MovieResource\",\n *     description=\"Project resource\",\n *     @OA\\Xml(name=\"MovieResource\"),\n * )\n */\nclass MovieResource extends JsonResource\n{\n    /**\n     * Transform the resource collection into an array.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return array\n     */\n\n    /**\n     * @OA\\Property(\n     *     property=\"data\",\n     *     title=\"data\",\n     *     description=\"Data wrapper\"\n     * )\n     *\n     * @var \\App\\Models\\Movie[]\n     */\n    public function toArray($request)\n    {\n        return [ 'id' =&gt; $this-&gt;id,\n            'title' =&gt; $this-&gt;title,\n            'director' =&gt; $this-&gt;director,\n            'year' =&gt; $this-&gt;year,\n            'genre' =&gt; $this-&gt;Genre-&gt;title??'Desconocido'];\n    }\n}\n</code></pre> Este resource far\u00e0 que quan l'utilitze hem retornar\u00e0 els camps que he possat en la funci\u00f3 toArray i no tots els camps. El puc utilitzar per tornar camps de relacions o canviar el nom dels camps. En quan al swagger, noteu que torne un array de Movies dins d'un camp data.</p> <p>Per \u00faltim el controlador de movies queda de la seg\u00fcent manera.</p> <pre><code>  /**\n     * Display a listing of the resource.\n     *\n     * @return \\Illuminate\\Http\\Response\n     */\n    /**\n     * @OA\\Get(\n     *      path=\"/api/movies\",\n     *      operationId=\"getMoviesList\",\n     *      tags={\"Movies\"},\n     *      summary=\"Get list of movies\",\n     *      description=\"Returns list of movies\",\n     *      security={{\"bearerAuth\":{}}},\n     *      @OA\\Response(\n     *          response=200,\n     *          description=\"Successful operation\",\n     *          @OA\\JsonContent(ref=\"#/components/schemas/MovieResource\")\n     *       ),\n     *      @OA\\Response(\n     *          response=401,\n     *          description=\"Unauthenticated\",\n     *      ),\n     *      @OA\\Response(\n     *          response=403,\n     *          description=\"Forbidden\"\n     *      )\n     *     )\n     */\n    public function index()\n    {\n\n        return MovieResource::collection(Movie::get());\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    /**\n     * @OA\\Post(\n     *      path=\"/api/movies\",\n     *      operationId=\"movieProject\",\n     *      tags={\"Movies\"},\n     *      summary=\"Store new movie\",\n     *      description=\"Returns movie data\",\n     *      security={{\"bearerAuth\":{}}},\n     *      @OA\\RequestBody(\n     *          required=true,\n     *          @OA\\JsonContent(ref=\"#/components/schemas/MoviePost\")\n     *      ),\n     *      @OA\\Response(\n     *          response=201,\n     *          description=\"Successful operation\",\n     *          @OA\\JsonContent(ref=\"#/components/schemas/Movie\")\n     *       ),\n     *      @OA\\Response(\n     *          response=400,\n     *          description=\"Bad Request\"\n     *      ),\n     *      @OA\\Response(\n     *          response=401,\n     *          description=\"Unauthenticated\",\n     *           @OA\\JsonContent(\n     *              @OA\\Property(\n     *                  property=\"error\",\n     *                  type=\"string\",\n     *                  example=\"Usuario no autenticado\"))\n     *      ),\n     *      @OA\\Response(\n     *          response=403,\n     *          description=\"Forbidden\"\n     *      )\n     * )\n     */\n    public function store(MoviePost $request)\n    {\n        $movie = new Movie();\n        $movie-&gt;title = $request-&gt;title;\n        $movie-&gt;year = $request-&gt;year;\n        $movie-&gt;director = $request-&gt;director;\n        $movie-&gt;poster = $request-&gt;poster;\n        $movie-&gt;synopsis = $request-&gt;synopsis;\n        $movie-&gt;save();\n        response()-&gt;json($movie, 201);\n    }\n</code></pre> <p>Mireu que per al post utilitze la seguretat que ja havia definit. Ara veureu una icona de bloqueig prop de la ruta.  Quan feu clic sobre aix\u00f2, podreu afegir l'autenticaci\u00f3 de Bearer.</p> <p></p> <p>Us encomane a que vejau el video on est\u00e0 tot explicat perqu\u00e8 amb els apunt soles queda una mica dif\u00edcil d'entendre.</p> <p>Documentaci\u00f3 de swagger-php</p>"},{"location":"10laravelRestul.html#exercici-practic-api-per-a-la-guia-dequips-de-futbol-femeni","title":"Exercici Pr\u00e0ctic: API per a la Guia d'Equips de Futbol Femen\u00ed.","text":"<p>L'objectiu de l'exercici consisteix a implementar una API REST completa per gestionar la lliga femenina, incloent-hi les operacions CRUD, autenticaci\u00f3, autoritzaci\u00f3, i documentaci\u00f3 amb Swagger.</p>"},{"location":"10laravelRestul.html#pas-1-configuracio-inicial-de-lapi-installacio-sanctum","title":"Pas 1: Configuraci\u00f3 inicial de l\u2019API (instal\u00b7laci\u00f3 Sanctum)","text":"<ul> <li>Instal\u00b7la Laravel Sanctum al projecte:</li> </ul> <pre><code>composer require laravel/sanctum\nphp artisan vendor:publish --provider=\"Laravel\\Sanctum\\SanctumServiceProvider\"\nphp artisan migrate\n</code></pre> <ul> <li>Configura el fitxer bootstrap/app.php per tal que els missatges d'errada vinguen en format json:</li> </ul> <pre><code>return Application::configure(basePath: dirname(__DIR__))\n-&gt;withRouting(\n    web: __DIR__.'/../routes/web.php',\n    api: __DIR__.'/../routes/api.php',\n    commands: __DIR__.'/../routes/console.php',\n    health: '/up',\n)\n-&gt;withMiddleware(function (Middleware $middleware) {\n\n})\n-&gt;withExceptions(function (Exceptions $exceptions) {\n    $exceptions-&gt;render(function (Exception $e, Request $request) {\n        if ($request-&gt;is('api/*')) {\n            $statusCode = method_exists($e, 'getStatusCode') ? $e-&gt;getStatusCode() : 500;\n            return response()-&gt;json([\n                'success' =&gt; false,\n                'message' =&gt; $e-&gt;getMessage(),\n            ], $statusCode);\n        }\n    });\n\n    $exceptions-&gt;render(function (Throwable $e, Request $request) {\n        if ($request-&gt;is('api/*')) {\n            return response()-&gt;json([\n                'success' =&gt; false,\n                'message' =&gt; $e-&gt;getMessage(),\n            ], 500);\n        }\n    });\n})-&gt;create();\n</code></pre>"},{"location":"10laravelRestul.html#pas-2-controladors-i-rutes","title":"Pas 2: Controladors i Rutes","text":"<ul> <li>Genera controladors per als models utilitzant Artisan:</li> </ul> <p><pre><code> php artisan make:controller Api/JugadoraController --api --model=Jugadora\n</code></pre> -   Crea les rutes CRUD per als models:</p> <pre><code>Route::apiResource('jugadores', Api\\JugadoraController::class)-&gt;middleware('api');\n ```\n- Crea un controller BaseController per a gestionar les respostes de l'API:\n\n```php\n\nnamespace App\\Http\\Controllers\\Api;\n use App\\Http\\Controllers\\Controller as Controller;\nclass BaseController extends Controller\n{\n    /**\n     * success response method.\n     *\n     * @return \\Illuminate\\Http\\JsonResponse\n     */\n    public function sendResponse($result, $message, $code = 200)\n    {\n        $response = [\n            'success' =&gt; true,\n            'data'    =&gt; $result,\n            'message' =&gt; $message,\n        ];\n        return response()-&gt;json($response, $code);\n    }\n    /**\n     * return error response.\n     *\n     * @return \\Illuminate\\Http\\JsonResponse\n     */\n    public function sendError($error, $errorMessages = [], $code = 200)\n    {\n        $response = [\n            'success' =&gt; false,\n            'message' =&gt; $error,\n        ];\n        if(!empty($errorMessages)){\n            $response['info'] = $errorMessages;\n        }\n        return response()-&gt;json($response, $code);\n    }\n}\n</code></pre> <ul> <li>Completa els m\u00e8todes CRUD en el controlador utilitzant els models i Form Requests per validar les dades:</li> </ul> <pre><code>namespace App\\Http\\Controllers\\Api;\n\n\nuse App\\Http\\Requests\\JugadoraRequest;\nuse App\\Models\\Jugadora;\n\n\nclass JugadoraController extends BaseController\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index()\n    {\n        return Jugadora::paginate(10);\n    }\n\n    public function store(JugadoraRequest $request)\n    {\n        $jugadora = Jugadora::create($request-&gt;validated());\n        return $this-&gt;sendResponse($jugadora, 'Jugadora Creada amb exit',201);\n    }\n\n    public function show(Jugadora $jugadora)\n    {\n        return $this-&gt;sendResponse($jugadora, 'Jugadora Recuperada amb exit', 201);\n    }\n\n    public function update(JugadoraRequest $request, Jugadora $jugadore)\n    {\n        $jugadore-&gt;update($request-&gt;validated());\n        return $this-&gt;sendResponse($jugadore, 'Jugadora Actualitzada amb \u00e8xit', 201);\n    }\n\n    public function destroy(Jugadora $jugadore)\n    {\n        $jugadore-&gt;delete();\n        return $this-&gt;sendResponse(null, 'Jugadora Eliminada amb exit', 201);\n    }\n}\n</code></pre>"},{"location":"10laravelRestul.html#pas-3-resources","title":"Pas 3: Resources","text":"<ul> <li>Genera un Recurso per a la Jugadora:</li> </ul> <pre><code>php artisan make:resource JugadoraResource\n</code></pre> <ul> <li>Implementa el Recurs JugadoraResource:</li> </ul> <pre><code>namespace App\\Http\\Resources;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass JugadoraResource extends JsonResource\n{\n    /**\n     * Transform the resource into an array.\n     *\n     * @return array&lt;string, mixed&gt;\n     */\n    public function toArray(Request $request): array\n    {\n        return [\n            'id' =&gt; $this-&gt;id,\n            'nom' =&gt; $this-&gt;nom,\n            'equip' =&gt; $this-&gt;Equip-&gt;nom,\n            'posicio' =&gt; $this-&gt;posicio,\n            'dorsal' =&gt; $this-&gt;dorsal,\n            'edat' =&gt; $this-&gt;edat\n        ];\n    }\n}\n</code></pre> <ul> <li>Modifica el controlador JugadoraController per a utilitzar el Recurs JugadoraResource:</li> </ul> <pre><code>    public function index()\n    {\n        return  JugadoraResource::collection(Jugadora::paginate());\n    }\n\n    public function show(Jugadora $jugadore)\n    {\n        return $this-&gt;sendResponse(new JugadoraResource($jugadore), 'Jugadora Recuperada amb \u00e8xit', 201);\n    }\n\n    public function update(JugadoraRequest $request, Jugadora $jugadore)\n    {\n        $jugadore-&gt;update($request-&gt;validated());\n        return $this-&gt;sendResponse($jugadore, 'Jugadora Actualitzada amb \u00e8xit', 201);\n    }\n\n    public function store(JugadoraRequest $request)\n    {\n        $jugadora = Jugadora::create($request-&gt;validated());\n        return $this-&gt;sendResponse(new JugadoraResource($jugadora), 'Jugadora Creada amb \u00e8xit', 201);\n    }\n\n    public function destroy(Jugadora $jugadore)\n    {\n        $jugadore-&gt;delete();\n        return $this-&gt;sendResponse(null, 'Jugadora Eliminada amb \u00e8xit', 201);\n    }\n</code></pre>"},{"location":"10laravelRestul.html#pas-4-autenticacio-i-autoritzacio","title":"Pas 4: Autenticaci\u00f3 i autoritzaci\u00f3","text":"<ul> <li>Afegir al model User el trait HasApiTokens:</li> </ul> <pre><code>use Laravel\\Sanctum\\HasApiTokens;\nclass User extends Authenticatable\n{\n    use HasApiTokens, HasFactory, Notifiable;\n}\n</code></pre> <ul> <li>Afegir les rutes d'autenticaci\u00f3 a routes/api.php:</li> </ul> <pre><code>Route::post('login', [AuthController::class, 'login'])-&gt;middleware('api');\nRoute::post('register', [AuthController::class, 'register'])-&gt;middleware('api');\n\n\nRoute::middleware(['auth:sanctum','api'])-&gt;group( function () {\n    Route::apiResource('jugadores',  JugadoraController::class);\n    Route::post('logout', [AuthController::class, 'logout']);\n\n});\n</code></pre> <ul> <li>Implementar el controlador AuthController amb els m\u00e8todes login, register i logout:</li> </ul> <pre><code>namespace App\\Http\\Controllers\\Api;\n\nuse Illuminate\\Http\\Request;\nuse App\\Http\\Controllers\\Api\\BaseController as BaseController;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Facades\\Validator;\nuse App\\Models\\User;\n\nclass AuthController extends BaseController\n{\n    public function login(Request $request)\n    {\n        if (Auth::attempt(['email' =&gt; $request-&gt;email, 'password' =&gt; $request-&gt;password])){\n            $authUser = Auth::user();\n            $result['token'] =  $authUser-&gt;createToken('MyAuthApp')-&gt;plainTextToken;\n            $result['name'] =  $authUser-&gt;name;\n\n            return $this-&gt;sendResponse($result, 'User signed in');\n        }\n        return $this-&gt;sendError('Unauthorised.', ['error'=&gt;'incorrect Email/Password']);\n    }\n    public function register(Request $request)\n    {\n        $validator = Validator::make($request-&gt;all(), [\n            'name' =&gt; 'required',\n            'email' =&gt; 'required|email',\n            'password' =&gt; 'required',\n            'confirm_password' =&gt; 'required|same:password',\n        ]);\n\n        if ($validator-&gt;fails()){\n            return $this-&gt;sendError('Error validation', $validator-&gt;errors());\n        }\n\n        try {\n            $input = $request-&gt;all();\n            $input['password'] = bcrypt($input['password']);\n            $user = User::create($input);\n            $result['token'] =  $user-&gt;createToken('MyAuthApp')-&gt;plainTextToken;\n            $result['name'] =  $user-&gt;name;\n\n            return $this-&gt;sendResponse($result, 'User created successfully.');\n        } catch (\\Exception $e) {\n            return $this-&gt;sendError('Registration Error' , $e-&gt;getMessage());\n        }\n    }\n    public function logout(Request $request)\n    {\n\n        $user = request()-&gt;user(); //or Auth::user()\n        $user-&gt;tokens()-&gt;where('id', $user-&gt;currentAccessToken()-&gt;id)-&gt;delete();\n        $success['name'] =  $user-&gt;name;\n         return $this-&gt;sendResponse($success, 'User successfully signed out.');\n    }\n\n}\n</code></pre>"},{"location":"10laravelRestul.html#pas-5-documentacio-amb-swagger","title":"Pas 5: Documentaci\u00f3 amb Swagger","text":"<ul> <li>Instal\u00b7la el paquet l5-swagger:</li> </ul> <pre><code>composer require \"darkaonline/l5-swagger\"\nphp artisan vendor:publish --provider \"L5Swagger\\L5SwaggerServiceProvider\"\n</code></pre> <ul> <li>Afegeix les anotacions OpenAPI als controladors, models i requests:</li> </ul> <p>app/Http/Controllers/Controller.php <pre><code>/**\n * @OA\\Info(\n *    title=\"Futbol Femeni API Documentation\",\n *    version=\"1.0.0\",\n * )\n * @OA\\PathItem(path=\"/api\")\n**  \n * @OA\\SecurityScheme(\n *     securityScheme=\"bearerAuth\",\n *     type=\"http\",\n *     scheme=\"bearer\",\n *     bearerFormat=\"JWT\"\n * )\n */\n</code></pre></p> <ul> <li>Genera les annotacions per al login:    </li> </ul> <pre><code>/**\n     * @OA\\Post(\n     *     path=\"/api/login\",\n     *     summary=\"Autenticaci\u00f3 de l'usuari\",\n     *     tags={\"Autenticaci\u00f3\"},\n     *     @OA\\RequestBody(\n     *         required=true,\n     *         @OA\\JsonContent(\n     *             required={\"email\", \"password\"},\n     *             @OA\\Property(property=\"email\", type=\"string\", format=\"email\", example=\"1@manager.com\"),\n     *             @OA\\Property(property=\"password\", type=\"string\", example=\"1234\"),\n     *         )\n     *     ),\n     *     @OA\\Response(\n     *         response=200,\n     *         description=\"Login correcte\",\n     *         @OA\\JsonContent(\n     *             @OA\\Property(property=\"success\", type=\"boolean\", example=true),\n     *             @OA\\Property(property=\"data\", type=\"object\",\n     *                 @OA\\Property(property=\"token\", type=\"string\", example=\"jwt-token\"),\n     *                 @OA\\Property(property=\"name\", type=\"string\", example=\"John Doe\")\n     *             ),\n     *             @OA\\Property(property=\"message\", type=\"string\", example=\"User signed in\")\n     *         )\n     *     ),\n     *     @OA\\Response(\n     *         response=401,\n     *         description=\"No autoritzat\",\n     *         @OA\\JsonContent(\n     *             @OA\\Property(property=\"success\", type=\"boolean\", example=false),\n     *             @OA\\Property(property=\"message\", type=\"string\", example=\"Unauthorised.\"),\n     *             @OA\\Property(property=\"info\", type=\"object\",\n     *                 @OA\\Property(property=\"error\", type=\"string\", example=\"incorrect Email/Password\")\n     *             )\n     *         )\n     *     )\n     * )\n     */\n</code></pre> <ul> <li>Executa la comanda per generar la documentaci\u00f3:</li> </ul> <pre><code>php artisan l5-swagger:generate\n</code></pre> <ul> <li>Accedeix a la documentaci\u00f3 a trav\u00e9s de la URL configurada en config/l5-swagger.php (per defecte /api/documentation).</li> <li>Genera les annotacions per al model de Jugadora.</li> </ul> <pre><code>  /**\n* @OA\\Schema(\n*     schema=\"Jugadora\",\n*     description=\"Esquema del model Jugadora\",\n*     @OA\\Property(property=\"id\", type=\"integer\", description=\"ID de la jugadora\"),\n*     @OA\\Property(property=\"posicio\", type=\"string\", description=\"Posici\u00f3 de la jugadora\"),\n*     @OA\\Property(property=\"dorsal\", type=\"integer\", description=\"Dorsal de la jugadora\"),\n*     @OA\\Property(property=\"equip_id\", type=\"integer\", description=\"ID de l'equip de la jugadora\"),\n*     @OA\\Property(property=\"nom\", type=\"string\", description=\"Nom de la jugadora\"),\n*     @OA\\Property(property=\"foto\", type=\"string\", description=\"URL de la foto de la jugadora\"),\n*     @OA\\Property(property=\"data_naixement\", type=\"string\", format=\"date\", description=\"Data de naixement de la jugadora\"),\n*     @OA\\Property(property=\"created_at\", type=\"string\", format=\"date-time\", description=\"Data de creaci\u00f3 del registre\"),\n*     @OA\\Property(property=\"updated_at\", type=\"string\", format=\"date-time\", description=\"Data d'actualitzaci\u00f3 del registre\")\n* )\n  */\n</code></pre> <ul> <li>Genera les annotacions per al request</li> </ul> <pre><code>/**\n * @OA\\Schema(\n *     schema=\"JugadoraRequest\",\n *     description=\"Validaci\u00f3 per a la creaci\u00f3 i actualitzaci\u00f3 de jugadores\",\n *     required={\"nom\", \"posicio\", \"equip_id\", \"data_naixement\"},\n *     @OA\\Property(property=\"nom\", type=\"string\", maxLength=255, description=\"Nom de la jugadora\", example=\"Maria L\u00f3pez\"),\n *     @OA\\Property(\n *         property=\"posicio\",\n *         type=\"string\",\n *         enum={\"defensa\", \"migcampista\", \"davantera\", \"porter\"},\n *         description=\"Posici\u00f3 de la jugadora\",\n *         example=\"davantera\"\n *     ),\n *     @OA\\Property(property=\"equip_id\", type=\"integer\", description=\"ID de l'equip de la jugadora\", example=1),\n *     @OA\\Property(\n *         property=\"data_naixement\",\n *         type=\"string\",\n *         format=\"date\",\n *         description=\"Data de naixement de la jugadora (ha de tenir entre 16 i 100 anys)\",\n *         example=\"2002-05-15\"\n *     ),\n *     @OA\\Property(\n *         property=\"foto\",\n *         type=\"string\",\n *         format=\"binary\",\n *         description=\"Foto de la jugadora en format PNG (opcional, m\u00e0xim 2MB)\"\n *     )\n * )\n */\n</code></pre> <ul> <li>Genera les annotacions per al json resource</li> </ul> <pre><code>  /**\n* @OA\\Schema(\n*     schema=\"JugadoraResource\",\n*     description=\"Esquema del recurs Jugadora\",\n*     @OA\\Property(property=\"id\", type=\"integer\", description=\"Identificador de la jugadora\"),\n*     @OA\\Property(property=\"nom\", type=\"string\", description=\"Nom de la jugadora\"),\n*     @OA\\Property(property=\"equip\", type=\"string\", description=\"Nom de l'equip de la jugadora\"),\n*     @OA\\Property(property=\"posicio\", type=\"string\", enum={\"defensa\", \"migcampista\", \"davantera\", \"porter\"}, description=\"Posici\u00f3 de la jugadora\"),\n*     @OA\\Property(property=\"dorsal\", type=\"integer\", description=\"Dorsal de la jugadora\"),\n*     @OA\\Property(property=\"edat\", type=\"integer\", description=\"Edat de la jugadora\"),\n* )\n  */\n</code></pre> <ul> <li>Genera les annotacions per a la resta de m\u00e8todes de l'API.</li> </ul> <pre><code>namespace App\\Http\\Controllers\\Api;\n\nuse App\\Http\\Requests\\JugadoraRequest;\nuse App\\Models\\Jugadora;\n\nclass JugadoraController extends BaseController\n{\n\n    /**\n     * @OA\\Get(\n     *     path=\"/api/jugadores\",\n     *     summary=\"Llista totes les jugadores amb paginaci\u00f3\",\n     *     tags={\"Jugadores\"},\n     *     security={{\"bearerAuth\":{}}},\n     *     @OA\\Response(\n     *         response=200,\n     *         description=\"Llista de jugadores\",\n     *         @OA\\JsonContent(\n     *             @OA\\Property(property=\"data\", type=\"array\",\n     *                 @OA\\Items(ref=\"#/components/schemas/JugadoraResource\")\n     *             ),\n     *             @OA\\Property(property=\"links\", type=\"object\",\n     *                 @OA\\Property(property=\"first\", type=\"string\", example=\"http://localhost/api/jugadores?page=1\"),\n     *                 @OA\\Property(property=\"last\", type=\"string\", example=\"http://localhost/api/jugadores?page=3\"),\n     *                 @OA\\Property(property=\"prev\", type=\"string\", example=\"null\"),\n     *                 @OA\\Property(property=\"next\", type=\"string\", example=\"http://localhost/api/jugadores?page=2\")\n     *             ),\n     *             @OA\\Property(property=\"meta\", type=\"object\",\n     *                 @OA\\Property(property=\"current_page\", type=\"integer\", example=1),\n     *                 @OA\\Property(property=\"from\", type=\"integer\", example=1),\n     *                 @OA\\Property(property=\"last_page\", type=\"integer\", example=3),\n     *                 @OA\\Property(property=\"path\", type=\"string\", example=\"http://localhost/api/jugadores\"),\n     *                 @OA\\Property(property=\"per_page\", type=\"integer\", example=15),\n     *                 @OA\\Property(property=\"to\", type=\"integer\", example=15),\n     *                 @OA\\Property(property=\"total\", type=\"integer\", example=45)\n     *             )\n     *         )\n     *     )\n     * )\n     */\n\n    public function index()\n    {\n        return Jugadora::paginate(10);\n    }\n\n    /**\n     * @OA\\Post(\n     *     path=\"/api/jugadores\",\n     *     summary=\"Crea una nova jugadora\",\n     *     tags={\"Jugadores\"},\n     *     security={{\"bearerAuth\":{}}},\n     *     @OA\\RequestBody(\n     *         required=true,\n     *         @OA\\JsonContent(ref=\"#/components/schemas/JugadoraRequest\")\n     *     ),\n     *     @OA\\Response(\n     *         response=201,\n     *         description=\"Jugadora creada amb \u00e8xit\",\n     *         @OA\\JsonContent(ref=\"#/components/schemas/JugadoraResource\")\n     *     )\n     * )\n     */\n    public function store(JugadoraRequest $request)\n    {\n        $jugadora = Jugadora::create($request-&gt;validated());\n        return $this-&gt;sendResponse($jugadora, 'Jugadora Creada amb \u00e8xit', 201);\n    }\n\n    /**\n     * @OA\\Get(\n     *     path=\"/api/jugadores/{id}\",\n     *     summary=\"Mostra una jugadora\",\n     *     tags={\"Jugadores\"},\n     *     security={{\"bearerAuth\":{}}},\n     *     @OA\\Parameter(\n     *         name=\"id\",\n     *         in=\"path\",\n     *         description=\"ID de la jugadora\",\n     *         required=true,\n     *         @OA\\Schema(type=\"integer\")\n     *     ),\n     *     @OA\\Response(\n     *         response=200,\n     *         description=\"Jugadora recuperada amb \u00e8xit\",\n     *         @OA\\JsonContent(ref=\"#/components/schemas/JugadoraResource\")\n     *     )\n     * )\n     */\n\n    public function show(Jugadora $jugadora)\n    {\n        return $this-&gt;sendResponse($jugadora, 'Jugadora Recuperada amb \u00e8xit', 201);\n    }\n\n    /**\n     * @OA\\Put(\n     *     path=\"/api/jugadores/{id}\",\n     *     summary=\"Actualitza una jugadora\",\n     *     tags={\"Jugadores\"},\n     *     security={{\"bearerAuth\":{}}},\n     *     @OA\\Parameter(\n     *         name=\"id\",\n     *         in=\"path\",\n     *         description=\"ID de la jugadora\",\n     *         required=true,\n     *         @OA\\Schema(type=\"integer\")\n     *     ),\n     *     @OA\\RequestBody(\n     *         required=true,\n     *         @OA\\JsonContent(ref=\"#/components/schemas/JugadoraRequest\")\n     *     ),\n     *     @OA\\Response(\n     *         response=200,\n     *         description=\"Jugadora actualitzada amb \u00e8xit\",\n     *         @OA\\JsonContent(ref=\"#/components/schemas/JugadoraResource\")\n     *     )\n     * )\n     */\n\n    public function update(JugadoraRequest $request, Jugadora $jugadora)\n    {\n        $jugadora-&gt;update($request-&gt;validated());\n        return $this-&gt;sendResponse($jugadora, 'Jugadora Actualitzada amb \u00e8xit', 201);\n    }\n\n    /**\n     * @OA\\Delete(\n     *     path=\"/api/jugadores/{id}\",\n     *     summary=\"Elimina una jugadora\",\n     *     tags={\"Jugadores\"},\n     *     security={{\"bearerAuth\":{}}}, \n     *     @OA\\Parameter(\n     *         name=\"id\",\n     *         in=\"path\",\n     *         description=\"ID de la jugadora\",\n     *         required=true,\n     *         @OA\\Schema(type=\"integer\")\n     *     ),\n     *     @OA\\Response(\n     *         response=200,\n     *         description=\"Jugadora eliminada amb \u00e8xit\"\n     *     )\n     * )\n     */\n\n    public function destroy(Jugadora $jugadora)\n    {\n        $jugadora-&gt;delete();\n        return $this-&gt;sendResponse(null, 'Jugadora Eliminada amb \u00e8xit', 201);\n    }\n}\n</code></pre>"},{"location":"10laravelRestul.html#exercici","title":"Exercici","text":""},{"location":"10laravelRestul.html#enunciat-creacio-duna-api-i-la-seva-documentacio","title":"Enunciat: Creaci\u00f3 d'una API i la seva documentaci\u00f3","text":"<p>Aquest exercici consisteix a crear una API per gestionar les taules que no s\u00f3n <code>jugadores</code> i documentar-la correctament utilitzant Swagger (<code>l5-swagger</code>). Segueix els passos indicats per implementar i documentar les operacions CRUD i altres funcionalitats espec\u00edfiques.</p>"},{"location":"10laravelRestul.html#1-entitats-a-gestionar","title":"1. Entitats a gestionar","text":"<ul> <li>Estadis</li> <li>Equips</li> <li>Partits</li> </ul>"},{"location":"10laravelRestul.html#2-endpoints","title":"2. Endpoints","text":"<p>Implementa els seg\u00fcents endpoints per a cada entitat, seguint els est\u00e0ndards REST:</p> <ul> <li><code>GET /api/{resource}</code>: Retorna una llista paginada de recursos.</li> <li><code>POST /api/{resource}</code>: Crea un nou recurs.</li> <li><code>GET /api/{resource}/{id}</code>: Retorna un recurs espec\u00edfic.</li> <li><code>PUT /api/{resource}/{id}</code>: Actualitza un recurs espec\u00edfic.</li> <li><code>DELETE /api/{resource}/{id}</code>: Elimina un recurs espec\u00edfic.</li> </ul>"},{"location":"10laravelRestul.html#3-documentacio-amb-swagger-l5-swagger","title":"3. Documentaci\u00f3 amb Swagger (<code>l5-swagger</code>)","text":"<ul> <li>Defineix els esquemes per a cada entitat a la documentaci\u00f3 Swagger.</li> <li>Afegeix anotacions als controladors per documentar els endpoints creats.</li> </ul>"},{"location":"10recuperacio.html","title":"Exercicis de recuperaci\u00f3 de PHP","text":""},{"location":"10recuperacio.html#damero","title":"DAMERO","text":""},{"location":"10recuperacio.html#part-1-pintar-tauler","title":"Part 1. Pintar Tauler","text":""},{"location":"10recuperacio.html#exercici-11-pintar-tauler","title":"Exercici 1.1 Pintar Tauler","text":"<p>Fes un programa que pinte un tauler de damas. El tauler ha de ser de 8x8 i ha de ser de colors. Pots utilitzar la seg\u00fcent taula de colors:</p> <pre><code>body {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #f0f0f0;\n}\n\n.taula-de-dames {\n    display: grid;\n    grid-template-columns: repeat(8, 50px);\n    grid-template-rows: repeat(8, 50px);\n    gap: 2px;\n}\n\n.taula-de-dames div {\n    width: 50px;\n    height: 50px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.negre {\n    background-color: #444;\n}\n\n.blanc {\n    background-color: #fff;\n}\n</code></pre> <p>Partim del seg\u00fcent fitxer <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Taula de Dames&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"../css/damero.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div class=\"container\"&gt;\n    &lt;div class=\"taula-de-dames\"&gt;\n        &lt;?= $partida-&gt;getTauler() ?&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&lt;form id=\"movimentForm\" action=\"index.php\" method=\"POST\" style=\"display:none;\"&gt;\n    &lt;input type=\"hidden\" name=\"origenFila\" id=\"origenFila\"&gt;\n    &lt;input type=\"hidden\" name=\"origenColumna\" id=\"origenColumna\"&gt;\n    &lt;input type=\"hidden\" name=\"destinoFila\" id=\"destinoFila\"&gt;\n    &lt;input type=\"hidden\" name=\"destinoColumna\" id=\"destinoColumna\"&gt;\n&lt;/form&gt;\n&lt;script src=\"../javascript/moviment.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <p>Guarda el fitxer com a <code>tauler.view.php</code> refer\u00e8ncia-lo des de <code>index.php</code>.</p>"},{"location":"10recuperacio.html#exercici-12-classe-tauler","title":"Exercici 1.2 Classe Tauler","text":"<p>Crea una classe <code>Tauler</code> que siga capa\u00e7 de pintar el tauler de la forma que s'ha indicat en l'exercici anterior. La classe ha de tindre un m\u00e8tode <code>__toString</code> que pinte el tauler.</p> <p>A m\u00e9s la classe tauler acceptar\u00e0 el par\u00e0metre <code>tamany</code> que per defecte ser\u00e0 8. La classe anir\u00e0 dins d'un  directori <code>classes</code>.</p> <p>Utilitza esta classe des de la vista tauler per a pintar el tauler.</p>"},{"location":"10recuperacio.html#exercici-13-classe-casella","title":"Exercici 1.3 Classe casella","text":"<p>Crea una classe <code>Casella</code> que represente una casella del tauler. La classe tindr\u00e0 un atribut <code>color</code> que ser\u00e0 <code>blanc</code> o <code>negre</code> i un m\u00e8tode <code>__toString</code> que pintar\u00e0 la casella. A m\u00e9s tindr\u00e0 un atribut  <code>ocupant</code> que ser\u00e0 <code>null</code> si est\u00e0 buida, o <code>jugador1</code>, <code>jugador2</code>. Tam b\u00e9 tindr\u00e0 un atribut <code>fila</code> i <code>columna</code> que indicar\u00e0 la posici\u00f3 de la casella.</p>"},{"location":"10recuperacio.html#exercici-13-posicio-inicial","title":"Exercici 1.3 Posici\u00f3 inicial","text":"<p>En la classe <code>Tauler</code>, crea un m\u00e8tode <code>taulerInicial</code> per inicialitzar el tauler amb fitxes per als dos jugadors en les posicions correctes. </p> <p>Hauras de crear un array en el constructor de la classe <code>Tauler</code> per a guardar les caselles.</p> <p><pre><code>class Tauler {\n    private $tamany; // Tamany del tauler, t\u00edpicament 8 per a dames\n    private $caselles;\n\n    public function __construct($tamany = 8) {\n        $this-&gt;tamany = $tamany;\n        $this-&gt;inicialitzarCaselles();\n    }\n</code></pre> Crea un m\u00e8tode per obtenir les caselles del tauler.</p> <p>Utilitza aquest .css actualitzat.</p> <pre><code>body {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nbackground-color: #f0f0f0;\n}\n\n.taula-de-dames {\ndisplay: grid;\ngrid-template-columns: repeat(8, 60px); /* Ajusta la mida de les caselles */\ngrid-template-rows: repeat(8, 60px);\ngap: 2px;\n}\n\n.negre {\nbackground-color: #769656; /* Color verd fosc per a les caselles jugables */\n}\n\n.blanc {\nbackground-color: #eeeed2; /* Color clar per a les caselles no jugables */\n}\n\n.taula-de-dames div.negre, .taula-de-dames div.blanc {\nwidth: 60px; /* Ajusta la mida de les caselles */\nheight: 60px;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nposition: relative; /* Permet posicionament absolut dins */\n}\n\n.taula-de-dames div.negre::before, .taula-de-dames div.blanc::before {\ncontent: '';\nwidth: 80%; /* Ajusta la mida del marcador de la fitxa */\nheight: 80%; /* Ajusta la mida del marcador de la fitxa */\nborder-radius: 50%;\nposition: absolute;\n}\n\n.taula-de-dames div.negre.fitxa-jugador1::before {\nbackground-color: #fff; /* Color de les fitxes del jugador 1 */\nbox-shadow: 0 2px 4px rgba(0,0,0,0.3);\n}\n\n.taula-de-dames div.negre.fitxa-jugador2::before {\nbackground-color: #000; /* Color de les fitxes del jugador 2 */\nbox-shadow: 0 2px 4px rgba(255,255,255,0.3);\n}\n</code></pre>"},{"location":"10recuperacio.html#exercici-14-moviment-de-fitxes","title":"Exercici 1.4 Moviment de fitxes","text":"<p>Crea un m\u00e8tode <code>moureFitxa</code> en la classe <code>Tauler</code> que reba la posici\u00f3 inicial i la posici\u00f3 final de la fitxa a moure. El m\u00e8tode comprovar\u00e0 si el moviment \u00e9s v\u00e0lid i si ho \u00e9s, mour\u00e0 la fitxa. S'ha de comprovar que les coordenades estiguen dins del tauler, que la casella de dest\u00ed estiga lliure i que el moviment \u00e9s cap a davant. Podrem comprovar que funciona modificant el fitxer <code>index.php</code> de la seg\u00fcent manera:</p> <pre><code>$tauler = new Tauler();\nif ($tauler-&gt;moureFitxa(2, 1, 3, 0)) {\n    echo \"Moviment realitzat amb \u00e8xit!\";\n} else {\n    echo \"Moviment inv\u00e0lid.\";\n}\ninclude_once './views/tauler.view.php';\n</code></pre>"},{"location":"10recuperacio.html#exercici-15-pintar-coordenades","title":"Exercici 1.5 Pintar Coordenades","text":"<p>Pinta les coordenades del tauler. Pots utilitzar la seg\u00fcent taula de colors:</p> <pre><code>.capcalera-coordenades, .buit {\n    width: 60px;\n    height: 30px; /* Ajusta segons necessitat */\n}\n.coordenada {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 60px;\n    height: 30px; /* Ajusta segons necessitat */\n    font-family: Arial, sans-serif;\n    font-size: 14px;\n}\n</code></pre> <p>Cal pintar-les baix i dalt, a la dreta i a l'esquerra.</p>"},{"location":"10recuperacio.html#exercici-16-javascript","title":"Exercici 1.6 Javascript","text":"<p>Afegix el seg\u00fcent javascript i enlla\u00e7a-lo a tauler.view.php</p> <pre><code> document.addEventListener('DOMContentLoaded', () =&gt; {\n    const fitxes = document.querySelectorAll('.fitxa[draggable=\"true\"]');\n    let fitxaArrossegada = null;\n\n    fitxes.forEach(fitxa =&gt; {\n        fitxa.addEventListener('dragstart', e =&gt; {\n            fitxaArrossegada = fitxa;\n            e.dataTransfer.setData('text/plain', null); // Necessari per a alguns navegadors\n        });\n    });\n\n    const caselles = document.querySelectorAll('.casella');\n    caselles.forEach(casella =&gt; { // Corregit per utilitzar forEach amb 'casella'\n        casella.addEventListener('dragover', e =&gt; e.preventDefault()); // Permetre drop\n        casella.addEventListener('drop', function(e) {\n            e.preventDefault();\n            if (!fitxaArrossegada) return; // Comprova si hi ha una fitxa arrossegada\n\n            const origen = fitxaArrossegada.parentNode.dataset;\n            const destino = this.dataset; // Utilitza 'this' per referir-se a la casella sobre la qual es fa el drop\n\n            // Suposem que tens els inputs en el teu formulari per aquests valors\n            document.getElementById('origenFila').value = origen.fila;\n            document.getElementById('origenColumna').value = origen.columna;\n            document.getElementById('destinoFila').value = destino.fila;\n            document.getElementById('destinoColumna').value = destino.columna;\n\n            document.getElementById('movimentForm').submit(); // Env\u00eda el formulari\n        });\n    });\n});\n</code></pre> <p>Afegeix <code>draggable=\"true\"</code> al dibuixar les caselles ocupades.</p> <pre><code>public function __toString()\n{\n\n        $string =  \"&lt;div class='casella {$this-&gt;color}' data-fila='{$this-&gt;fila}' data-columna='{$this-&gt;columna}'&gt;\";\n        if ($this-&gt;ocupant){\n            $classeOcupant = $this-&gt;ocupant ? \"fitxa-{$this-&gt;ocupant}\" : \"\";\n            $draggable = $this-&gt;ocupant ? 'draggable=\"true\"' : '';\n            $string .= \"&lt;div class='fitxa {$this-&gt;color} {$classeOcupant}' {$draggable}&gt;&lt;/div&gt;\";\n        }\n        $string .= \"&lt;/div&gt;\";\n        return $string;\n    }\n</code></pre>"},{"location":"10recuperacio.html#part-2-pintar-tauler","title":"Part 2. Pintar Tauler","text":""},{"location":"10recuperacio.html#exercici-21-sessions-i-composer","title":"Exercici 2.1 Sessions i composer","text":"<p>Afegix en el autoload de composer la carpeta <code>classes</code> per a que pugues utilitzar les classes des de qualsevol lloc del teu projecte amb el namespace Damero</p> <p><pre><code>\"autoload\": {\n        \"psr-4\": {\n            \"Damero\\\\\": \"src/classes\"\n        }\n    },\n</code></pre> Afegix en les classes el namespace <code>Damero</code> i utilitza <code>composer dump-autoload</code> per a que es carreguen les classes.</p> <p>Crea un fitxer <code>load.php</code> que carregue el autoload i que carregue la variable de sessi\u00f3 $_SESSION['tauler'] o la cree si no existeix.</p> <p>Fes que el fitxer <code>index.php</code> carregue el <code>load.php</code>. </p>"},{"location":"10recuperacio.html#exercici-22-formulari-de-moviment","title":"Exercici 2.2: Formulari de moviment","text":"<p>Crea un formulari que permeti moure les fitxes del tauler. El formulari tindr\u00e0 dos camps de text per a les coordenades inicials i finals i un bot\u00f3 per a enviar el formulari.</p> <pre><code>&lt;form id=\"movimentForm\" action=\"index.php\" method=\"POST\" style=\"display:none;\"&gt;\n        &lt;input type=\"hidden\" name=\"origenFila\" id=\"origenFila\"&gt;\n        &lt;input type=\"hidden\" name=\"origenColumna\" id=\"origenColumna\"&gt;\n        &lt;input type=\"hidden\" name=\"destinoFila\" id=\"destinoFila\"&gt;\n        &lt;input type=\"hidden\" name=\"destinoColumna\" id=\"destinoColumna\"&gt;\n&lt;/form&gt;\n</code></pre> <p>El formulari estar\u00e0 ocult i el procesar\u00e0 el javascript en moure una fitxa.</p> <p>Modificat el fitxer <code>index.php</code> per a que processe el moviment i el guarde en la sessi\u00f3.</p> <pre><code>    require_once $_SERVER['DOCUMENT_ROOT'].'/load.php';\n\n    // TODO: Llegir el formulari\n    // TODO : mourefitxa tauler\n</code></pre>"},{"location":"10recuperacio.html#exercici-23-captura","title":"Exercici 2.3: Captura","text":"<p>Utilitza el codi seg\u00fcent per fer una captura i integra-lo dins del procediment per a moure la fitxa <code>moureFitxa</code>. Primer </p> <pre><code>    $diferenciaFila = abs($destiFila - $origenFila);\n    $diferenciaColumna = abs($destiColumna - $origenColumna); \n    if ($diferenciaFila === 2 &amp;&amp; $diferenciaColumna === 2) {\n            // Calcular la posici\u00f3 de la fitxa a ser capturada\n        $filaCaptura = ($origenFila + $destiFila) / 2;\n        $columnaCaptura = ($origenColumna + $destiColumna) / 2;\n        $casellaCaptura = $this-&gt;caselles[$filaCaptura][$columnaCaptura];\n        $casellaOrigen = $this-&gt;caselles[$origenFila][$origenColumna];\n\n        // Comprovar si la casella cont\u00e9 una fitxa de l'oponent\n        if ($casellaCaptura-&gt;ocupant &amp;&amp; $casellaCaptura-&gt;ocupant !== $casellaOrigen-&gt;ocupant) {\n            // Realitzar la captura\n            $casellaCaptura-&gt;ocupant = null;\n        }\n    }\n</code></pre> <p>Extrau el codi que fa moure la fitxa de posici\u00f3 fora d'este procediment a un metode mou que pot utilitzar tamb\u00e9 el procediment de moureFitxa.</p> <pre><code>    $casellaDesti-&gt;ocupant = $casellaOrigen-&gt;ocupant;\n    $casellaOrigen-&gt;ocupant = null;\n    $_SESSION['tauler'] = serialize($this);\n</code></pre> <p>Crea un fitxer  per comen\u00e7ar una partida nova <code>nouJoc.php</code> que carregue el tauler i el guarde en la sessi\u00f3, i redirigixca a <code>index.php</code>.</p>"},{"location":"10recuperacio.html#exercici-24-refactoritzar-codi","title":"Exercici 2.4: Refactoritzar codi","text":"<p>Crea el seg\u00fcent m\u00e8todes en la classe <code>Tauler</code>:</p> <ul> <li><code>coordenades_correctes($origenFila, $origenColumna, $destiFila, $destiColumna)</code> que comprovar\u00e0 si les coordenades estan dins del tauler.</li> <li><code>moviment_correcte($casellaOrigen, $casellaDesti)</code> que comprovar\u00e0 si el moviment \u00e9s correcte.</li> <li><code>captura_correcta($casellaOrigen, $casellaDesti)</code> que comprovar\u00e0 si la captura \u00e9s correcta.</li> </ul> <p>Estos m\u00e8todes llan\u00e7aran una exempci\u00f3 amb el missatge d'error que ser\u00e0 capturada en  <code>moure_fitxa()</code> i es mostrar\u00e0 en el tauler utilitzant el seg\u00fcent css</p> <pre><code>#missatgeError {\n    color: red;\n    text-align: center;\n    margin-bottom: 10px;\n    background-color: #fff3f3;\n    border: 1px solid red;\n    padding: 5px;\n}\n</code></pre> <p>Crea un m\u00e8tode per pintar les coordenades de l'esquerra i de la dreta del tauler.</p>"},{"location":"10recuperacio.html#part-3-partida","title":"Part 3. Partida","text":""},{"location":"10recuperacio.html#exercici-31-classe-partida","title":"Exercici 3.1: Classe Partida","text":"<p>Crea una classe <code>Partida</code> que tinga un tauler i que siga capa\u00e7 de guardar la partida en la sessi\u00f3. La classe tindr\u00e0 un m\u00e8tode <code>nouJoc</code> que crear\u00e0 un nou tauler i el guardar\u00e0 en la sessi\u00f3.</p> <p>Haur\u00e0 de tenir els seg\u00fcents attributs privats:</p> <pre><code>* Tauler\n* Torn Actual\n* Estat de joc \n* Guanyador\n</code></pre> <p>I a banda dels getters, els seg\u00fcents m\u00e8todes:</p> <pre><code>* canviarTorn()\n* moureFitxa($origenFila, $origenColumna, $destiFila, $destiColumna) \n* comprovarEstatJoc()\n</code></pre> <p>Modifica el m\u00e8tode de <code>Tauler</code> <code>moureFitxa</code> per tal que accepte un par\u00e0metre m\u00e9s <code>$tornActual</code>. El m\u00e8tode ara haur\u00e0 de comprovar que el torn actual siga el mateix que el de la fitxa a moure, per a lo que  afegirem un m\u00e8tode m\u00e9s que ser\u00e0 <code>tornCorrecte($casellaOrigen, $tornActual)</code>.</p> <p>Ara la l\u00f2gica del joc recau en el m\u00e8tode moureFitxa de la classe Partidal, i haur\u00e0s de refactoritzar el fitxers <code>load.php</code>,<code>index.php</code> i <code>tauler.view.php</code>.</p>"},{"location":"10recuperacio.html#exercici-32-refactoritzacio","title":"Exercici 3.2: Refactoritzaci\u00f3","text":"<p>Crea un m\u00e8tode en <code>partida</code> <code>finalitzada()</code> que comprove si l'estat del joc \u00e9s <code>acabat</code>.</p> <p>Fes que les exempcions de moviments incorrectes es capturen en el fitxer <code>index.php</code> en conte de en <code>moure_fitxa()</code>.</p> <p>Fes que en la variable que es guarde en la sessi\u00f3 siga la partida en conte del taules.</p> <p>Crea un procediment <code>getColumna()</code> en la classe <code>Casella</code> per mostrar la lletra de la columna, a partide la A.</p>"},{"location":"10recuperacio.html#exercici-33-finalitzacio-del-joc","title":"Exercici 3.3: Finalitzaci\u00f3 del joc","text":"<p>Crea un m\u00e8tode <code>comptarFitxes($jugador)</code> en la classe <code>Tauler</code> que compte el numero de fitxes del jugador que queden en el tauler</p> <p>Afegix els seg\u00fcents m\u00e8todes a la clase <code>Tauler</code></p> <pre><code>    public function potMoure($jugador) {\n        for ($fila = 1; $fila &lt;= $this-&gt;tamany; $fila++) {\n            for ($columna = 1; $columna &lt;= $this-&gt;tamany; $columna++) {\n                $casellaActual = $this-&gt;caselles[$fila][$columna];\n                if ($casellaActual-&gt;ocupant === $jugador) {\n                    if ($this-&gt;comprovarMovimentsFitxa($casellaActual, $jugador)) {\n                        return true; // Hi ha almenys un moviment v\u00e0lid.\n                    }\n                }\n            }\n        }\n        return false; // No s'ha trobat cap moviment v\u00e0lid.\n    }\n\n    private function comprovarMovimentsFitxa($casella, $jugador) {\n        $direccions = $jugador === 'jugador1' ? [[1, -1], [1, 1]] : [[-1, -1], [-1, 1]]; // Direccions de moviment per a cada jugador\n\n        foreach ($direccions as $direccio) {\n            $destiFila = $casella-&gt;fila + $direccio[0];\n            $destiColumna = $casella-&gt;columna + $direccio[1];\n            $desti = $this-&gt;caselles[$destiFila][$destiColumna]??null;\n\n            // Comprovar moviment simple\n            if ($this-&gt;esMovimentValid($casella, $desti)) {\n\n                return true;\n            }\n\n            // Comprovar captura\n            $destiFilaCaptura = $casella-&gt;fila + 2 * $direccio[0];\n            $destiColumnaCaptura = $casella-&gt;columna + 2 * $direccio[1];\n            $desti = $this-&gt;caselles[$destiFilaCaptura][$destiColumnaCaptura]??null;\n            if ($this-&gt;esCapturaValida($casella, $desti)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private function esMovimentValid($origen,$desti) {\n        try {\n            $this-&gt;movimentCorrecte($origen,$desti);\n            return true;\n        } catch (\\Exception $e){\n            return false;\n        }\n\n    }\n\n    private function esCapturaValida($origen,$desti) {\n        try {\n            return $this-&gt;capturaCorrecta($origen,$desti,false);\n        } catch (\\Exception $e){\n            return false;\n        }\n    }\n}\n</code></pre> <p>Modifica el m\u00e0tode <code>capturaCorrecta()</code> per a que accepte un par\u00e0metre boolean <code>$captura</code> per a que efectue la captura realment o simplement comprove si \u00e9s possible.</p> <pre><code>private function capturaCorrecta($casellaOrigen,$casellaDesti,$captura = true): bool {\n    if ($casellaOrigen &amp;&amp; $casellaDesti) {\n        $diferenciaFila = abs($casellaDesti-&gt;fila - $casellaOrigen-&gt;fila);\n        $diferenciaColumna = abs($casellaDesti-&gt;columna - $casellaOrigen-&gt;columna);\n        if ($diferenciaFila === 2 &amp;&amp; $diferenciaColumna === 2) {\n            // Calcular la posici\u00f3 de la fitxa a ser capturada\n            $filaCaptura = ($casellaOrigen-&gt;fila + $casellaDesti-&gt;fila) / 2;\n            $columnaCaptura = ($casellaOrigen-&gt;columna + $casellaDesti-&gt;columna) / 2;\n            $casellaCaptura = $this-&gt;caselles[$filaCaptura][$columnaCaptura];\n\n            // Comprovar si la casella cont\u00e9 una fitxa de l'oponent\n            if ($casellaCaptura-&gt;ocupant &amp;&amp; $casellaCaptura-&gt;ocupant !== $casellaOrigen-&gt;ocupant) {\n                // Realitzar la captura\n                if ($captura) {\n                    $casellaCaptura-&gt;ocupant = null;\n                } else {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n</code></pre> <p>En <code>partida.php</code> modificar el m\u00e8tode <code>comprovarEstatJoc()</code> per a que comprove si hi ha un jugador sense fitxes o el jugador actual pot moure fitxes, i si no pot, finalitzar el joc. </p>"},{"location":"10recuperacio.html#exercici-34-arreplegar-el-moviment-del-formulari","title":"Exercici 3.4: Arreplegar el moviment del formulari","text":"<p>En el fitxer <code>index.php</code> fes que si arriba un m\u00e8tode post, arreplegue les dades del formulari i efectue el moviment. Si arriba un esdeveniment, carrega una variable d'error amb el missatge corresponent i mostra-lo al tauler. Crea una classe <code>Exempcions\\MovimentException.php</code> i substituix totes les exempcions de moviments per esta.</p>"},{"location":"10recuperacio.html#exercici-35-captura-obligada","title":"Exercici 3.5: Captura Obligada","text":"<p>En el procediment <code>moureFitxa</code> de la classe <code>Partida</code> afegix una variable que indique si el jugador ha de capturar una fitxa que haur\u00e0 de retornar el m\u00e8tode<code>comprovarEstatJoc</code> de la classe <code>Tauler</code>.</p> <pre><code>    $obligat = $this-&gt;comprovarEstatJoc();\n</code></pre> <p>Ara el procediment <code>captura</code> haur\u00e0 d'acceptar un camp m\u00e9s per obligar-lo a capturar.</p> <pre><code>$captura = $this-&gt;tauler-&gt;moureFitxa($origenFila, $origenColumna, $destiFila, $destiColumna, $this-&gt;tornActual,$obligat);\n</code></pre> <p>I el m\u00e8tode <code>moureFitxa</code> de la classe <code>Tauler</code> haur\u00e0 de comprovar tamb\u00e9 si el jugador ha de capturar fitxes.</p> <pre><code>    public function moureFitxa($origenFila, $origenColumna, $destiFila, $destiColumna, $tornActual,$obligat =false,$doblecaptura = null) {\n\n        $this-&gt;coordenadesCorrectes($origenFila, $origenColumna, $destiFila, $destiColumna);\n        $casellaOrigen = $this-&gt;caselles[$origenFila][$origenColumna];\n        $this-&gt;tornCorrecte($casellaOrigen, $tornActual,$doblecaptura);\n        $casellaDesti = $this-&gt;caselles[$destiFila][$destiColumna];\n\n        // Verificar que la casella d'origen t\u00e9 una fitxa i la de destinaci\u00f3 est\u00e0 buida\n        if (!$this-&gt;capturaCorrecta($casellaOrigen, $casellaDesti)){\n            if (!$obligat) {\n                $this-&gt;movimentCorrecte($casellaOrigen, $casellaDesti);\n                $this-&gt;mou($casellaOrigen, $casellaDesti);\n                return null;\n            } else {\n                throw new MovementException('Has de capturar');\n            }\n        } else {\n            $this-&gt;mou($casellaOrigen, $casellaDesti);\n            return $casellaDesti;\n        }\n    }\n\n    public function potMoure($jugador) {\n        $teCaptures = false;\n\n        for ($fila = 1; $fila &lt;= $this-&gt;tamany; $fila++) {\n            for ($columna = 1; $columna &lt;= $this-&gt;tamany; $columna++) {\n                $casellaActual = $this-&gt;caselles[$fila][$columna];\n                if ($casellaActual-&gt;ocupant === $jugador) {\n                    // Primer, comprova si hi ha captures disponibles per aquesta fitxa\n                    if ($this-&gt;teCapturesDisponibles($casellaActual)) {\n                        $teCaptures = true;\n                    }\n                }\n            }\n        }\n        if ($teCaptures) {\n            // Si hi ha captures disponibles, el jugador ha de capturar\n            return 1;\n        }\n        for ($fila = 1; $fila &lt;= $this-&gt;tamany; $fila++) {\n            for ($columna = 1; $columna &lt;= $this-&gt;tamany; $columna++) {\n                $casellaActual = $this-&gt;caselles[$fila][$columna];\n                if ($casellaActual-&gt;ocupant === $jugador) {\n                    if ($this-&gt;comprovarMovimentsFitxa($casellaActual)) {\n                        return 2; // Hi ha almenys un moviment v\u00e0lid.\n                    }\n                }\n            }\n        }\n        return 0; // No s'ha trobat cap moviment v\u00e0lid.\n    }\n\n    public function teCapturesDisponibles($casella) {\n        $direccions = $this-&gt;obtenirMovimentsPosibles($casella-&gt;ocupant);\n        foreach ($direccions as $direccio) {\n            $destiFilaCaptura = $casella-&gt;fila + 2 * $direccio[0];\n            $destiColumnaCaptura = $casella-&gt;columna + 2 * $direccio[1];\n            $desti = $this-&gt;caselles[$destiFilaCaptura][$destiColumnaCaptura]??null;\n            if ( $this-&gt;capturaCorrecta($casella,$desti,false)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private function obtenirMovimentsPosibles($jugador) {\n        // Retorna les direccions de captura basades en el jugador\n        // Aix\u00f2 pot variar si est\u00e0s implementant dames que poden moure's/capturar en qualsevol direcci\u00f3\n        return $jugador === 'jugador2' ? [[1, -1], [1, 1]] : [[-1, -1], [-1, 1]];\n    }\n</code></pre>"},{"location":"10solucions.html","title":"Solucions","text":""},{"location":"10solucions.html#tema-2-introduccio-a-php","title":"Tema 2: Introducci\u00f3 a PHP","text":""},{"location":"10solucions.html#exercici-1-manipulacio-de-variables-i-operadors","title":"Exercici 1: Manipulaci\u00f3 de Variables i Operadors","text":"<p>Assigna m\u00faltiples variables i utilitza operadors aritm\u00e8tics i l\u00f2gics. Mostra el resultat de cada operaci\u00f3.</p> <pre><code>&lt;html&gt;\n&lt;?php \n    $a = 10;\n    $b = 5;\n    $c = 3;\n?&gt;    \n&lt;body&gt;\n\n    &lt;table style='border: 1px solid'&gt;\n        &lt;thead&gt;\n            &lt;tr&gt;\n                &lt;th&gt;Operaci\u00f3&lt;/th&gt;\n                &lt;th&gt;a i b&lt;/th&gt;\n                &lt;th&gt;b i c&lt;/th&gt;\n                &lt;th&gt;a i c&lt;/th&gt;\n            &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n            &lt;tr&gt;\n                &lt;td&gt;+&lt;/td&gt;\n                &lt;td&gt;&lt;?= $a+$b ?&gt;&lt;/td&gt;\n                &lt;td&gt;&lt;?= $b+$c ?&gt;&lt;/td&gt;\n                &lt;td&gt;&lt;?= $a+$c ?&gt;&lt;/td&gt;\n            &lt;/tr&gt; \n            &lt;tr&gt;&lt;td&gt;-&lt;/td&gt;&lt;td&gt;&lt;?= $a-$b ?&gt;&lt;/td&gt;&lt;td&gt;&lt;?= $b-$c ?&gt;&lt;/td&gt;&lt;td&gt;&lt;?= $a-$c ?&gt;&lt;/td&gt;&lt;/tr&gt; \n            &lt;tr&gt;&lt;td&gt;*&lt;/td&gt;&lt;td&gt;&lt;?= $a*$b ?&gt;&lt;/td&gt;&lt;td&gt;&lt;?= $b*$c ?&gt;&lt;/td&gt;&lt;td&gt;&lt;?= $a*$c ?&gt;&lt;/td&gt;&lt;/tr&gt; \n            &lt;tr&gt;&lt;td&gt;/&lt;/td&gt;&lt;td&gt;&lt;?= $a/$b ?&gt;&lt;/td&gt;&lt;td&gt;&lt;?= $b/$c ?&gt;&lt;/td&gt;&lt;td&gt;&lt;?= $a/$c ?&gt;&lt;/td&gt;&lt;/tr&gt; \n        &lt;/tbody&gt;        \n    &lt;/table&gt; \n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"10solucions.html#exercici-2-control-de-flux-amb-bucles","title":"Exercici 2: Control de Flux amb Bucles","text":"<p>Utilitza un bucle <code>for</code> per imprimir els n\u00fameros parells del 0 al 20. Fes-ho tamb\u00e9 amb un bucle <code>while</code>.</p> <pre><code> &lt;html&gt;\n    &lt;body&gt;\n        &lt;ul&gt;\n            &lt;?php\n            for($i=2;$i&lt;20;$i=$i+2){\n            ?&gt;    \n                &lt;li&gt;&lt;?= $i ?&gt;&lt;/li&gt;\n            &lt;?php    \n            }\n            ?&gt;\n            &lt;?php\n\n            do {\n                echo \"&lt;li&gt;$i&lt;/li&gt;\";\n                $i = $i -2;\n            } while ($i&gt;0)\n            ?&gt;\n        &lt;/ul&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"10solucions.html#exercici-3-treballar-amb-arrays-i-funcions","title":"Exercici 3: Treballar amb Arrays i Funcions","text":"<p>Escriu una funci\u00f3 que prenga un array de n\u00fameros, calculi la mitjana i retorni el resultat. Utilitza aquesta funci\u00f3 per imprimir la mitjana d'un array de cinc n\u00fameros.</p> <pre><code>&lt;?php \ninclude_once \"helpers/funciones.php\";\n\n$numeros = array(45,3,46,7,8,9,12,90);\n\necho media($numeros);\n</code></pre> <pre><code>&lt;?php\nfunction media(Array $numeros){\n    return array_sum($numeros) / count($numeros);\n}\n</code></pre>"},{"location":"10solucions.html#exercici-4-manipulacio-de-strings","title":"Exercici 4: Manipulaci\u00f3 de Strings","text":"<p>Escriu un script que prenga una cadena de text i compti el nombre de vocals. Imprimeix el resultat.</p> <pre><code>&lt;?php\ninclude_once \"helpers/funciones.php\";\n\n$cadena = \"Men to the left beucase women are always right.AEIOU\";\n\necho contar_vocales(strtolower($cadena));\n</code></pre> <pre><code>&lt;?php\nfunction contar_vocales($sentence){\n    $vocales = ['a','e','i','o','u'];\n    $total = 0;\n    foreach ($vocales as $vocal){\n        $total += substr_count($sentence,$vocal);\n    }\n    return $total;\n}\n</code></pre>"},{"location":"10solucions.html#exercici-5-arrays-multidimensionals","title":"Exercici 5: Arrays Multidimensionals","text":"<p>Crea un array multidimensional que represente una taula de multiplicar del 1 al 5 i imprimeix els resultats en forma de taula.</p> <pre><code>&lt;?php\n\n\n$tabla = [];\n$quantes = 13;\n$fins = 60;\n\n\nfor ($i= 1; $i&lt;= $quantes;$i++){\n    for ($j=1 ; $j&lt;= $fins; $j++){\n        $tabla[$i][$j] = $i * $j;\n    }\n}\n\n?&gt;\n\n&lt;body&gt; \n    &lt;table style='border: 1px solid'&gt;\n        &lt;thead&gt;\n            &lt;tr&gt;\n                &lt;th&gt;Multiplicar&lt;/th&gt;\n                &lt;?php\n                for ($j = 1; $j&lt;= $fins ; $j++){\n                    ?&gt;\n                    &lt;th&gt;&lt;?= $j ?&gt;\n                &lt;?php } ?&gt;\n            &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;     \n            &lt;?php for ($i = 1; $i&lt;= $quantes ; $i++){ ?&gt;\n                &lt;tr&gt;\n                &lt;th&gt;&lt;?= $i ?&gt;&lt;/th&gt;\n                &lt;?php for ($j=1;$j&lt;= $fins; $j++){ ?&gt;\n                    &lt;td&gt;&lt;?= $tabla[$i][$j] ?&gt;&lt;/td&gt;    \n                &lt;?php } ?&gt;\n                &lt;/tr&gt;\n            &lt;?php } ?&gt;\n        &lt;/tbody&gt;        \n    &lt;/table&gt; \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"10solucions.html#exercici-6-utilitzant-match-per-a-categoritzar","title":"Exercici 6: Utilitzant <code>match</code> per a categoritzar","text":"<p>Crea un fitxer que utilitze la instrucci\u00f3 <code>match</code> per categoritzar una variable <code>$nota</code> segons el seg\u00fcent criteri: - Si la nota \u00e9s 10, imprimir \"Excel\u00b7lent\". - Si la nota \u00e9s 8 o 9, imprimir \"Molt b\u00e9\". - Si la nota \u00e9s 5, 6 o 7, imprimir \"B\u00e9\". - Per qualsevol altra nota, imprimir \"Insuficient\".</p> <pre><code>  &lt;html&gt;\n    &lt;body&gt;\n        &lt;?php\n     $nota = 7;\n\n    $qualificacio= match (true) {\n        $nota === 10 =&gt; 'Excel.lent',\n        $nota &gt;= 8 &amp;&amp; $nota &lt; 10 =&gt; 'Molt b\u00e9',\n        $nota &gt;= 5 &amp;&amp; $nota &lt; 8 =&gt; 'B\u00e9',\n        default =&gt; 'Insuficient',\n    };\n\n    echo $qualificacio;\n    ?&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"10solucions.html#exercici-7-validacio-de-formularis","title":"Exercici 7: Validaci\u00f3 de Formularis","text":"<p>Crea un formulari en HTML que permetis als usuaris introduir el seu nom, el correu electr\u00f2nic i un password (dues vegades). Despr\u00e9s de l'enviament del formulari, valida que tots els camps han estat completats i que el correu electr\u00f2nic \u00e9s v\u00e0lid, que el password tinga complexitat i que coincidixen. Mostra un missatge d'error si alguna validaci\u00f3 falla, i si tot \u00e9s correcte, mostra un missatge confirmant que l'usuari s'ha registrat correctament.</p> <pre><code>&lt;?php\n\n// Funci\u00f3 per processar l'entrada\nfunction test_input($data) {\n    $data = trim($data);\n    $data = stripslashes($data);\n    $data = htmlspecialchars($data);\n    return $data;\n}\n\n// Inicialitzar variables d'error i missatge de confirmaci\u00f3\n$error = array();\n$name = $email = $password = $confirmPassword = \"\";\n$successMessage = \"\";\n\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    // Validar el nom\n    if (empty($_POST[\"name\"])) {\n        $error['name'] = \"El nom \u00e9s obligatori\";\n    } else {\n        $name = test_input($_POST[\"name\"]);\n    }\n\n    // Validar el correu electr\u00f2nic\n    if (empty($_POST[\"email\"])) {\n        $error['email'] = \"El correu electr\u00f2nic \u00e9s obligatori\";\n    } else {\n        $email = test_input($_POST[\"email\"]);\n        if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {\n            $error['email'] = \"El format del correu electr\u00f2nic no \u00e9s v\u00e0lid\";\n        }\n    }\n\n    // Validar la contrasenya\n    if (empty($_POST[\"password\"])) {\n        $error['password'] = \"La contrasenya \u00e9s obligat\u00f2ria\";\n    } else {\n        $password = test_input($_POST[\"password\"]);\n        // Comprovar la complexitat de la contrasenya (m\u00ednim 8 car\u00e0cters, maj\u00fascula, min\u00fascula i un n\u00famero)\n        if (!preg_match(\"/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).{8,}$/\", $password)) {\n            $error['password'] = \"La contrasenya ha de tenir almenys 8 car\u00e0cters, una maj\u00fascula, una min\u00fascula i un n\u00famero\";\n        }\n    }\n\n    // Validar la confirmaci\u00f3 de la contrasenya\n    if (empty($_POST[\"confirm_password\"])) {\n        $error['confirm_password'] = \"Has de confirmar la contrasenya\";\n    } else {\n        $confirmPassword = test_input($_POST[\"confirm_password\"]);\n        if ($password !== $confirmPassword) {\n            $error['confirm_password'] = \"Les contrasenyes no coincideixen\";\n        }\n    }\n\n    // Si no hi ha errors, mostrar missatge d'\u00e8xit\n    if (!count($error)) {\n        $successMessage = \"L'usuari s'ha registrat correctament!\";\n    }\n}\n\n\n\n\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Formulari de registre&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;h2&gt;Formulari de registre&lt;/h2&gt;\n\n&lt;!-- Mostrar missatge d'\u00e8xit si l'usuari s'ha registrat --&gt;\n&lt;?php if ($successMessage): ?&gt;\n    &lt;p style=\"color: green;\"&gt;&lt;?= $successMessage; ?&gt;&lt;/p&gt;\n&lt;?php else: ?&gt;\n\n&lt;form method=\"post\" action=\"&lt;?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?&gt;\"&gt;\n    Nom: &lt;input type=\"text\" name=\"name\" value=\"&lt;?= $name; ?&gt;\"&gt;\n    &lt;span style=\"color: red;\"&gt;&lt;?= $error['name']??''; ?&gt;&lt;/span&gt;\n    &lt;br&gt;&lt;br&gt;\n\n    Correu electr\u00f2nic: &lt;input type=\"text\" name=\"email\" value=\"&lt;?php echo $email; ?&gt;\"&gt;\n    &lt;span style=\"color: red;\"&gt;&lt;?php echo $error['email']??''; ?&gt;&lt;/span&gt;\n    &lt;br&gt;&lt;br&gt;\n\n    Contrasenya: &lt;input type=\"password\" name=\"password\"&gt;\n    &lt;span style=\"color: red;\"&gt;&lt;?php echo $error['password']??''; ?&gt;&lt;/span&gt;\n    &lt;br&gt;&lt;br&gt;\n\n    Confirmar contrasenya: &lt;input type=\"password\" name=\"confirm_password\"&gt;\n    &lt;span style=\"color: red;\"&gt;&lt;?php echo $error['confirm_password']??''; ?&gt;&lt;/span&gt;\n    &lt;br&gt;&lt;br&gt;\n\n    &lt;input type=\"submit\" value=\"Registrar\"&gt;\n&lt;/form&gt;\n&lt;?php endif; ?&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"10solucions.html#exercici-8-processament-de-formularis-amb-select-i-radio-buttons","title":"Exercici 8: Processament de Formularis amb Select i Radio Buttons","text":"<p>A partir del formulari newBook.php, fes que el m\u00f2dul i el estat els agafe de valors introdu\u00efts en arrays. Mostra el resultat en una taula.</p> <pre><code>&lt;?php\n// Arrays de valors per a \"M\u00f2dul\" i \"Estat\"\n$modules = [\"mat\" =&gt; \"Matem\u00e0tiques\",\"his\" =&gt; \"Hist\u00f2ria\",\"cie\" =&gt; \"Ci\u00e8ncies\", \"lit\"=&gt;\"Literatura\"];\n$statuses = [\"Disponible\", \"No disponible\", \"Pr\u00f2ximament\"];\n\n// Inicialitzar variables per emmagatzemar els valors introdu\u00efts\n$module = $publisher = $price = $pages = $status = $comments = \"\";\n\n// Comprovar si el formulari ha estat enviat\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $module = $_POST['module'];\n    $publisher = $_POST['publisher'];\n    $price = $_POST['price'];\n    $pages = $_POST['pages'];\n    $status = $_POST['status'];\n    $comments = $_POST['comments'];\n}\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Alta Llibre&lt;/title&gt;\n    &lt;style&gt;\n        .error {\n            color: red;\n        }\n        table, th, td {\n            border: 1px solid black;\n            border-collapse: collapse;\n            padding: 10px;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;form action=\"&lt;?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?&gt;\" method=\"post\" enctype=\"multipart/form-data\"&gt;\n    &lt;div&gt;\n        &lt;label for=\"module\"&gt;M\u00f2dul:&lt;/label&gt;\n        &lt;select id=\"module\" name=\"module\"&gt;\n            &lt;?php foreach ($modules as $key =&gt; $mod): ?&gt;\n                &lt;option value=\"&lt;?php echo $key; ?&gt;\"&gt;&lt;?php echo $mod; ?&gt;&lt;/option&gt;\n            &lt;?php endforeach; ?&gt;\n        &lt;/select&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n        &lt;label for=\"publisher\"&gt;Editorial:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"publisher\" name=\"publisher\" value=\"&lt;?php echo $publisher; ?&gt;\"&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n        &lt;label for=\"price\"&gt;Preu:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"price\" name=\"price\" value=\"&lt;?php echo $price; ?&gt;\"&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n        &lt;label for=\"pages\"&gt;P\u00e0gines:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"pages\" name=\"pages\" value=\"&lt;?php echo $pages; ?&gt;\"&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n        &lt;label for=\"status\"&gt;Estat:&lt;/label&gt;\n        &lt;?php foreach ($statuses as $stat): ?&gt;\n            &lt;input type=\"radio\" name=\"status\" value=\"&lt;?php echo $stat; ?&gt;\" &lt;?php if ($status == $stat) echo \"checked\"; ?&gt;&gt;\n            &lt;?php echo $stat; ?&gt;\n        &lt;?php endforeach; ?&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n        &lt;label for=\"photo\"&gt;Foto:&lt;/label&gt;\n        &lt;input type=\"file\" id=\"photo\" name=\"photo\"&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n        &lt;label for=\"comments\"&gt;Comentaris:&lt;/label&gt;\n        &lt;textarea id=\"comments\" name=\"comments\"&gt;&lt;?php echo $comments; ?&gt;&lt;/textarea&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n        &lt;button type=\"submit\"&gt;Donar d'alta&lt;/button&gt;\n    &lt;/div&gt;\n&lt;/form&gt;\n\n&lt;?php if ($_SERVER[\"REQUEST_METHOD\"] == \"POST\"): ?&gt;\n    &lt;h2&gt;Dades introdu\u00efdes:&lt;/h2&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;th&gt;M\u00f2dul&lt;/th&gt;\n            &lt;th&gt;Editorial&lt;/th&gt;\n            &lt;th&gt;Preu&lt;/th&gt;\n            &lt;th&gt;P\u00e0gines&lt;/th&gt;\n            &lt;th&gt;Estat&lt;/th&gt;\n            &lt;th&gt;Comentaris&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;&lt;?php echo $modules[$module]; ?&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;?php echo $publisher; ?&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;?php echo $price; ?&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;?php echo $pages; ?&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;?php echo $status; ?&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;?php echo $comments; ?&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;?php endif; ?&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"10solucions.html#exercici-9-pujar-imatges-des-de-formulari","title":"Exercici 9: Pujar imatges des de formulari","text":"<p>A partir del formulari anterior fes que es puga pujar una imatge. Mostra la imatge en la taula.</p> <pre><code>&lt;?php\n// Arrays de valors per a \"M\u00f2dul\" i \"Estat\"\n$modules = [\"Matem\u00e0tiques\", \"Hist\u00f2ria\", \"Ci\u00e8ncies\", \"Literatura\"];\n$statuses = [\"Disponible\", \"No disponible\", \"Pr\u00f2ximament\"];\n\n// Inicialitzar variables per emmagatzemar els valors introdu\u00efts\n$module = $publisher = $price = $pages = $status = $comments = $imagePath = \"\";\n$imageError = \"\";\n\n// Comprovar si el formulari ha estat enviat\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $module = $_POST['module'];\n    $publisher = $_POST['publisher'];\n    $price = $_POST['price'];\n    $pages = $_POST['pages'];\n    $status = $_POST['status'];\n    $comments = $_POST['comments'];\n\n    // Gestionar la pujada de la imatge\n    if (isset($_FILES['photo']) &amp;&amp; $_FILES['photo']['error'] == 0) {\n        // Definir el directori on es pujar\u00e0 la imatge\n        $targetDir = \"uploads/\";\n        // Agafar el nom del fitxer\n        $fileName = basename($_FILES[\"photo\"][\"name\"]);\n        $fileType = pathinfo($fileName, PATHINFO_EXTENSION);\n        $permitted_chars = '0123456789abcdefghijklmnopqrstuvwxyz';\n\n        $newFileName = substr(str_shuffle($permitted_chars), 0, 10).\".$fileType\";\n        // Definir la ruta completa per guardar la imatge\n        $targetFilePath = $targetDir . $newFileName;\n        // Comprovar el tipus de fitxer\n\n        // Permetre nom\u00e9s imatges (formats png, jpg, jpeg, gif)\n        $allowedTypes = ['jpg', 'jpeg', 'png', 'gif'];\n        if (in_array(strtolower($fileType), $allowedTypes)) {\n            // Intentar moure la imatge pujada al directori definit\n            if (move_uploaded_file($_FILES[\"photo\"][\"tmp_name\"], $targetFilePath)) {\n                $imagePath = $targetFilePath;\n            } else {\n                $imageError = \"No s'ha pogut pujar la imatge.\";\n            }\n        } else {\n            $imageError = \"Nom\u00e9s es permeten arxius de tipus JPG, JPEG, PNG, GIF.\";\n        }\n    } else {\n        $imageError = \"Si us plau, selecciona una imatge per pujar.\";\n    }\n}\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Alta Llibre&lt;/title&gt;\n    &lt;style&gt;\n        .error {\n            color: red;\n        }\n        table, th, td {\n            border: 1px solid black;\n            border-collapse: collapse;\n            padding: 10px;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;form action=\"&lt;?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?&gt;\" method=\"post\" enctype=\"multipart/form-data\"&gt;\n    &lt;div&gt;\n        &lt;label for=\"module\"&gt;M\u00f2dul:&lt;/label&gt;\n        &lt;select id=\"module\" name=\"module\"&gt;\n            &lt;?php foreach ($modules as $mod): ?&gt;\n                &lt;option value=\"&lt;?php echo $mod; ?&gt;\"&gt;&lt;?php echo $mod; ?&gt;&lt;/option&gt;\n            &lt;?php endforeach; ?&gt;\n        &lt;/select&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n        &lt;label for=\"publisher\"&gt;Editorial:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"publisher\" name=\"publisher\" value=\"&lt;?php echo $publisher; ?&gt;\"&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n        &lt;label for=\"price\"&gt;Preu:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"price\" name=\"price\" value=\"&lt;?php echo $price; ?&gt;\"&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n        &lt;label for=\"pages\"&gt;P\u00e0gines:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"pages\" name=\"pages\" value=\"&lt;?php echo $pages; ?&gt;\"&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n        &lt;label for=\"status\"&gt;Estat:&lt;/label&gt;\n        &lt;?php foreach ($statuses as $stat): ?&gt;\n            &lt;input type=\"radio\" name=\"status\" value=\"&lt;?php echo $stat; ?&gt;\" &lt;?php if ($status == $stat) echo \"checked\"; ?&gt;&gt;\n            &lt;?php echo $stat; ?&gt;\n        &lt;?php endforeach; ?&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n        &lt;label for=\"photo\"&gt;Foto:&lt;/label&gt;\n        &lt;input type=\"file\" id=\"photo\" name=\"photo\"&gt;\n        &lt;span class=\"error\"&gt;&lt;?php echo $imageError; ?&gt;&lt;/span&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n        &lt;label for=\"comments\"&gt;Comentaris:&lt;/label&gt;\n        &lt;textarea id=\"comments\" name=\"comments\"&gt;&lt;?php echo $comments; ?&gt;&lt;/textarea&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n        &lt;button type=\"submit\"&gt;Donar d'alta&lt;/button&gt;\n    &lt;/div&gt;\n&lt;/form&gt;\n\n&lt;?php if ($_SERVER[\"REQUEST_METHOD\"] == \"POST\" &amp;&amp; empty($imageError)): ?&gt;\n    &lt;h2&gt;Dades introdu\u00efdes:&lt;/h2&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;th&gt;M\u00f2dul&lt;/th&gt;\n            &lt;th&gt;Editorial&lt;/th&gt;\n            &lt;th&gt;Preu&lt;/th&gt;\n            &lt;th&gt;P\u00e0gines&lt;/th&gt;\n            &lt;th&gt;Estat&lt;/th&gt;\n            &lt;th&gt;Comentaris&lt;/th&gt;\n            &lt;th&gt;Imatge&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;&lt;?php echo $module; ?&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;?php echo $publisher; ?&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;?php echo $price; ?&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;?php echo $pages; ?&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;?php echo $status; ?&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;?php echo $comments; ?&gt;&lt;/td&gt;\n            &lt;td&gt;\n                &lt;?php if (!empty($imagePath)): ?&gt;\n                    &lt;img src=\"&lt;?php echo $imagePath; ?&gt;\" alt=\"Imatge del llibre\" style=\"width: 100px;\"&gt;\n                &lt;?php else: ?&gt;\n                    Sense imatge\n                &lt;?php endif; ?&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;?php endif; ?&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"10solucions.html#exercici-10-sistema-de-carret-de-compres-sense-base-de-dades","title":"Exercici 10: Sistema de Carret de Compres sense Base de Dades","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Desenvolupa una aplicaci\u00f3 PHP que permeta als usuaris afegir productes a un carret de compres i mostrar el contingut del carret. Utilitza sessions per a mantindre l'estat del carret entre p\u00e0gines.</p> <ol> <li>Requisits:<ul> <li>Crear una p\u00e0gina on l'usuari puga seleccionar productes.</li> <li>Afegir els productes seleccionats a un carret emmagatzemat en una sessi\u00f3.</li> <li>Mostrar un resum del carret amb els productes afegits i les seues quantitats.</li> <li>Permetre que l'usuari elimine productes del carret.</li> </ul> </li> </ol> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Selecci\u00f3 de productes&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Afegir productes al carret&lt;/h1&gt;\n    &lt;form action=\"carret.php\" method=\"POST\"&gt;\n        &lt;label for=\"producte\"&gt;Tria un producte:&lt;/label&gt;\n        &lt;select name=\"producte\" id=\"producte\"&gt;\n            &lt;option value=\"Poma\"&gt;Poma&lt;/option&gt;\n            &lt;option value=\"Pl\u00e0tan\"&gt;Pl\u00e0tan&lt;/option&gt;\n            &lt;option value=\"Taronja\"&gt;Taronja&lt;/option&gt;\n        &lt;/select&gt;\n        &lt;input type=\"submit\" value=\"Afegir al carret\"&gt;\n    &lt;/form&gt;\n    &lt;a href=\"carret.php\"&gt;Veure carret&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <pre><code>&lt;?php\nsession_start();\n\n// Inicialitzar el carret si no existeix\nif (!isset($_SESSION['carret'])) {\n    $_SESSION['carret'] = [];\n}\n\n// Afegir producte al carret si s'ha enviat un producte\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\" &amp;&amp; isset($_POST['producte'])) {\n    $producte = $_POST['producte'];\n    if (isset($_SESSION['carret'][$producte])) {\n        $_SESSION['carret'][$producte]++;\n    } else {\n        $_SESSION['carret'][$producte] = 1;\n    }\n}\n\n// Eliminar producte del carret si s'ha enviat un producte a eliminar\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\" &amp;&amp; isset($_POST['eliminar'])) {\n    $producte = $_POST['eliminar'];\n    unset($_SESSION['carret'][$producte]);\n}\n\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Carret de la compra&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Carret de la compra&lt;/h1&gt;\n    &lt;table&gt;\n        &lt;thead&gt;\n            &lt;tr&gt;\n                &lt;th&gt;Producte&lt;/th&gt;\n                &lt;th&gt;Quantitat&lt;/th&gt;\n                &lt;th&gt;Eliminar&lt;/th&gt;\n            &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n            &lt;?php foreach ($_SESSION['carret'] as $producte =&gt; $quantitat): ?&gt;\n                &lt;tr&gt;\n                    &lt;td&gt;&lt;?php echo $producte; ?&gt;&lt;/td&gt;\n                    &lt;td&gt;&lt;?php echo $quantitat; ?&gt;&lt;/td&gt;\n                    &lt;td&gt;\n                        &lt;form action=\"&lt;?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?&gt;\" method=\"POST\"&gt;\n                            &lt;input type=\"hidden\" name=\"eliminar\" value=\"&lt;?php echo $producte; ?&gt;\"&gt;\n                            &lt;input type=\"submit\" value=\"Eliminar\"&gt;\n                        &lt;/form&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;?php endforeach; ?&gt;\n        &lt;/tbody&gt;\n    &lt;/table&gt;\n    &lt;a href=\"index.php\"&gt;Tornar a la selecci\u00f3 de productes&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"10solucions.html#exercici-11-autenticacio-basica-dusuaris-amb-sessions","title":"Exercici 11: Autenticaci\u00f3 B\u00e0sica d'Usuaris amb Sessions","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Crea una aplicaci\u00f3 PHP que permeta als usuaris iniciar sessi\u00f3 mitjan\u00e7ant un formulari. Utilitza sessions per a mantindre l'estat d'autenticaci\u00f3 de l'usuari i mostrar missatges personalitzats basats en aquest estat.</p> <ol> <li>Requisits:<ul> <li>Crear un formulari d'inici de sessi\u00f3 que sol\u00b7licite el nom d'usuari i la contrasenya.</li> <li>Emmagatzemar l'estat d'autenticaci\u00f3 en una sessi\u00f3 despr\u00e9s de verificar les credencials.</li> <li>Mostrar una p\u00e0gina de benvinguda personalitzada per a l'usuari autenticat.</li> <li>Proporcionar un enlla\u00e7 per a tancar sessi\u00f3 i destruir la sessi\u00f3.</li> </ul> </li> </ol> <pre><code>&lt;?php\nsession_start();\n\n// Inicialitzar variables d'error i missatge de benvinguda\n$error = \"\";\n$welcomeMessage = \"\";\n\n// Comprovar si l'usuari ha enviat el formulari\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    // Comprovar les credencials de l'usuari\n    if ($_POST['username'] == 'usuari' &amp;&amp; $_POST['password'] == 'contrasenya') {\n        // Iniciar sessi\u00f3 i emmagatzemar l'estat d'autenticaci\u00f3\n        $_SESSION['authenticated'] = true;\n        $welcomeMessage = \"Benvingut, \" . $_POST['username'] . \"!\";\n    } else {\n        $error = \"Credencials incorrectes. Si us plau, intenta-ho de nou.\";\n    }\n}\n\n// Tancar sessi\u00f3 si s'ha enviat la sol\u00b7licitud\nif (isset($_GET['logout'])) {\n    session_destroy();\n    header(\"Location: index.php\");\n    exit;\n}\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Inici de sessi\u00f3&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Inici de sessi\u00f3&lt;/h1&gt;\n    &lt;?php if ($_SESSION['authenticated']): ?&gt;\n        &lt;p&gt;&lt;?php echo $welcomeMessage; ?&gt;&lt;/p&gt;\n        &lt;a href=\"index.php?logout=true\"&gt;Tancar sessi\u00f3&lt;/a&gt;\n    &lt;?php else: ?&gt;\n        &lt;form action=\"&lt;?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?&gt;\" method=\"POST\"&gt;\n            &lt;label for=\"username\"&gt;Nom d'usuari:&lt;/label&gt;\n            &lt;input type=\"text\" id=\"username\" name=\"username\"&gt;\n            &lt;br&gt;\n            &lt;label for=\"password\"&gt;Contrasenya:&lt;/label&gt;\n            &lt;input type=\"password\" id=\"password\" name=\"password\"&gt;\n            &lt;br&gt;\n            &lt;input type=\"submit\" value=\"Iniciar sessi\u00f3\"&gt;\n        &lt;/form&gt;\n        &lt;p style=\"color: red;\"&gt;&lt;?php echo $error; ?&gt;&lt;/p&gt;\n    &lt;?php endif; ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"10solucions.html#exercici-12-recordatori-dusuari-amb-cookies","title":"Exercici 12: Recordatori d'Usuari amb Cookies","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Afig una funcionalitat de \"recordar-me\" a l'exercici anterior que emmagatzeme el nom d'usuari en una cookie i permeta a l'usuari ser recordat en futures visites al lloc web.</p> <ol> <li>Requisits:<ul> <li>Afig una opci\u00f3 de \"recordar-me\" al formulari d'inici de sessi\u00f3.</li> <li>Emmagatzemar el nom d'usuari en una cookie quan l'opci\u00f3 \u00e9s seleccionada.</li> <li>Comprovar la cookie en futures visites i iniciar sessi\u00f3 autom\u00e0ticament si la cookie existeix.</li> <li>Assegurar que les cookies es configuren amb atributs de seguretat adequats (<code>HttpOnly</code>, <code>Secure</code>, <code>SameSite</code>).</li> </ul> </li> </ol> <pre><code>&lt;?php\nsession_start();\n\n// Inicialitzar variables d'error i missatge de benvinguda\n$error = \"\";\n$welcomeMessage = \"\";\n\n// Comprovar si l'usuari ha enviat el formulari\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    // Comprovar les credencials de l'usuari\n    if ($_POST['username'] == 'usuari' &amp;&amp; $_POST['password'] == 'contrasenya') {\n        // Iniciar sessi\u00f3 i emmagatzemar l'estat d'autenticaci\u00f3\n        $_SESSION['authenticated'] = true;\n        $welcomeMessage = \"Benvingut, \" . $_POST['username'] . \"!\";\n\n        // Emmagatzemar el nom d'usuari en una cookie si s'ha seleccionat \"recordar-me\"\n        if (isset($_POST['remember'])) {\n            setcookie('username', $_POST['username'], time() + 3600 * 24 * 30, '/', '', true, true);\n        }\n    } else {\n        $error = \"Credencials incorrectes. Si us plau, intenta-ho de nou.\";\n    }\n}\n\n// Comprovar la cookie de recordatori i iniciar sessi\u00f3 autom\u00e0ticament si existeix\nif (!$_SESSION['authenticated'] &amp;&amp; isset($_COOKIE['username'])) {\n    $_SESSION['authenticated'] = true;\n    $welcomeMessage = \"Benvingut, \" . $_COOKIE['username'] . \"!\";\n}\n\n// Tancar sessi\u00f3 si s'ha enviat la sol\u00b7licitud\nif (isset($_GET['logout'])) {\n    session_destroy();\n    header(\"Location: index.php\");\n    exit;\n}\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Inici de sessi\u00f3&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Inici de sessi\u00f3&lt;/h1&gt;\n    &lt;?php if ($_SESSION['authenticated']): ?&gt;\n        &lt;p&gt;&lt;?php echo $welcomeMessage; ?&gt;&lt;/p&gt;\n        &lt;a href=\"index.php?logout=true\"&gt;Tancar sessi\u00f3&lt;/a&gt;\n    &lt;?php else: ?&gt;\n        &lt;form action=\"&lt;?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?&gt;\" method=\"POST\"&gt;\n            &lt;label for=\"username\"&gt;Nom d'usuari:&lt;/label&gt;\n            &lt;input type=\"text\" id=\"username\" name=\"username\" value=\"&lt;?php echo $_COOKIE['username'] ?? ''; ?&gt;\"&gt;\n            &lt;br&gt;\n            &lt;label for=\"password\"&gt;Contrasenya:&lt;/label&gt;\n            &lt;input type=\"password\" id=\"password\" name=\"password\"&gt;\n            &lt;br&gt;\n            &lt;input type=\"checkbox\" id=\"remember\" name=\"remember\"&gt;\n            &lt;label for=\"remember\"&gt;Recorda'm&lt;/label&gt;\n            &lt;br&gt;\n            &lt;input type=\"submit\" value=\"Iniciar sessi\u00f3\"&gt;\n        &lt;/form&gt;\n        &lt;p style=\"color: red;\"&gt;&lt;?php echo $error; ?&gt;&lt;/p&gt;\n    &lt;?php endif; ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"10solucions.html#exercici-13-formulari-de-contacte-amb-proteccio-csrf","title":"Exercici 13: Formulari de Contacte amb Protecci\u00f3 CSRF","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Desenvolupa un formulari de contacte que permeta als usuaris enviar missatges i implementa protecci\u00f3 CSRF per a assegurar que les sol\u00b7licituds siguen leg\u00edtimes.</p> <ol> <li>Requisits:<ul> <li>Crear un formulari de contacte amb camps per al nom, correu electr\u00f2nic i missatge.</li> <li>Generar i emmagatzemar un token CSRF en una sessi\u00f3 quan es carrega el formulari.</li> <li>Incloure el token CSRF com a camp ocult en el formulari.</li> <li>Verificar el token CSRF quan s'envia el formulari i mostrar un missatge de confirmaci\u00f3 si \u00e9s v\u00e0lid.</li> <li>Mostrar un missatge d'error si el token CSRF no \u00e9s v\u00e0lid o no existeix.</li> </ul> </li> </ol> <pre><code>&lt;?php\nsession_start();\n\n// Generar un token CSRF si no existeix\nif (!isset($_SESSION['csrf_token'])) {\n    $_SESSION['csrf_token'] = bin2hex(random_bytes(32));\n}\n\n// Comprovar si l'usuari ha enviat el formulari\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    // Comprovar el token CSRF\n    if (!hash_equals($_SESSION['csrf_token'], $_POST['csrf_token'])) {\n        die(\"Error CSRF\");\n    }\n\n    // Processar el formulari\n    $name = $_POST['name'];\n    $email = $_POST['email'];\n    $message = $_POST['message'];\n    $successMessage = \"Missatge enviat per $name ($email): $message\";\n}\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Formulari de contacte&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Formulari de contacte&lt;/h1&gt;\n    &lt;?php if (isset($successMessage)): ?&gt;\n        &lt;p&gt;&lt;?php echo $successMessage; ?&gt;&lt;/p&gt;\n    &lt;?php else: ?&gt;\n        &lt;form action=\"&lt;?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?&gt;\" method=\"POST\"&gt;\n            &lt;input type=\"hidden\" name=\"csrf_token\" value=\"&lt;?php echo $_SESSION['csrf_token']; ?&gt;\"&gt;\n            &lt;label for=\"name\"&gt;Nom:&lt;/label&gt;\n            &lt;input type=\"text\" id=\"name\" name=\"name\"&gt;\n            &lt;br&gt;\n            &lt;label for=\"email\"&gt;Correu electr\u00f2nic:&lt;/label&gt;\n            &lt;input type=\"email\" id=\"email\" name=\"email\"&gt;\n            &lt;br&gt;\n            &lt;label for=\"message\"&gt;Missatge:&lt;/label&gt;\n            &lt;textarea id=\"message\" name=\"message\"&gt;&lt;/textarea&gt;\n            &lt;br&gt;\n            &lt;input type=\"submit\" value=\"Enviar\"&gt;\n        &lt;/form&gt;\n    &lt;?php endif; ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"10solucions.html#exercici-14-seguiment-dactivitat-de-lusuari-amb-sessions","title":"Exercici 14: Seguiment d'Activitat de l'Usuari amb Sessions","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Crea un sistema que registre les p\u00e0gines visitades per l'usuari durant una sessi\u00f3 i mostre aquesta informaci\u00f3 quan l'usuari visita una p\u00e0gina d'activitat.</p> <ol> <li>Requisits:<ul> <li>Emmagatzemar una llista de p\u00e0gines visitades per l'usuari en una sessi\u00f3.</li> <li>Actualitzar la llista de p\u00e0gines cada vegada que l'usuari visite una nova p\u00e0gina.</li> <li>Crear una p\u00e0gina que mostre l'historial de p\u00e0gines visitades durant la sessi\u00f3 actual.</li> <li>Assegurar que l'historial es restableix quan l'usuari tanca la sessi\u00f3.</li> </ul> </li> </ol> <pre><code>&lt;?php\nsession_start();\n\n// Inicialitzar la llista de p\u00e0gines visitades si no existeix\nif (!isset($_SESSION['pages'])) {\n    $_SESSION['pages'] = [];\n}\n\n// Afegir la p\u00e0gina actual a la llista de p\u00e0gines visitades\n$_SESSION['pages'][] = $_SERVER['REQUEST_URI'];\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Activitat de l'usuari&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Activitat de l'usuari&lt;/h1&gt;\n    &lt;ul&gt;\n        &lt;?php foreach ($_SESSION['pages'] as $page): ?&gt;\n            &lt;li&gt;&lt;?php echo $page; ?&gt;&lt;/li&gt;\n        &lt;?php endforeach; ?&gt;\n    &lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"10solucions.html#exercici-15-creacio-de-la-classe-basica-i-gestio-de-propietats","title":"Exercici 15. Creaci\u00f3 de la Classe B\u00e0sica i Gesti\u00f3 de Propietats","text":"<ul> <li> <p>Crea una classe <code>Persona</code> amb les propietats privades <code>nom</code>, <code>cognoms</code>, i <code>edat</code>. Encapsula aquestes propietats mitjan\u00e7ant getters i setters. Afig els seg\u00fcents m\u00e8todes:</p> <ul> <li><code>getNomComplet(): string</code> \u2013 Retorna el nom complet de la persona.</li> <li><code>estaJubilat(): bool</code> \u2013 Retorna <code>true</code> si l'edat \u00e9s major o igual a 65, <code>false</code> en cas contrari.</li> </ul> </li> <li> <p>Modifica la classe <code>Persona</code> afegint un constructor que assigna nom i cognoms. Si es proporciona un tercer par\u00e0metre, assigna l'edat; en cas contrari, assigna una edat per defecte de 25 anys.</p> </li> <li> <p>Modifica la classe <code>Persona</code> per utilitzar una constant <code>LIMITE_EDAT</code> amb el valor de 66 anys i utilitza-la en el m\u00e8tode <code>estaJubilat</code>.</p> </li> </ul> <pre><code>&lt;?php\nnamespace App\\Models;\nabstract class Persona {\n    private $nom;\n    private $cognoms;\n    private $edat;\n    const LIMITE_EDAT = 66;\n\n    public function __construct($nom, $cognoms, $edat = 25) {\n        $this-&gt;nom = $nom;\n        $this-&gt;cognoms = $cognoms;\n        $this-&gt;edat = $edat;\n    }\n\n    public function getNom() {\n        return $this-&gt;nom;\n    }\n\n    public function getCognoms() {\n        return $this-&gt;cognoms;\n    }\n\n    public function getEdat() {\n        return $this-&gt;edat;\n    }\n\n    public function setNom($nom) {\n        $this-&gt;nom = $nom;\n    }\n\n    public function setCognoms($cognoms) {\n        $this-&gt;cognoms = $cognoms;\n    }\n\n    public function setEdat($edat) {\n        $this-&gt;edat = $edat;\n    }\n\n    public function getNomComplet() {\n        return $this-&gt;nom . ' ' . $this-&gt;cognoms;\n    }\n\n    public function estaJubilat() {\n        return $this-&gt;edat &gt;= self::LIMITE_EDAT;\n    }\n\n    public static function toHtml(Persona $p) {\n        return '&lt;p&gt;' . htmlspecialchars($p-&gt;getNomComplet()) . '&lt;/p&gt;';\n    }\n}\n</code></pre>"},{"location":"10solucions.html#exercici-16-herencia-i-polimorfisme","title":"Exercici 16. Her\u00e8ncia i Polimorfisme","text":"<ul> <li> <p>Crea una classe <code>Empleado</code> que herete de <code>Persona</code>. Afig les seg\u00fcents propietats i m\u00e8todes:</p> <ul> <li><code>private float $sou</code></li> <li><code>private array $telefons</code></li> <li><code>anyadirTelefono(int $telefon): void</code> \u2013 Afig un n\u00famero de tel\u00e8fon a l'array.</li> <li><code>listarTelefonos(): string</code> \u2013 Retorna els n\u00fameros de tel\u00e8fon separats per comes.</li> <li><code>vaciarTelefonos(): void</code> \u2013 Buida l'array de tel\u00e8fons.</li> <li><code>debePagarImpuestos(): bool</code> \u2013 Retorna <code>true</code> si el sou \u00e9s superior a 3333\u20ac, <code>false</code> en cas contrari.</li> </ul> </li> <li> <p>Afig un m\u00e8tode est\u00e0tic <code>toHtml(Empleado $emp): string</code> que genere un codi HTML que mostre el nom complet de l'empleat dins d'un par\u00e0graf i els seus tel\u00e8fons dins d'una llista ordenada.</p> </li> <li>Afig un m\u00e8tode est\u00e0tic <code>toHtml(Persona $p)</code> a la classe Persona que mostre el nom complet de la persona dins d'un par\u00e0graf. Modifica el m\u00e8tode <code>toHtml</code> de <code>Empleado</code> per rebre una <code>Persona</code> com a par\u00e0metre i comprovar si es tracta d'un <code>Empleado</code> amb <code>instanceof</code>.</li> <li>Transforma <code>Persona</code> en una classe abstracta. Redefineix el m\u00e8tode est\u00e0tic <code>toHtml(Persona $p)</code> en totes les seues subclasses. </li> </ul> <pre><code>namespace App\\Models;\nclass Empleado extends Persona {\n    private $sou;\n    private $telefons = [];\n\n    public function __construct($nom, $cognoms, $sou, $edat = 25) {\n        parent::__construct($nom, $cognoms, $edat);\n        $this-&gt;sou = $sou;\n    }\n\n    public function getSou() {\n        return $this-&gt;sou;\n    }\n\n    public function setSou($sou) {\n        $this-&gt;sou = $sou;\n    }\n\n    public function anyadirTelefono($telefon) {\n        $this-&gt;telefons[] = $telefon;\n    }\n\n    public function listarTelefonos() {\n        return implode(', ', $this-&gt;telefons);\n    }\n\n    public function vaciarTelefonos() {\n        $this-&gt;telefons = [];\n    }\n\n    public function debePagarImpuestos() {\n        return $this-&gt;sou &gt; 3333;\n    }\n\n    public static function toHtml(Persona $p) {\n        $html = '&lt;p&gt;' . htmlspecialchars($p-&gt;getNomComplet()) . '&lt;/p&gt;';\n        if ($p instanceof Empleado) {\n            $html .= '&lt;ol&gt;';\n            foreach ($p-&gt;listarTelefonos() as $telefon) {\n                $html .= '&lt;li&gt;' . htmlspecialchars($telefon) . '&lt;/li&gt;';\n            }\n            $html .= '&lt;/ol&gt;';\n        }\n        return $html;\n    }\n}\n</code></pre>"},{"location":"10solucions.html#exercici-17-integracio-despais-de-noms-autoloading-i-composer","title":"Exercici 17. Integraci\u00f3 d'Espais de Noms, Autoloading, i Composer","text":"<ul> <li> <p>Crea una classe <code>Empresa</code> que incloga una propietat amb un array de <code>Empleados</code> . Implementa:</p> <ul> <li><code>public function addWorker(Empleado $t)</code></li> <li><code>public function listWorkersHtml(): string</code> \u2013 Genera la llista de treballadors en format HTML.</li> <li><code>public function getCosteNominas(): float</code> \u2013 Calcula el cost total de les n\u00f2mines.</li> </ul> </li> <li> <p>Configura el projecte PHP amb Composer que utilitze l'autoloading PSR-4.  </p> </li> </ul> <pre><code>&lt;?php\nnamespace App\\Models;\n\nclass Empresa {\n    private $workers = [];\n\n    public function addWorker(Empleado $t) {\n        $this-&gt;workers[] = $t;\n    }\n\n    public function getWorkers(){\n        return $this-&gt;workers;\n    }\n\n\n    public function getCosteNominas() {\n        $total = 0;\n        foreach ($this-&gt;workers as $worker) {\n            if ($worker instanceof Empleado) {\n                $total += $worker-&gt;getSou();\n            }\n        }\n        return $total;\n    }\n\n    public function listWorkersHtml(): string\n    {\n        $html = \"&lt;ul&gt;\";\n        foreach ($this-&gt;empleados as $empleado) {\n            $html .= \"&lt;li&gt;{$empleado-&gt;getNom()} - Salari: {$empleado-&gt;getSalari()}\u20ac&lt;/li&gt;\";\n        }\n        $html .= \"&lt;/ul&gt;\";\n\n        return $html;\n    }\n\n}\n</code></pre> <pre><code>{\n    \"autoload\": {\n        \"psr-4\": {\n            \"App\\\\\": \"src/App\"\n        }\n    },\n    \"require\": {}\n}\n</code></pre> <p>Amb esta estructura de directoris : </p> <pre><code>/projecte\n    /src\n        /App\n            Empresa.php\n            Empleado.php\n    composer.json\n</code></pre> <p>I executar</p> <pre><code>composer dump-autoload\n</code></pre>"},{"location":"10solucions.html#exercici-18-logger","title":"Exercici 18. Logger","text":"<ul> <li> <p>Utilitza la llibreria <code>Monolog</code> per configurar un logger que escriga missatges a un fitxer <code>app.log</code>. Afig funcionalitat perqu\u00e8 el logger registre missatges d'informaci\u00f3 i d'error en diferents arxius segons la gravetat.</p> </li> <li> <p>Configura un logger que escriga missatges de registre tant a un fitxer com a la consola. Prova el logger registrant missatges d'error i advert\u00e8ncia.</p> </li> </ul> <pre><code>&lt;?php\n&lt;?php\n\nnamespace App\\Logger;\n\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\nuse Monolog\\Level;\n\nclass LoggerFactory\n{\n    public static function createLogger(): Logger\n    {\n        $logger = new Logger('app');\n\n        // Handler per a missatges d'informaci\u00f3\n        $infoHandler = new StreamHandler($_SERVER['DOCUMENT_ROOT']. '/logs/info.log', Level::INFO);\n        $logger-&gt;pushHandler($infoHandler);\n\n        // Handler per a missatges d'error\n        $errorHandler = new StreamHandler($_SERVER['DOCUMENT_ROOT'] . '/logs/error.log', Level::ERROR);\n        $logger-&gt;pushHandler($errorHandler);\n\n        return $logger;\n    }\n\n    public static function createConsoleLogger(): Logger\n    {\n        $logger = new Logger('console');\n\n        // Handler per escriure missatges a la consola\n        $consoleHandler = new StreamHandler('php://stdout', Level::WARNING);\n        $logger-&gt;pushHandler($consoleHandler);\n\n        return $logger;\n    }\n}\n</code></pre> <p>Provar el logger</p> <pre><code>&lt;?php\n\nrequire __DIR__ . '/vendor/autoload.php';\n\nuse App\\Logger\\LoggerFactory;\n\n$logger = LoggerFactory::createLogger();\n$consoleLogger = LoggerFactory::createConsoleLogger();\n\n// Registra missatges d'informaci\u00f3 i error\n$logger-&gt;info('Aix\u00f2 \u00e9s un missatge d\\'informaci\u00f3.');\n$logger-&gt;error('Aix\u00f2 \u00e9s un missatge d\\'error.');\n\n// Registra un missatge d'advert\u00e8ncia a la consola\n$consoleLogger-&gt;warning('Aix\u00f2 \u00e9s un advertiment.');\n$consoleLogger-&gt;error('Aix\u00f2 \u00e9s un missatge d\\'error per consola.');\n</code></pre>"},{"location":"10solucions.html#exercici-19-generacio-de-pdfs-amb-dompdf","title":"Exercici 19. Generaci\u00f3 de PDFs amb DomPDF","text":"<ul> <li>Instal\u00b7la la llibreria <code>dompdf/dompdf</code> amb Composer. Crea un script PHP que genere un PDF senzill amb un t\u00edtol i un par\u00e0graf de text.</li> </ul> <pre><code>composer require dompdf/dompdf\n</code></pre> <pre><code>&lt;?php\n\nrequire __DIR__ . '/vendor/autoload.php';\n\nuse Dompdf\\Dompdf;\n\n// Crear una inst\u00e0ncia de Dompdf\n$dompdf = new Dompdf();\n\n// Contingut HTML\n$html = '&lt;h1&gt;T\u00edtol del PDF&lt;/h1&gt;&lt;p&gt;Aquest \u00e9s un par\u00e0graf de text senzill.&lt;/p&gt;';\n\n// Carregar el contingut HTML en Dompdf\n$dompdf-&gt;loadHtml($html);\n\n// Configurar la mida del paper i l'orientaci\u00f3\n$dompdf-&gt;setPaper('A4', 'portrait');\n\n// Renderitzar el PDF\n$dompdf-&gt;render();\n\n// Desar el PDF o mostrar-lo\n$dompdf-&gt;stream(\"document_senzill.pdf\", [\"Attachment\" =&gt; false]);\n</code></pre> <ul> <li>Crea un PDF utilitzant DomPDF que incloga una taula amb dades i una imatge. Assegura't que el PDF es renderitze correctament i que la imatge s'incloga en el document.</li> </ul> <pre><code>&lt;?php\n\nrequire __DIR__ . '/vendor/autoload.php';\n\nuse Dompdf\\Dompdf;\n\n// Crear una inst\u00e0ncia de Dompdf\n$dompdf = new Dompdf();\n\n// Contingut HTML amb una taula i una imatge\n$html = '\n&lt;h1&gt;Informe amb Taula i Imatge&lt;/h1&gt;\n&lt;table border=\"1\" cellpadding=\"10\"&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Nom&lt;/th&gt;\n            &lt;th&gt;Cognoms&lt;/th&gt;\n            &lt;th&gt;Edat&lt;/th&gt;\n        &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Joan&lt;/td&gt;\n            &lt;td&gt;Garcia&lt;/td&gt;\n            &lt;td&gt;35&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Maria&lt;/td&gt;\n            &lt;td&gt;Perez&lt;/td&gt;\n            &lt;td&gt;28&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n&lt;br&gt;\n&lt;img src=\"ruta_a_la_teva_imatge/imatge.png\" alt=\"Imatge Exemple\" width=\"200\"&gt;\n';\n\n// Carregar el contingut HTML en Dompdf\n$dompdf-&gt;loadHtml($html);\n\n// Configurar la mida del paper i l'orientaci\u00f3\n$dompdf-&gt;setPaper('A4', 'portrait');\n\n// Renderitzar el PDF\n$dompdf-&gt;render();\n\n// Desar el PDF o mostrar-lo\n$dompdf-&gt;stream(\"informe_taula_imatge.pdf\", [\"Attachment\" =&gt; false]);\n</code></pre> <ul> <li>Utilitzant la classe <code>Empresa</code> i <code>Empleado</code>, genera un informe en PDF amb la llista de treballadors i el seu sou. Utilitza DomPDF per generar aquest informe.</li> </ul> <pre><code>&lt;?php\n\nrequire __DIR__ . '/vendor/autoload.php';\n\n\nuse Dompdf\\Dompdf;\nuse App\\Empresa;\nuse App\\Empleado;\n\n// Crear inst\u00e0ncies d'Empresa i Empleado\n$empresa = new Empresa();\n$empleado1 = new Empleado(\"Joan\", 2500);\n$empleado2 = new Empleado(\"Maria\", 3000);\n\n$empresa-&gt;addWorker($empleado1);\n$empresa-&gt;addWorker($empleado2);\n\n// Generar contingut HTML per al PDF\n$html = '&lt;h1&gt;Informe de Treballadors&lt;/h1&gt;';\n$html .= '&lt;table border=\"1\" cellpadding=\"10\"&gt;';\n$html .= '&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Nom&lt;/th&gt;&lt;th&gt;Salari&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;';\n$html .= '&lt;tbody&gt;';\n\nforeach ($empresa-&gt;getWorkers() as $empleado) {\n    $html .= '&lt;tr&gt;';\n    $html .= '&lt;td&gt;' . $empleado-&gt;getNom() . '&lt;/td&gt;';\n    $html .= '&lt;td&gt;' . $empleado-&gt;getSalari() . ' \u20ac&lt;/td&gt;';\n    $html .= '&lt;/tr&gt;';\n}\n\n$html .= '&lt;/tbody&gt;&lt;/table&gt;';\n$html .= '&lt;p&gt;Cost total de les n\u00f2mines: ' . $empresa-&gt;getCosteNominas() . ' \u20ac&lt;/p&gt;';\n\n// Crear una inst\u00e0ncia de Dompdf\n$dompdf = new Dompdf();\n\n// Carregar el contingut HTML en Dompdf\n$dompdf-&gt;loadHtml($html);\n\n// Configurar la mida del paper i l'orientaci\u00f3\n$dompdf-&gt;setPaper('A4', 'portrait');\n\n// Renderitzar el PDF\n$dompdf-&gt;render();\n\n// Desar el PDF o mostrar-lo\n$dompdf-&gt;stream(\"informe_treballadors.pdf\", [\"Attachment\" =&gt; false]);\n</code></pre>"},{"location":"11mashup.html","title":"11mashup","text":""},{"location":"11mashup.html#webs-hibrides","title":"Webs h\u00edbrides","text":"<p>Duraci\u00f3 estimada: 8 sessions</p>"},{"location":"11mashup.html#caracteristiques-de-les-webs-hibrides","title":"Caracter\u00edstiques de les webs h\u00edbrides","text":"<p>Les aplicacions web h\u00edbrides, tamb\u00e9 conegudes com a \"mashups\", s\u00f3n una combinaci\u00f3 de dades i/o funcionalitats provinents de diverses fonts per a crear un nou tipus d'aplicaci\u00f3 o servei. Les seues caracter\u00edstiques principals s\u00f3n:</p> <ul> <li>Integraci\u00f3 de Dades de Diversos Or\u00edgens: Les aplicacions web h\u00edbrides aprofiten dades i funcionalitats de m\u00faltiples fonts, com ara serveis web, APIs, i altres recursos en l\u00ednia. Aix\u00f2 permet combinar i reutilitzar recursos existents de manera creativa per a desenvolupar aplicacions m\u00e9s complexes i funcionals.</li> <li>\u00das de Serveis Web i APIs: Moltes d'aquestes aplicacions utilitzen dades accessibles a trav\u00e9s de serveis web, com els que ofereixen empreses com Google, Yahoo!, Flickr, Microsoft, i Amazon. Aquestes dades es troben sovint en formats com JSON o XML i es poden accedir i manipular mitjan\u00e7ant APIs espec\u00edfiques.</li> <li>Sindicaci\u00f3 Web (RSS/Atom): Algunes aplicacions web h\u00edbrides fan \u00fas de protocols de sindicaci\u00f3 web, com RSS o Atom, per accedir a continguts actualitzats de manera regular. Aquests protocols simplifiquen el proc\u00e9s de compartir i distribuir continguts web.</li> <li>Dades Internes: A m\u00e9s de les fonts externes, les aplicacions web h\u00edbrides poden incloure dades internes generades i gestionades per l'entitat propiet\u00e0ria de l'aplicaci\u00f3, com podrien ser les dades corporatives o de negoci.</li> <li>Web Scraping: Encara que \u00e9s menys com\u00fa, algunes aplicacions utilitzen t\u00e8cniques d'enginyeria inversa, com el web scraping, per extreure dades des de llocs web. Aix\u00f2 pot ser \u00fatil per obtenir informaci\u00f3 com els preus dels productes en les botigues en l\u00ednia.</li> </ul> <p>Aquesta actualitzaci\u00f3 reflecteix l'evoluci\u00f3 constant en el camp del desenvolupament web i la integraci\u00f3 de tecnologies, destacant la import\u00e0ncia de les fonts diverses de dades i la capacitat de combinar-les de forma innovadora en el disseny d'aplicacions web h\u00edbrides\u200b\u200b.</p>"},{"location":"11mashup.html#utilitzacio-de-repositoris-dinformacio","title":"Utilitzaci\u00f3 de repositoris d'informaci\u00f3","text":"<p>Per a poder reutilitzar codi i informaci\u00f3 cal que tingem en conte les seg\u00fcents consideracions:</p> <ul> <li>Integraci\u00f3 de Serveis Web de Tercers: En el desenvolupament d'aplicacions web h\u00edbrides, \u00e9s com\u00fa utilitzar serveis proporcionats per tercers. Aquests serveis poden oferir funcionalitats espec\u00edfiques que enriquiran l'aplicaci\u00f3 sense necessitat de desenvolupar-les des de zero. Un exemple podria ser l'\u00fas de l'API de Google Maps per mostrar la ubicaci\u00f3 geogr\u00e0fica de les franqu\u00edcies d'una empresa en un mapa.</li> <li>Desenvolupament d'Aplicacions Pr\u00e0ctiques: En aquest context, es posa l'accent en el desenvolupament d'aplicacions que faciliten processos espec\u00edfics, com podria ser la gesti\u00f3 d'enviaments en una botiga en l\u00ednia. Aquest tipus d'aplicaci\u00f3 pot millorar significativament l'experi\u00e8ncia dels usuaris i l'efici\u00e8ncia de les operacions de l'empresa.</li> <li>Reconeixement de Necessitats i Oportunitats: \u00c9s important identificar funcionalitats que poden ser \u00fatils per als usuaris, fins i tot quan aquests no les han sol\u00b7licitat expl\u00edcitament. Aquesta anticipaci\u00f3 de necessitats pot ser un factor clau en el desenvolupament d'aplicacions web h\u00edbrides exitoses.</li> <li>Condicions i L\u00edmits en l'\u00das de Serveis de Tercers: Quan s'utilitzen serveis de tercers, cal tenir en compte les condicions i l\u00edmits que aquests imposen. Aix\u00f2 inclou restriccions d'\u00fas, l\u00edmits de sol\u00b7licituds, entre d'altres aspectes legals i t\u00e8cnics.</li> <li>Adquisici\u00f3 d'Experi\u00e8ncia en Desenvolupament Web: El desenvolupament d'aquestes aplicacions tamb\u00e9 serveix com una oportunitat per adquirir experi\u00e8ncia pr\u00e0ctica en l'\u00e0mbit del desenvolupament web, millorant aix\u00ed les habilitats t\u00e8cniques dels desenvolupadors.</li> </ul> <p>Per exemple podriem desenvolupar:</p> <ul> <li>Integraci\u00f3 de Google Maps API: Imaginem que est\u00e0s desenvolupant una aplicaci\u00f3 web per a una cadena de restaurants. Pots integrar l'API de Google Maps per mostrar la ubicaci\u00f3 de tots els restaurants en un mapa interactiu. Els usuaris poden buscar el restaurant m\u00e9s proper, obtenir direccions, i fins i tot veure imatges del lloc.</li> <li>Gesti\u00f3 d'Enviaments amb APIs de Log\u00edstica: Per una botiga en l\u00ednia, pots integrar APIs de serveis de missatgeria com UPS, FedEx o DHL. Aix\u00f2 permet als usuaris fer seguiment dels seus enviaments en temps real, calcular costos d'enviament, i gestionar devolucions de manera eficient.</li> <li>Integraci\u00f3 de Passarel\u00b7les de Pagament: En una aplicaci\u00f3 d'e-commerce, l'\u00fas de passarel\u00b7les de pagament com Stripe, PayPal, o Square \u00e9s essencial. Aix\u00f2 no nom\u00e9s ofereix una soluci\u00f3 de pagament segura als usuaris, sin\u00f3 que tamb\u00e9 simplifica la gesti\u00f3 financera de la botiga.</li> <li>\u00das de APIs de Xarxes Socials: Podries integrar APIs de xarxes socials com Facebook, Twitter, o Instagram per permetre als usuaris compartir productes o experi\u00e8ncies directament des de la teva aplicaci\u00f3. Aix\u00f2 pot augmentar la visibilitat i l'engagement del teu negoci.</li> <li>Serveis Meteorol\u00f2gics Integrats: Per a una aplicaci\u00f3 d'activitats a l'aire lliure, com una app de senderisme, integrar dades meteorol\u00f2giques en temps real mitjan\u00e7ant APIs com OpenWeatherMap pot ser molt \u00fatil. Els usuaris podrien planificar les seves activitats basant-se en les condicions meteorol\u00f2giques actuals i les previsions.</li> <li>Recollida d'Opinions amb APIs de Ressenyes: En una aplicaci\u00f3 per a hotels o restaurants, integrar un sistema de recollida d'opinions com Yelp o TripAdvisor pot ajudar a obtenir feedback valu\u00f3s dels clients i millorar la qualitat del servei.</li> </ul>"},{"location":"11mashup.html#autenticacio-amb-google","title":"Autenticaci\u00f3 amb Google","text":""},{"location":"11mashup.html#configuracio-de-lautenticacio-amb-google-en-laravel","title":"Configuraci\u00f3 de l'Autenticaci\u00f3 amb Google en Laravel","text":""},{"location":"11mashup.html#1-installar-laravel-socialite","title":"1. Instal\u00b7lar Laravel Socialite","text":"<p>Laravel Socialite \u00e9s la biblioteca oficial per gestionar l'autenticaci\u00f3 amb prove\u00efdors socials.</p>"},{"location":"11mashup.html#1-installa-socialite","title":"1. Instal\u00b7la Socialite","text":"<pre><code>composer require laravel/socialite\nphp artisan vendor:publish --provider=\"Laravel\\Socialite\\SocialiteServiceProvider\"\n</code></pre>"},{"location":"11mashup.html#2-configura-google-api","title":"2. Configura Google API","text":"<ol> <li>Accedeix a la Consola de Desenvolupadors de Google.</li> <li>Crea un nou projecte o selecciona un projecte existent.</li> <li>Activa l'API \"Google+ API\" o \"Google Identity Services\".</li> <li> <p>Crea una credencial d'OAuth 2.0 i configura:</p> <ul> <li>Tipus d'aplicaci\u00f3: Aplicaci\u00f3 web.</li> <li>URI de redirecci\u00f3 autoritzat:   <pre><code>http://localhost/auth/google/callback\n</code></pre></li> </ul> </li> <li> <p>Copia el Client ID i el Client Secret.</p> </li> </ol>"},{"location":"11mashup.html#3-configura-les-variables-dentorn","title":"3. Configura les Variables d'Entorn","text":"<p>Afegeix les credencials al fitxer <code>.env</code>:</p> <pre><code>GOOGLE_CLIENT_ID=your-client-id\nGOOGLE_CLIENT_SECRET=your-client-secret\nGOOGLE_REDIRECT=http://localhost/auth/google/callback\n</code></pre> <p>Afegeix la configuraci\u00f3 de Google al fitxer <code>config/services.php</code>:</p> <pre><code>'google' =&gt; [\n    'client_id' =&gt; env('GOOGLE_CLIENT_ID'),\n    'client_secret' =&gt; env('GOOGLE_CLIENT_SECRET'),\n    'redirect' =&gt; env('GOOGLE_REDIRECT'),\n],\n</code></pre>"},{"location":"11mashup.html#4-configura-les-rutes","title":"4. Configura les Rutes","text":"<p>Defineix les rutes necess\u00e0ries al fitxer <code>routes/web.php</code>:</p> <pre><code>use App\\Http\\Controllers\\AuthController;\n\nRoute::get('/auth/google/redirect', [AuthController::class, 'redirectToGoogle'])-&gt;name('google.redirect');\nRoute::get('/auth/google/callback', [AuthController::class, 'handleGoogleCallback'])-&gt;name('google.callback');\n</code></pre>"},{"location":"11mashup.html#5-crea-el-controlador","title":"5. Crea el Controlador","text":"<p>Crea un controlador per gestionar l'autenticaci\u00f3 amb Google amb els seguents m\u00e8todes:</p> <pre><code>namespace App\\Http\\Controllers;\n\nuse Laravel\\Socialite\\Facades\\Socialite;\nuse Illuminate\\Support\\Facades\\Auth;\nuse App\\Models\\User;\n\nclass AuthController extends Controller\n{\n    public function redirectToGoogle()\n    {\n        return Socialite::driver('google')-&gt;redirect();\n    }\n\n    public function handleGoogleCallback()\n    {\n        $googleUser = Socialite::driver('google')-&gt;stateless()-&gt;user();\n\n        // Cerca l'usuari o crea'l si no existeix\n        $user = User::firstOrCreate(\n            ['email' =&gt; $googleUser-&gt;getEmail()],\n            [\n                'name' =&gt; $googleUser-&gt;getName(),\n                'google_id' =&gt; $googleUser-&gt;getId(),\n                'avatar' =&gt; $googleUser-&gt;getAvatar(),\n                'password' =&gt; bcrypt(str()-&gt;random(24)), // Contrassenya aleat\u00f2ria\n            ]\n        );\n\n        // Inicia sessi\u00f3 amb l'usuari\n        Auth::login($user);\n\n        return redirect('/home'); // Redirigeix a la p\u00e0gina principal\n    }\n}\n</code></pre>"},{"location":"11mashup.html#6-modifica-el-model-user-per-afegir-els-camps-nou-i-modifica-la-migracio","title":"6. Modifica el Model <code>User</code> per afegir els camps nou i modifica la migraci\u00f3","text":""},{"location":"11mashup.html#7-prova-lautenticacio","title":"7. Prova l'Autenticaci\u00f3","text":"<ul> <li>Accedeix a l'URL: <code>http://localhost/auth/google/redirect</code></li> <li>Segueix el proc\u00e9s d'autenticaci\u00f3 amb Google.</li> </ul>"},{"location":"11mashup.html#difusio-desdeveniments-en-temps-real-amb-websockets","title":"Difusi\u00f3 d'Esdeveniments en Temps Real amb WebSockets","text":"<p>Els WebSockets permeten implementar interf\u00edcies d'usuari que s'actualitzen en temps real de manera eficient. A difer\u00e8ncia del polling constant, els WebSockets envien dades del servidor al client nom\u00e9s quan hi ha canvis, millorant el rendiment i l'experi\u00e8ncia d'usuari.</p>"},{"location":"11mashup.html#funcionament","title":"Funcionament","text":"<ul> <li>Canals: Els clients es connecten a canals amb noms espec\u00edfics al frontend.</li> <li>Esdeveniments: L'aplicaci\u00f3 Laravel envia esdeveniments a aquests canals des del backend. Els esdeveniments poden incloure dades que el frontend utilitza per actualitzar la interf\u00edcie.</li> </ul>"},{"location":"11mashup.html#drivers-de-difusio-suportats","title":"Drivers de Difusi\u00f3 Suportats","text":"<p>Laravel proporciona tres opcions per gestionar WebSockets:</p> <ol> <li>Laravel Reverb: Soluci\u00f3 autogestionada i integrada amb Laravel.</li> <li>Pusher Channels: Servei gestionat per a WebSockets.</li> <li>Ably: Plataforma avan\u00e7ada per a comunicacions en temps real.</li> </ol>"},{"location":"11mashup.html#implementacio-basica-en-el-servidor","title":"Implementaci\u00f3 B\u00e0sica en el servidor","text":"<p>Laravel facilita la difusi\u00f3 d'esdeveniments (event broadcasting) gr\u00e0cies a un driver de difusi\u00f3 que envia els esdeveniments al client mitjan\u00e7ant Laravel Echo (una biblioteca JavaScript).</p>"},{"location":"11mashup.html#configuracio","title":"Configuraci\u00f3","text":"<p><pre><code>  php artisan install:broadcasting\n</code></pre> Em preguntar\u00e0 si vull instal\u00b7lar reverb(no) i la part de client (si).         </p> <p>Aquesta ordre:</p> <ul> <li>Crear\u00e0 el fitxer <code>config/broadcasting.php</code>.</li> <li>Crear\u00e0 el fitxer <code>routes/channels.php</code>, on pots registrar rutes d'autoritzaci\u00f3 i callbacks per als canals de difusi\u00f3.</li> </ul>"},{"location":"11mashup.html#configuracio-basica-de-pusher","title":"Configuraci\u00f3 B\u00e0sica de pusher","text":"<p>Si vols utilitzar Pusher Channels per a la difusi\u00f3 d'esdeveniments, segueix aquests passos:</p> <ol> <li>Instal\u00b7la el paquet de PHP de Pusher Channels amb Composer:</li> </ol> <pre><code>   composer require pusher/pusher-php-server\n</code></pre> <ol> <li>Defineix les credencials de Pusher Channels al fitxer .env:</li> </ol> <pre><code>BROADCAST_DRIVER=pusher\n\nPUSHER_APP_ID=19143960\nPUSHER_APP_KEY=070b902204f2ac2a3b220\nPUSHER_APP_SECRET=6687bd960e437d3c2a550\nPUSHER_APP_CLUSTER=eu\n\nVITE_PUSHER_APP_KEY=070b902204f2ac2a3b220\nVITE_PUSHER_APP_CLUSTER=eu\n</code></pre> <p>i configura el driver de difusi\u00f3 a Pusher en el fitxer <code>config/broadcasting.php</code>:</p> <pre><code>'pusher' =&gt; [\n    'driver' =&gt; 'pusher',\n    'key' =&gt; env('PUSHER_APP_KEY'),\n    'secret' =&gt; env('PUSHER_APP_SECRET'),\n    'app_id' =&gt; env('PUSHER_APP_ID'),\n    'options' =&gt; [\n        'cluster' =&gt; env('PUSHER_APP_CLUSTER'),\n        'useTLS' =&gt; true,\n    ],\n],\n</code></pre> <ol> <li>Configuraci\u00f3 de Laravel Echo</li> </ol> <p>Si no est\u00e0 instal\u00b7lat, instal\u00b7la Laravel Echo:</p> <pre><code>npm install --save-dev laravel-echo pusher-js\nnpm run build\n</code></pre> <pre><code>import Echo from 'laravel-echo';\n\nimport Pusher from 'pusher-js';\nwindow.Pusher = Pusher;\n\nwindow.Echo = new Echo({\n    broadcaster: 'pusher',\n    key: import.meta.env.VITE_PUSHER_APP_KEY,\n    cluster: import.meta.env.VITE_PUSHER_APP_CLUSTER,\n    forceTLS: true\n});\n</code></pre> <p>al front-end, afegeix el seg\u00fcent codi per connectar amb el servidor de WebSockets:</p> <p><pre><code>Echo.channel('channel-name')\n.listen('EventName', (e) =&gt; {\n    console.log(e);\n\n});\n</code></pre> 4. Creaci\u00f3 de Canals</p> <p>Defineix canals en routes/channels.php. Per exemple, un canal privat:</p> <pre><code>Broadcast::channel('channel-name', function ($user) {\n    return true; // Autoritzaci\u00f3\n});\n</code></pre> <ol> <li>Disparar Esdeveniments en Temps Real</li> </ol> <p>Crea esdeveniments que implementen ShouldBroadcast i defineix en quin canal s'han d'emetre.</p> <p><pre><code>class EventName implements ShouldBroadcast\n{\n    public function broadcastOn()\n    {\n        return new Channel('channel-name');\n    }\n}\n</code></pre> 6. Configuraci\u00f3 de la Cua</p> <ul> <li>Tots els esdeveniments de difusi\u00f3 s'envien a trav\u00e9s de treballs en cua (queued jobs).</li> <li>\u00c9s necessari configurar i executar un treballador de cua per evitar que la resposta de l'aplicaci\u00f3 es veja afectada durant la difusi\u00f3 dels esdeveniments:</li> </ul> <pre><code>  php artisan queue:work\n</code></pre>"},{"location":"11mashup.html#integracio-amb-chatgpt-api","title":"Integraci\u00f3 amb ChatGPT API","text":""},{"location":"11mashup.html#registrat-i-obte-les-credencials-de-lapi","title":"Registra't i Obt\u00e9 les Credencials de l'API","text":"<ul> <li>Registra't a OpenAI: Visita el lloc web d'OpenAI i crea un compte si encara no en tens un.</li> <li>Accedeix a la Secci\u00f3 d'API: Un cop registrat, busca l'opci\u00f3 per accedir a les credencials de l'API.</li> <li>Crea un Nou Projecte/API Key: Segueix les instruccions per crear un nou projecte i genera una clau API. Aquesta clau et permetr\u00e0 realitzar peticions a l'API de ChatGPT.</li> </ul>"},{"location":"11mashup.html#configura-les-credencials-de-lapi","title":"Configura les Credencials de l'API","text":"<p>Guarda les Credencials: Un cop tinguis la clau API, haur\u00e0s de guardar-la de manera segura. Actualitza el Fitxer .env: Afegeix la teva clau API al teu fitxer .env de Laravel. Aix\u00f2 mant\u00e9 les teves credencials segures i separades del teu codi font.</p> <p><pre><code>OPENAI_API_KEY=tua_clau_api\n</code></pre> Conselles de Seguretat: No compartisques les teves claus API en el codi font, especialment si el codi \u00e9s p\u00fablic.</p> <p>En el teu fitxer de configuraci\u00f3 (per exemple, config/services.php), afegeix una entrada per a OpenAI.</p> <pre><code>'openai' =&gt; [\n    'api_key' =&gt; env('OPENAI_API_KEY'),\n]\n</code></pre>"},{"location":"11mashup.html#creacio-dun-service-per-a-openai","title":"Creaci\u00f3 d'un service per a OpenAI","text":"<p>Per a aix\u00f2 creem un directori Services i un fixer ChatGPTService.php</p> <pre><code>namespace App\\Services;\n\nuse GuzzleHttp\\Client;\nuse Illuminate\\Support\\Facades\\Log;\n\nclass ChatGPTService\n{\n\n    public static function getChatResponse($question)\n    {\n\n        try {\n            $client = new Client([\n                'base_uri' =&gt; 'https://api.openai.com/v1/',\n                'headers' =&gt; [\n                    'Authorization' =&gt; 'Bearer ' . config('services.openai.api_key'),\n                    'Content-Type' =&gt; 'application/json',\n                ],\n            ]);\n            $response = $client-&gt;post('chat/completions', [\n                'json' =&gt; [\n                    'model' =&gt; 'gpt-3.5-turbo',\n                    'messages' =&gt; [\n                        ['role' =&gt; 'system', 'content' =&gt; 'Ets un fan del Bar\u00e7a.'],\n                        ['role' =&gt; 'user', 'content' =&gt; $question],\n                    ],\n                    'max_tokens' =&gt; 250,\n                ],\n            ]);\n\n            $body = json_decode($response-&gt;getBody()-&gt;getContents(), true);\n            $message = '';\n            foreach ($body['choices'] as $r){\n                if ($r['message']['role'] == 'assistant') {\n                    $message .= $r['message']['content'];\n                }\n            }\n            return $message;\n        } catch (\\Exception $e) {\n            Log::error('Error en la resposta de ChatGPT: ' . $e-&gt;getMessage());\n            return ['error' =&gt; 'No s\\'ha pogut obtenir una resposta.'];\n        }\n    }\n}\n</code></pre> <p>Ara la forma de utilitzar-lo de forma b\u00e0sica \u00e9s la seg\u00fcent:</p> <pre><code>$descripcio = ChatGPTService::getChatResponse('Dona una descripci\u00f3 del '.$equip-&gt;nom.' de Futbol Femen\u00ed');\n</code></pre> <p>A partir d'ahi hem de estudiar la documentaci\u00f3 de l'API per a poder fer peticions i tractar les respostes. Al mateix temps crearem les rutes, les vistes i els metodes necessaries per incrementar la funcionalitat de la nostra aplicaci\u00f3.</p>"},{"location":"11mashup.html#gestio-de-pagaments","title":"Gesti\u00f3 de pagaments","text":"<p>La primera decisi\u00f3 que hem de pendre es triar la passarel\u00b7la de Pagament: Hi ha moltes opcions com Stripe, PayPal, PayU, Braintree, Square, Authorize.Net... Totes solen tindre entorn de proves(sanbox) on fer transaccions fict\u00edcies per a provar el funcionament de la passarel\u00b7la de pagament.</p>"},{"location":"11mashup.html#paypal","title":"PayPal","text":"<p>Per permetre que un usuari pague amb el seu compte PayPal Sandbox a un compte Business de Sandbox en una aplicaci\u00f3 Laravel, haur\u00e0s de seguir una s\u00e8rie de passos. Aquests passos impliquen la configuraci\u00f3 del teu entorn de Sandbox a PayPal i la integraci\u00f3 amb la teva aplicaci\u00f3 Laravel utilitzant el paquet paypal/rest-api-sdk-php o una altra biblioteca similar. Aqu\u00ed tens una guia pas a pas:</p> <ul> <li> <p>Configura els Comptes Sandbox: Assegura't que tens dos comptes en PayPal Sandbox: un compte personal (que simula el comprador) i un compte Business (que simula el venedor).</p> </li> <li> <p>Instal\u00b7la el Paquet de PayPal en Laravel: Utilitza Composer per instal\u00b7lar el paquet <code>paypal/rest-api-sdk-php</code> o una altra biblioteca de PayPal compatible amb Laravel.</p> </li> <li> <p>Configura les Credencials de Sandbox en Laravel: Obt\u00e9 les credencials del teu compte Business de Sandbox (ID de client i secret) i configura-les en el teu projecte Laravel, normalment a trav\u00e9s del fitxer .env. i configura el `services.php</p> </li> </ul> <pre><code>'paypal' =&gt; [\n'client_id' =&gt; env('PAYPAL_CLIENT_ID'),\n'client_secret' =&gt; env('PAYPAL_CLIENT_SECRET'),\n],\n</code></pre> <ul> <li>Crea un Context d'API de PayPal: Utilitza les credencials del teu compte Business de Sandbox per crear un objecte ApiContext. Aquest objecte s'utilitzar\u00e0 per a realitzar crides a l'API de PayPal.</li> </ul> <pre><code>use PayPal\\Rest\\ApiContext;\nuse PayPal\\Auth\\OAuthTokenCredential;\n\n// ...\n\npublic function createPayment()\n{\n    $apiContext = new ApiContext(new OAuthTokenCredential(\n            env('PAYPAL_CLIENT_ID'),     // ClientID\n            env('PAYPAL_SECRET')         // ClientSecret\n        )\n    );\n\n    // Configura el `ApiContext` segons les teves necessitats\n    $apiContext-&gt;setConfig([\n        'mode' =&gt; 'sandbox', // Mode Sandbox per a proves\n        // Altres configuracions...\n    ]);\n\n    // Aqu\u00ed va la resta de la teva l\u00f2gica de pagament...\n}\n</code></pre> <ul> <li>Implementa la L\u00f2gica de Pagament:<pre><code>* Desenvolupa la l\u00f2gica en els teus controladors Laravel per crear sol\u00b7licituds de pagament. Aix\u00f2 inclou la creaci\u00f3 d'objectes de pagament amb detalls com l'import, la moneda, i la descripci\u00f3.\n* Redirigeix l'Usuari a PayPal: Quan un usuari inici\u00ef un pagament, redirigeix-lo a la p\u00e0gina de pagament de PayPal utilitzant l'URL proporcionada per la biblioteca. L'usuari iniciar\u00e0 sessi\u00f3 amb el seu compte personal de Sandbox per completar el pagament.\n* Gestiona la Resposta de PayPal: Despr\u00e9s que l'usuari completi el pagament, ser\u00e0 redirigit de tornada a la teva aplicaci\u00f3. Necessitar\u00e0s gestionar aquesta resposta per confirmar la transacci\u00f3.\n* Prova el Proc\u00e9s de Pagament: Realitza proves utilitzant els teus comptes de Sandbox per assegurar-te que tot funciona com s'espera. Aix\u00f2 inclou iniciar un pagament amb el compte personal de Sandbox i rebre el pagament en el compte Business de Sandbox.\n* Revisa i Depura: Comprova que les transaccions es mostren correctament en els panells de control de Sandbox tant del comprador com del venedor. Depura qualsevol problema que puguis trobar.\n</code></pre> </li> </ul> <p>Exemple de creaci\u00f3 d'un pagament amb el SDK de PayPal:</p> <p><pre><code>use PayPal\\Api\\Amount;\nuse PayPal\\Api\\Payer;\nuse PayPal\\Api\\Payment;\nuse PayPal\\Api\\RedirectUrls;\nuse PayPal\\Api\\Transaction;\nuse PayPal\\Rest\\ApiContext;\nuse PayPal\\Auth\\OAuthTokenCredential;\n\nclass PaymentController extends Controller\n{\n    private $apiContext;\n\n    public function __construct()\n    {\n        $this-&gt;apiContext = new ApiContext(\n            new OAuthTokenCredential(\n                env('PAYPAL_SANDBOX_CLIENT_ID'),     // ClientID\n                env('PAYPAL_SANDBOX_SECRET')         // ClientSecret\n            )\n        );\n    }\n\n    public function createPayment()\n    {\n        $payer = new Payer();\n        $payer-&gt;setPaymentMethod('paypal');\n\n        $amount = new Amount();\n        $amount-&gt;setTotal('10.00');  // Defineix l'import del pagament\n        $amount-&gt;setCurrency('EUR'); // Defineix la moneda\n\n        $transaction = new Transaction();\n        $transaction-&gt;setAmount($amount);\n        $transaction-&gt;setDescription('Descripci\u00f3 del pagament');\n\n        $redirectUrls = new RedirectUrls();\n        $redirectUrls-&gt;setReturnUrl(url('/payment/success')) // URL de retorn en cas d'\u00e8xit\n                     -&gt;setCancelUrl(url('/payment/cancel')); // URL de retorn en cas de cancel\u00b7laci\u00f3\n\n        $payment = new Payment();\n        $payment-&gt;setIntent('sale')\n                -&gt;setPayer($payer)\n                -&gt;setTransactions([$transaction])\n                -&gt;setRedirectUrls($redirectUrls);\n\n        try {\n            $payment-&gt;create($this-&gt;apiContext);\n            return redirect()-&gt;away($payment-&gt;getApprovalLink());\n        } catch (Exception $e) {\n            // Gestiona l'error aqu\u00ed\n            return back()-&gt;with('error', 'Hi ha hagut un problema en processar el pagament');\n        }\n    }\n\n    public function successPayment(Request $request)\n    {\n        $paymentId = $request-&gt;get('paymentId');\n        $payerId = $request-&gt;get('PayerID');\n\n        if (empty($paymentId) || empty($payerId)) {\n            // Redirigeix a una p\u00e0gina d'error o mostra un missatge\n            return redirect('/')-&gt;with('error', \"El pagament no s'ha pogut verificar.\");\n        }\n\n        $payment = Payment::get($paymentId, $this-&gt;apiContext);\n\n        $execution = new PaymentExecution();\n        $execution-&gt;setPayerId($payerId);\n\n        try {\n            // Executa el pagament\n            $result = $payment-&gt;execute($execution, $this-&gt;apiContext);\n\n            // Comprova que el pagament s'ha completat amb \u00e8xit\n            if ($result-&gt;getState() == 'approved') {\n                // Aqu\u00ed pots processar la informaci\u00f3 de la transacci\u00f3, \n                // com ara actualitzar la base de dades, etc.\n                return redirect('/')-&gt;with('success', 'Pagament completat amb \u00e8xit.');\n            }\n        } catch (Exception $e) {\n            // Gestiona els errors aqu\u00ed\n            return redirect('/')-&gt;with('error', 'Hi ha hagut un problema en processar el teu pagament.');\n        }\n\n        return redirect('/')-&gt;with('error', \"El pagament no s'ha pogut completar.\");\n    }\n\n    // Aqu\u00ed pots afegir els m\u00e8todes per gestionar la cancel\u00b7laci\u00f3  del pagament\n}\n</code></pre> Defineix les rutes</p> <pre><code>Route::get('/payment/create', 'PaymentController@createPayment');\nRoute::get('/payment/success', 'PaymentController@successPayment');\nRoute::get('/payment/cancel', 'PaymentController@cancelPayment');\n</code></pre> <p>\u00c9s important seguir aquests passos detalladament i referir-se a la documentaci\u00f3 espec\u00edfica de la biblioteca que est\u00e0s utilitzant per obtenir instruccions detallades i exemples de codi. La clau est\u00e0 en la correcta configuraci\u00f3 i integraci\u00f3 de les credencials de PayPal Sandbox i la correcta gesti\u00f3 de les respostes de l'API de PayPal.</p> <p>Notes Importants Aquest exemple \u00e9s molt b\u00e0sic i nom\u00e9s per a fins educatius. En un entorn de producci\u00f3, haur\u00e0s de gestionar molts altres aspectes com la verificaci\u00f3 de seguretat, el maneig d'errors m\u00e9s detallat, i la integraci\u00f3 amb la base de dades. Assegura't de provar aquest codi en l'entorn de Sandbox de PayPal abans de considerar la seva implementaci\u00f3 en producci\u00f3. Personalitza els imports del pagament (import, moneda, descripci\u00f3) segons les necessitats del teu projecte.</p>"},{"location":"11mashup.html#exemple-de-reutilitzacio-de-codi","title":"Exemple de reutilitzaci\u00f3 de codi","text":""},{"location":"11mashup.html#autenticacio-amb-google_1","title":"Autenticaci\u00f3 amb Google","text":""},{"location":"11mashup.html#pas-1-installacio","title":"Pas 1 - Instal\u00b7laci\u00f3","text":"<p>Instal\u00b7lem el paquet de Google:</p> <pre><code>composer require laravel/socialite\n</code></pre>"},{"location":"11mashup.html#pas-2-crear-credencials-a-google-cloud","title":"Pas 2 - Crear credencials a Google cloud","text":"<ul> <li>Obre la Consola de Google Cloud: Visita Google Cloud Console.</li> </ul> <p>Crear un Projecte a Google Cloud</p> <ul> <li>Crea un Nou Projecte: En la consola, crea un nou projecte si encara no en tens cap.</li> <li>Navega al Projecte: Un cop creat, selecciona el projecte per a configurar les credencials.</li> </ul> <p>Configurar OAuth Consent Screen</p> <ul> <li>V\u00e9s a \"APIs &amp; Services &gt; OAuth consent screen\".</li> <li>Selecciona l'usuari extern i omple els detalls necessaris. .</li> <li>Afegeix la informaci\u00f3 del teu domini i els detalls de l'aplicaci\u00f3. .</li> </ul> <p>Crear Credencials</p> <ul> <li>V\u00e9s a \"APIs &amp; Services &gt; Credentials\".</li> <li>Clica a \"Create Credentials\" i selecciona \"OAuth client ID\".</li> <li>Selecciona l'aplicaci\u00f3 web com a tipus d'aplicaci\u00f3. .</li> <li>Afegeix les URL de redirecci\u00f3 autoritzades des de Laravel (p. ex., http://localhost/auth/google/callback per a l'entorn de desenvolupament).</li> <li>Obt\u00e9 l'ID de Client i el Secret de Client: Despr\u00e9s de crear les credencials, anota l'ID de client i el secret que Google proporciona. .</li> </ul>"},{"location":"11mashup.html#pas-3-configuracio-de-socialite-per-a-google","title":"Pas 3 - Configuraci\u00f3 de Socialite per a Google","text":"<p><pre><code>GOOGLE_CLIENT_ID=3792956990940-bat7pikhu9a8piq93jncgcursmf7isg3.apps.googleusercontent.com\nGOOGLE_CLIENT_SECRET=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0\nGOOGLE_REDIRECT=http://localhost/auth/google/callback\n</code></pre> Afegeix la Configuraci\u00f3 de Google a config/services.php:</p> <pre><code>'google' =&gt; [\n    'client_id' =&gt; env('GOOGLE_CLIENT_ID'),\n    'client_secret' =&gt; env('GOOGLE_CLIENT_SECRET'),\n    'redirect' =&gt; env('GOOGLE_REDIRECT'),\n],\n</code></pre>"},{"location":"11mashup.html#pas-4-creacio-de-rutes-i-controladors","title":"Pas 4 - Creaci\u00f3 de Rutes i Controladors","text":"<p>Defineix rutes en routes/web.php per a redirigir cap a Google i per al callback.</p> <pre><code>Route::get('auth/google', [LoginController::class, 'redirectToGoogle'])-&gt;name('auth.google');\nRoute::get('auth/google/callback', [LoginController::class, 'handleGoogleCallback'])-&gt;name('auth.google.callback');\n</code></pre> <p>En LoginController, afegeix la l\u00f2gica per a redirigir a l'usuari cap a Google i manejar el callback.</p> <p>redirectToGoogle: Redirigeix l'usuari a la p\u00e0gina d'autenticaci\u00f3 de Google. handleGoogleCallback: Processa la resposta de Google, crea o troba un usuari, i genera un token de Sanctum.</p> <p><pre><code>&lt;?php\n// En LoginController \n\npublic function redirectToGoogle()\n{\n    return Socialite::driver('google')-&gt;redirect();\n}\n\n\npublic function handleGoogleCallback()\n{\n    try {\n        $googleUser = Socialite::driver('google')-&gt;stateless()-&gt;user();\n\n            // Cerca o crea l'usuari a la base de dades\n            $user = User::updateOrCreate(\n                ['email' =&gt; $googleUser-&gt;email],\n                [\n                    'name' =&gt; $googleUser-&gt;name,\n                    'google_id' =&gt; $googleUser-&gt;id,\n                    'avatar' =&gt; $googleUser-&gt;avatar,\n                ]\n            );\n\n            // Autentica l'usuari\n            Auth::login($user);\n\n        // Generar token Sanctum\n        // Si volem autenticar en l'API podriem generar un token\n        $token = $userr-&gt;createToken('Personal Access Token')-&gt;plainTextToken;\n\n        // Redirigir l'usuari amb el token\n        return view('auth.success', ['token' =&gt; $token]); // Asumint que tens una vista 'auth.success'\n\n    } catch (\\Exception $e) {\n        // Maneig d'errors\n        return view('auth.error', ['error' =&gt; $e-&gt;getMessage()]); // Asumint que tens una vista 'auth.error'\n    }\n}\n</code></pre> Caldr\u00e0 fer unes modificacions en el model User.php</p> <pre><code>    protected $fillable = [\n        'name',\n        'email',\n        'password',\n        'google_id',\n        'avatar',\n    ];\n</code></pre> <p>I afegir el camp google_id i avatar a la migraci\u00f3 de la base de dades</p>"},{"location":"11mashup.html#pas-5-creacio-de-les-vistes-de-comprovacio","title":"Pas 5 - Creaci\u00f3 de les vistes de comprovaci\u00f3","text":"<p>Crea dues vistes en resources/views/auth: success.blade.php i error.blade.php.</p> <pre><code>{{-- resources/views/auth/success.blade.php --}}\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Autenticaci\u00f3 Exitosa&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Benvingut/da!&lt;/h1&gt;\n    &lt;p&gt;La teua autenticaci\u00f3 ha sigut exitosa.&lt;/p&gt;\n    &lt;p&gt;El teu token d'acc\u00e9s \u00e9s: {{ $token }}&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <pre><code>{{-- resources/views/auth/error.blade.php --}}\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Error d'Autenticaci\u00f3&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Error d'Autenticaci\u00f3&lt;/h1&gt;\n    &lt;p&gt;Ha ocorregut un error durant el proc\u00e9s d'autenticaci\u00f3: {{ $error }}&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"11mashup.html#pas-6-inclou-lenllac-en-el-login-per-redirigir-a-google","title":"Pas 6. Inclou l'enlla\u00e7 en el login per redirigir a google","text":"<pre><code>&lt;a href=\"{{ route('auth.google') }}\"&gt;Inicia sessi\u00f3 amb Google&lt;/a&gt;\n</code></pre>"},{"location":"11mashup.html#actualitzacio-de-la-classificacio-en-temps-real","title":"Actualitzaci\u00f3 de la classificaci\u00f3 en temps real.","text":"<p>Despr\u00e9s de configurar el pusher i el Laravel Echo, podem implementar que la classificaci\u00f3 s'actualitze de forma autom\u00e0tica quan es canvie un resultat.</p> <ol> <li>Afegir el codi per a gestionar l'escolta en el frontend:</li> </ol> <pre><code>window.Echo.channel('futbol-femeni')\n    .listen('.PartitActualitzat', (data) =&gt; {\n        console.log('Esdeveniment rebut:', data);\n        Livewire.dispatch('PartitActualitzat',data);\n    });\n</code></pre> <ol> <li>Modificar el routes/channel.php per a autoritzar l'acc\u00e9s al canal:</li> </ol> <pre><code>use Illuminate\\Support\\Facades\\Broadcast;\n\nBroadcast::channel('futbol-femeni', function () {\n    return true;\n});\n</code></pre> <ol> <li>Modificar el component livewire per a gestionar l'esdeveniment rebut:</li> </ol> <pre><code>    #[On('PartitActualitzat')] \n    public function actualitzarClassificacio()\n    {\n        $this-&gt;calcularClassificacio();\n        $this-&gt;dispatch('$refresh');\n    }\n</code></pre> <ol> <li>Crear el esdeveniment que s'enviar\u00e0 al canal:</li> </ol> <pre><code>namespace App\\Events;\n\nuse Illuminate\\Broadcasting\\Channel;\nuse Illuminate\\Broadcasting\\InteractsWithSockets;\nuse Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast;\nuse Illuminate\\Foundation\\Events\\Dispatchable;\nuse Illuminate\\Queue\\SerializesModels;\n\nclass PartitActualitzat implements ShouldBroadcast\n{\n    use Dispatchable, InteractsWithSockets, SerializesModels;\n\n    public $partit;\n\n    public function __construct($partit)\n    {\n         $this-&gt;partit = $partit;\n    }\n\n    public function broadcastOn()\n    {\n        return new Channel('futbol-femeni');\n    }\n\n    public function broadcastAs()\n    {\n         return 'PartitActualitzat';\n    }\n}\n</code></pre> <ol> <li>Disparar l'esdeveniment des del model:</li> </ol> <pre><code>protected static function booted()\n    {\n        static::updated(function ($partit) {\n            event(new PartitActualitzat($partit));\n        });\n    }\n</code></pre>"},{"location":"11mashup.html#exemple-integracio-amb-chatgpt-api","title":"Exemple Integraci\u00f3 amb ChatGPT API","text":""},{"location":"11mashup.html#pas-1-configuracio-de-lapi","title":"Pas 1 - Configuraci\u00f3 de l'API","text":"<ol> <li>Obtenir les credencials de l'API de ChatGPT: Registra't a OpenAI i obtingues les credencials de l'API de ChatGPT.</li> <li>Configura les credencials en el fitxer .env: Afegeix la clau de l'API a les variables d'entorn del teu projecte Laravel.</li> </ol> <pre><code>OPENAI_API_KEY=tua_clau_api\n</code></pre> <ol> <li>Afegeix la configuraci\u00f3 de l'API a config/services.php:</li> </ol> <pre><code>'openai' =&gt; [\n        'api_key' =&gt; env('OPENAI_API_KEY'),\n    ],\n</code></pre>"},{"location":"11mashup.html#pas-2-creacio-del-servei","title":"Pas 2 - Creaci\u00f3 del Servei","text":"<p>Crea un servei per a gestionar les crides a l'API de ChatGPT:</p> <pre><code>namespace App\\Services;\n\nuse GuzzleHttp\\Client;\nuse Illuminate\\Support\\Facades\\Log;\n\nclass ChatGPTService\n{\n\n    public static function getChatResponse($question)\n    {\n\n        try {\n            $client = new Client([\n                'base_uri' =&gt; 'https://api.openai.com/v1/',\n                'headers' =&gt; [\n                    'Authorization' =&gt; 'Bearer ' . config('services.openai.api_key'),\n                    'Content-Type' =&gt; 'application/json',\n                ],\n            ]);\n            $response = $client-&gt;post('chat/completions', [\n                'json' =&gt; [\n                    'model' =&gt; 'gpt-3.5-turbo',\n                    'messages' =&gt; [\n                        ['role' =&gt; 'system', 'content' =&gt; 'Ets un fan del Bar\u00e7a.'],\n                        ['role' =&gt; 'user', 'content' =&gt; $question],\n                    ],\n                    'max_tokens' =&gt; 250,\n                ],\n            ]);\n\n            $body = json_decode($response-&gt;getBody()-&gt;getContents(), true);\n            $message = '';\n            foreach ($body['choices'] as $r){\n                if ($r['message']['role'] == 'assistant') {\n                    $message .= $r['message']['content'];\n                }\n            }\n            return $message;\n        } catch (\\Exception $e) {\n            Log::error('Error en la resposta de ChatGPT: ' . $e-&gt;getMessage());\n            return ['error' =&gt; 'No s\\'ha pogut obtenir una resposta.'];\n        }\n    }\n}\n</code></pre>"},{"location":"11mashup.html#pas-3-utilitzacio-del-servei","title":"Pas 3 - Utilitzaci\u00f3 del Servei","text":"<p>Utilitza el servei en el teu controlador per obtenir respostes de ChatGPT:</p> <pre><code>public function show(Equip $equip) {\n        $descripcio = ChatGPTService::getChatResponse('Dona una descripci\u00f3 del '.$equip-&gt;nom.' de Futbol Femen\u00ed');\n        return view('equips.show', compact('equip','descripcio'));\n    }\n</code></pre> <p>Modifica la vista per a mostrar la descripci\u00f3:</p> <pre><code>@extends('layouts.futbolFemeni')\n@section('title', \"P\u00e0gina equip Femen\u00ed\" )\n@section('content')\n&lt;x-equip\n   :nom=\"$equip-&gt;nom\"\n   :estadi=\"$equip-&gt;estadi-&gt;nom\"\n   :titols=\"$equip-&gt;titols\"\n   :escut=\"$equip-&gt;escut\"\n   :jugadores=\"$equip-&gt;jugadores\"\n   :descripcio=\"$descripcio\"\n/&gt;\n@endsection\n</code></pre> <p>Modifica el component de la vista ...</p>"},{"location":"11mashup.html#activitats","title":"Activitats","text":"<ol> <li>Crea l'autenticaci\u00f3 mitjan\u00e7ant google per a l'aplicaci\u00f3 de Futbol-femeni fent un nou tipus d'usuari que ser\u00e0 [convidat], que no t\u00e9 permisos per a fer res en la base dades i no te passwords i soles es pot autenticar mitjan\u00e7ant google. Els altre usuaris no poden autenticar-se mitjan\u00e7ant google.</li> <li>Fes que, a banda de modificar la classificaci\u00f3, ixca una alerta en la pantalla i es canvie el color de l'equip a roig si baixa o a verd si puja.</li> <li>Fes que, al mostrar l'estadi isca una descripci\u00f3 de l'estadi feta per chatgpt.</li> <li>Crea una pasarela de pagament per a l'\u00fas de l'aplicaci\u00f3 de Futbol-femeni.</li> </ol>"},{"location":"11recuperacioLaravel.html","title":"Sistema de Gesti\u00f3 Torns de Preguntes i Respostes per a l'Aula","text":"<p>Per aquest exercici, proposem el desenvolupament d'un sistema de gesti\u00f3 de preguntes i respostes per a l'aula, utilitzant Laravel. Aquest sistema permetr\u00e0 als alumnes llan\u00e7ar preguntes al professor, qui les podr\u00e0 gestionar i respondre en ordre. Anem a detallar els passos a seguir per a la implementaci\u00f3 d'aquest projecte.</p>"},{"location":"11recuperacioLaravel.html#objectius","title":"Objectius","text":"<p>Crear un sistema on els alumnes puguin registrar-se, iniciar sessi\u00f3, i enviar preguntes al professor. El professor pot veure les preguntes ordenades per data de creaci\u00f3, respondre-les, i gestionar-les. Les respostes del professor es guardaran juntament amb les preguntes per a futures consultes.</p>"},{"location":"11recuperacioLaravel.html#requisits","title":"Requisits","text":""},{"location":"11recuperacioLaravel.html#installacio-amb-docker-laravel-sail","title":"Instal\u00b7lacio amb docker (laravel sail)","text":"<p>Si ja esteu desenvolupant Linux i Docker Compose est\u00e0 instal\u00b7lat, podeu utilitzar una senzilla ordre de terminal per a crear un nou projecte Laravel. Per exemple, per a crear una nova aplicaci\u00f3 Laravel en un directori anomenat \"exemple-app\", podeu executar l'ordre seg\u00fcent al terminal:</p> <p>curl -s https://laravel.build/tornsAula | bash</p> <p>Cal modificar el .env inclou la configuraci\u00f3 de la base de dades:</p> <p>Ara podeu navegar al directori de l'aplicaci\u00f3 i iniciar Laravel Sail. Laravel Sail proporciona una interf\u00edcie senzilla de l\u00ednia d'ordres per a interactuar amb la configuraci\u00f3 predeterminada de l'acoblador Laravel: <pre><code>cd tornsAula &amp;&amp; ./vendor/bin/sail up &amp;\n</code></pre></p> <p>Un cop iniciats els contenidors Docker de l'aplicaci\u00f3, podeu accedir a l'aplicaci\u00f3 al vostre navegador web a: http://localhost.</p> <p>Per a executar una terminal en el contenidor haurem d'executar:</p> <pre><code>./vendor/bin/sail bash\n</code></pre> <p>I per a inicialitzar la base de dades des de dins del contenidor:</p> <pre><code>./vendor/bin/sail artisan migrate\n</code></pre>"},{"location":"11recuperacioLaravel.html#phpmyadmin","title":"phpmyadmin","text":"<p>Si volem que funcione el phpmyadmin haurien d'afegir un altre contenidor docker, o farem incluint el seg\u00fcent codi en el docker-compose.yml</p> <pre><code>myadmin:\n    image: 'phpmyadmin:latest'\n    ports:\n      - 8080:80\n    environment:\n      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'\n    links:\n      - \"mysql:db\"\n    depends_on:\n      - mysql\n    networks:\n      - sail\n</code></pre>"},{"location":"11recuperacioLaravel.html#autenticacio","title":"Autenticaci\u00f3","text":"<p>Utilitza Laravel Breeze, per a generar la funcionalitat d'autenticaci\u00f3.</p> <pre><code>composer require laravel/breeze --dev\nphp artisan breeze:install\nphp artisan migrate\n</code></pre> <pre><code>npm install\nnpm run dev\n</code></pre>"},{"location":"11recuperacioLaravel.html#model-de-dades-i-migracions","title":"Model de Dades i migracions","text":""},{"location":"11recuperacioLaravel.html#users","title":"Users","text":"<p>Ja tindrem la migraci\u00f3 d'usuaris per defecte amb Laravel. Ser\u00e0 necessari afegir camps addicionals com rol per distingir entre alumnes (ROL_ALUMNO) i professors(ROL_PROFESOR).</p>"},{"location":"11recuperacioLaravel.html#moduls","title":"M\u00f2duls","text":"<p>Crearem un nou model Module amb la seva migraci\u00f3 per a representar els diferents m\u00f2duls del curs.</p> <p><pre><code>php artisan make:model Module -m\n</code></pre> Exemple de creaci\u00f3 de la taula Moduls: <pre><code>Schema::create('modules', function (Blueprint $table) {\n    $table-&gt;id();\n    $table-&gt;string('name');\n    $table-&gt;text('description')-&gt;nullable();\n    $table-&gt;timestamps();\n});\n</code></pre></p>"},{"location":"11recuperacioLaravel.html#preguntes","title":"Preguntes","text":"<p>Crearem el model Question amb una migraci\u00f3 que incloga una clau for\u00e0nia cap a users i una altra cap a moduls.</p>"},{"location":"11recuperacioLaravel.html#respostes","title":"Respostes","text":"<p>El model Answer necessitar\u00e0 una migraci\u00f3 amb una clau for\u00e0nia cap a preguntes.</p>"},{"location":"11recuperacioLaravel.html#seeders-i-factories","title":"Seeders i Factories","text":"<p>Per a poblar la base de dades amb dades de prova, utilitzarem seeders i factories.</p> <p>Per a cada model (User, Module, Question, Answer), crea un factory amb dades fict\u00edcies.</p> <pre><code>// Exemple de comanda per crear un factory\nphp artisan make:factory ModuleFactory --model=Modul\n</code></pre> <p>Defineix les dades fict\u00edcies dins de cada factory utilitzant la llibreria Faker.</p> <p>Crea un seeder per a cada model. Aquests seeders utilitzaran els factories per a generar dades.</p> <pre><code>php artisan make:seeder ModulesTableSeeder\n</code></pre> <p>En el seeder, especifica quantes inst\u00e0ncies de cada model vols crear.</p> <pre><code>// Exemple d'\u00fas d'un factory dins d'un seeder\nModule::factory()-&gt;count(5)-&gt;create();\n</code></pre> <p>Registra els Seeders en el fitxer DatabaseSeeder.php per a poder executar-los tots junts.</p> <pre><code>// Exemple de crida a un seeder des de DatabaseSeeder.php\n$this-&gt;call(ModulesTableSeeder::class);\n</code></pre> <p>Executa els seeders per a poblar la base de dades amb dades fict\u00edcies.</p> <pre><code>php artisan db:seed\n</code></pre> <p>Crea els models necessaris per a l'aplicaci\u00f3: Pregunta i Resposta. Pregunta ha de tenir com a m\u00ednim els camps: id, titol, descripci\u00f3, user_id (creador), creat_a, i actualitzat_a. Resposta ha de tenir com a m\u00ednim els camps: id, pregunta_id, contingut, creat_a, i actualitzat_a.</p>"},{"location":"11recuperacioLaravel.html#rutes-i-controladors","title":"Rutes i Controladors","text":"<p>Defineix les rutes necess\u00e0ries per a gestionar les preguntes i respostes. Crea controladors per a gestionar la l\u00f2gica d'usuari, preguntes i respostes.</p>"},{"location":"11recuperacioLaravel.html#vistes","title":"Vistes","text":"<p>Crea vistes per a: registrar-se, iniciar sessi\u00f3, llistar preguntes, veure detalls de preguntes, i respondre preguntes. Utilitza Blade per a desenvolupar les teves vistes.</p>"},{"location":"11recuperacioLaravel.html#validacio","title":"Validaci\u00f3","text":"<p>Afegeix validaci\u00f3 als formularis per a assegurar que les dades entrades s\u00f3n correctes.</p>"},{"location":"11recuperacioLaravel.html#funcionalitats-extra","title":"Funcionalitats Extra","text":"<p>Implementa un sistema de cua per a gestionar les preguntes que s'envien. Afegeix la possibilitat de notificar al alumne quan la seva pregunta ha estat responduda.</p>"},{"location":"12exercicis_addicionals.html","title":"Exercicis per treballar els resultats d'aprenentatge (RA3 - RA8)","text":""},{"location":"12exercicis_addicionals.html#ra3-escriu-blocs-de-sentencies-embeguts-en-llenguatges-de-marques","title":"\ud83d\udccc RA3 - Escriu blocs de sent\u00e8ncies embeguts en llenguatges de marques","text":""},{"location":"12exercicis_addicionals.html#1-formulari-de-registre-amb-validacio-basica","title":"1\ufe0f\u20e3 Formulari de registre amb validaci\u00f3 b\u00e0sica","text":"<ul> <li>Crea un formulari en HTML que demane: nom, email, contrasenya i data de naixement.</li> <li>Usa PHP per validar que tots els camps estan plens i que l'email t\u00e9 el format correcte.</li> <li>Mostra missatges d'error si la validaci\u00f3 falla.</li> </ul>"},{"location":"12exercicis_addicionals.html#2-calculadora-basica-amb-php","title":"2\ufe0f\u20e3 Calculadora b\u00e0sica amb PHP","text":"<ul> <li>Crea un formulari HTML amb dos camps num\u00e8rics i quatre botons (sumar, restar, multiplicar i dividir).</li> <li>Quan l'usuari prem un bot\u00f3, mostra el resultat en la mateixa p\u00e0gina.</li> <li>Usa <code>$_POST</code> per processar les operacions.</li> </ul>"},{"location":"12exercicis_addicionals.html#3-simulacio-duna-botiga-amb-carret-de-compra","title":"3\ufe0f\u20e3 Simulaci\u00f3 d\u2019una botiga amb carret de compra","text":"<ul> <li>Mostra una llista de productes amb un bot\u00f3 \"Afegir al carret\".</li> <li>Quan es polsa el bot\u00f3, el producte s\u2019afegeix a una sessi\u00f3.</li> <li>Mostra el total de la compra i permet eliminar productes.</li> </ul>"},{"location":"12exercicis_addicionals.html#ra4-desenvolupa-aplicacions-web-embegudes-en-llenguatges-de-marques","title":"\ud83d\udccc RA4 - Desenvolupa aplicacions web embegudes en llenguatges de marques","text":""},{"location":"12exercicis_addicionals.html#4-sistema-de-sessio-dusuari","title":"4\ufe0f\u20e3 Sistema de sessi\u00f3 d\u2019usuari","text":"<ul> <li>Crea un sistema d\u2019inici de sessi\u00f3 amb PHP on els usuaris puguen entrar amb un nom d'usuari i una contrasenya.</li> <li>Mostra un missatge de benvinguda si la sessi\u00f3 est\u00e0 activa.</li> <li>Afig un bot\u00f3 de tancament de sessi\u00f3 que esborre la sessi\u00f3.</li> </ul>"},{"location":"12exercicis_addicionals.html#5-control-dacces-a-una-pagina-web","title":"5\ufe0f\u20e3 Control d'acc\u00e9s a una p\u00e0gina web","text":"<ul> <li>Crea dues p\u00e0gines: una p\u00fablica i una privada.</li> <li>Els usuaris nom\u00e9s poden accedir a la privada si estan autenticats.</li> <li>Redirigeix els usuaris no autenticats a la p\u00e0gina de login.</li> </ul>"},{"location":"12exercicis_addicionals.html#6-sistema-de-comentaris-amb-sessions","title":"6\ufe0f\u20e3 Sistema de comentaris amb sessions","text":"<ul> <li>Permet als usuaris afegir comentaris a una p\u00e0gina sense base de dades.</li> <li>Guarda els comentaris en <code>$_SESSION</code> i mostra\u2019ls ordenats per ordre d'inserci\u00f3.</li> <li>Afig la possibilitat d\u2019eliminar comentaris.</li> </ul>"},{"location":"12exercicis_addicionals.html#ra5-desenvolupa-aplicacions-web-separant-el-codi-de-presentacio-de-la-logica-de-negoci","title":"\ud83d\udccc RA5 - Desenvolupa aplicacions web separant el codi de presentaci\u00f3 de la l\u00f2gica de negoci","text":""},{"location":"12exercicis_addicionals.html#7-refactoritzacio-duna-aplicacio-en-php-amb-mvc","title":"7\ufe0f\u20e3 Refactoritzaci\u00f3 d\u2019una aplicaci\u00f3 en PHP amb MVC","text":"<ul> <li>Crea una aplicaci\u00f3 PHP que gestione una llista de tasques (CRUD b\u00e0sic).</li> <li>Implementa la separaci\u00f3 del codi en:<ul> <li>Model (<code>Task.php</code>): Gestiona les dades.</li> <li>Vista (<code>tasks.view.php</code>): Mostra les tasques.</li> <li>Controlador (<code>TaskController.php</code>): Gestiona les operacions (crear, eliminar, modificar).</li> </ul> </li> </ul>"},{"location":"12exercicis_addicionals.html#8-plantilles-amb-twig","title":"8\ufe0f\u20e3 Plantilles amb Twig","text":"<ul> <li>Instal\u00b7la Twig i ref\u00e9s una aplicaci\u00f3 existent per a utilitzar plantilles.</li> <li>Separa les dades del codi HTML usant <code>{{ variable }}</code> dins de les plantilles.</li> </ul>"},{"location":"12exercicis_addicionals.html#9-autenticacio-avancada-amb-laravel","title":"9\ufe0f\u20e3 Autenticaci\u00f3 avan\u00e7ada amb Laravel","text":"<ul> <li>Implementa un sistema d\u2019autenticaci\u00f3 amb Laravel <code>Auth</code>.</li> <li>Personalitza la vista de login i registre.</li> <li>Crea diferents rols d\u2019usuari (administrador, usuari).</li> </ul>"},{"location":"12exercicis_addicionals.html#ra6-aplicacions-web-amb-acces-a-bases-de-dades","title":"\ud83d\udccc RA6 - Aplicacions web amb acc\u00e9s a bases de dades","text":""},{"location":"12exercicis_addicionals.html#crud-de-gestio-dusuaris-en-php","title":"\ud83d\udd1f CRUD de gesti\u00f3 d'usuaris en PHP","text":"<ul> <li>Crea una aplicaci\u00f3 que permeta afegir, modificar i eliminar usuaris en una base de dades MySQL.</li> <li>Utilitza <code>PDO</code> per fer consultes segures.</li> <li>Mostra un llistat d'usuaris en una taula HTML.</li> </ul>"},{"location":"12exercicis_addicionals.html#11-sistema-de-gestio-de-publicacions-en-laravel","title":"1\ufe0f\u20e31\ufe0f\u20e3 Sistema de gesti\u00f3 de publicacions en Laravel","text":"<ul> <li>Crea un projecte Laravel amb autenticaci\u00f3.</li> <li>Genera un model <code>Post</code> amb camps <code>title</code>, <code>content</code>, <code>user_id</code>.</li> <li>Implementa el CRUD amb Eloquent i Blade.</li> </ul>"},{"location":"12exercicis_addicionals.html#12-autenticacio-dusuaris-amb-base-de-dades","title":"1\ufe0f\u20e32\ufe0f\u20e3 Autenticaci\u00f3 d'usuaris amb base de dades","text":"<ul> <li>Adapta el sistema d\u2019autenticaci\u00f3 PHP per utilitzar una base de dades.</li> <li>Desa les credencials en MySQL i verifica els accessos fent consultes a la BD.</li> </ul>"},{"location":"12exercicis_addicionals.html#ra7-desenvolupament-de-serveis-web-reutilitzables","title":"\ud83d\udccc RA7 - Desenvolupament de serveis web reutilitzables","text":""},{"location":"12exercicis_addicionals.html#13-creacio-duna-api-rest-amb-laravel","title":"1\ufe0f\u20e33\ufe0f\u20e3 Creaci\u00f3 d'una API REST amb Laravel","text":"<ul> <li>Implementa un controlador d'API per gestionar tasques (<code>TaskController</code>).</li> <li>Implementa endpoints:<ul> <li><code>GET /tasks</code> (llistat de tasques)</li> <li><code>POST /tasks</code> (crear una nova tasca)</li> <li><code>PUT /tasks/{id}</code> (actualitzar tasca)</li> <li><code>DELETE /tasks/{id}</code> (esborrar tasca)</li> </ul> </li> </ul>"},{"location":"12exercicis_addicionals.html#14-autenticacio-jwt-en-una-api","title":"1\ufe0f\u20e34\ufe0f\u20e3 Autenticaci\u00f3 JWT en una API","text":"<ul> <li>Instal\u00b7la <code>laravel/passport</code> o <code>sanctum</code> per gestionar autenticaci\u00f3 per tokens.</li> <li>Crea un endpoint <code>/login</code> que retorne un token JWT.</li> <li>Protegeix altres endpoints perqu\u00e8 nom\u00e9s funcionen amb autenticaci\u00f3.</li> </ul>"},{"location":"12exercicis_addicionals.html#15-consumir-una-api-externa-amb-laravel","title":"1\ufe0f\u20e35\ufe0f\u20e3 Consumir una API externa amb Laravel","text":"<ul> <li>Utilitza <code>GuzzleHTTP</code> per consumir una API externa, per exemple, obtenir dades meteorol\u00f2giques des d\u2019una API com OpenWeather.</li> <li>Mostra la informaci\u00f3 en una vista Laravel.</li> </ul>"},{"location":"12exercicis_addicionals.html#ra8-generacio-de-pagines-web-dinamiques-amb-frameworks","title":"\ud83d\udccc RA8 - Generaci\u00f3 de p\u00e0gines web din\u00e0miques amb frameworks","text":""},{"location":"12exercicis_addicionals.html#16-generacio-de-documents-pdf-amb-laravel","title":"1\ufe0f\u20e36\ufe0f\u20e3 Generaci\u00f3 de documents PDF amb Laravel","text":"<ul> <li>Instal\u00b7la <code>barryvdh/laravel-dompdf</code>.</li> <li>Implementa una funcionalitat per generar un informe en PDF amb dades d\u2019una base de dades.</li> <li>Exemple: Generar una factura en PDF amb la informaci\u00f3 del client i els productes comprats.</li> </ul>"},{"location":"12exercicis_addicionals.html#17-gestio-de-permisos-amb-middleware","title":"1\ufe0f\u20e37\ufe0f\u20e3 Gesti\u00f3 de permisos amb Middleware","text":"<ul> <li>Crea un middleware per restringir acc\u00e9s a certes rutes segons el rol de l\u2019usuari.</li> <li>Exemple: <code>/admin</code> nom\u00e9s pot ser accedit per administradors.</li> </ul>"},{"location":"12exercicis_addicionals.html#18-aplicacio-en-temps-real-amb-laravel-i-pusher","title":"1\ufe0f\u20e38\ufe0f\u20e3 Aplicaci\u00f3 en temps real amb Laravel i Pusher","text":"<ul> <li>Implementa un xat en temps real amb Laravel, Pusher i WebSockets.</li> <li>Mostra missatges instantanis entre dos usuaris sense necessitat de recarregar la p\u00e0gina.</li> </ul>"},{"location":"12exercicis_addicionals.html#exercicis-per-treballar-els-resultats-daprenentatge-ra3-ra8_1","title":"Exercicis per treballar els resultats d'aprenentatge (RA3 - RA8)","text":""},{"location":"12exercicis_addicionals.html#ra3-escriu-blocs-de-sentencies-embeguts-en-llenguatges-de-marques_1","title":"\ud83d\udccc RA3 - Escriu blocs de sent\u00e8ncies embeguts en llenguatges de marques","text":""},{"location":"12exercicis_addicionals.html#1-formulari-de-registre-amb-validacio-basica_1","title":"1\ufe0f\u20e3 Formulari de registre amb validaci\u00f3 b\u00e0sica","text":"<ul> <li>Soluci\u00f3: <pre><code>&lt;?php\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $nom = trim($_POST['nom']);\n    $email = trim($_POST['email']);\n    $errors = [];\n    if (empty($nom)) $errors[] = \"El nom \u00e9s obligatori.\";\n    if (!filter_var($email, FILTER_VALIDATE_EMAIL)) $errors[] = \"Email no v\u00e0lid.\";\n}\n?&gt;\n&lt;form method=\"post\"&gt;\n    &lt;input type=\"text\" name=\"nom\" placeholder=\"Nom\"&gt;\n    &lt;input type=\"email\" name=\"email\" placeholder=\"Email\"&gt;\n    &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n&lt;/form&gt;\n</code></pre></li> </ul>"},{"location":"12exercicis_addicionals.html#2-calculadora-basica-amb-php_1","title":"2\ufe0f\u20e3 Calculadora b\u00e0sica amb PHP","text":"<ul> <li>Soluci\u00f3: <pre><code>&lt;?php\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $num1 = $_POST['num1'];\n    $num2 = $_POST['num2'];\n    $op = $_POST['operacio'];\n    switch ($op) {\n        case 'sumar': $resultat = $num1 + $num2; break;\n        case 'restar': $resultat = $num1 - $num2; break;\n    }\n}\n?&gt;\n&lt;form method=\"post\"&gt;\n    &lt;input type=\"number\" name=\"num1\"&gt;\n    &lt;input type=\"number\" name=\"num2\"&gt;\n    &lt;select name=\"operacio\"&gt;\n        &lt;option value=\"sumar\"&gt;Sumar&lt;/option&gt;\n        &lt;option value=\"restar\"&gt;Restar&lt;/option&gt;\n    &lt;/select&gt;\n    &lt;button type=\"submit\"&gt;Calcular&lt;/button&gt;\n&lt;/form&gt;\n&lt;?php if (isset($resultat)) echo \"Resultat: $resultat\"; ?&gt;\n</code></pre></li> </ul>"},{"location":"12exercicis_addicionals.html#3-simulacio-duna-botiga-amb-carret-de-compra_1","title":"3\ufe0f\u20e3 Simulaci\u00f3 d\u2019una botiga amb carret de compra","text":"<ul> <li>Soluci\u00f3: <pre><code>&lt;?php\nsession_start();\nif (!isset($_SESSION['carret'])) $_SESSION['carret'] = [];\nif (isset($_POST['producte'])) {\n    $_SESSION['carret'][] = $_POST['producte'];\n}\n?&gt;\n&lt;form method=\"post\"&gt;\n    &lt;input type=\"text\" name=\"producte\" placeholder=\"Nom del producte\"&gt;\n    &lt;button type=\"submit\"&gt;Afegir&lt;/button&gt;\n&lt;/form&gt;\n&lt;h2&gt;Carret:&lt;/h2&gt;\n&lt;ul&gt;\n    &lt;?php foreach ($_SESSION['carret'] as $p) echo \"&lt;li&gt;$p&lt;/li&gt;\"; ?&gt;\n&lt;/ul&gt;\n</code></pre></li> </ul>"},{"location":"12exercicis_addicionals.html#ra4-desenvolupa-aplicacions-web-embegudes-en-llenguatges-de-marques_1","title":"\ud83d\udccc RA4 - Desenvolupa aplicacions web embegudes en llenguatges de marques","text":""},{"location":"12exercicis_addicionals.html#4-sistema-de-sessio-dusuari_1","title":"4\ufe0f\u20e3 Sistema de sessi\u00f3 d\u2019usuari","text":"<ul> <li>Soluci\u00f3: <pre><code>&lt;?php\nsession_start();\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n    $_SESSION['usuari'] = $_POST['nom'];\n}\nif (isset($_SESSION['usuari'])) {\n    echo \"Benvingut, \".$_SESSION['usuari'];\n    echo \"&lt;a href='logout.php'&gt;Tanca sessi\u00f3&lt;/a&gt;\";\n} else {\n?&gt;\n&lt;form method=\"post\"&gt;\n    &lt;input type=\"text\" name=\"nom\" placeholder=\"Nom d'usuari\"&gt;\n    &lt;button type=\"submit\"&gt;Iniciar sessi\u00f3&lt;/button&gt;\n&lt;/form&gt;\n&lt;?php } ?&gt;\n</code></pre></li> </ul>"},{"location":"12exercicis_addicionals.html#5-control-dacces-a-una-pagina-web_1","title":"5\ufe0f\u20e3 Control d'acc\u00e9s a una p\u00e0gina web","text":"<ul> <li>Soluci\u00f3: <pre><code>&lt;?php\nsession_start();\nif (!isset($_SESSION['usuari'])) {\n    header(\"Location: login.php\");\n    exit;\n}\necho \"Benvingut a la p\u00e0gina privada.\";\n</code></pre></li> </ul>"},{"location":"12exercicis_addicionals.html#6-sistema-de-comentaris-amb-sessions_1","title":"6\ufe0f\u20e3 Sistema de comentaris amb sessions","text":"<ul> <li>Soluci\u00f3: <pre><code>&lt;?php\nsession_start();\nif (!isset($_SESSION['comentaris'])) $_SESSION['comentaris'] = [];\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\" &amp;&amp; !empty($_POST['comentari'])) {\n    $_SESSION['comentaris'][] = $_POST['comentari'];\n}\n?&gt;\n&lt;form method=\"post\"&gt;\n    &lt;textarea name=\"comentari\"&gt;&lt;/textarea&gt;\n    &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n&lt;/form&gt;\n&lt;ul&gt;\n    &lt;?php foreach ($_SESSION['comentaris'] as $c) echo \"&lt;li&gt;$c&lt;/li&gt;\"; ?&gt;\n&lt;/ul&gt;\n</code></pre></li> </ul>"},{"location":"12exercicis_addicionals.html#ra5-desenvolupa-aplicacions-web-separant-el-codi-de-presentacio-de-la-logica-de-negoci_1","title":"\ud83d\udccc RA5 - Desenvolupa aplicacions web separant el codi de presentaci\u00f3 de la l\u00f2gica de negoci","text":""},{"location":"12exercicis_addicionals.html#7-refactoritzacio-duna-aplicacio-en-php-amb-mvc_1","title":"7\ufe0f\u20e3 Refactoritzaci\u00f3 d\u2019una aplicaci\u00f3 en PHP amb MVC","text":"<ul> <li> <p>Soluci\u00f3:</p> </li> <li> <p>Model: <code>Task.php</code> <pre><code>class Task {\n    public $id, $nom;\n    public function __construct($id, $nom) {\n        $this-&gt;id = $id;\n        $this-&gt;nom = $nom;\n    }\n}\n</code></pre></p> </li> <li> <p>Vista: <code>tasks.view.php</code> <pre><code>&lt;?php foreach ($tasks as $task) echo \"&lt;li&gt;$task-&gt;nom&lt;/li&gt;\"; ?&gt;\n</code></pre></p> </li> <li> <p>Controlador: <code>TaskController.php</code> <pre><code>require 'Task.php';\n$tasks = [new Task(1, \"Estudiar\"), new Task(2, \"Treballar\")];\nrequire 'tasks.view.php';\n</code></pre></p> </li> </ul>"},{"location":"12exercicis_addicionals.html#ra6-aplicacions-web-amb-acces-a-bases-de-dades_1","title":"\ud83d\udccc RA6 - Aplicacions web amb acc\u00e9s a bases de dades","text":""},{"location":"12exercicis_addicionals.html#crud-de-gestio-dusuaris-en-php_1","title":"\ud83d\udd1f CRUD de gesti\u00f3 d'usuaris en PHP","text":"<ul> <li>Soluci\u00f3: <pre><code>&lt;?php\n$pdo = new PDO(\"mysql:host=localhost;dbname=test\", \"root\", \"\");\nif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\" &amp;&amp; isset($_POST['nom'])) {\n    $stmt = $pdo-&gt;prepare(\"INSERT INTO usuaris (nom) VALUES (:nom)\");\n    $stmt-&gt;execute(['nom' =&gt; $_POST['nom']]);\n}\n$usuaris = $pdo-&gt;query(\"SELECT * FROM usuaris\")-&gt;fetchAll();\n?&gt;\n&lt;form method=\"post\"&gt;\n    &lt;input type=\"text\" name=\"nom\" placeholder=\"Nom\"&gt;\n    &lt;button type=\"submit\"&gt;Afegir Usuari&lt;/button&gt;\n&lt;/form&gt;\n&lt;ul&gt;\n    &lt;?php foreach ($usuaris as $usuari) echo \"&lt;li&gt;{$usuari['nom']}&lt;/li&gt;\"; ?&gt;\n&lt;/ul&gt;\n</code></pre></li> </ul>"},{"location":"12exercicis_addicionals.html#11-sistema-de-gestio-de-publicacions-en-laravel_1","title":"1\ufe0f\u20e31\ufe0f\u20e3 Sistema de gesti\u00f3 de publicacions en Laravel","text":"<ul> <li>Soluci\u00f3: <pre><code>// Model\nclass Post extends Model {\n    protected $fillable = ['title', 'content'];\n}\n// Controlador\nclass PostController extends Controller {\n    public function store(Request $request) {\n        Post::create($request-&gt;only(['title', 'content']));\n        return redirect()-&gt;route('posts.index');\n    }\n}\n// Rutes\nRoute::post('/posts', [PostController::class, 'store']);\n</code></pre></li> </ul>"},{"location":"12exercicis_addicionals.html#ra7-desenvolupament-de-serveis-web-reutilitzables_1","title":"\ud83d\udccc RA7 - Desenvolupament de serveis web reutilitzables","text":""},{"location":"12exercicis_addicionals.html#13-creacio-duna-api-rest-amb-laravel_1","title":"1\ufe0f\u20e33\ufe0f\u20e3 Creaci\u00f3 d'una API REST amb Laravel","text":"<ul> <li>Soluci\u00f3: <pre><code>Route::middleware('auth:sanctum')-&gt;group(function () {\n    Route::get('/tasks', [TaskController::class, 'index']);\n    Route::post('/tasks', [TaskController::class, 'store']);\n});\n</code></pre></li> </ul>"},{"location":"12exercicis_addicionals.html#ra8-generacio-de-pagines-web-dinamiques-amb-frameworks_1","title":"\ud83d\udccc RA8 - Generaci\u00f3 de p\u00e0gines web din\u00e0miques amb frameworks","text":""},{"location":"12exercicis_addicionals.html#16-generacio-de-documents-pdf-amb-laravel_1","title":"1\ufe0f\u20e36\ufe0f\u20e3 Generaci\u00f3 de documents PDF amb Laravel","text":"<ul> <li>Soluci\u00f3: <pre><code>use Barryvdh\\DomPDF\\Facade as PDF;\nclass ReportController extends Controller {\n    public function generate() {\n        $data = ['title' =&gt; 'Informe PDF'];\n        $pdf = PDF::loadView('pdf_view', $data);\n        return $pdf-&gt;download('document.pdf');\n    }\n}\n</code></pre></li> </ul>"},{"location":"12exercicis_addicionals.html#17-gestio-de-permisos-amb-middleware_1","title":"1\ufe0f\u20e37\ufe0f\u20e3 Gesti\u00f3 de permisos amb Middleware","text":"<ul> <li>Soluci\u00f3: <pre><code>class AdminMiddleware {\n    public function handle($request, Closure $next) {\n        if (!auth()-&gt;user()-&gt;isAdmin()) {\n            return redirect('/home');\n        }\n        return $next($request);\n    }\n}\n</code></pre></li> </ul>"},{"location":"12exercicis_addicionals.html#18-aplicacio-en-temps-real-amb-laravel-i-pusher_1","title":"1\ufe0f\u20e38\ufe0f\u20e3 Aplicaci\u00f3 en temps real amb Laravel i Pusher","text":"<ul> <li>Soluci\u00f3: <pre><code>use Pusher\\Pusher;\n$pusher = new Pusher('APP_KEY', 'APP_SECRET', 'APP_ID', ['cluster' =&gt; 'eu']);\n$pusher-&gt;trigger('chat', 'message', ['message' =&gt; 'Hola m\u00f3n!']);\n</code></pre></li> </ul>"},{"location":"13recuperacioPHP.html","title":"Projecte: Control d'Acc\u00e9s a un P\u00e0rquing amb Porta Autom\u00e0tica","text":""},{"location":"13recuperacioPHP.html#1-descripcio-del-projecte","title":"1. Descripci\u00f3 del Projecte","text":"<p>Aquest projecte implementa un sistema per gestionar l\u2019acc\u00e9s d\u2019un p\u00e0rquing mitjan\u00e7ant una porta autom\u00e0tica. Els usuaris poden registrar-se i afegir vehicles, per\u00f2 un administrador ha d\u2019autoritzar-los perqu\u00e8 puguin accedir. Quan la porta llegeix una matr\u00edcula, el sistema ha de validar si est\u00e0 autoritzada i respondre amb un OK o FALSE.</p>"},{"location":"13recuperacioPHP.html#2-funcionalitats","title":"2. Funcionalitats","text":""},{"location":"13recuperacioPHP.html#funcionalitats-per-als-usuaris","title":"Funcionalitats per als usuaris","text":"<ul> <li>Registre d\u2019usuari.</li> <li>Inici de sessi\u00f3 i gesti\u00f3 de sessi\u00f3.</li> <li>Afegir un vehicle al sistema.</li> <li>Veure l\u2019estat d\u2019aprovaci\u00f3 dels seus vehicles.</li> </ul>"},{"location":"13recuperacioPHP.html#funcionalitats-per-a-ladministrador","title":"Funcionalitats per a l'administrador","text":"<ul> <li>Llistar vehicles pendents d\u2019aprovaci\u00f3.</li> <li>Aprovar o rebutjar vehicles.</li> </ul>"},{"location":"13recuperacioPHP.html#funcionalitats-per-a-la-porta-automatica","title":"Funcionalitats per a la porta autom\u00e0tica","text":"<ul> <li>Enviar una matr\u00edcula al sistema per validar si est\u00e0 registrada i autoritzada.</li> <li>Rebre una resposta (<code>OK</code> o <code>FALSE</code>).</li> </ul>"},{"location":"13recuperacioPHP.html#3-requeriments-tecnics","title":"3. Requeriments T\u00e8cnics","text":"<ul> <li>PHP (versi\u00f3 7 o superior).</li> <li>MySQL/MariaDB com a base de dades.</li> <li>HTML + CSS + JavaScript per a la interf\u00edcie d\u2019usuari.</li> <li>AJAX per a les peticions de la porta autom\u00e0tica.</li> <li>Sessions en PHP per a l\u2019autenticaci\u00f3.</li> <li>Estructura MVC per separar la l\u00f2gica.</li> </ul>"},{"location":"13recuperacioPHP.html#4-model-de-dades-base-de-dades","title":"4. Model de Dades (Base de Dades)","text":""},{"location":"13recuperacioPHP.html#taula-users-usuaris","title":"Taula <code>users</code> (Usuaris)","text":"<pre><code>CREATE TABLE users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    is_active BOOLEAN DEFAULT TRUE,\n    role ENUM('admin', 'user') DEFAULT 'user'\n);\n</code></pre>"},{"location":"13recuperacioPHP.html#taula-vehicles-vehicles","title":"Taula <code>vehicles</code> (Vehicles)","text":"<pre><code>CREATE TABLE vehicles (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    user_id INT NOT NULL,\n    license_plate VARCHAR(20) UNIQUE NOT NULL,\n    model VARCHAR(100) NOT NULL,\n    is_approved BOOLEAN DEFAULT FALSE,\n    FOREIGN KEY (user_id) REFERENCES users(id)\n);\n</code></pre>"},{"location":"13recuperacioPHP.html#5-estructura-de-carpetes-mvc","title":"5. Estructura de Carpetes (MVC)","text":"<pre><code>/parking-access\n\u2502\u2500\u2500 /public\n\u2502   \u251c\u2500\u2500 index.php           # Entrada principal\n\u2502   \u251c\u2500\u2500 assets/             # CSS, JS, imatges\n\u2502\u2500\u2500 /app\n\u2502   \u251c\u2500\u2500 controllers/        # Controladors\n\u2502   \u2502   \u251c\u2500\u2500 UserController.php\n\u2502   \u2502   \u251c\u2500\u2500 VehicleController.php\n\u2502   \u2502   \u251c\u2500\u2500 AdminController.php\n\u2502   \u2502   \u251c\u2500\u2500 AccessController.php\n\u2502   \u251c\u2500\u2500 models/             # Models\n\u2502   \u2502   \u251c\u2500\u2500 User.php\n\u2502   \u2502   \u251c\u2500\u2500 Vehicle.php\n\u2502   \u251c\u2500\u2500 views/              # Vistes\n\u2502   \u2502   \u251c\u2500\u2500 users/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 register.php\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 login.php\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 dashboard.php\n\u2502   \u2502   \u251c\u2500\u2500 admin/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 vehicle_list.php\n\u2502   \u2502   \u251c\u2500\u2500 access/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 check_access.php\n\u2502\u2500\u2500 /config\n\u2502   \u251c\u2500\u2500 config.php          # Configuraci\u00f3 BD\n\u2502\u2500\u2500 /core\n\u2502   \u251c\u2500\u2500 Router.php          # Gesti\u00f3 de rutes\n\u2502   \u251c\u2500\u2500 Controller.php      # Classe base per controladors\n\u2502   \u251c\u2500\u2500 Model.php           # Classe base per models\n\u2502\u2500\u2500 .htaccess               # Reescriptura d\u2019URL\n\u2502\u2500\u2500 composer.json           # Depend\u00e8ncies (opcional)\n\u2502\u2500\u2500 README.md\n</code></pre>"},{"location":"13recuperacioPHP.html#6-configuracio-del-projecte","title":"6. Configuraci\u00f3 del Projecte","text":""},{"location":"13recuperacioPHP.html#1-configurar-connexio-a-la-base-de-dades","title":"1. Configurar Connexi\u00f3 a la Base de Dades","text":"<p>Fitxer <code>/config/config.php</code>: <pre><code>&lt;?php\ndefine('DB_HOST', 'localhost');\ndefine('DB_NAME', 'parking');\ndefine('DB_USER', 'root');\ndefine('DB_PASS', '');\n\ntry {\n    $pdo = new PDO(\"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME, DB_USER, DB_PASS);\n    $pdo-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n} catch (PDOException $e) {\n    die(\"Error en la connexi\u00f3: \" . $e-&gt;getMessage());\n}\n?&gt;\n</code></pre></p>"},{"location":"13recuperacioPHP.html#2-implementar-el-model-dusuari","title":"2. Implementar el Model d'Usuari","text":"<p>Fitxer: <code>/app/models/User.php</code> <pre><code>&lt;?php\nclass User {\n    private $db;\n\n    public function __construct($db) {\n        $this-&gt;db = $db;\n    }\n\n    public function register($name, $email, $password) {\n        $hashedPassword = password_hash($password, PASSWORD_DEFAULT);\n        $stmt = $this-&gt;db-&gt;prepare(\"INSERT INTO users (name, email, password) VALUES (?, ?, ?)\");\n        return $stmt-&gt;execute([$name, $email, $hashedPassword]);\n    }\n\n    public function login($email, $password) {\n        $stmt = $this-&gt;db-&gt;prepare(\"SELECT * FROM users WHERE email = ?\");\n        $stmt-&gt;execute([$email]);\n        $user = $stmt-&gt;fetch(PDO::FETCH_ASSOC);\n        return $user &amp;&amp; password_verify($password, $user['password']) ? $user : false;\n    }\n}\n?&gt;\n</code></pre></p>"},{"location":"13recuperacioPHP.html#3-implementar-el-controlador-dusuari","title":"3. Implementar el Controlador d\u2019Usuari","text":"<p>Fitxer: <code>/app/controllers/UserController.php</code> <pre><code>&lt;?php\nrequire_once 'app/models/User.php';\n\nclass UserController {\n    private $userModel;\n\n    public function __construct($db) {\n        $this-&gt;userModel = new User($db);\n    }\n\n    public function register() {\n        if ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n            $name = $_POST['name'];\n            $email = $_POST['email'];\n            $password = $_POST['password'];\n\n            if ($this-&gt;userModel-&gt;register($name, $email, $password)) {\n                header(\"Location: /login\");\n                exit();\n            } else {\n                echo \"Error en el registre.\";\n            }\n        }\n        include 'app/views/users/register.php';\n    }\n}\n?&gt;\n</code></pre></p> <p>Aquest seria el comen\u00e7ament del projecte. Pots continuar amb els controladors de vehicles, administradors i la resposta de la porta autom\u00e0tica!</p>"},{"location":"1val.html","title":"El llenguatge PHP","text":"Duraci\u00f3 i criteris d'avaluaci\u00f3 <p>Duraci\u00f3 estimada: 20 hores</p> Resultat d'aprenentatge Criteris d'avaluaci\u00f3 2. Escriu sent\u00e8ncies executables per un servidor Web reconeixent i aplicant procediments d'integraci\u00f3 del codi en llenguatges de marques. a) S'han reconegut els mecanismes de generaci\u00f3 de p\u00e0gines Web a partir de llenguatges de marques amb codi embegut.  b) S'han identificat les principals tecnologies associades.   c) S'han utilitzat etiquetes per a la inclusi\u00f3 de codi en el llenguatge de marques.   d) S'ha reconegut la sintaxi del llenguatge de programaci\u00f3 que s'ha d'utilitzar.   e) S'han escrit sent\u00e8ncies simples i s'ha comprovat els seus efectes en el document resultant.   f) S'han utilitzat directives per a modificar el comportament predeterminat.   g) S'han utilitzat els diferents tipus de variables i operadors disponibles en el llenguatge.   h) S'han identificat els \u00e0mbits d'utilitzaci\u00f3 de les variables.   3. Genera p\u00e0gines web de forma din\u00e0mica seguint especificacions rebudes. a) S'han identificat els mecanismes de separaci\u00f3 de la l\u00f2gica de negoci.b) S'han utilitzat tecnologies adequades per a la generaci\u00f3 din\u00e0mica de p\u00e0gines web.c) S'han utilitzat t\u00e8cniques d'acc\u00e9s a dades.d) S'han generat p\u00e0gines web din\u00e0miques que compleixen amb les especificacions rebudes.e) S'ha comprovat el funcionament de les p\u00e0gines web generades.f) S'han seguit les convencions de format i codificaci\u00f3 establertes."},{"location":"1val.html#1-introduccio-a-php","title":"1. Introducci\u00f3 a PHP","text":""},{"location":"1val.html#que-es-php","title":"Qu\u00e8 \u00e9s PHP?","text":"<p>PHP (Hypertext Preprocessor) \u00e9s un llenguatge de programaci\u00f3 de codi obert, especialment dissenyat per al desenvolupament web del costat del servidor. Es pot incrustar f\u00e0cilment en codi HTML, cosa que el fa una opci\u00f3 popular per crear aplicacions web din\u00e0miques i interactives. PHP s'utilitza per gestionar el contingut din\u00e0mic, les bases de dades, el seguiment de sessions i fins i tot per crear aplicacions completes.</p>"},{"location":"1val.html#historia-de-php","title":"Hist\u00f2ria de PHP","text":"<p>PHP (Hypertext Preprocessor) \u00e9s un llenguatge de programaci\u00f3 de codi obert creat l'any 1994 per Rasmus Lerdorf. La primera versi\u00f3 p\u00fablica va ser PHP/FI (Personal Home Page/Forms Interpreter), que va evolucionar fins a convertir-se en PHP 3 el 1998, el qual va ser completament reescrit per Zeev Suraski i Andi Gutmans.</p> <p>Actualment, PHP \u00e9s mantingut per The PHP Group i la versi\u00f3 estable m\u00e9s recent (a partir de juliol de 2024) \u00e9s PHP 8.3. Aquesta versi\u00f3 inclou millores en el rendiment, noves funcions com les propietats llegibles i escriptibles per tipus, expressi\u00f3 <code>match</code>, i molt m\u00e9s.</p>"},{"location":"1val.html#importancia-en-el-desenvolupament-web","title":"Import\u00e0ncia en el desenvolupament web","text":"<p>PHP \u00e9s un dels llenguatges m\u00e9s utilitzats en el desenvolupament web per diverses raons:</p> <ul> <li>Facilitat d'aprenentatge: PHP \u00e9s relativament f\u00e0cil d'aprendre per als principiants en programaci\u00f3 web. La seva sintaxi \u00e9s senzilla i similar a altres llenguatges com C i Perl.</li> <li>Gran comunitat i suport: PHP t\u00e9 una gran comunitat de desenvolupadors que proporcionen suport, biblioteques, extensions i eines. A m\u00e9s, hi ha nombrosos recursos en l\u00ednia, tutorials i documentaci\u00f3.</li> <li>Integraci\u00f3 amb bases de dades: PHP es pot integrar f\u00e0cilment amb una \u00e0mplia varietat de bases de dades, cosa que el fa ideal per a aplicacions web basades en dades.</li> <li>Flexibilitat i escalabilitat: PHP \u00e9s altament flexible i es pot utilitzar per desenvolupar tant aplicacions petites com projectes grans i complexos. Tamb\u00e9 \u00e9s escalable, cosa que permet gestionar un gran volum de tr\u00e0nsit.</li> <li>Cost efectiu: Com que \u00e9s de codi obert, PHP \u00e9s gratu\u00eft per utilitzar i distribuir. Aix\u00f2 redueix els costos de desenvolupament per a les empreses i els desenvolupadors.</li> </ul>"},{"location":"1val.html#exemple-de-codi-php-simple","title":"Exemple de codi PHP simple","text":"<p>Aqu\u00ed tens un exemple senzill de com funciona PHP:</p> PHP <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n\n&lt;h1&gt;El meu primer script PHP&lt;/h1&gt;\n\n&lt;?php\necho \"Hola, m\u00f3n!\";\n?&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>En aquest exemple, el codi PHP s'incrusta dins del codi HTML i es delimina amb . Quan el servidor processa aquest fitxer, executa el codi PHP i envia el resultat al navegador, generant el contingut din\u00e0mic \"Hola, m\u00f3n!\". Aquest \u00e9s un altre exemple de com PHP pot generar HTML din\u00e0micament:</p>"},{"location":"1val.html#2-llenguatges-imbricats-en-html","title":"2. Llenguatges imbricats en HTML","text":"<p>PHP permet incrustar codi dins de documents HTML, permetent la generaci\u00f3 de contingut din\u00e0mic. El codi PHP es delimita amb <code>&lt;?php ... ?&gt;</code>. \u00c9s com\u00fa utilitzar codi PHP dins de HTML per generar contingut din\u00e0mic. Tamb\u00e9 es pot incloure HTML dins de fitxers PHP. <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n    &lt;h1&gt;Benvingut a la meva web&lt;/h1&gt;\n    &lt;p&gt;La data d'avui \u00e9s: &lt;?= date('Y-m-d') ?&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> El codi HTML pot ser generat dins d'instruccions PHP. <pre><code>&lt;?php\necho \"&lt;html&gt;&lt;body&gt;\";\necho \"&lt;h1&gt;Benvingut a la meva web&lt;/h1&gt;\";\necho \"&lt;p&gt;La data d'avui \u00e9s: \" . date('Y-m-d') . \"&lt;/p&gt;\";\necho \"&lt;/body&gt;&lt;/html&gt;\";\n?&gt;\n</code></pre></p> <p>Nom\u00e9s etiquetes d'obertura</p> <p>Si el nostre codi nom\u00e9s contindr\u00e0 codi PHP i res d'html, com per exemple, quan codifiquem classes o interf\u00edcies, nom\u00e9s posarem l'etiqueta d'obertura, per a aix\u00ed indicar que \u00e9s una arxiu de php pur.</p>"},{"location":"1val.html#3-etiquetes-per-a-insercio-de-codi","title":"3. Etiquetes per a inserci\u00f3 de codi","text":"<p>Per inserir codi PHP dins de HTML, utilitzem les etiquetes: <pre><code>&lt;?php\n// Codi PHP aqu\u00ed\n?&gt;\n</code></pre> Per imprimir directament: <pre><code>&lt;?= $variable ?&gt;\n</code></pre> Exemple: <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n    &lt;h1&gt;Benvingut a la meva web&lt;/h1&gt;\n    &lt;p&gt;La data d'avui \u00e9s: &lt;?= date('Y-m-d') ?&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p>"},{"location":"1val.html#4-tipus-de-dades-conversions-entre-tipus-de-dades","title":"4. Tipus de dades. Conversions entre tipus de dades","text":"<p>PHP t\u00e9 diversos tipus de dades: enter, flotant, cadena, boole\u00e0, matriu, objecte, nul. <pre><code>$enter = 10; // Enter\n$flotant = 3.14; // Flotant\n$cadena = \"Hola, m\u00f3n!\"; // Cadena\n$boolea = true; // Boole\u00e0\n$matriu = array(1, 2, 3); // Matriu\n$objecte = new stdClass(); // Objecte\n$nul = null; // Nul\n</code></pre> Conversions: <pre><code>$integer = (int) $variable;\n$float = (float) $variable;\n$string = (string) $variable;\n</code></pre> Exemple: <pre><code>$cadena = \"123\";\n$enter = (int)$cadena; // Converteix la cadena \"123\" a l'enter 123\n</code></pre></p>"},{"location":"1val.html#5-constants","title":"5. Constants","text":"<p>S\u00f3n variables el valor dels quals no varien. Existeixen dues possibilitats:</p> <ul> <li><code>define(NOMBRE, valor);</code></li> <li><code>const NOMBRE; // PHP &gt; 5.3</code></li> </ul> <pre><code>&lt;?php\ndefine(\"PI\", 3.1416);\nconst IVA = 0.21;\n\necho PI, \" \", IVA; // No se pone el s\u00edmbolo dolar\n</code></pre> <ul> <li>Es declaren sempre en MAJ\u00daSCULES</li> <li>Hi ha un conjunt de constants ja predefinides, tamb\u00e9 conegudes com magic constants: https://www.php.net/manual/es/language.constants.predefined.php</li> </ul>"},{"location":"1val.html#6-variables-operadors-ambits-de-les-variables","title":"6. Variables. Operadors.  \u00c0mbits de les variables","text":"<ul> <li>No \u00e9s necessari declarar-les pr\u00e8viament.</li> <li>Comencen per <code>$</code>, per exemple <code>$nom</code>. Despr\u00e9s del <code>$</code>, el seg\u00fcent car\u00e0cter ha de ser una lletra en min\u00fascula (recomanaci\u00f3) o gui\u00f3 baix <code>_</code>. Despr\u00e9s ja es poden posar n\u00fameros.</li> <li>S\u00f3n case sensitive: <code>$*var != $*vAR</code></li> <li>No es declara el seu tipus, el tipat \u00e9s din\u00e0mic. S'assigna en temps d'execuci\u00f3 depenent del valor assignat.</li> <li>Convenient inicialitzar-les, sin\u00f3 donen error a l'utilitzar-les. <pre><code>$variable = \"valor\";\n</code></pre> Operadors:</li> <li>Aritm\u00e8tics: <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code></li> <li>Assignaci\u00f3: <code>=</code>, <code>+=</code>, <code>-=</code></li> <li>Comparaci\u00f3: <code>==</code>, <code>===</code>, <code>!=</code></li> <li>L\u00f2gics: <code>&amp;&amp;</code>, <code>||</code>, <code>!</code></li> <li>Concatenaci\u00f3: <code>.</code></li> </ul> <p>Els \u00e0mbits d'utilitzaci\u00f3 d'una variable s\u00f3n:</p> <p>Local: dins d'una funci\u00f3. Global: fora de qualsevol funci\u00f3. Est\u00e0tic: persisteixen el seu valor entre crides a la funci\u00f3.</p> <p>Exemple: <pre><code>$global = 10; // Variable global    \nfunction contar() {\n    static $vegades = 0;\n    $local = 0; // Variable local\n    $local++;\n    $vegades++;\n    $global++;\n    echo $local,$vegades,$global;\n}\ncontar(); // Mostra 1,1,11\ncontar(); // Mostra 1,2,12\n</code></pre></p>"},{"location":"1val.html#7-sentencies-simples-en-php-i-els-seus-efectes","title":"7. Sent\u00e8ncies simples en PHP i els seus efectes","text":"<p>Assignacions <pre><code>$x = 5;\n$y = \"Hola m\u00f3n\";\n</code></pre> Operacions aritm\u00e8tiques <pre><code>$suma = $x + 10;  // Resulta en 15\n$producte = $x * 2;  // Resulta en 10\n</code></pre> Operacions d'entrada i eixida: <pre><code>echo \"Hola, m\u00f3n!\";\nprint \"Hola, m\u00f3n!\";\n</code></pre> Operacions amb cadenes: <pre><code>$nom = \"Joan\";\n$salutacio = $y . \", \" . $nom;  // Resulta en \"Hola m\u00f3n, Joan\"\n</code></pre> Exemple complet: <pre><code>&lt;?php\n// Assignaci\u00f3 de valors\n$x = 5;\n$y = \"Hola m\u00f3n\";\n\n// Operacions aritm\u00e8tiques\n$suma = $x + 10;\n$producte = $x * 2;\n\n// Concatenaci\u00f3 de cadenes\n$nom = \"Joan\";\n$salutacio = $y . \", \" . $nom;\n\n// Impressi\u00f3 de resultats\necho $y;  // Hola m\u00f3n\necho $suma;  // 15\necho $producte;  // 10\necho $salutacio;  // Hola m\u00f3n, Joan\n</code></pre></p>"},{"location":"1val.html#8-funcions","title":"8. Funcions","text":"<ol> <li>Sintaxi b\u00e0sica:<ul> <li>La paraula clau <code>function</code> es fa servir per a definir la funci\u00f3.</li> <li>Despr\u00e9s segueix el nom de la funci\u00f3, que pot contenir lletres, nombres i guions baixos (per\u00f2 no pot comen\u00e7ar amb un nombre).</li> <li>Entre els par\u00e8ntesis es poden passar arguments (opcionals).</li> <li>El cos de la funci\u00f3 es defineix entre claud\u00e0tors <code>{}</code>.</li> </ul> </li> </ol> <pre><code>function nomFuncio() {\n    // Codi de la funci\u00f3\n}\n</code></pre> <ol> <li>Amb arguments:<ul> <li>Els arguments es passen entre els par\u00e8ntesis i poden ser utilitzats dins de la funci\u00f3.</li> </ul> </li> </ol> <pre><code>function saluda($nom) {\n    echo \"Hola, $nom!\";\n}\n\nsaluda(\"Maria\");  // Mostra \"Hola, Maria!\"\n</code></pre> <ol> <li>Amb valor de retorn:<ul> <li>La paraula clau <code>return</code> permet retornar un valor des de la funci\u00f3. Es pot retornar qualsevol tipus de dades (enter, string, array, etc.).</li> </ul> </li> </ol> <pre><code>function suma($a, $b) {\n    return $a + $b;\n}\n\n$resultat = suma(5, 3);  // $resultat cont\u00e9 8\n</code></pre> <ol> <li>Funcions amb valors per defecte:<ul> <li>Si no es passa cap argument, la funci\u00f3 pot utilitzar un valor per defecte.</li> </ul> </li> </ol> <pre><code>function saludar($nom = \"amic\") {\n    echo \"Hola, \" . $nom;\n}\n\nsaludar();  // Mostra \"Hola, amic\"\nsaludar(\"Maria\");  // Mostra \"Hola, Maria\"\n</code></pre> <ol> <li>Tipus de dades en arguments i retorn (des de PHP 7):<ul> <li>\u00c9s possible especificar el tipus de dades dels arguments i el tipus de retorn. Aix\u00f2 ajuda a assegurar que la funci\u00f3 rep i retorna els tipus esperats.</li> </ul> </li> </ol> <pre><code>function sumar(int $a, int $b): int {\n    return $a + $b;\n}\n\n$resultat = sumar(5, 3);  // $resultat cont\u00e9 8\n</code></pre>"},{"location":"1val.html#9-directives-per-a-modificar-el-comportament-predeterminat-del-codi","title":"9. Directives per a modificar el comportament predeterminat del codi","text":"<p>Include i require: <pre><code>include 'fitxer.php';\nrequire 'fitxer.php';\n</code></pre> Include_once i require_once: <pre><code>include_once 'fitxer.php';\nrequire_once 'fitxer.php';\n</code></pre> Exemple: <pre><code>// contingut de fitxer.php\n&lt;?php\nfunction saludar() {\n    echo \"Hola!\";\n}\n?&gt;\n\n// contingut de principal.php\n&lt;?php\ninclude 'fitxer.php';\nsaludar(); // Mostra \"Hola!\"\n?&gt;\n</code></pre></p>"},{"location":"1val.html#10-mecanismes-de-decisio-if-switch","title":"10. Mecanismes de decisi\u00f3 (if, switch)","text":"<p>If, else, elseif: <pre><code>if ($condicio) {\n    // Codi si la condici\u00f3 \u00e9s certa\n} elseif ($altra_condicio) {\n    // Codi si la segona condici\u00f3 \u00e9s certa\n} else {\n    // Codi si cap de les condicions anteriors \u00e9s certa\n}\n</code></pre> Switch: <pre><code>switch ($variable) {\n    case 1:\n        // Codi per al cas 1\n        break;\n    case 2:\n        // Codi per al cas 2\n        break;\n    default:\n        // Codi per al cas per defecte\n}\n</code></pre> Exemple: <pre><code>$dia = \"dilluns\";\nswitch ($dia) {\n    case \"dilluns\":\n        echo \"Avui \u00e9s dilluns\";\n        break;\n    case \"dimarts\":\n        echo \"Avui \u00e9s dimarts\";\n        break;\n    default:\n        echo \"Avui no \u00e9s dilluns ni dimarts\";\n}\n</code></pre> Match:  <pre><code>$result = match ($variable) {\n    valor1 =&gt; resultat1,\n    valor2 =&gt; resultat2,\n    valor3 =&gt; resultat3,\n    // ...\n    default =&gt; valorPerDefecte,\n};\n</code></pre> Difer\u00e8ncies amb switch</p> <pre><code>1. **Comparaci\u00f3 estricta**: `match` utilitza comparaci\u00f3 estricta (===) per comparar els valors.\n2. **Retorna un valor**: `match` \u00e9s una expressi\u00f3, la qual cosa significa que retorna un valor.\n3. **No necessita break**: A difer\u00e8ncia de `switch`, no es necessita l'\u00fas de `break` per evitar la caiguda (fall-through).\n4. **M\u00e9s conc\u00eds**: Permet una sintaxi m\u00e9s neta i concisa.\n</code></pre> <p>Exemple simple: <pre><code>$color = 'roig';\n\n$resultat = match ($color) {\n    'roig' =&gt; 'El color \u00e9s vermell',\n    'blau' =&gt; 'El color \u00e9s blau',\n    'verd' =&gt; 'El color \u00e9s verd',\n    default =&gt; 'Color desconegut',\n};\n\necho $resultat;  // Sortida: El color \u00e9s vermell\n</code></pre> Exemple expressions complexes: <pre><code>$edat = 20;\n\n$categoria = match (true) {\n    $edat &gt;= 0 &amp;&amp; $edat &lt;= 12 =&gt; 'Nen',\n    $edat &gt;= 13 &amp;&amp; $edat &lt;= 17 =&gt; 'Adolescent',\n    $edat &gt;= 18 &amp;&amp; $edat &lt;= 64 =&gt; 'Adult',\n    $edat &gt;= 65 =&gt; 'Gent gran',\n    default =&gt; 'Edat desconeguda',\n};\n\necho $categoria;  // Sortida: Adult\n</code></pre> Exemples casos multiples: <pre><code>$dia = 'dimecres';\n\n$tipusDia = match ($dia) {\n    'dissabte', 'diumenge' =&gt; 'Cap de setmana',\n    'dilluns', 'dimarts', 'dimecres', 'dijous', 'divendres' =&gt; 'Dia laborable',\n    default =&gt; 'Dia desconegut',\n};\necho $tipusDia;  // Sortida: Dia laborable\n</code></pre></p>"},{"location":"1val.html#11-bucles-for-while-foreach","title":"11. Bucles (for, while, foreach)","text":"<p>For: <pre><code>for ($i = 0; $i &lt; 10; $i++) {\n    echo $i;\n}\n</code></pre> While: <pre><code>$i = 0;\nwhile ($i &lt; 10) {\n    echo $i;\n    $i++;\n}\n</code></pre> Foreach: <pre><code>$matriu = array(1, 2, 3);\nforeach ($matriu as $valor) {\n    echo $valor;\n}\n</code></pre> Exemple: <pre><code>$fruites = array(\"poma\", \"pl\u00e0tan\", \"maduixa\");\nforeach ($fruites as $fruita) {\n    echo $fruita;\n}\n</code></pre></p>"},{"location":"1val.html#12-arrays","title":"12. Arrays","text":"<p>Per a emmagatzemar dades compostes, podem utilitzar tant arrays senzills com arrays associatius (similars a un mapa). En realitat tots els arrays s\u00f3n mapes ordenats compostos de parells clau-valor.</p> <p>Compte amb mesclar tipus</p> <p>Com el tipat \u00e9s din\u00e0mic, nostres arrays poden contenir dades de diferents tipus. No es recomana mesclar els tipus.</p> <p>De la mateixa manera que Java, es defineixen mitjan\u00e7ant claud\u00e0tors, s\u00f3n 0-index, i es pot assignar un valor a un posici\u00f3 determinada:</p> <pre><code>&lt;?php\n$frutas = array(\"naranja\", \"pera\", \"manzana\");\n\n$frutas2 = [\"naranja\", \"pera\", \"manzana\"];\n\n$frutas3 = [];\n$frutas3[0] = \"naranja\";\n$frutas3[1] = \"pera\";\n$frutas3[] = \"manzana\"; // lo a\u00f1ade al final\n</code></pre> <p>Podem obtindre la grand\u00e0ria del array mitjan\u00e7ant la funci\u00f3 <code>count(array)</code>. Per a rec\u00f3rrer el array farem \u00fas d'un bucle <code>for</code>:</p> <pre><code>&lt;?php\n$tam = count($frutas); // tama\u00f1o del array\n\nfor ($i=0; $i&lt;count($frutas); $i++) {\n    echo \"Elemento $i: $frutas[$i] &lt;br /&gt;\";\n}\n</code></pre> <p>Una altra manera de rec\u00f3rrer els arrays, fins i tot m\u00e9s elegant, \u00e9s fer \u00fas de <code>foreach</code>. La seua sintaxi \u00e9s <code>foreach (array as element)</code>:</p> <pre><code>&lt;?php\n// Mitjan\u00e7ant foreach no necessitem saber la grand\u00e0ria del array\nforeach ($frutas as $fruta) {\n    echo \"$fruta &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"1val.html#13-arrays-associatius","title":"13. Arrays associatius","text":"<p>Cada element \u00e9s un parell clau-valor. En comptes d'accedir per la posici\u00f3, el fem mitjan\u00e7ant una clau. Aix\u00ed doncs, per a cada clau s'emmagatzema un valor.</p> <p>A l'hora de rec\u00f3rrer aquest tipus de arrays, mitjan\u00e7ant <code>foreach</code> separem cada element en una parella <code>clau =&gt; valor</code>:</p> <pre><code>&lt;?php\n$capitales = [\"Italia\" =&gt; \"Roma\",\n    \"Francia\" =&gt; \"Paris\",\n    \"Portugal\" =&gt; \"Lisboa\"];\n$capitalFrancia = $capitales[\"Francia\"]; // se accede al elemento por la clave, no la posici\u00f3n\n\n$capitales[\"Alemania\"] = \"Berl\u00edn\"; // a\u00f1adimos un elemento\n\necho \"La capital de Francia es $capitalFrancia &lt;br /&gt;\";\necho \"La capital de Francia es {$capitales[\"Francia\"]} &lt;br /&gt;\";\n\n$capitales[] = \"Madrid\"; // se a\u00f1ade con la clave 0 !!! \u00a1\u00a1\u00a1No asignar valores sin clave!!!\n\nforeach ($capitales as $valor) { // si recorremos un array asociativo, mostraremos los valores\n    echo \"$valor &lt;br /&gt;\";\n}\n\nforeach ($capitales as $pais =&gt; $ciudad) { // separamos cada elemento en clave =&gt; valor\n    echo \"$pais : $ciudad &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"1val.html#14-com-utilitzar-les-cometes-en-php","title":"14. Com utilitzar les cometes en PHP","text":"<p>En PHP, les cometes dobles (<code>\"</code>) i les cometes simples (<code>'</code>) s'utilitzen per definir cadenes de car\u00e0cters, per\u00f2 tenen comportaments diferents a l'hora de processar variables:</p> <ul> <li>Cometes dobles (<code>\"</code>): Interpolen variables i seq\u00fc\u00e8ncies d'escapament especials. \u00c9s a dir, el contingut de la variable es mostrar\u00e0 dins de la cadena.</li> </ul> <pre><code>$nom = \"Maria\";\necho \"Hola, $nom!\";  // Sortida: Hola, Maria!\n</code></pre> <ul> <li>Cometes simples (<code>'</code>): No interpolen variables ni seq\u00fc\u00e8ncies d'escapament especials. La cadena es mostrar\u00e0 exactament com es defineix.</li> </ul> <pre><code>$nom = \"Maria\";\necho 'Hola, $nom!';  // Sortida: Hola, $nom!\n</code></pre>"},{"location":"1val.html#exemple-dus-de-cometes-dobles-per-imprimir-variables","title":"Exemple d'\u00fas de cometes dobles per imprimir variables","text":"<p><pre><code>$color = \"blau\";\n$frase = \"El meu color preferit \u00e9s $color.\";\necho $frase;  // Sortida: El meu color preferit \u00e9s blau.\n  ```\n\n## 15. Comentaris en el codi\nComentaris d'una l\u00ednia:\n```php\n// Aix\u00f2 \u00e9s un comentari d'una l\u00ednia\n</code></pre> Comentaris de diverses l\u00ednies: <pre><code>/* Aix\u00f2 \u00e9s un comentari\n   de diverses l\u00ednies */\n</code></pre></p>"},{"location":"1val.html#16-variables-de-servidor","title":"16. Variables de servidor","text":"<p>PHP emmagatzema la informaci\u00f3 del servidor i de les peticions HTTP en sis arrays globals:</p> <ul> <li><code>$_ENV</code>: informaci\u00f3 sobre les variables d'entorn</li> <li><code>$_GET</code>: par\u00e0metres enviats en la petici\u00f3 GET</li> <li><code>$_POST</code>: par\u00e0metres enviats en el envio POST</li> <li><code>$_COOKIE</code>: cont\u00e9 les cookies de la petici\u00f3, les claus del array s\u00f3n els noms de les cookies</li> <li><code>$_SERVER</code>: informaci\u00f3 sobre el servidor</li> <li><code>$_FILES</code>: informaci\u00f3 sobre els fitxers carregats via upload</li> </ul> <p>Si ens centrem en el array <code>$_SERVER</code> podem consultar les seg\u00fcents propietats:</p> <ul> <li><code>PHP_SELF</code>: nom del script executat, relatiu al document root (p.ej: <code>/tenda/carret.php</code>)</li> <li><code>SERVER_SOFTWARE</code>: (p.ej: Apatxe)</li> <li><code>SERVER_NAME</code>: domini, \u00e0lies DNS (p.ej: <code>www.elche.es</code>)</li> <li><code>REQUEST_METHOD</code>: GET</li> <li><code>REQUEST_URI</code>: URI, sense el domini</li> <li><code>QUERY_STRING</code>: tot el que va despr\u00e9s de <code>?</code> en la URL (p.ej: <code>heroe=Batman&amp;nomene=Bruce</code>)</li> </ul> <p>M\u00e9s informaci\u00f3 en https://www.php.net/manual/es/reserved.variables.server.php</p> <pre><code>&lt;?php\necho\u00a0$_SERVER[\"PHP_SELF\"].\"&lt;br&gt;\";\u00a0//\u00a0/u4/401server.php\necho\u00a0$_SERVER[\"SERVER_SOFTWARE\"].\"&lt;br&gt;\";\u00a0//\u00a0Apache/2.4.46\u00a0(Win64)\u00a0OpenSSL/1.1.1g\u00a0PHP/7.4.9\necho\u00a0$_SERVER[\"SERVER_NAME\"].\"&lt;br&gt;\";\u00a0//\u00a0localhost\n\necho\u00a0$_SERVER[\"REQUEST_METHOD\"].\"&lt;br&gt;\";\u00a0//\u00a0GET\necho\u00a0$_SERVER[\"REQUEST_URI\"].\"&lt;br&gt;\";\u00a0//\u00a0/u4/401server.php?heroe=Batman\necho\u00a0$_SERVER[\"QUERY_STRING\"].\"&lt;br&gt;\";\u00a0//\u00a0heroe=Batman\n</code></pre> <p>Altres propietats relacionades:</p> <ul> <li><code>PATH_INFO</code>: ruta extra despr\u00e9s de la petici\u00f3. Si la URL \u00e9s <code>http://www.php.com/php/pathinfo.php/algo/cosa?foo=bar</code>, llavors <code>$_SERVER['PATH_INFO']</code> ser\u00e0 <code>/alguna cosa/cosa</code>.</li> <li><code>REMOTE_HOST</code>: hostname que va fer la petici\u00f3</li> <li><code>REMOTE_ADDR</code>: IP del client</li> <li><code>AUTH_TYPE</code>: tipus d'autenticaci\u00f3 (p.ej: Basic)</li> <li><code>REMOTE_USER</code>: nom de l'usuari autenticat</li> </ul> <p>Apatxe crea una clau per a cada cap\u00e7alera HTTP, en maj\u00fascules i substituint els guions per subratllats:</p> <ul> <li><code>HTTP_USER_AGENT</code>: agent (navegador)</li> <li><code>HTTP_REFERER</code>: p\u00e0gina des de la qual es va fer la petici\u00f3</li> </ul> <pre><code>&lt;?php\necho\u00a0$_SERVER[\"HTTP_USER_AGENT\"].\"&lt;br&gt;\";\u00a0//\u00a0Mozilla/5.0\u00a0(Windows\u00a0NT\u00a010.0;\u00a0Win64;\u00a0x64)\u00a0AppleWebKit/537.36\u00a0(KHTML,\u00a0like\u00a0Gecko)\u00a0Chrome/87.0.4280.88\u00a0Safari/537.36\n</code></pre>"},{"location":"1val.html#17-formularis","title":"17. Formularis","text":"<p>A l'hora d'enviar un formulari, hem de tindre clar quan usar GET o POST</p> <ul> <li> <p>GET: els par\u00e0metres es passen en la URL</p> <ul> <li>&lt;2048 car\u00e0cters, nom\u00e9s ASCII</li> <li>Permet emmagatzemar la direcci\u00f3 completa (marcador / historial)</li> <li>Idempotent: dues crides amb les mateixes dades sempre ha de donar el mateix resultat</li> <li>El navegador pot cachejar les cridades</li> </ul> </li> <li> <p>POST: par\u00e0metres ocults (no encriptats)</p> <ul> <li>Sense l\u00edmit de dades, permet dades bin\u00e0ries.</li> <li>No es poden escorcollar</li> <li>No idempotent \u2192 actualitzar la BBDD</li> </ul> </li> </ul> <p>Aix\u00ed doncs, per a recollir les dades accedirem al array depenent del m\u00e8tode del formulari que ens ha invocat:</p> <pre><code>&lt;?php\n$par = $_GET[\"parametro\"]\n$par = $_POST[\"parametro\"]\n</code></pre> <p>A l'hora d'enviar un formulari, hem de tindre clar quan usar GET o POST. Per als seg\u00fcents apartats ens basarem en el seg\u00fcent exemple:</p>"},{"location":"1val.html#validacio","title":"Validaci\u00f3","text":"<p>Respecte a la validaci\u00f3, \u00e9s convenient sempre fer validaci\u00f3 doble:</p> <ul> <li>En el client mitjan\u00e7ant JS</li> <li>En servidor, abans de cridar a la capa de negoci, \u00e9s convenient tornar a validar les dades.</li> </ul> <pre><code>&lt;?php\nif\u00a0(isset($_GET[\"parametro\"]))\u00a0{\n\u00a0\u00a0\u00a0\u00a0$par\u00a0=\u00a0$_GET[\"parametro\"];\n\u00a0\u00a0\u00a0\u00a0//\u00a0comprobar\u00a0si\u00a0$par\u00a0tiene\u00a0el\u00a0formato\u00a0adecuado,\u00a0su\u00a0valor,\u00a0etc...\n}\n</code></pre> <p>Llibreries de validaci\u00f3</p> <p>Existeixen diverses llibreries que faciliten la validaci\u00f3 dels formularis, com s\u00f3n respect/validation o particle/validator. Quan estudiem Laravel aprofundirem en la validaci\u00f3 de manera declarativa.</p>"},{"location":"1val.html#parametre-multivalor","title":"Par\u00e1metre multivalor","text":"<p>Existeixen elements HTML que envien diversos valors:</p> <ul> <li><code>select multiple</code></li> <li><code>checkbox</code></li> </ul> <p>Per a recollir les dades, el nom de l'element ha de ser un array.</p> <pre><code>&lt;select name=\"lenguajes[]\" multiple=\"true\"&gt;\n    &lt;option value=\"c\"&gt;C&lt;/option&gt;\n    &lt;option value=\"java\"&gt;Java&lt;/option&gt;\n    &lt;option value=\"php\"&gt;PHP&lt;/option&gt;\n    &lt;option value=\"python\"&gt;Python&lt;/option&gt;\n&lt;/select&gt;\n\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"c\" /&gt; C&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"java\" /&gt; Java&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"php\" /&gt; Php&lt;br /&gt;\n&lt;input type=\"checkbox\" name=\"lenguajes[]\" value=\"python\" /&gt; Python&lt;br /&gt;\n</code></pre> <p>De manera que despr\u00e9s en recollir les dades:</p> <pre><code>&lt;?php\n$lenguajes = $_GET[\"lenguajes\"];\n\nforeach ($lenguajes as $lenguaje) {\n    echo \"$lenguaje &lt;br /&gt;\";\n}\n</code></pre>"},{"location":"1val.html#tornant-a-emplenar-un-formulari","title":"Tornant a emplenar un formulari","text":"<p>Un sticky form \u00e9s un formulari que recorda els seus valors. Per a aix\u00f2, hem d'emplenar els atributs <code>value</code> dels elements HTML amb la informaci\u00f3 que contenien:</p> <pre><code>&lt;?php\nif (!empty($_POST['modulos']) &amp;&amp; !empty($_POST['nombre'])) {\n  // Aqu\u00ed se incluye el c\u00f3digo a ejecutar cuando los datos son correctos\n} else {\n  // Generamos el formulario\n  $nombre = $_POST['nombre'] ?? \"\";\n  $modulos = $_POST['modulos'] ?? [];\n  ?&gt;\n  &lt;form action=\"&lt;?php echo $_SERVER['PHP_SELF'];?&gt;\" method=\"POST\"&gt;\n   &lt;p&gt;&lt;label for=\"nombre\"&gt;Nombre del alumno:&lt;/label&gt;\n    &lt;input type=\"text\" name=\"nombre\" id=\"nombre\" value=\"&lt;?= $nombre ?&gt;\" /&gt; \n   &lt;/p&gt;\n   &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWES\" value=\"DWES\"\n    &lt;?php if(in_array(\"DWES\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n    &lt;label for=\"modulosDWES\"&gt;Desarrollo web en entorno servidor&lt;/label&gt;\n   &lt;/p&gt;\n   &lt;p&gt;&lt;input type=\"checkbox\" name=\"modulos[]\" id=\"modulosDWEC\" value=\"DWEC\"\n    &lt;?php if(in_array(\"DWEC\",$modulos)) echo 'checked=\"checked\"'; ?&gt; /&gt;\n    &lt;label for=\"modulosDWEC\"&gt;Desarrollo web en entorno cliente&lt;/label&gt;\n   &lt;/p&gt;\n   &lt;input type=\"submit\" value=\"Enviar\" name=\"enviar\"/&gt;\n  &lt;/form&gt;\n&lt;?php } ?&gt;\n</code></pre>"},{"location":"1val.html#pujant-arxius","title":"Pujant arxius","text":"<p>S'emmagatzemen en el servidor en el array <code>$_FILES</code> amb el nom del camp del tipus <code>file</code> del formulari.</p> <pre><code>&lt;form enctype=\"multipart/form-data\" action=\"&lt;?php echo $_SERVER['PHP_SELF']; ?&gt;\"  method=\"POST\"&gt;\n    Archivo: &lt;input name=\"archivoEnviado\" type=\"file\" /&gt;\n    &lt;br /&gt;\n    &lt;input type=\"submit\" name=\"btnSubir\" value=\"Subir\" /&gt;\n&lt;/form&gt;\n</code></pre> <p>Configuraci\u00f3 en <code>php.ini</code></p> <ul> <li><code>file_uploads</code>: on / off</li> <li><code>upload_max_filesize</code>: 2M</li> <li><code>upload_tmp_dir</code>: directori temporal. No \u00e9s necessari configurar-ho, agafar\u00e0 el predeterminat del sistema</li> <li><code>post_max_size</code>: grand\u00e0ria m\u00e0xima de les dades POST. Ha de ser major a upload_max_filesize.</li> <li><code>max_file_uploads</code>: nombre m\u00e0xim d'arxius que es poden carregar alhora.</li> <li><code>max_input_estafe</code>: temps m\u00e0xim emprat en la c\u00e0rrega (GET/POST i upload \u2192 normalment es configura en 60)</li> <li><code>memory_limit</code>: 128M</li> <li><code>max_execution_estafe</code>: temps d'execuci\u00f3 d'un script (no t\u00e9 en compte el upload)</li> </ul> <p>Per a carregar els arxius, accedim al array <code>$_FILES</code>:</p> <pre><code>&lt;?php\nif (isset($_POST['btnSubir']) &amp;&amp; $_POST['btnSubir'] == 'Subir') {\n    if (is_uploaded_file($_FILES['archivoEnviado']['tmp_name'])) {\n        // subido con \u00e9xito\n        $nombre = $_FILES['archivoEnviado']['name'];\n        move_uploaded_file($_FILES['archivoEnviado']['tmp_name'], \"./uploads/{$nombre}\");\n\n        echo \"&lt;p&gt;Archivo $nombre subido con \u00e9xito&lt;/p&gt;\";\n    }\n}\n</code></pre> <p>Cada arxiu carregat en <code>$_FILES</code> t\u00e9:</p> <ul> <li><code>name</code>: nom</li> <li><code>tmp_name</code>: ruta temporal</li> <li><code>size</code>: grand\u00e0ria en bytes</li> <li><code>type</code>: tipus ACARONE</li> <li><code>error</code>: si hi ha error, cont\u00e9 un missatge. Si ok \u2192 0.</li> </ul>"},{"location":"1val.html#capcaleres-de-resposta","title":"Cap\u00e7aleres de resposta","text":"<p>Ha de ser el primer a retornar. Es retornen mitjan\u00e7ant la funci\u00f3 <code>header(cadena)</code>. Mitjan\u00e7ant les cap\u00e7aleres podem configurar el tipus de contingut, temps d'expiraci\u00f3, redirigir el navegador, especificar errors HTTP, etc.</p> <pre><code>&lt;?php header(\"Content-Type: text/plain\"); ?&gt;\n&lt;?php header(\"Location: http://www.ejemplo.com/inicio.html\");\nexit(); \n</code></pre> <p>Es pot comprovar en les eines del desenvolupador dels navegadors web mitjan\u00e7ant Developer Tools \u2192 Network \u2192 Headers.</p> <p>\u00c9s molt com\u00fa configurar les cap\u00e7aleres per a evitar consultes a la cache o provocar la seua renovaci\u00f3:</p> <pre><code>&lt;?php\nheader(\"Expires: Sun, 31 Jan 2021 23:59:59 GMT\");\n// tres horas\n$now = time();\n$horas3 = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\", $now + 60 * 60 * 3);\nheader(\"Expires: {$horas3}\");\n// un a\u00f1o\n$now = time();\n$anyo1 = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\", $now + 365 * 86440);\nheader(\"Expires: {$anyo1}\");\n// se marca como expirado (fecha en el pasado)\n$pasado = gmstrftime(\"%a, %d %b %Y %H:%M:%S GMT\");\nheader(\"Expires: {$pasado}\");\n// evitamos cache de navegador y/o proxy\nheader(\"Expires: Mon, 26 Jul 1997 05:00:00 GMT\");\nheader(\"Last-Modified: \" . gmdate(\"D, d M Y H:i:s\") . \" GMT\");\nheader(\"Cache-Control: no-store, no-cache, must-revalidate\");\nheader(\"Cache-Control: post-check=0, pre-check=0\", false);\nheader(\"Pragma: no-cache\");\n// redirigimos a otra p\u00e1gina\nheader(\"Location: http://www.ejemplo.com/inicio.html\");\nexit();\n// devolvemos un error 404\nheader(\"HTTP/1.0 404 Not Found\");\n// enviamos un archivo para descargar\nheader(\"Content-Type: application/force-download\");\n// enviamos un archivo json\nheader(\"Content-Type: application/json\");\n</code></pre>"},{"location":"1val.html#18-referencies","title":"18. Refer\u00e8ncies","text":""},{"location":"1val.html#llibres-recomanats","title":"Llibres Recomanats","text":"<ol> <li> <p>PHP and MySQL Web Development de Luke Welling i Laura Thomson</p> <ul> <li>Aquest llibre proporciona una visi\u00f3 completa sobre el desenvolupament web amb PHP i MySQL, des de conceptes b\u00e0sics fins a t\u00e8cniques avan\u00e7ades.</li> </ul> </li> <li> <p>Learning PHP, MySQL &amp; JavaScript: With jQuery, CSS &amp; HTML5 de Robin Nixon</p> <ul> <li>Ideal per a aquells que busquen una introducci\u00f3 pr\u00e0ctica al desenvolupament web modern utilitzant PHP juntament amb altres tecnologies web.</li> </ul> </li> <li> <p>Modern PHP: New Features and Good Practices de Josh Lockhart</p> <ul> <li>Aquest llibre explora les novetats i bones pr\u00e0ctiques en les versions modernes de PHP, incloent-hi temes com la programaci\u00f3 orientada a objectes i l'\u00fas de frameworks.</li> </ul> </li> </ol>"},{"location":"1val.html#documentacio-oficial","title":"Documentaci\u00f3 Oficial","text":"<ul> <li>Documentaci\u00f3 Oficial de PHP<ul> <li>La documentaci\u00f3 oficial de PHP \u00e9s una refer\u00e8ncia essencial per a qualsevol desenvolupador que utilitzi PHP. Inclou guies de llenguatge, refer\u00e8ncies de funcions i exemples de codi.</li> </ul> </li> </ul>"},{"location":"1val.html#cursos-en-linia","title":"Cursos en L\u00ednia","text":"<ul> <li> <p>Curso de PHP en W3Schools</p> <ul> <li>Un recurs en l\u00ednia gratu\u00eft amb tutorials i exercicis interactius que cobreixen els conceptes b\u00e0sics i avan\u00e7ats de PHP.</li> </ul> </li> <li> <p>PHP for Beginners - Become a PHP Master - CMS Project a Udemy</p> <ul> <li>Un curs complet de PHP en Udemy que inclou la creaci\u00f3 d'un sistema de gesti\u00f3 de continguts (CMS) com a projecte final.</li> </ul> </li> </ul>"},{"location":"1val.html#recursos-addicionals","title":"Recursos Addicionals","text":"<ul> <li> <p>PHP: The Right Way</p> <ul> <li>Un recurs comunitari que ofereix bones pr\u00e0ctiques, consells i pautes per al desenvolupament amb PHP.</li> </ul> </li> <li> <p>Laravel Documentation</p> <ul> <li>Documentaci\u00f3 oficial de Laravel, un dels frameworks de PHP m\u00e9s populars per al desenvolupament web.</li> </ul> </li> </ul>"},{"location":"1val.html#exemples-i-tutorials","title":"Exemples i Tutorials","text":"<ul> <li> <p>TutorialsPoint PHP Tutorial</p> <ul> <li>Proporciona una introducci\u00f3 detallada a PHP amb exemples de codi i explicacions pas a pas.</li> </ul> </li> <li> <p>GeeksforGeeks PHP Tutorials</p> <ul> <li>Una col\u00b7lecci\u00f3 d'articles i tutorials sobre diversos temes relacionats amb PHP, des de conceptes b\u00e0sics fins a avan\u00e7ats.</li> </ul> </li> </ul>"},{"location":"1val.html#repositoris-de-codi","title":"Repositoris de Codi","text":"<ul> <li>GitHub PHP<ul> <li>Una col\u00b7lecci\u00f3 de repositoris de codi font en PHP, on pots trobar projectes de codi obert i exemples pr\u00e0ctics.</li> </ul> </li> </ul>"},{"location":"1val.html#19-exercicis","title":"19. Exercicis","text":""},{"location":"1val.html#bateria-dexercicis-solucionats-per-a-la-unitat-de-php","title":"Bateria d'Exercicis Solucionats per a la Unitat de PHP","text":""},{"location":"1val.html#exercici-1-introduccio-a-php","title":"Exercici 1: Introducci\u00f3 a PHP","text":"<ol> <li>Crea un fitxer  que imprimeixi \"Hola, m\u00f3n!\" a la pantalla.</li> <li>Modifica el fitxer per tal que imprimeixi el teu nom utilitzant una variable.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Exercici 1\n$name = 'Ignasi':\necho \"Hola, m\u00f3n!\" . \"Hola, \" .$name;\n?&gt;\n</code></pre>"},{"location":"1val.html#exercici-2-us-de-cometes","title":"Exercici 2: \u00das de cometes","text":"<ol> <li>Crea un fitxer que definisca una variable <code>$name</code> amb el teu nom i imprimeixi la frase \"Hola, [nom]!\" utilitzant cometes dobles.</li> <li>Fes-ho amb cometes simples i compara els resultats.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Exercici 2\n$name = 'Ignasi':\necho \"Hola, $name!\";\necho 'Hola, $name!';\n?&gt;\n</code></pre>"},{"location":"1val.html#exercici-3-funcions-basiques","title":"Exercici 3: Funcions b\u00e0siques","text":"<ol> <li>Crea una funci\u00f3 <code>suma</code> que sume dos n\u00fameros i retorni el resultat. Invoca la funci\u00f3 amb els n\u00fameros 5 i 3 i imprimeix el resultat.</li> <li>Crea una funci\u00f3 <code>multiplicacio</code> que multipliqui dos n\u00fameros i retorni el resultat. Invoca la funci\u00f3 amb els n\u00fameros 4 i 7 i imprimeix el resultat.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Exercici 2\nfunction suma($a, $b) {\n    return $a + $b;\n}\nfunction multiplicacio($a, $b) {\n    return $a * $b;\n}\necho suma(5, 3);  // Sortida: 8\necho multiplicacio(4, 7);  // Sortida: 28\n?&gt;\n</code></pre>"},{"location":"1val.html#exercici-4-control-de-flux-condicionals","title":"Exercici 4: Control de flux - Condicionals","text":"<ol> <li>Crea un fitxer que definisca una variable <code>$edat</code>. Si <code>$edat</code> \u00e9s major o igual a 18, imprimeix \"Ets major d'edat\"; en cas contrari, imprimeix \"Ets menor d'edat\".</li> <li>Modifica el fitxer <code>edat.php</code> per tal que imprimeixi \"Edat inv\u00e0lida\" si <code>$edat</code> \u00e9s un n\u00famero negatiu.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Exercici 4\n$edat = 20;\nif ($edat &lt; 0) {\n    echo \"Edat inv\u00e0lida\";\n} else{\n    if ($edat &gt;= 18) {\n        echo \"Ets major d'edat\";\n    } else {\n        echo \"Ets menor d'edat\";\n    }\n}\n?&gt;\n</code></pre>"},{"location":"1val.html#exercici-5-control-de-flux-bucles","title":"Exercici 5: Control de flux - Bucles","text":"<ol> <li>Crea un fitxer que utilitzi un bucle <code>for</code> per imprimir els n\u00fameros del 0 al 9.</li> <li>Fes-ho tamb\u00e9 amb un bucle <code>while</code> que faci el mateix.</li> </ol> Soluci\u00f3 <pre><code>    &lt;?php\n    // Exercici 5\n    // Bucle for\n    for ($i = 0; $i &lt; 10; $i++) {\n        echo $i . \"&lt;br&gt;\";\n    }\n    // Bucle while\n    $i = 0;\n    while ($i &lt; 10) {\n        echo $i . \"&lt;br&gt;\";\n        $i++;\n    }\n    ?&gt;\n</code></pre>"},{"location":"1val.html#exercici-6-treballar-amb-arrays","title":"Exercici 6: Treballar amb arrays","text":"<ol> <li>Crea un fitxer que definisca un array <code>$fruites</code> amb tres elements: \"poma\", \"pl\u00e0tan\" i \"maduixa\". Imprimeix el primer element de l'array.</li> <li>Afegeix un quart element \"taronja\" a l'array i imprimeix tots els elements utilitzant un bucle <code>foreach</code>.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Exercici 6\n// Punt 1\n$fruites = array(\"poma\", \"pl\u00e0tan\", \"maduixa\");\necho $fruites[0] . \"&lt;br&gt;\";\n// Punt 2\n$fruites[] = \"taronja\";\nforeach ($fruites as $fruita) {\n    echo $fruita . \"&lt;br&gt;\";\n}\n?&gt;\n</code></pre>"},{"location":"1val.html#exercici-7-cometes-dobles-i-variables","title":"Exercici 7: Cometes dobles i variables","text":"<ol> <li>Crea un fitxer que definisca una variable <code>$color</code> amb el valor \"blau\". Utilitza cometes dobles per imprimir \"El meu color preferit \u00e9s [color].\"</li> <li>Ara,  utilitza cometes simples i concatenaci\u00f3.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Exercici 7\n$color = \"blau\";\necho \"El meu color preferit \u00e9s $color.\";\necho 'El meu color preferit \u00e9s ' . $color . '.';\n?&gt;\n</code></pre>"},{"location":"1val.html#exercici-8-combinacio-de-funcions-i-arrays","title":"Exercici 8: Combinaci\u00f3 de funcions i arrays","text":"<ol> <li>Crea una funci\u00f3 <code>afegir_element</code> que prenga un array i un element com a arguments, afegeisca l'element a l'array i retorne l'array modificat.</li> <li>Crea un fitxer on defnisques un array <code>$animals</code> amb els elements \"gat\" i \"gos\". Utilitza la funci\u00f3 <code>afegir_element</code> per afegir \"conill\" a l'array i imprimeix tots els elements.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Exercici 8\nfunction afegir_element($array, $element) {\n    $array[] = $element;\n    return $array;\n}\n$animals = array(\"gat\", \"gos\");\n$animals = afegir_element($animals, \"conill\");\nforeach ($animals as $animal) {\n    echo $animal . \"&lt;br&gt;\";\n}\n?&gt;\n</code></pre>"},{"location":"1val.html#exercici-9-utilitzant-match-per-a-categoritzar","title":"Exercici 9: Utilitzant <code>match</code> per a categoritzar","text":"<p>Crea un fitxer  que utilitze la instrucci\u00f3 <code>match</code> per categoritzar una variable <code>$nota</code> segons el seg\u00fcent criteri:      - Si la nota \u00e9s 10, imprimir \"Excel\u00b7lent\".      - Si la nota \u00e9s 8 o 9, imprimir \"Molt b\u00e9\".      - Si la nota \u00e9s 5, 6 o 7, imprimir \"B\u00e9\".      - Per qualsevol altra nota, imprimir \"Insuficient\".</p> Soluci\u00f3 <pre><code>$nota = 8;\n\n$resultat = match (true) {\n    $nota === 10 =&gt; 'Excel\u00b7lent',\n    $nota &gt;= 8 &amp;&amp; $nota &lt;= 9 =&gt; 'Molt b\u00e9',\n    $nota &gt;= 5 &amp;&amp; $nota &lt;= 7 =&gt; 'B\u00e9',\n    default =&gt; 'Insuficient',\n};\n\necho $resultat;  // Sortida: Molt b\u00e9\n</code></pre>"},{"location":"1val.html#exercici-10-llista-de-preus-amb-match","title":"Exercici 10: Llista de preus amb <code>match</code>","text":"<p>Crea un fitxer que utilitze la instrucci\u00f3 <code>match</code> per assignar un preu a una variable <code>$producte</code>. Els productes i preus s\u00f3n:      - \"pa\" =&gt; 1.00      - \"llet\" =&gt; 0.80      - \"formatge\" =&gt; 2.50      - Qualsevol altre producte =&gt; 0.00</p> Soluci\u00f3 <pre><code>$producte = 'formatge';\n\n$preu = match ($producte) {\n    'pa' =&gt; 1.00,\n    'llet' =&gt; 0.80,\n    'formatge' =&gt; 2.50,\n    default =&gt; 0.00,\n};\n\necho \"El preu de $producte \u00e9s $preu euros.\";  // Sortida: El preu de formatge \u00e9s 2.5 euros.\n</code></pre>"},{"location":"1val.html#exercici-11-calculadora-simple-amb-match","title":"Exercici 11: Calculadora simple amb <code>match</code>","text":"<p>Crea un fitxer que utilitze la instrucci\u00f3 <code>match</code> per fer operacions matem\u00e0tiques b\u00e0siques (<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>). La variable <code>$operacio</code> ha de determinar l'operaci\u00f3 a realitzar i les variables <code>$a</code> i <code>$b</code> seran els operands.</p> Soluci\u00f3 <pre><code>$a = 10;\n$b = 5;\n$operacio = '+';\n\n$resultat = match ($operacio) {\n    '+' =&gt; $a + $b,\n    '-' =&gt; $a - $b,\n    '*' =&gt; $a * $b,\n    '/' =&gt; $a / $b,\n    default =&gt; 'Operaci\u00f3 desconeguda',\n};\n\necho \"El resultat de $a $operacio $b \u00e9s $resultat.\";  // Sortida: El resultat de 10 + 5 \u00e9s 15.\n</code></pre>"},{"location":"1val.html#exercici-12-tractament-de-formulari","title":"Exercici 12: Tractament de formulari","text":"<ol> <li>Crea un formulari en HTML que permeti als usuaris introduir el seu nom i edat. Despr\u00e9s de l'enviament del formulari, mostra una p\u00e0gina PHP que processi les dades introdu\u00efdes i mostri un missatge de benvinguda personalitzat.</li> </ol> Soluci\u00f3 <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Formulari de Benvinguda&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h2&gt;Formulari de Benvinguda&lt;/h2&gt;\n    &lt;form action=\"benvinguda.php\" method=\"post\"&gt;\n        &lt;label for=\"nom\"&gt;Nom:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"nom\" name=\"nom\" required&gt;&lt;br&gt;&lt;br&gt;\n        &lt;label for=\"edat\"&gt;Edat:&lt;/label&gt;\n        &lt;input type=\"number\" id=\"edat\" name=\"edat\" required&gt;&lt;br&gt;&lt;br&gt;\n        &lt;input type=\"submit\" value=\"Enviar\"&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Benvinguda&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;?php\n        if ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n            $nom = htmlspecialchars($_POST['nom']);\n            $edat = htmlspecialchars($_POST['edat']);\n            echo \"&lt;h2&gt;Benvingut/da, $nom!&lt;/h2&gt;\";\n            echo \"&lt;p&gt;Tens $edat anys.&lt;/p&gt;\";\n        } else {\n            echo \"&lt;p&gt;Si us plau, completa el formulari.&lt;/p&gt;\";\n        }\n    ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"1val.html#exercici-13-formulari-en-la-mateixa-pagina","title":"Exercici 13: Formulari en la mateixa p\u00e0gina","text":"<ol> <li>Crea un formulari en HTML que permeta als usuaris introduir la seva adre\u00e7a de correu electr\u00f2nic i un missatge. Despr\u00e9s de l'enviament del formulari, crea una p\u00e0gina PHP que processe les dades introdu\u00efdes, comprove que l'adre\u00e7a de correu electr\u00f2nic \u00e9s v\u00e0lida i mostre el missatge introdu\u00eft per l'usuari.</li> </ol> Soluci\u00f3 <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Formulari de Contacte&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;?php\n    if ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n        $email = htmlspecialchars($_POST['email']);\n        $missatge = htmlspecialchars($_POST['missatge']);\n\n        if (filter_var($email, FILTER_VALIDATE_EMAIL)) {\n            echo \"&lt;h2&gt;Gr\u00e0cies per contactar-nos!&lt;/h2&gt;\";\n            echo \"&lt;p&gt;El teu correu electr\u00f2nic: $email&lt;/p&gt;\";\n            echo \"&lt;p&gt;El teu missatge: $missatge&lt;/p&gt;\";\n        } else {\n            echo \"&lt;p&gt;Adre\u00e7a de correu electr\u00f2nic no v\u00e0lida. Si us plau, torna-ho a intentar.&lt;/p&gt;\";\n        }\n    } else {\n        ?&gt;\n        &lt;h2&gt;Formulari de Contacte&lt;/h2&gt;\n        &lt;form action=\"&lt;?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?&gt;\" method=\"post\"&gt;\n            &lt;label for=\"email\"&gt;Correu electr\u00f2nic:&lt;/label&gt;\n            &lt;input type=\"email\" id=\"email\" name=\"email\" required&gt;&lt;br&gt;&lt;br&gt;\n            &lt;label for=\"missatge\"&gt;Missatge:&lt;/label&gt;&lt;br&gt;\n            &lt;textarea id=\"missatge\" name=\"missatge\" rows=\"4\" cols=\"50\" required&gt;&lt;/textarea&gt;&lt;br&gt;&lt;br&gt;\n            &lt;input type=\"submit\" value=\"Enviar\"&gt;\n        &lt;/form&gt;\n        &lt;?php\n    }\n    ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"1val.html#exercici-14-validacio-de-formulari-amb-match","title":"Exercici 14: Validaci\u00f3 de formulari amb <code>match</code>","text":"<ol> <li>Crea un fitxer que utilitze la instrucci\u00f3 <code>match</code> per validar un formulari amb camps per a nom, correu electr\u00f2nic i edat. Si algun camp est\u00e0 buit, ha de retornar un missatge d'error corresponent.</li> </ol> Soluci\u00f3 <pre><code>$nom = 'Joan';\n$correu = 'joan@example.com';\n$edat = '';\n\n$validacio = match (true) {\nempty($nom) =&gt; 'El camp nom \u00e9s obligatori.',\n!filter_var($correu, FILTER_VALIDATE_EMAIL) =&gt; 'El correu electr\u00f2nic no \u00e9s v\u00e0lid.',\nempty($edat) =&gt; 'El camp edat \u00e9s obligatori.',\ndefault =&gt; 'Formulari v\u00e0lid.',\n};\n\necho $validacio;  // Sortida: El camp edat \u00e9s obligatori.\n</code></pre>"},{"location":"1val.html#exercici-15-variables-de-servidor","title":"Exercici 15: Variables de servidor","text":"<ol> <li>Mostra en un fitxer les variables de servidor que conegues</li> </ol> Soluci\u00f3 <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Informaci\u00f3 del Servidor&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h2&gt;Informaci\u00f3 del Servidor&lt;/h2&gt;\n    &lt;?php\n        echo \"&lt;p&gt;&lt;strong&gt;Nom del servidor:&lt;/strong&gt; \" . $_SERVER['SERVER_NAME'] . \"&lt;/p&gt;\";\n        echo \"&lt;p&gt;&lt;strong&gt;Adre\u00e7a IP del servidor:&lt;/strong&gt; \" . $_SERVER['SERVER_ADDR'] . \"&lt;/p&gt;\";\n        echo \"&lt;p&gt;&lt;strong&gt;Software del servidor:&lt;/strong&gt; \" . $_SERVER['SERVER_SOFTWARE'] . \"&lt;/p&gt;\";\n        echo \"&lt;p&gt;&lt;strong&gt;Agent d'usuari del client:&lt;/strong&gt; \" . $_SERVER['HTTP_USER_AGENT'] . \"&lt;/p&gt;\";\n        echo \"&lt;p&gt;&lt;strong&gt;M\u00e8tode de la sol\u00b7licitud:&lt;/strong&gt; \" . $_SERVER['REQUEST_METHOD'] . \"&lt;/p&gt;\";\n        echo \"&lt;p&gt;&lt;strong&gt;URL de la sol\u00b7licitud:&lt;/strong&gt; \" . $_SERVER['REQUEST_URI'] . \"&lt;/p&gt;\";\n        echo \"&lt;p&gt;&lt;strong&gt;Referent:&lt;/strong&gt; \" . (isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : 'No disponible') . \"&lt;/p&gt;\";\n        echo \"&lt;p&gt;&lt;strong&gt;Protocol utilitzat:&lt;/strong&gt; \" . $_SERVER['SERVER_PROTOCOL'] . \"&lt;/p&gt;\";\n        echo \"&lt;p&gt;&lt;strong&gt;Port utilitzat:&lt;/strong&gt; \" . $_SERVER['SERVER_PORT'] . \"&lt;/p&gt;\";\n    ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"1val.html#exercici-16-pujar-fitxers-al-servidor","title":"Exercici 16: Pujar fitxers al servidor","text":"<ol> <li>Crea un formulari en HTML que permeti als usuaris pujar un fitxer i seleccionar una opci\u00f3 d'un checkbox. Les opcions del checkbox han de ser carregades des d'un array predefinit en PHP. Despr\u00e9s de l'enviament del formulari, el fitxer pujat ha de ser processat i mogut a una ubicaci\u00f3 espec\u00edfica del servidor, i s'ha de mostrar la informaci\u00f3 del fitxer i l'opci\u00f3 seleccionada.</li> </ol> Soluci\u00f3 <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Pujar Fitxer i Selecci\u00f3 Opci\u00f3&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;?php\n    // Definim les opcions per al checkbox\n    $opcions = [\"Opci\u00f3 1\", \"Opci\u00f3 2\", \"Opci\u00f3 3\"];\n\n    // Comprovem si el formulari ha estat enviat\n    if ($_SERVER[\"REQUEST_METHOD\"] == \"POST\") {\n        // Comprovem si el fitxer ha estat pujat sense errors\n        if (isset($_FILES[\"fitxer\"]) &amp;&amp; $_FILES[\"fitxer\"][\"error\"] == 0) {\n            $nom_fitxer = $_FILES[\"fitxer\"][\"name\"];\n            $tipus_fitxer = $_FILES[\"fitxer\"][\"type\"];\n            $mida_fitxer = $_FILES[\"fitxer\"][\"size\"];\n            $ubicacio_temporal = $_FILES[\"fitxer\"][\"tmp_name\"];\n\n            // Movem el fitxer a una ubicaci\u00f3 permanent\n            $ubicacio_destinacio = \"uploads/\" . basename($nom_fitxer);\n            if (move_uploaded_file($ubicacio_temporal, $ubicacio_destinacio)) {\n                echo \"&lt;p&gt;El fitxer &lt;strong&gt;$nom_fitxer&lt;/strong&gt; ha estat pujat correctament.&lt;/p&gt;\";\n                echo \"&lt;p&gt;Tipus de fitxer: $tipus_fitxer&lt;/p&gt;\";\n                echo \"&lt;p&gt;Mida del fitxer: \" . ($mida_fitxer / 1024) . \" KB&lt;/p&gt;\";\n                echo \"&lt;p&gt;Ubicaci\u00f3 del fitxer: $ubicacio_destinacio&lt;/p&gt;\";\n            } else {\n                echo \"&lt;p&gt;Error al moure el fitxer a la ubicaci\u00f3 final.&lt;/p&gt;\";\n            }\n        } else {\n            echo \"&lt;p&gt;Error al pujar el fitxer.&lt;/p&gt;\";\n        }\n\n        // Comprovem si una opci\u00f3 del checkbox ha estat seleccionada\n        if (isset($_POST['opcio'])) {\n            $opcio_seleccionada = $_POST['opcio'];\n            echo \"&lt;p&gt;Has seleccionat: $opcio_seleccionada&lt;/p&gt;\";\n        } else {\n            echo \"&lt;p&gt;No has seleccionat cap opci\u00f3.&lt;/p&gt;\";\n        }\n    } else {\n        ?&gt;\n        &lt;h2&gt;Formulari per Pujar Fitxer i Selecci\u00f3 d'Opci\u00f3&lt;/h2&gt;\n        &lt;form action=\"&lt;?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?&gt;\" method=\"post\" enctype=\"multipart/form-data\"&gt;\n            &lt;label for=\"fitxer\"&gt;Selecciona un fitxer:&lt;/label&gt;\n            &lt;input type=\"file\" id=\"fitxer\" name=\"fitxer\" required&gt;&lt;br&gt;&lt;br&gt;\n\n            &lt;label for=\"opcio\"&gt;Selecciona una opci\u00f3:&lt;/label&gt;&lt;br&gt;\n            &lt;?php\n            foreach ($opcions as $opcio) {\n                echo '&lt;input type=\"checkbox\" id=\"' . $opcio . '\" name=\"opcio\" value=\"' . $opcio . '\"&gt;';\n                echo '&lt;label for=\"' . $opcio . '\"&gt; ' . $opcio . '&lt;/label&gt;&lt;br&gt;';\n            }\n            ?&gt;&lt;br&gt;\n\n            &lt;input type=\"submit\" value=\"Enviar\"&gt;\n        &lt;/form&gt;\n        &lt;?php\n    }\n    ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"1val.html#exercicis-proposats","title":"Exercicis proposats","text":""},{"location":"1val.html#exercici-1-manipulacio-de-variables-i-operadors","title":"Exercici 1: Manipulaci\u00f3 de Variables i Operadors","text":"<p>Assigna m\u00faltiples variables i utilitza operadors aritm\u00e8tics i l\u00f2gics. Mostra el resultat de cada operaci\u00f3.</p>"},{"location":"1val.html#exercici-2-control-de-flux-amb-bucles","title":"Exercici 2: Control de Flux amb Bucles","text":"<p>Utilitza un bucle <code>for</code> per imprimir els n\u00fameros parells del 0 al 20. Fes-ho tamb\u00e9 amb un bucle <code>while</code>.</p>"},{"location":"1val.html#exercici-3-treballar-amb-arrays-i-funcions","title":"Exercici 3: Treballar amb Arrays i Funcions","text":"<p>Escriu una funci\u00f3 que prenga un array de n\u00fameros, calculi la mitjana i retorni el resultat. Utilitza aquesta funci\u00f3 per imprimir la mitjana d'un array de cinc n\u00fameros.</p>"},{"location":"1val.html#exercici-4-manipulacio-de-strings","title":"Exercici 4: Manipulaci\u00f3 de Strings","text":"<p>Escriu un script que prenga una cadena de text i compti el nombre de vocals. Imprimeix el resultat.</p>"},{"location":"1val.html#exercici-5-arrays-multidimensionals","title":"Exercici 5: Arrays Multidimensionals","text":"<p>Crea un array multidimensional que represente una taula de multiplicar del 1 al 5 i imprimeix els resultats en forma de taula.</p>"},{"location":"1val.html#exercici-6-utilitzant-match-per-a-categoritzar","title":"Exercici 6: Utilitzant <code>match</code> per a categoritzar","text":"<p>Crea un fitxer que utilitze la instrucci\u00f3 <code>match</code> per categoritzar una variable <code>$nota</code> segons el seg\u00fcent criteri: - Si la nota \u00e9s 10, imprimir \"Excel\u00b7lent\". - Si la nota \u00e9s 8 o 9, imprimir \"Molt b\u00e9\". - Si la nota \u00e9s 5, 6 o 7, imprimir \"B\u00e9\". - Per qualsevol altra nota, imprimir \"Insuficient\".</p>"},{"location":"1val.html#exercici-7-validacio-de-formularis","title":"Exercici 7: Validaci\u00f3 de Formularis","text":"<p>Crea un formulari en HTML que permetis als usuaris introduir el seu nom, el correu electr\u00f2nic i un password (dues vegades). Despr\u00e9s de l'enviament del formulari, valida que tots els camps han estat completats i que el correu electr\u00f2nic \u00e9s v\u00e0lid, que el password tinga complexitat i que coincidixen. Mostra un missatge d'error si alguna validaci\u00f3 falla, i si tot \u00e9s correcte, mostra un missatge confirmant que l'usuari s'ha registrat correctament.</p>"},{"location":"1val.html#exercici-8-processament-de-formularis-amb-select-i-radio-buttons","title":"Exercici 8: Processament de Formularis amb Select i Radio Buttons","text":"<p>A partir del formulari newBook.php, fes que el m\u00f2dul i el estat els agafe de valors introdu\u00efts en arrays. Mostra el resultat en una taula.  </p>"},{"location":"1val.html#exercici-9-pujar-imatges-des-de-formulari","title":"Exercici 9: Pujar imatges des de formulari","text":"<p>A partir del formulari anterior fes que es puga pujar una imatge. Mostra la imatge en la taula.</p>"},{"location":"1val.html#solucions","title":"Solucions","text":""},{"location":"1val.html#20-enunciats-dels-projectes","title":"20. Enunciats dels Projectes","text":""},{"location":"1val.html#projecte-lofegat","title":"Projecte \"L'Ofegat\"","text":"<p>Enunciat: Implementa una versi\u00f3 simplificada del joc \"L'Ofegat\" utilitzant HTML i PHP. El joc ha de permetre als jugadors endevinar les lletres d'una paraula predefinida i mostrar l'estat actual de les lletres endevinades. No \u00e9s necessari mantenir l'estat del joc entre sol\u00b7licituds ni comprovar si s'han esgotat els intents en aquesta fase inicial.</p> <p>Requisits:</p> <ol> <li>Paraula a Endevinar:<ul> <li>Defineix una paraula predefinida a endevinar.</li> </ul> </li> <li>Inicialitzaci\u00f3 de les Lletres Endevinades:<ul> <li>Crea un array amb guions baixos per representar les lletres que l'usuari ha de trobar.</li> <li>Crea una funci\u00f3 per imprimir este array i que ser\u00e0 el que ens mostre el progres del joc. (les funcions aniran en un fitxer a part)</li> </ul> </li> <li>Funci\u00f3 per a Comprovar Intents:<ul> <li>Crea una funci\u00f3 en PHP que prenga la paraula a endevinar, la lletra introdu\u00efda per l'usuari i l'array de lletres endevinades (passat per refer\u00e8ncia).</li> <li>La funci\u00f3 ha de comprovar si la lletra introdu\u00efda per l'usuari forma part de la paraula.</li> <li>Si la lletra \u00e9s correcta, la funci\u00f3 substituir\u00e0 els guions baixos per la lletra corresponent.</li> <li>La funci\u00f3 retornar\u00e0 un valor boole\u00e0 que indique si la lletra \u00e9s err\u00f2nia o no.</li> <li>Fes proves de la funci\u00f3 per comprovar que funciona correctament.</li> </ul> </li> <li>Comprovaci\u00f3 d'Intents:<ul> <li>Utilitza la funci\u00f3 creada per comprovar si la lletra introdu\u00efda per l'usuari forma part de la paraula.</li> <li>Mostra un missatge d'error si la lletra no \u00e9s correcta.</li> </ul> </li> <li>Interf\u00edcie d'Usuari:<ul> <li>Mostra les lletres introdu\u00efdes per l'usuari fins al moment en color verd si s\u00f3n encertades o roig si s\u00f3n errades.</li> <li>Mostra les errades de l'usuari.</li> <li>Crea un formulari HTML que permeta als jugadors introduir una lletra.</li> </ul> </li> </ol> <p>Codi CSS Proporcionat:</p> <pre><code>.correct { color: green; }\n.incorrect { color: red; }\n</code></pre>"},{"location":"1val.html#projecte-4-en-ratlla","title":"Projecte \"4 en Ratlla\"","text":"<p>Enunciat: Implementa una versi\u00f3 simplificada del joc \"4 en Ratlla\" utilitzant HTML i PHP. El joc ha de permetre als jugadors introduir els seus moviments i mostrar l'estat actual de la graella. No \u00e9s necessari mantenir l'estat del joc entre sol\u00b7licituds ni comprovar si hi ha un guanyador en aquesta fase inicial.</p> <p>Requisits:</p> <ol> <li>Inicialitzaci\u00f3 de la Graella:<ul> <li>Crea una funci\u00f3 <code>inicialitzarGraella()</code> que inicialitze una graella buida de 6 files i 7 columnes.</li> </ul> </li> <li>Pintar la Graella:<ul> <li>Crea una funci\u00f3 <code>pintarGraella($graella)</code> que pinte la graella en HTML. Utilitza diferents colors per a les fitxes dels jugadors, aplicant el CSS adjunt.</li> </ul> </li> <li>Realitzar Moviments:<ul> <li>Crea una funci\u00f3 <code>ferMoviment(&amp;$graella, $columna, $jugadorActual)</code> que realitze un moviment en la columna especificada pel jugador actual.</li> </ul> </li> <li>Interf\u00edcie d'Usuari:<ul> <li>Crea un formulari HTML que permeta als jugadors introduir la columna on volen posar la seua fitxa. Aquest formulari ha de mantenir el jugador actual entre sol\u00b7licituds.</li> </ul> </li> </ol> <p>Codi CSS Proporcionat:</p> <pre><code>table { border-collapse: collapse; }\ntd {\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    border: 10px dotted #fff; /* Cercle amb punts blancs */\n    background-color: #000; /* Fons negre o pot ser un altre color */\n    display: inline-block;\n    margin: 10px;\n    color: white;\n    font-size: 2rem;\n    text-align: center ;\n    vertical-align: middle;\n}\n.player1 {\n    background-color: red; /* Color vermell per un dels jugadors */\n}\n.player2 {\n    background-color: yellow; /* Color groc per l'altre jugador */\n}\n.buid {\n    background-color: white; /* Color blanc per cercles buits */\n    border-color: #000; /* Puntes negres per millor visibilitat */\n}\n</code></pre>"},{"location":"1val.html#rubrica","title":"R\u00fabrica","text":"Criteri Puntuaci\u00f3 Total Complet(2) A mitjes(1) No(0) Paraula a Endevinar 1 Paraula definida correctament Paraula definida per\u00f2 amb errors No s'ha definit la paraula Inicialitzaci\u00f3 de les Lletres 3 Array creat correctament Array creat per\u00f2 amb errors No s'ha creat l'array Funci\u00f3 per a Comprovar Intents 5 Funci\u00f3 creada i funcional Funci\u00f3 creada per\u00f2 amb errors No s'ha creat la funci\u00f3 Comprovaci\u00f3 d'Intents 3 Comprovaci\u00f3 realitzada correctament Comprovaci\u00f3 amb errors No s'ha realitzat la comprovaci\u00f3 Inicialitzaci\u00f3 de la Graella 4 Funci\u00f3 creada correctament Funci\u00f3 creada per\u00f2 amb errors No s'ha creat la funci\u00f3 Pintar la Graella 4 Funci\u00f3 creada i funcional Funci\u00f3 creada per\u00f2 amb errors No s'ha creat la funci\u00f3 Realitzar Moviments 5 Funci\u00f3 creada i funcional Funci\u00f3 creada per\u00f2 amb errors No s'ha creat la funci\u00f3 Interf\u00edcies d'Usuari 6 Interf\u00edcie correcta i funcional Interf\u00edcie creada per\u00f2 amb errors No s'ha creat la interf\u00edcie Estil CSS 2 CSS aplicat correctament CSS aplicat per\u00f2 amb errors No s'ha aplicat el CSS Comentaris i Claredat del Codi 1 Codi ben comentat i clar Codi amb alguns comentaris Codi sense comentaris o desordenat"},{"location":"1val.html#21-autoavaluacio-conceptes-basics-de-php","title":"21. Autoavaluaci\u00f3: Conceptes B\u00e0sics de PHP","text":""},{"location":"1val.html#exercici-1-sintaxi-basica-de-php","title":"Exercici 1: Sintaxi B\u00e0sica de PHP","text":""},{"location":"1val.html#pregunta","title":"Pregunta:","text":"<p>Quina \u00e9s la manera correcta d'iniciar i finalitzar un bloc de codi PHP dins d'un fitxer HTML?</p>"},{"location":"1val.html#opcions","title":"Opcions:","text":"a) `` b) ` ... ` c) ` ... ` d) ``"},{"location":"1val.html#exercici-2-variables-i-tipus-de-dades","title":"Exercici 2: Variables i Tipus de Dades","text":""},{"location":"1val.html#pregunta_1","title":"Pregunta:","text":"<p>Quina opci\u00f3 mostra el tipus de dades assignat a la variable <code>$nom</code>?</p>"},{"location":"1val.html#opcions_1","title":"Opcions:","text":"a) `echo gettype($nom);` b) `print datatype($nom);` c) `echo typeof($nom);` d) `print type($nom);`"},{"location":"1val.html#exercici-3-estructures-de-control","title":"Exercici 3: Estructures de Control","text":""},{"location":"1val.html#pregunta_2","title":"Pregunta:","text":"<p>Quina \u00e9s la sortida de l'estructura de control seg\u00fcent? <pre><code>$numero = 10;\nif ($numero &gt; 5) {\n    echo \"Major que 5\";\n} else {\n    echo \"Menor o igual a 5\";\n}\n</code></pre></p>"},{"location":"1val.html#opcions_2","title":"Opcions","text":"a) Major que 5 b) Menor o igual a 5 c) No imprimeix res d) Error de sintaxi"},{"location":"1val.html#exercici-4-operadors-en-php","title":"Exercici 4: Operadors en PHP","text":""},{"location":"1val.html#pregunta_3","title":"Pregunta:","text":"<p>Quin ser\u00e0 el valor de <code>$resultat</code> despr\u00e9s d'executar el seg\u00fcent codi? <pre><code>$resultat = 5 + 2 * 3;\n</code></pre></p>"},{"location":"1val.html#opcions_3","title":"Opcions:","text":"a) 21 b) 11 c) 17 d) 13"},{"location":"1val.html#exercici-5-arrays-en-php","title":"Exercici 5: Arrays en PHP","text":""},{"location":"1val.html#pregunta_4","title":"Pregunta:","text":"<p>Com es pot afegir un element al final d'un array en PHP?</p>"},{"location":"1val.html#opcions_4","title":"Opcions:","text":"a) array_add($array, $element); b) $array[] = $element; c) append($array, $element); d) add_to_array($array, $element);"},{"location":"1val.html#exercici-6-funcions-en-php","title":"Exercici 6: Funcions en PHP","text":""},{"location":"1val.html#pregunta_5","title":"Pregunta:","text":"<p>Com es defineix una funci\u00f3 en PHP?</p>"},{"location":"1val.html#opcions_5","title":"Opcions:","text":"a) function: myFunction() { ... } b) def myFunction() { ... } c) function myFunction() { ... } d) fn myFunction() =&gt; { ... }"},{"location":"1val.html#exercici-7-instruccio-switch","title":"Exercici 7: Instrucci\u00f3 switch","text":""},{"location":"1val.html#pregunta_6","title":"Pregunta:","text":"<p>Quina instrucci\u00f3 s'utilitza per detenir l'execuci\u00f3 d'un cas dins d'un switch en PHP?</p>"},{"location":"1val.html#opcions_6","title":"Opcions:","text":"a) stop b) exit c) halt d) break"},{"location":"1val.html#programacio-web","title":"Programaci\u00f3 Web","text":"Duraci\u00f3 i criteris d'evaluaci\u00f3 <p>Duraci\u00f3 estimada: 10 hores</p> Resultat d'aprenentatge Criteris d'avaluaci\u00f3 4. Desenvolupa aplicacions Web embegudes en llenguatges de marques analitzant i incorporant funcionalitats segons especificacions a) S'han identificat els mecanismes disponibles per al manteniment de la informaci\u00f3 que concerneix un client web concret i s'han assenyalat els seus avantatges. b) S'han utilitzat mecanismes per a mantindre l'estat de les aplicacions web. c) S'han utilitzat mecanismes per a emmagatzemar informaci\u00f3 en el client web i per a recuperar el seu contingut. d) S'han identificat i caracteritzat els mecanismes disponibles per a l'autenticaci\u00f3 d'usuaris. e) S'han escrit aplicacions que integren mecanismes d'autenticaci\u00f3 d'usuaris. f) S'han utilitzat eines i entorns per a facilitar la programaci\u00f3, prova i depuraci\u00f3 del codi."},{"location":"1val.html#1-mecanismes-per-al-manteniment-de-la-informacio-en-aplicacions-web","title":"1.  Mecanismes per al Manteniment de la Informaci\u00f3 en Aplicacions Web","text":"<p>HTTP \u00e9s un protocol stateless, sense estat. En les aplicacions web modernes, \u00e9s essencial gestionar l'estat del client per proporcionar una experi\u00e8ncia d'usuari fluida i personalitzada. Per aix\u00f2, se simula l'estat mitjan\u00e7ant l'\u00fas de cookies, tokens o la sessi\u00f3. L'estat \u00e9s necessari per a processos com ara el carret de la compra, operacions associades a un usuari, etc...  A continuaci\u00f3 es detallen diversos mecanismes per mantenir aquesta informaci\u00f3, aix\u00ed com els seus avantatges i desavantatges.</p>"},{"location":"1val.html#cookies","title":"Cookies","text":"<p>Les cookies s\u00f3n petits fitxers de text emmagatzemats al navegador de l'usuari. S\u00f3n \u00e0mpliament utilitzades per mantenir l'estat del client entre sol\u00b7licituds HTTP, ja que HTTP \u00e9s un protocol sense estat.</p>"},{"location":"1val.html#avantatges-de-les-cookies","title":"Avantatges de les Cookies","text":"<ul> <li>Persist\u00e8ncia: Les cookies poden mantenir-se durant per\u00edodes llargs definits per l'atribut <code>expires</code> o <code>max-age</code>.</li> <li>Accessibilitat: Es poden accedir des de qualsevol p\u00e0gina del mateix domini.</li> <li>Simplicitat: F\u00e0cils d'implementar i gestionar.</li> </ul>"},{"location":"1val.html#desavantatges-de-les-cookies","title":"Desavantatges de les Cookies","text":"<ul> <li>Seguretat: Poden ser objectiu d'atacs com XSS (Cross-Site Scripting) si no es gestionen correctament.</li> <li>Limitacions de mida: Les cookies estan limitades a 4KB de dades.</li> <li>Privadesa: Les dades de l'usuari poden ser vulnerables si no es protegeixen adequadament.</li> </ul>"},{"location":"1val.html#millors-practiques","title":"Millors Pr\u00e0ctiques","text":"<ul> <li>Utilitzar l'atribut <code>HttpOnly</code> per evitar l'acc\u00e9s a les cookies des de JavaScript.</li> <li>Configurar <code>SameSite</code> per prevenir atacs CSRF.</li> <li>Emmagatzemar \u00fanicament informaci\u00f3 essencial i no sensible.</li> </ul>"},{"location":"1val.html#sessions","title":"Sessions","text":"<p>Les sessions s\u00f3n un mecanisme que permet associar dades a un usuari durant una sessi\u00f3 espec\u00edfica. Aquestes dades s'emmagatzemen al servidor, mentre que el client nom\u00e9s guarda un identificador de sessi\u00f3.</p>"},{"location":"1val.html#avantatges-de-les-sessions","title":"Avantatges de les Sessions","text":"<ul> <li>Seguretat: Les dades sensibles es mantenen al servidor.</li> <li>Capacitat d'emmagatzematge: No limitades per la mida de les cookies.</li> <li>Compartici\u00f3 de dades: Facilita la compartici\u00f3 d'estat entre diferents components d'una aplicaci\u00f3 web.</li> </ul>"},{"location":"1val.html#desavantatges-de-les-sessions","title":"Desavantatges de les Sessions","text":"<ul> <li>Escalabilitat: Requereix mem\u00f2ria addicional al servidor, la qual cosa pot ser problem\u00e0tica amb molts usuaris.</li> <li>Persist\u00e8ncia limitada: Normalment nom\u00e9s duren mentre el navegador est\u00e0 obert, tret que es configuri d'una altra manera.</li> </ul>"},{"location":"1val.html#millors-practiques_1","title":"Millors Pr\u00e0ctiques","text":"<ul> <li>Emmagatzemar \u00fanicament refer\u00e8ncies o identificadors a la sessi\u00f3.</li> <li>Utilitzar eines com Redis per a una gesti\u00f3 eficient de sessions en entorns escalables.</li> </ul>"},{"location":"1val.html#web-storage","title":"Web Storage","text":"<p>El Web Storage \u00e9s una API del navegador que permet emmagatzemar dades al client de manera m\u00e9s senzilla i amb m\u00e9s capacitat que les cookies tradicionals. Inclou dos mecanismes principals: <code>localStorage</code> i <code>sessionStorage</code>.</p>"},{"location":"1val.html#caracteristiques-del-web-storage","title":"Caracter\u00edstiques del Web Storage","text":"<ul> <li><code>localStorage</code>: Permet emmagatzemar dades que persisteixen fins que s'elimina expl\u00edcitament, fins i tot despr\u00e9s de tancar el navegador.</li> <li><code>sessionStorage</code>: Les dades es mantenen nom\u00e9s durant la sessi\u00f3 del navegador i s'esborren quan es tanca la pestanya o finestra.</li> </ul>"},{"location":"1val.html#avantatges","title":"Avantatges","text":"<ul> <li>Capacitat d'Emmagatzematge: Ofereix m\u00e9s espai (fins a 5-10MB) que les cookies.</li> <li>API Simple: Proporciona una interf\u00edcie senzilla per emmagatzemar i recuperar dades.</li> </ul>"},{"location":"1val.html#usos-comuns","title":"Usos Comuns","text":"<ul> <li>Manteniment de l'Estat del Client: Pot guardar dades de sessi\u00f3 i prefer\u00e8ncies de l'usuari que no cal enviar al servidor.</li> <li>Sincronitzaci\u00f3 amb l'Entorn Servidor: Es pot utilitzar per emmagatzemar dades que despr\u00e9s es sincronitzen amb el servidor, millorant el rendiment i l'experi\u00e8ncia d'usuari.</li> </ul>"},{"location":"1val.html#consideracions-de-seguretat","title":"Consideracions de Seguretat","text":"<ul> <li>Accessibilitat: Les dades s\u00f3n accessibles per JavaScript, per la qual cosa s'ha de tenir cura amb les vulnerabilitats XSS.</li> <li>Dades Sensibles: Evita emmagatzemar dades sensibles o confidencials.</li> </ul> <p>Tot i que Web Storage s'executa al costat del client, entendre les seves funcionalitats pot ajudar els desenvolupadors del servidor a dissenyar sistemes m\u00e9s robustos i efica\u00e7os, on la cooperaci\u00f3 entre client i servidor maximitza l'efici\u00e8ncia de l'aplicaci\u00f3 web.</p>"},{"location":"1val.html#tokens-dautenticacio","title":"Tokens d'Autenticaci\u00f3","text":"<p>Els JSON Web Tokens (JWT) s\u00f3n un est\u00e0ndard obert que defineix una manera compacta i aut\u00f2noma d'enviar informaci\u00f3 entre dues parts de manera segura com a objecte JSON. S'utilitzen habitualment per a l'autenticaci\u00f3 en aplicacions web.</p>"},{"location":"1val.html#avantatges-dels-jwt","title":"Avantatges dels JWT","text":"<ul> <li>Estatut aut\u00f2nom: Porten tota la informaci\u00f3 necess\u00e0ria, eliminant la necessitat de mantenir sessions al servidor.</li> <li>Escalabilitat: Milloren l'escalabilitat en aplicacions distribu\u00efdes.</li> <li>Seguretat: Es poden signar digitalment per assegurar la seva autenticitat.</li> </ul>"},{"location":"1val.html#desavantatges-dels-jwt","title":"Desavantatges dels JWT","text":"<ul> <li>Revocaci\u00f3 complexa: Una vegada emesos, \u00e9s dif\u00edcil revocar-los sense mantenir una llista negra.</li> <li>Sobrecarrega de dades: Si els tokens s\u00f3n grans, poden afectar el rendiment, especialment en xarxes de baixa lat\u00e8ncia.</li> </ul>"},{"location":"1val.html#millors-practiques_2","title":"Millors Pr\u00e0ctiques","text":"<ul> <li>Utilitzar signatura HS256 o RS256 per garantir la integritat del token.</li> <li>No emmagatzemar dades sensibles directament al token.</li> </ul>"},{"location":"1val.html#cache-del-navegador","title":"Cache del Navegador","text":"<p>El cache del navegador s'utilitza per emmagatzemar c\u00f2pies temporals de recursos web per millorar el rendiment i reduir la c\u00e0rrega del servidor.</p>"},{"location":"1val.html#avantatges-del-cache","title":"Avantatges del Cache","text":"<ul> <li>Rendiment: Redueix el temps de c\u00e0rrega dels recursos.</li> <li>Optimitzaci\u00f3: Disminueix l'ample de banda requerit.</li> </ul>"},{"location":"1val.html#desavantatges-del-cache","title":"Desavantatges del Cache","text":"<ul> <li>Consist\u00e8ncia: Pot servir dades obsoletes si no es gestiona correctament.</li> <li>Control: Requereix configuraci\u00f3 per evitar el caching indesitjat de dades din\u00e0miques.</li> </ul>"},{"location":"1val.html#millors-practiques_3","title":"Millors Pr\u00e0ctiques","text":"<ul> <li>Configurar els encap\u00e7alaments HTTP correctament (<code>Cache-Control</code>, <code>ETag</code>) per gestionar l'actualitzaci\u00f3 de recursos.</li> </ul>"},{"location":"1val.html#sincronitzacio-offline","title":"Sincronitzaci\u00f3 Offline","text":"<p>La sincronitzaci\u00f3 offline es refereix a la capacitat d'una aplicaci\u00f3 web de funcionar sense connexi\u00f3 a Internet, sincronitzant dades quan es recupera la connexi\u00f3.</p>"},{"location":"1val.html#tecniques-i-eines","title":"T\u00e8cniques i Eines","text":"<ul> <li>IndexedDB: Emmagatzema grans volums de dades estructurades dins del navegador.</li> <li>Service Workers: Gestionen peticions de xarxa, proporcionant funcionalitats offline i cache avan\u00e7at.</li> </ul>"},{"location":"1val.html#millors-practiques_4","title":"Millors Pr\u00e0ctiques","text":"<ul> <li>Gestionar conflictes de dades quan es torna a estar en l\u00ednia.</li> <li>Utilitzar estrat\u00e8gies de sincronitzaci\u00f3 optimitzades per minimitzar l'ample de banda i el temps de sincronitzaci\u00f3.</li> </ul>"},{"location":"1val.html#seguretat-de-les-cookies-i-sessions","title":"Seguretat de les Cookies i Sessions","text":"<p>La seguretat \u00e9s fonamental en la gesti\u00f3 de cookies i sessions per protegir les dades dels usuaris de possibles atacs.</p>"},{"location":"1val.html#practiques-de-seguretat","title":"Pr\u00e0ctiques de Seguretat","text":"<ul> <li>CSRF: Utilitzar tokens CSRF per validar sol\u00b7licituds d'accions sensibles.</li> <li>XSS: Sanear les dades d'entrada i utilitzar cap\u00e7aleres de seguretat (<code>Content-Security-Policy</code>) per prevenir XSS.</li> <li>Secure Flag: Marcar les cookies amb l'atribut <code>Secure</code> perqu\u00e8 nom\u00e9s s'envi\u00efn a trav\u00e9s de connexions HTTPS.</li> </ul>"},{"location":"1val.html#conclusio","title":"Conclusi\u00f3","text":"<p>La selecci\u00f3 del mecanisme adequat per al manteniment de l'estat en una aplicaci\u00f3 web dep\u00e8n de les necessitats espec\u00edfiques de l'aplicaci\u00f3, el volum de dades, els requisits de seguretat i l'arquitectura del sistema. Avaluar cada t\u00e8cnica pel que fa a avantatges i desavantatges ajudar\u00e0 a prendre decisions informades i construir aplicacions web m\u00e9s segures i eficients.</p>"},{"location":"1val.html#2exemples-de-cookies-i-sessions-en-php","title":"2.Exemples de Cookies i Sessions en PHP","text":""},{"location":"1val.html#cookies_1","title":"Cookies","text":"<p>Les cookies s'emmagatzemen en el array global <code>$_COOKIE</code>. El que col\u00b7loquem dins del array, es guardar\u00e0 en el client. Cal tindre present que el client pot no voler emmagatzemar-les.</p> <p>Existeix una limitaci\u00f3 de 20 cookies per domini i 300 en total en el navegador.</p> <p>En PHP, per a crear una cookie s'utilitza la funci\u00f3 <code>setcookie</code>:</p> <p><pre><code>&lt;?php\nsetcookie(\n    'nom_cookie',\n    'valor_cookie',\n    [\n        'expires' =&gt; time() + 3600, // 1 hora\n        'path' =&gt; '/',\n        'domain' =&gt; '', // Domini actual\n        'secure' =&gt; true, // Nom\u00e9s HTTPS\n        'httponly' =&gt; true, // Nom\u00e9s accessible via HTTP\n        'samesite' =&gt; 'Lax' // o 'Strict' o 'None'\n    ]\n);\n?&gt;\n</code></pre> Destacar que el nom no pot contindre espais ni el car\u00e0cter <code>;</code>. Respecte al contingut de la cookie, no pot superar els 4 KB.</p>"},{"location":"1val.html#consideracions-de-seguretat-per-a-cookies","title":"Consideracions de seguretat per a cookies:","text":"<p>HTTPOnly: Assegura't que les cookies que contenen informaci\u00f3 sensible no siguin accessibles per JavaScript utilitzant l'atribut HttpOnly.</p> <p>Secure: Utilitza l'atribut Secure per assegurar que les cookies nom\u00e9s es transmeten en connexions HTTPS.</p> <p>SameSite: Defineix correctament l'atribut SameSite per a prevenir atacs CSRF (Cross-Site Request Forgery).</p> <p>Per exemple, mitjan\u00e7ant cookies podem comprovar la quantitat de visites diferents que realitza un usuari:</p> <pre><code>&lt;?php\n$accesosPagina\u00a0=\u00a00;\nif\u00a0(isset($_COOKIE['accesos']))\u00a0{\u00a0\n    $accesosPagina\u00a0=\u00a0$_COOKIE['accesos']; // recuperamos una cookie\n    setcookie('accesos',\u00a0++$accesosPagina); // le asignamos un valor\n}\n?&gt;\n</code></pre> <p>Inspeccionant les cookies</p> <p>Si volem veure que contenen les cookies que tenim emmagatzemades en el navegador, es pot comprovar el seu valor en Dev Tools \u2192 Application \u2192 Storage</p> <p>El temps de vida de les cookies pot ser tan llarg com el lloc web en el qual resideixen. Elles seguiran ac\u00ed, fins i tot si el navegador est\u00e0 tancat o obert.</p> <p>Per a esborrar una cookie es pot posar que expiren en el passat:</p> <pre><code>&lt;?php\nsetcookie(nombre,\u00a0\"\",\u00a01) // pasado\n</code></pre> <p>O que caduquen dins d'un per\u00edode de temps deteminado:</p> <pre><code>&lt;?php\nsetcookie(nombre,\u00a0valor,\u00a0time() + 3600) // Caducan dentro de una hora\n</code></pre> Comunicaci\u00f3 amb cookies <p>S'utilitzen per a:</p> <ul> <li>Recordar els inicis de sessi\u00f3</li> <li>Emmagatzemar valors temporals d'usuari</li> <li>Si un usuari est\u00e0 navegant per una llista paginada d'articles, ordenats d'una certa manera, podem emmagatzemar l'ajust de la classificaci\u00f3.</li> </ul> <p>L'alternativa en el client per a emmagatzemar informaci\u00f3 en el navegador \u00e9s l'objecte LocalStorage.</p>"},{"location":"1val.html#sessio","title":"Sessi\u00f3","text":"<p>La sessi\u00f3 afig la gesti\u00f3 de l'estat a HTTP, emmagatzemant en aquest cas la informaci\u00f3 en el servidor. Cada visitant t\u00e9 un ID de sessi\u00f3 \u00fanic, el qual per defecte s'emmagatzema en una cookie denominada <code>PHPSESSID</code>. Si el client no t\u00e9 les cookies actives, l'ID es propaga en cada URL dins del mateix domini. Cada sessi\u00f3 t\u00e9 associat un magatzem de dades mitjan\u00e7ant el array global <code>$_SESSION</code>, en el qual podem emmagatzemar i recuperar informaci\u00f3.</p> <p>La sessi\u00f3 comen\u00e7a en executar un script PHP. Es genera un nou ID i es carreguen les dades del magatzem:</p> Comunicaci\u00f3 amb sessions <p>Les operacions que podem realitzar amb la sessi\u00f3 s\u00f3n:</p> <pre><code>&lt;?php\nsession_start(); // carga la sesi\u00f3n\nsession_regenerate_id(true); // regenera el id\nsession_id() // devuelve el id\n$_SESSION[clave] = valor; // inserci\u00f3n\nsession_destroy(); // destruye la sesi\u00f3n\nunset($_SESSION[clave]; // borrado\n</code></pre> <p>Veurem mitjan\u00e7ant un exemple com podem inserir en un p\u00e0gina dades en la sessi\u00f3 per a posteriorment en una altra p\u00e0gina accedir a aqueixes dades. Per exemple, en <code>sesion.php</code> tindr\u00edem</p> <pre><code>&lt;?php\n// Iniciar sessi\u00f3\nsession_start();\nsession_regenerate_id(true);\n\n// Establir valors de sessi\u00f3\n$_SESSION['usuari'] = 'JohnDoe';\n$_SESSION['rol'] = 'admin';\n\n?&gt;\n</code></pre> <p>I posteriorment podem accedir a la sessi\u00f3 en <code>sesion1.php</code>:</p> <pre><code>&lt;?php\nsession_start();\n// Recuperar valors de sessi\u00f3\necho 'Usuari: ' . $_SESSION['usuari'] . '&lt;br&gt;';\necho 'Rol: ' . $_SESSION['rol'] . '&lt;br&gt;';\n\n// Tancar sessi\u00f3 de forma segura\nsession_unset();  // Eliminar totes les variables de sessi\u00f3\nsession_destroy();  // Destruir la sessi\u00f3\n?&gt;\n</code></pre> <p>Configurant la sessi\u00f3 en <code>php.ini</code></p> <p>Les seg\u00fcent propietats de <code>php.ini</code> permeten configurar alguns aspectes de la sessi\u00f3:</p> <ul> <li><code>session.save_handler</code>: controlador que gestiona com s'emmagatzema (<code>files</code>)</li> <li><code>session.save_path</code>: ruta on s'emmagatzemen els arxius amb les dades (si tenim un cl\u00faster, podr\u00edem usar <code>/mnt/sessions</code> en tots els servidor de manera que apunten a una carpeta compartida)</li> <li><code>session.name</code>: nom de la sessi\u00f3 (<code>PHSESSID</code>)</li> <li><code>session.acte_start</code>: Es pot fer que s'autocarregue amb cada script. Per defecte est\u00e0 deshabilitat</li> <li><code>session.cookie_lifetime</code>: temps de vida per defecte</li> </ul> <p>M\u00e9s informaci\u00f3 en la documentaci\u00f3 oficial.</p>"},{"location":"1val.html#serialitzacio-en-php","title":"Serialitzaci\u00f3 en PHP","text":"<p>La serialitzaci\u00f3 \u00e9s el proc\u00e9s de convertir una estructura de dades o un objecte en una seq\u00fc\u00e8ncia de car\u00e0cters que pot ser f\u00e0cilment emmagatzemada o transmesa i despr\u00e9s reconstru\u00efda. PHP proporciona dos funcions principals per a aix\u00f2: serialize() i unserialize().</p> <ol> <li>serialize()    La funci\u00f3 serialize() en PHP s'utilitza per a convertir una estructura de dades o un objecte en una representaci\u00f3 de cadena.</li> </ol> <p><pre><code>$data = array(\"a\", \"b\", \"c\");\n$serialized_data = serialize($data);\necho $serialized_data;\n</code></pre> Eixida </p> <pre><code>a:3:{i:0;s:1:\"a\";i:1;s:1:\"b\";i:2;s:1:\"c\";}\n</code></pre> <ol> <li>unserialize()    La funci\u00f3 unserialize() en PHP s'utilitza per a convertir la representaci\u00f3 de cadena serialitzada de nou en una estructura de dades o un objecte.</li> </ol> <pre><code>$original_data = unserialize($serialized_data);\nprint_r($original_data);\n</code></pre> <p>Eixida</p> <pre><code>Array\n(\n    [0] =&gt; a\n    [1] =&gt; b\n    [2] =&gt; c\n)\n</code></pre>"},{"location":"1val.html#utilitzant-amb-sessions","title":"Utilitzant amb Sessions","text":"<p>Les sessions en PHP permeten emmagatzemar informaci\u00f3 d'usuari per ser utilitzada en diverses p\u00e0gines. Pot ser \u00fatil serialitzar dades per a emmagatzemar-les en una sessi\u00f3:</p> <p>Iniciant una sessi\u00f3 i emmagatzemant dades serialitzades:</p> <pre><code>session_start();\nsession_regenerate_id(true);\n\n$data = array(\"a\", \"b\", \"c\");\n$_SESSION['data_serialitzada'] = serialize($data);\n</code></pre> <pre><code>session_start();\n\nif (isset($_SESSION['data_serialitzada'])) {\n$data = unserialize($_SESSION['data_serialitzada']);\nprint_r($data);\n}\n</code></pre> <p>Consideracions de Seguretat: \u00c9s crucial entendre que la funci\u00f3 unserialize() pot ser perillosa si s'usa amb dades que no s\u00f3n de confian\u00e7a, ja que podria portar a l'execuci\u00f3 de codi arbitrari. Per aix\u00f2, mai has de deserialitzar dades que vinguen d'una font desconeguda o no fiable sense validar-les pr\u00e8viament.</p>"},{"location":"1val.html#3autenticacio-dusuaris","title":"3.Autenticaci\u00f3 d'usuaris","text":""},{"location":"1val.html#mecanismes-dautenticacio-dusuaris","title":"Mecanismes d'Autenticaci\u00f3 d'Usuaris","text":"Mecanisme d'Autenticaci\u00f3 Caracter\u00edstiques Avantatges B\u00e0sica (usuari/contrasenya) Es requereix un nom d'usuari i una contrasenya per accedir. F\u00e0cil d'implementar, \u00e0mpliament utilitzada. Cookies Emmagatzema informaci\u00f3 d'autenticaci\u00f3 en el navegador de l'usuari. Persist\u00e8ncia d'inici de sessi\u00f3, personalitzaci\u00f3 d'experi\u00e8ncia. Sessions Mant\u00e9 l'estat d'autenticaci\u00f3 en el servidor amb una identificaci\u00f3 de sessi\u00f3 \u00fanica. Major seguretat, evita la necessitat d'emmagatzemar informaci\u00f3 sensible al client. OAuth Permet als usuaris accedir a recursos sense compartir les seves credencials. Seguretat millorada, experi\u00e8ncia d'usuari simplificada. JWT (JSON Web Token) Utilitza tokens basats en JSON per a l'autenticaci\u00f3. Lliure d'estat, f\u00e0cil de compartir entre diferents serveis. SAML (Security Assertion Markup Language) Utilitza XML per a intercanviar dades d'autenticaci\u00f3 entre l'usuari i el servei. Integraci\u00f3 amb sistemes d'autenticaci\u00f3 empresarial, alt nivell de seguretat. Autenticaci\u00f3 multifactor (MFA) Requereix m\u00faltiples formes de verificaci\u00f3 (per exemple, contrasenya + codi SMS). Seguretat augmentada, redueix el risc de comprom\u00eds de comptes."},{"location":"1val.html#exemple-amb-sessions","title":"Exemple amb sessions","text":"<p>Una sessi\u00f3 estableix una relaci\u00f3 an\u00f2nima amb un usuari particular, de manera que podem saber si \u00e9s el mateix usuari entre dues peticions diferents. Si preparem un sistema de login, podrem saber qui utilitza la nostra aplicaci\u00f3.</p> <p><pre><code>&lt;?php\n// Llista d'usuaris predefinits amb contrasenyes en text pla\n$users = [\n    'user1@example.com' =&gt; 'password1',\n    'user2@example.com' =&gt; 'password2',\n];\n\n// Convertir les contrasenyes a un format encriptat\nforeach ($users as $email =&gt; $password) {\n    $users[$email] = password_hash($password, PASSWORD_BCRYPT);\n}\n\n// Formulari d'autenticaci\u00f3\nif (isset($_POST['login'])) {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    if (isset($users[$email]) &amp;&amp; password_verify($password, $users[$email])) {\n        // L'usuari est\u00e0 autenticat\n        session_start();\n        $_SESSION['user'] = $email;\n        echo \"Login successful. Welcome, \" . $email;\n    } else {\n        // Credencials incorrectes\n        echo \"Invalid email or password.\";\n    }\n}\n?&gt;\n&lt;form method=\"post\"&gt;\n    Email: &lt;input type=\"email\" name=\"email\" required&gt;\n    Password: &lt;input type=\"password\" name=\"password\" required&gt;\n    &lt;button type=\"submit\" name=\"login\"&gt;Login&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> Aquest exemple mostra com mantenir l'estat de la sessi\u00f3 d'un usuari una vegada autenticat.</p> <pre><code>&lt;?php\nsession_start();\n\nif (!isset($_SESSION['user'])) {\n    header(\"Location: login.php\");\n    exit();\n}\n\n// Mostra la p\u00e0gina nom\u00e9s si l'usuari est\u00e0 autenticat\necho \"Welcome, \" . $_SESSION['user'];\n?&gt;\n</code></pre> <p>Finalment, necessitem l'opci\u00f3 de tancar la sessi\u00f3 que col\u00b7loquem en <code>logout.php</code>:</p> <pre><code>&lt;?php\n// Recuperamos la informaci\u00f3n de la sesi\u00f3n\nsession_start();\n\n// Y la destruimos\nsession_destroy();\nheader(\"Location: index.php\");\n?&gt;\n</code></pre> <p>Autenticaci\u00f3 en producci\u00f3</p> <p>En l'actualitat l'autenticaci\u00f3 d'usuari no es realitza gestionant la sessi\u00f3 direcamente, sin\u00f3 que es realitza mitjan\u00e7ant algun framekwork que abstrau tot el proc\u00e9s o la integraci\u00f3 de mecanismes d'autenticaci\u00f3 tipus OAuth, com estudiarem en l'\u00faltima unitat mitjan\u00e7ant Laravel.</p>"},{"location":"1val.html#exemple-amb-cookies","title":"Exemple amb cookies","text":"<pre><code>&lt;?php\n// Llista d'usuaris predefinits amb contrasenyes en text pla\n$users = [\n    'user1@example.com' =&gt; 'password1',\n    'user2@example.com' =&gt; 'password2',\n];\n\n// Convertir les contrasenyes a un format encriptat\nforeach ($users as $email =&gt; $password) {\n    $users[$email] = password_hash($password, PASSWORD_BCRYPT);\n}\n\nif (isset($_POST['login'])) {\n    $email = $_POST['email'];\n    $password = $_POST['password'];\n\n    if (isset($users[$email]) &amp;&amp; password_verify($password, $users[$email])) {\n        // Establir una cookie d'autenticaci\u00f3\n        setcookie(\"user\", $email, time() + (86400 * 30), \"/\"); // 86400 = 1 dia\n        echo \"Login successful. Welcome, \" . $email;\n    } else {\n        // Credencials incorrectes\n        echo \"Invalid email or password.\";\n    }\n}\n\n// Llegir la cookie\nif (isset($_COOKIE['user'])) {\n    echo \"Welcome back, \" . $_COOKIE['user'];\n}\n?&gt;\n&lt;form method=\"post\"&gt;\n    Email: &lt;input type=\"email\" name=\"email\" required&gt;\n    Password: &lt;input type=\"password\" name=\"password\" required&gt;\n    &lt;button type=\"submit\" name=\"login\"&gt;Login&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>Seguretat en cookies</p> <p>Les cookies s\u00f3n vulnerables a atacs com Cross-Site Scripting (XSS) i Cross-Site Request Forgery (CSRF). Per a protegir-les, s'ha de configurar la cookie com a segura i nom\u00e9s accessible a trav\u00e9s de la web.</p>"},{"location":"1val.html#exemple-amb-jwt","title":"Exemple amb JWT","text":"<p>Aquest exemple mostra com generar i verificar un JWT per a l'autenticaci\u00f3.</p> <pre><code>&lt;?php\nfunction base64UrlEncode($data) {\n    return rtrim(strtr(base64_encode($data), '+/', '-_'), '=');\n}\n\nfunction base64UrlDecode($data) {\n    return base64_decode(strtr($data, '-_', '+/'));\n}\n\nfunction createJWT($header, $payload, $secret) {\n    $headerEncoded = base64UrlEncode(json_encode($header));\n    $payloadEncoded = base64UrlEncode(json_encode($payload));\n\n    $signature = hash_hmac('sha256', \"$headerEncoded.$payloadEncoded\", $secret, true);\n    $signatureEncoded = base64UrlEncode($signature);\n\n    return \"$headerEncoded.$payloadEncoded.$signatureEncoded\";\n}\n\nfunction verifyJWT($jwt, $secret) {\n    list($headerEncoded, $payloadEncoded, $signatureEncoded) = explode('.', $jwt);\n\n    $signature = base64UrlDecode($signatureEncoded);\n    $expectedSignature = hash_hmac('sha256', \"$headerEncoded.$payloadEncoded\", $secret, true);\n\n    if ($signature === $expectedSignature) {\n        return json_decode(base64UrlDecode($payloadEncoded));\n    }\n\n    return false;\n}\n\n// Exemples d'\u00fas\n$header = ['alg' =&gt; 'HS256', 'typ' =&gt; 'JWT'];\n$payload = ['email' =&gt; 'user1@example.com', 'exp' =&gt; time() + 3600];\n$secret = 'your_secret_key';\n\n$jwt = createJWT($header, $payload, $secret);\necho \"JWT: \" . $jwt . \"\\n\";\n\n$decoded = verifyJWT($jwt, $secret);\nif ($decoded) {\n    echo \"JWT valid: \" . json_encode($decoded) . \"\\n\";\n} else {\n    echo \"Invalid JWT.\\n\";\n}\n?&gt;\n</code></pre>"},{"location":"1val.html#exemple-amb-mfa","title":"Exemple amb MFA","text":"<p>Aquest exemple mostra com afegir una capa addicional d'autenticaci\u00f3 amb un codi MFA.</p> <pre><code>&lt;?php\nsession_start();\n\nfunction sendMFACode() {\n    $code = rand(100000, 999999);\n    $_SESSION['mfa_code'] = $code;\n\n    // Simular enviament de codi via email o SMS\n    echo \"Verification code: $code\"; // En un entorn real, envia el codi per email o SMS.\n}\n\nfunction verifyMFACode($inputCode) {\n    return isset($_SESSION['mfa_code']) &amp;&amp; $inputCode == $_SESSION['mfa_code'];\n}\n\nif (isset($_POST['send_code'])) {\n    sendMFACode();\n}\n\nif (isset($_POST['verify_code'])) {\n    if (verifyMFACode($_POST['mfa_code'])) {\n        echo \"MFA successful.\";\n    } else {\n        echo \"Invalid verification code.\";\n    }\n}\n?&gt;\n&lt;form method=\"post\"&gt;\n    &lt;button type=\"submit\" name=\"send_code\"&gt;Send MFA Code&lt;/button&gt;\n&lt;/form&gt;\n&lt;form method=\"post\"&gt;\n    MFA Code: &lt;input type=\"text\" name=\"mfa_code\" required&gt;\n    &lt;button type=\"submit\" name=\"verify_code\"&gt;Verify MFA Code&lt;/button&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"1val.html#exemple-amb-oauth","title":"Exemple amb OAuth","text":"<p>Per a OAuth, es pot utilitzar un prove\u00efdor extern com Google per autenticar els usuaris. Ho vorem m\u00e9s avant.</p> <pre><code>&lt;?php\nrequire_once 'vendor/autoload.php';\n\n$provider = new League\\OAuth2\\Client\\Provider\\Google([\n    'clientId'     =&gt; 'your-client-id',\n    'clientSecret' =&gt; 'your-client-secret',\n    'redirectUri'  =&gt; 'your-redirect-url',\n]);\n\nif (!isset($_GET['code'])) {\n    $authUrl = $provider-&gt;getAuthorizationUrl();\n    $_SESSION['oauth2state'] = $provider-&gt;getState();\n    header('Location: ' . $authUrl);\n    exit;\n} elseif (empty($_GET['state']) || ($_GET['state'] !== $_SESSION['oauth2state'])) {\n    unset($_SESSION['oauth2state']);\n    exit('Invalid state');\n} else {\n    $token = $provider-&gt;getAccessToken('authorization_code', [\n        'code' =&gt; $_GET['code']\n    ]);\n\n    $user = $provider-&gt;getResourceOwner($token);\n    $userData = $user-&gt;toArray();\n\n    // Mostra la informaci\u00f3 de l'usuari\n    echo 'Hello, ' . $userData['name'];\n}\n?&gt;\n</code></pre>"},{"location":"1val.html#4-referencies-addicionals","title":"4. Refer\u00e8ncies Addicionals","text":"<p>A continuaci\u00f3 es presenten diverses refer\u00e8ncies que poden ajudar-te a aprofundir en el tema de la gesti\u00f3 de sessions i cookies en PHP.</p>"},{"location":"1val.html#documentacio-oficial-de-php","title":"Documentaci\u00f3 Oficial de PHP","text":"<ul> <li> <p>Sessions a PHP: La documentaci\u00f3 oficial de PHP proporciona informaci\u00f3 detallada sobre l'\u00fas de sessions, incloent-hi exemples pr\u00e0ctics i consells de millors pr\u00e0ctiques.</p> <ul> <li>Sessions a PHP</li> </ul> </li> <li> <p>Cookies a PHP: Trobar\u00e0s informaci\u00f3 oficial sobre com treballar amb cookies en PHP, amb descripcions d'atributs com <code>HttpOnly</code>, <code>Secure</code> i <code>SameSite</code>.</p> <ul> <li>Cookies a PHP</li> </ul> </li> </ul>"},{"location":"1val.html#articles-i-blocs-tecnics","title":"Articles i Blocs T\u00e8cnics","text":"<ul> <li> <p>PHP Sessions: Tips &amp; Tricks: Aquest article discuteix t\u00e8cniques avan\u00e7ades per gestionar sessions en PHP, amb exemples i millors pr\u00e0ctiques per a la seguretat.</p> <ul> <li>PHP Sessions: Tips &amp; Tricks</li> </ul> </li> <li> <p>Handling Cookies Securely in PHP: Una guia sobre com manejar cookies de manera segura, destacant estrat\u00e8gies per protegir les dades de l'usuari.</p> <ul> <li>Handling Cookies Securely in PHP</li> </ul> </li> </ul>"},{"location":"1val.html#llibres-sobre-php","title":"Llibres sobre PHP","text":"<ul> <li> <p>\"Modern PHP: New Features and Good Practices\" de Josh Lockhart: Aquest llibre cobreix les novetats de PHP i les millors pr\u00e0ctiques, incloent la seguretat de sessions i cookies.</p> </li> <li> <p>\"PHP Objects, Patterns, and Practice\" de M. Zandstra: Proporciona una visi\u00f3 profunda sobre el disseny de programari amb PHP, incloent-hi aspectes de seguretat relacionats amb sessions i cookies.</p> </li> </ul>"},{"location":"1val.html#guies-de-seguretat-en-desenvolupament-web","title":"Guies de Seguretat en Desenvolupament Web","text":"<ul> <li> <p>OWASP Secure Coding Practices: Aquesta guia de OWASP ofereix una r\u00e0pida refer\u00e8ncia sobre les millors pr\u00e0ctiques de codificaci\u00f3 segura, \u00fatils per a protegir les teves aplicacions web.</p> <ul> <li>OWASP Secure Coding Practices</li> </ul> </li> <li> <p>OWASP Cheat Sheet on Session Management: Una fitxa de refer\u00e8ncia r\u00e0pida de OWASP sobre la gesti\u00f3 de sessions, proporcionant consells de seguretat essencials.</p> <ul> <li>OWASP Cheat Sheet on Session Management</li> </ul> </li> </ul>"},{"location":"1val.html#conferencies-i-videos-educatius","title":"Confer\u00e8ncies i V\u00eddeos Educatius","text":"<ul> <li> <p>PHP Conference YouTube Channel: El canal de YouTube de PHP Conference ofereix v\u00eddeos de confer\u00e8ncies i xerrades que cobreixen una varietat de temes, incloent sessions i seguretat.</p> <ul> <li>PHP Conference YouTube Channel</li> </ul> </li> <li> <p>Laracasts: Ofereix v\u00eddeos d'alta qualitat sobre desenvolupament en PHP i Laravel, amb temes rellevants per a sessions i cookies.</p> <ul> <li>Laracasts</li> </ul> </li> </ul>"},{"location":"1val.html#tutorials-online-i-plataformes-educatives","title":"Tutorials Online i Plataformes Educatives","text":"<ul> <li> <p>Stack Overflow PHP Sessions Tag: Un lloc de consulta on trobar respostes a preguntes freq\u00fcents sobre la gesti\u00f3 de sessions en PHP.</p> <ul> <li>Stack Overflow PHP Sessions Tag</li> </ul> </li> <li> <p>Cursos a Udemy sobre PHP: Cursos que cobreixen des de conceptes b\u00e0sics fins a avan\u00e7ats de PHP, incloent-hi la gesti\u00f3 de sessions i cookies.</p> <ul> <li>Cursos a Udemy sobre PHP</li> </ul> </li> </ul>"},{"location":"1val.html#5exercicis","title":"5.Exercicis","text":""},{"location":"1val.html#bateria-dexercicis-solucionats-per-a-la-unitat-de-programacio-web","title":"Bateria d'Exercicis Solucionats per a la Unitat de Programaci\u00f3 web","text":""},{"location":"1val.html#exercici-1-crear-una-sessio","title":"Exercici 1: Crear una sessi\u00f3","text":"<p>1.Crea una p\u00e0gina PHP que inicialitze una sessi\u00f3 i emmagatzeme el nom i el rol d'un usuari en variables de sessi\u00f3. Mostra aquests valors a la p\u00e0gina web.</p> Soluci\u00f3 <pre><code>&lt;?php\n// Iniciar sessi\u00f3\nsession_start();\n\n// Emmagatzemar informaci\u00f3 de l'usuari en la sessi\u00f3\n$_SESSION['nom'] = 'Joan';\n$_SESSION['rol'] = 'Administrador';\n\necho 'Benvingut, ' . $_SESSION['nom'] . '&lt;br&gt;';\necho 'Rol: ' . $_SESSION['rol'] . '&lt;br&gt;';\n?&gt;\n</code></pre>"},{"location":"1val.html#exercici-2-regenerar-lid-de-sessio","title":"Exercici 2: Regenerar l'ID de sessi\u00f3","text":"<ol> <li>Modifica l'exercici anterior per regenerar l'ID de sessi\u00f3 just despr\u00e9s d'emmagatzemar la informaci\u00f3 de l'usuari.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Iniciar sessi\u00f3\nsession_start();\n\n// Emmagatzemar informaci\u00f3 de l'usuari en la sessi\u00f3\n$_SESSION['nom'] = 'Joan';\n$_SESSION['rol'] = 'Administrador';\n\n// Regenerar l'ID de sessi\u00f3\nsession_regenerate_id(true);\n\necho 'Benvingut, ' . $_SESSION['nom'] . '&lt;br&gt;';\necho 'Rol: ' . $_SESSION['rol'] . '&lt;br&gt;';\n?&gt;\n</code></pre>"},{"location":"1val.html#exercici-3-tancar-la-sessio","title":"Exercici 3: Tancar la sessi\u00f3","text":"<ol> <li>Escriu un script PHP que elimine totes les variables de sessi\u00f3 i destrueixi la sessi\u00f3 quan l'usuari tanqui sessi\u00f3.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Iniciar sessi\u00f3\nsession_start();\n\n// Eliminar totes les variables de sessi\u00f3\nsession_unset();\n\n// Destruir la sessi\u00f3\nsession_destroy();\n?&gt;\n</code></pre>"},{"location":"1val.html#exercici-4-crear-una-cookie-segura","title":"Exercici 4: Crear una cookie segura","text":"<ol> <li>Escriu un script PHP per crear una cookie que emmagatzeme el nom d'usuari amb els atributs de seguretat <code>HttpOnly</code>, <code>Secure</code> i <code>SameSite</code>.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Crear una cookie segura\nsetcookie(\n    'nom_usuari',\n    'Joan',\n    [\n        'expires' =&gt; time() + 3600, // 1 hora\n        'path' =&gt; '/',\n        'domain' =&gt; '', // Domini actual\n        'secure' =&gt; true, // Nom\u00e9s HTTPS\n        'httponly' =&gt; true, // Nom\u00e9s accessible via HTTP\n        'samesite' =&gt; 'Lax' // o 'Strict' o 'None'\n    ]\n);\n?&gt;\n</code></pre>"},{"location":"1val.html#exercici-5-llegir-i-modificar-una-cookie","title":"Exercici 5: Llegir i modificar una cookie","text":"<ol> <li>Crea una p\u00e0gina PHP que llegeixca el valor d'una cookie anomenada <code>nom_usuari</code> i la modifique afegint un prefix de salutaci\u00f3.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Llegir el valor de la cookie\nif (isset($_COOKIE['nom_usuari'])) {\n    $nomUsuari = $_COOKIE['nom_usuari'];\n    echo 'Hola, ' . $nomUsuari;\n\n    // Modificar el valor de la cookie\n    $salutacio = 'Hola, ' . $nomUsuari;\n    setcookie('nom_usuari', $salutacio, time() + 3600, '/');\n} else {\n    echo 'Cookie not found.';\n}\n?&gt;\n</code></pre>"},{"location":"1val.html#exercici-6-aplicacio-de-gestio-dusuaris-amb-sessions","title":"Exercici 6: Aplicaci\u00f3 de gesti\u00f3 d'usuaris amb sessions","text":"<ol> <li>Desenvolupa una aplicaci\u00f3 PHP amb dos scripts: un per iniciar sessi\u00f3 i un altre per tancar sessi\u00f3. L'aplicaci\u00f3 ha de permetre que l'usuari introdueixca el seu nom d'usuari i vega un missatge de benvinguda una vegada haja iniciat sessi\u00f3.</li> </ol> Soluci\u00f3 <pre><code>&lt;!-- login.php --&gt;\n&lt;?php\nsession_start();\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n$nomUsuari = $_POST['nom_usuari'];\n\n    // Emmagatzemar el nom d'usuari en la sessi\u00f3\n    $_SESSION['nom_usuari'] = $nomUsuari;\n\n    // Redireccionar a la p\u00e0gina de benvinguda\n    header('Location: welcome.php');\n    exit();\n}\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Iniciar Sessi\u00f3&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h2&gt;Iniciar Sessi\u00f3&lt;/h2&gt;\n    &lt;form method=\"post\" action=\"login.php\"&gt;\n        &lt;label for=\"nom_usuari\"&gt;Nom d'usuari:&lt;/label&gt;\n        &lt;input type=\"text\" id=\"nom_usuari\" name=\"nom_usuari\" required&gt;\n        &lt;button type=\"submit\"&gt;Iniciar Sessi\u00f3&lt;/button&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <pre><code>&lt;!-- logout.php --&gt;\n&lt;?php\nsession_start();\n\n// Tancar sessi\u00f3 de forma segura\nsession_unset();\nsession_destroy();\n\n// Redireccionar a la p\u00e0gina de login\nheader('Location: login.php');\nexit();\n?&gt;\n</code></pre> <pre><code>&lt;!-- wellcome.php --&gt;\n&lt;?php\nsession_start();\n\nif (!isset($_SESSION['nom_usuari'])) {\n    // Redireccionar a la p\u00e0gina de login si no s'ha iniciat sessi\u00f3\n    header('Location: login.php');\n    exit();\n}\n\n$nomUsuari = $_SESSION['nom_usuari'];\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Benvingut&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h2&gt;Benvingut, &lt;?php echo htmlspecialchars($nomUsuari); ?&gt;!&lt;/h2&gt;\n    &lt;p&gt;Aquesta \u00e9s la teva p\u00e0gina de benvinguda.&lt;/p&gt;\n    &lt;a href=\"logout.php\"&gt;Tancar Sessi\u00f3&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"1val.html#exercici-7-aplicacio-de-gestio-de-preferencies-amb-cookies","title":"Exercici 7: Aplicaci\u00f3 de gesti\u00f3 de prefer\u00e8ncies amb cookies","text":"<ol> <li>Crea una aplicaci\u00f3 PHP que permeta als usuaris seleccionar el seu color preferit, emmagatzemant aquesta informaci\u00f3 en una cookie. La p\u00e0gina hauria de mostrar el color preferit de l'usuari en futures visites.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Llegir el color preferit de la cookie\n$colorPreferit = isset($_COOKIE['color_preferit']) ? $_COOKIE['color_preferit'] : 'blau';\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $colorPreferit = $_POST['color_preferit'];\n\n    // Emmagatzemar el color preferit en una cookie\n    setcookie('color_preferit', $colorPreferit, time() + 3600, '/');\n}\n?&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Prefer\u00e8ncies de Color&lt;/title&gt;\n&lt;/head&gt;\n&lt;body style=\"background-color: &lt;?php echo $colorPreferit; ?&gt;\"&gt;\n    &lt;h2&gt;Prefer\u00e8ncies de Color&lt;/h2&gt;\n    &lt;form method=\"post\"&gt;\n        &lt;label for=\"color_preferit\"&gt;Color preferit:&lt;/label&gt;\n        &lt;select id=\"color_preferit\" name=\"color_preferit\"&gt;\n            &lt;option value=\"blau\" &lt;?php if ($colorPreferit === 'blau') echo 'selected'; ?&gt;&gt;Blau&lt;/option&gt;\n            &lt;option value=\"vermell\" &lt;?php if ($colorPreferit === 'vermell') echo 'selected'; ?&gt;&gt;Vermell&lt;/option&gt;\n            &lt;option value=\"verd\" &lt;?php if ($colorPreferit === 'verd') echo 'selected'; ?&gt;&gt;Verd&lt;/option&gt;\n        &lt;/select&gt;\n        &lt;button type=\"submit\"&gt;Guardar&lt;/button&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"1val.html#exercicis-proposats_1","title":"Exercicis proposats","text":""},{"location":"1val.html#exercici-1-sistema-de-carret-de-compres-sense-base-de-dades","title":"Exercici 1: Sistema de Carret de Compres sense Base de Dades","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Desenvolupa una aplicaci\u00f3 PHP que permeta als usuaris afegir productes a un carret de compres i mostrar el contingut del carret. Utilitza sessions per a mantindre l'estat del carret entre p\u00e0gines.</p> <ol> <li>Requisits:<ul> <li>Crear una p\u00e0gina on l'usuari puga seleccionar productes.</li> <li>Afegir els productes seleccionats a un carret emmagatzemat en una sessi\u00f3.</li> <li>Mostrar un resum del carret amb els productes afegits i les seues quantitats.</li> <li>Permetre que l'usuari elimine productes del carret.</li> </ul> </li> </ol> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ca\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Selecci\u00f3 de productes&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Afegir productes al carret&lt;/h1&gt;\n    &lt;form action=\"carret.php\" method=\"POST\"&gt;\n        &lt;label for=\"producte\"&gt;Tria un producte:&lt;/label&gt;\n        &lt;select name=\"producte\" id=\"producte\"&gt;\n            &lt;option value=\"Poma\"&gt;Poma&lt;/option&gt;\n            &lt;option value=\"Pl\u00e0tan\"&gt;Pl\u00e0tan&lt;/option&gt;\n            &lt;option value=\"Taronja\"&gt;Taronja&lt;/option&gt;\n        &lt;/select&gt;\n        &lt;input type=\"submit\" value=\"Afegir al carret\"&gt;\n    &lt;/form&gt;\n    &lt;a href=\"carret.php\"&gt;Veure carret&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"1val.html#exercici-2-autenticacio-basica-dusuaris-amb-sessions","title":"Exercici 2: Autenticaci\u00f3 B\u00e0sica d'Usuaris amb Sessions","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Crea una aplicaci\u00f3 PHP que permeta als usuaris iniciar sessi\u00f3 mitjan\u00e7ant un formulari. Utilitza sessions per a mantindre l'estat d'autenticaci\u00f3 de l'usuari i mostrar missatges personalitzats basats en aquest estat.</p> <ol> <li>Requisits:<ul> <li>Crear un formulari d'inici de sessi\u00f3 que sol\u00b7licite el nom d'usuari i la contrasenya.</li> <li>Emmagatzemar l'estat d'autenticaci\u00f3 en una sessi\u00f3 despr\u00e9s de verificar les credencials.</li> <li>Mostrar una p\u00e0gina de benvinguda personalitzada per a l'usuari autenticat.</li> <li>Proporcionar un enlla\u00e7 per a tancar sessi\u00f3 i destruir la sessi\u00f3.</li> </ul> </li> </ol>"},{"location":"1val.html#exercici-3-recordatori-dusuari-amb-cookies","title":"Exercici 3: Recordatori d'Usuari amb Cookies","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Afig una funcionalitat de \"recordar-me\" a l'exercici anterior que emmagatzeme el nom d'usuari en una cookie i permeta a l'usuari ser recordat en futures visites al lloc web.</p> <ol> <li>Requisits:<ul> <li>Afig una opci\u00f3 de \"recordar-me\" al formulari d'inici de sessi\u00f3.</li> <li>Emmagatzemar el nom d'usuari en una cookie quan l'opci\u00f3 \u00e9s seleccionada.</li> <li>Comprovar la cookie en futures visites i iniciar sessi\u00f3 autom\u00e0ticament si la cookie existeix.</li> <li>Assegurar que les cookies es configuren amb atributs de seguretat adequats (<code>HttpOnly</code>, <code>Secure</code>, <code>SameSite</code>).</li> </ul> </li> </ol>"},{"location":"1val.html#exercici-4-formulari-de-contacte-amb-proteccio-csrf","title":"Exercici 4: Formulari de Contacte amb Protecci\u00f3 CSRF","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Desenvolupa un formulari de contacte que permeta als usuaris enviar missatges i implementa protecci\u00f3 CSRF per a assegurar que les sol\u00b7licituds siguen leg\u00edtimes.</p> <ol> <li>Requisits:<ul> <li>Crear un formulari de contacte amb camps per al nom, correu electr\u00f2nic i missatge.</li> <li>Generar i emmagatzemar un token CSRF en una sessi\u00f3 quan es carrega el formulari.</li> <li>Incloure el token CSRF com a camp ocult en el formulari.</li> <li>Verificar el token CSRF quan s'envia el formulari i mostrar un missatge de confirmaci\u00f3 si \u00e9s v\u00e0lid.</li> <li>Mostrar un missatge d'error si el token CSRF no \u00e9s v\u00e0lid o no existeix.</li> </ul> </li> </ol>"},{"location":"1val.html#exercici-5-seguiment-dactivitat-de-lusuari-amb-sessions","title":"Exercici 5: Seguiment d'Activitat de l'Usuari amb Sessions","text":"<ol> <li>Descripci\u00f3:</li> </ol> <p>Crea un sistema que registre les p\u00e0gines visitades per l'usuari durant una sessi\u00f3 i mostre aquesta informaci\u00f3 quan l'usuari visita una p\u00e0gina d'activitat.</p> <ol> <li>Requisits:<ul> <li>Emmagatzemar una llista de p\u00e0gines visitades per l'usuari en una sessi\u00f3.</li> <li>Actualitzar la llista de p\u00e0gines cada vegada que l'usuari visite una nova p\u00e0gina.</li> <li>Crear una p\u00e0gina que mostre l'historial de p\u00e0gines visitades durant la sessi\u00f3 actual.</li> <li>Assegurar que l'historial es restableix quan l'usuari tanca la sessi\u00f3.</li> </ul> </li> </ol>"},{"location":"1val.html#solucions_1","title":"Solucions","text":""},{"location":"1val.html#6-enunciats-dels-projectes","title":"6. Enunciats dels projectes","text":""},{"location":"1val.html#per-als-dos-projectes","title":"Per als dos projectes","text":"<ol> <li>Autenticaci\u00f3 de Jugadors:<ul> <li>Implementa un sistema d'autenticaci\u00f3 b\u00e0sic que permeta als jugadors iniciar sessi\u00f3 abans de comen\u00e7ar el joc. Utilitza sessions per a mantindre l'estat d'autenticaci\u00f3.</li> <li>Ha de servir per als dos jocs, \"Penjat\" i \"4 en Ratlla\".</li> <li>Fes que una vegada autenticar l'usuari puga triar a quin joc vol jugar (en la mateix p\u00e0gina).</li> <li>Protegeix els jocs per tal que no es puga jugar en cas de no estar autenticat.</li> </ul> </li> </ol>"},{"location":"1val.html#projecte-penjat","title":"Projecte Penjat","text":"<ol> <li> <p>Manteniment de l'Estat del Joc amb Sessions:</p> <ul> <li>Utilitza sessions per a emmagatzemar l'estat actual del joc, incloent la paraula a endevinar, lletres endevinades, i el nombre d'intents restants.</li> </ul> </li> <li> <p>Gesti\u00f3 de la Sessi\u00f3 del Joc:</p> <ul> <li>Afegeix funcionalitats per a reiniciar el joc en qualsevol moment, reinicialitzant les variables de sessi\u00f3 per a comen\u00e7ar una nova partida.</li> <li>Afegeix una opci\u00f3 per a tancar sessi\u00f3 i finalitzar la partida actual.</li> <li>Afegeix un funci\u00f3 per a saver si el joc ha acabat, ja siga perqu\u00e8 s'han endevinat totes les lletres o s'haguen arribat al m\u00e0xim n\u00famero d'intents permesos.</li> <li>Controla el final del joc</li> </ul> </li> <li> <p>Cookies per a Recordar Jugadors:</p> <ul> <li>Implementa cookies per a recordar els jugadors entre visites, permetent que l'usuari siga recordat si selecciona una opci\u00f3 de \"Recordar-me\" durant l'inici de sessi\u00f3.</li> </ul> </li> <li> <p>Seguretat i Autenticaci\u00f3:</p> <ul> <li>Implementa un sistema d'autenticaci\u00f3 b\u00e0sic per a garantir que nom\u00e9s els jugadors autenticats puguen accedir al joc.</li> <li>Utilitza sessions per a mantenir l'estat d'autenticaci\u00f3 i controlar l'acc\u00e9s a les funcionalitats del joc.</li> </ul> </li> </ol>"},{"location":"1val.html#consideracions-addicionals","title":"Consideracions Addicionals","text":"<ul> <li>Resili\u00e8ncia del Joc: Implementa la l\u00f2gica necess\u00e0ria per a manejar intents inv\u00e0lids i mostrar missatges d'error adequats.</li> <li>Millores d'Interf\u00edcie: Afegix un enlla\u00e7 o bot\u00f3 per a tancar sessi\u00f3 i una opci\u00f3 per a reiniciar el joc.</li> </ul>"},{"location":"1val.html#projecte-4-en-ratlla_1","title":"Projecte \"4 en Ratlla\"","text":"<ol> <li> <p>Gesti\u00f3 de l'Estat de la Graella amb Sessions:</p> <ul> <li>Utilitza sessions per a emmagatzemar l'estat actual de la graella i el torn del jugador. Aix\u00f2 permet mantenir la partida entre sol\u00b7licituds.</li> </ul> </li> <li> <p>Manteniment de la Sessi\u00f3 entre Jugadors:</p> <ul> <li>Emmagatzema l'identificador de cada jugador en sessions per a assegurar que el torn actual siga persistent entre sol\u00b7licituds.</li> <li>Afegeix funcionalitats per a reiniciar el joc en qualsevol moment, reinicialitzant les variables de sessi\u00f3 per a comen\u00e7ar una nova partida.</li> <li>Afegeix una opci\u00f3 per a tancar sessi\u00f3 i finalitzar la partida actual.</li> <li>Afegeix un funci\u00f3 per a saver si el joc ha acabat, ja siga perqu\u00e8 s'ha fet 4 en ratlla  o s'haja completat el tauler.</li> <li>Controla el final del joc.</li> </ul> </li> <li> <p>Cookies per a la Persist\u00e8ncia d'Usuaris:</p> <ul> <li>Permet l'\u00fas de cookies per a recordar els jugadors entre visites si han seleccionat \"Recordar-me\". Utilitza cookies per a emmagatzemar l'\u00faltim jugador autenticat.</li> </ul> </li> <li> <p>Seguretat i Autenticaci\u00f3:</p> <ul> <li>Implementa un sistema d'autenticaci\u00f3 b\u00e0sic per a garantir que nom\u00e9s els jugadors autenticats puguen accedir al joc.</li> <li>Utilitza sessions per a mantenir l'estat d'autenticaci\u00f3 i controlar l'acc\u00e9s a les funcionalitats del joc.</li> </ul> </li> <li> <p>Addicional</p> <ul> <li>Implementa la l\u00f2gica per tal que el segon jugador siga la m\u00e0quina (pots adaptar i/o millorar l'algorisme de baix).</li> <li>Controla el joc per a que no es puga seguir jugant una vegada acabat.</li> <li>Implementa un sistema de puntuaci\u00f3 que otorgue 2 punts al guanyador i 1 a cadasc\u00fa en cas d'empat.</li> </ul> </li> </ol> <pre><code>function jugar(&amp;$graella,$jugadorActual){\n\n       $opponent = $jugadorActual === 1 ? 2 : 1;\n\n       // Comprovar si pots guanyar\n       for ($col = 1; $col &lt;= COLUMNES; $col++) {\n           if (isValidMove($graella, $col)) {\n               $tempBoard = $graella;\n               $coord = ferMoviment($tempBoard, $col, $jugadorActual);\n\n               if (fi_joc($tempBoard, $coord)) {\n                   return ferMoviment($graella,$col,$jugadorActual); // Guanyar immediatament\n               }\n           }\n       }\n\n       // Comprovar si l'oponent pot guanyar i bloquejar\n       for ($col = 1; $col &lt;= COLUMNES; $col++) {\n           if (isValidMove($graella, $col)) {\n               $tempBoard = $graella;\n               $coord = ferMoviment($tempBoard, $col, $opponent);\n               if (fi_joc($tempBoard, $coord )) {\n                   return ferMoviment($graella,$col,$jugadorActual); // Bloquejar\n               }\n           }\n       }\n\n       // Estrat\u00e8gia: buscar el millor moviment\n       // Podem afegir m\u00e9s l\u00f2gica aqu\u00ed per seleccionar el millor moviment\n       $possibles = array();\n       for ($col = 1; $col &lt;= COLUMNES; $col++) {\n           if (isValidMove($graella, $col)) {\n               $possibles[] = $col; \n           }\n       }\n       if (count($possibles)&gt;2) {\n           $random = rand(-1,1);\n       }\n       $middle = (int) (count($possibles) / 2)+$random;\n       $inthemiddle = $possibles[$middle];\n       return ferMoviment($graella, $inthemiddle, $jugadorActual); \n\n       return -1; // Totes les columnes estan plenes\n}\n</code></pre>"},{"location":"1val.html#consideracions-addicionals_1","title":"Consideracions Addicionals","text":"<ul> <li>L\u00f2gica de Torn de Jugadors: Implementa la l\u00f2gica necess\u00e0ria per a canviar de torn entre els jugadors utilitzant sessions.</li> <li>Reinici de Partida: Afegeix una opci\u00f3 per a reiniciar el joc, que ha de restablir les sessions i permetre comen\u00e7ar de nou.</li> <li>Interf\u00edcie d'Usuari Amigable: Assegura't que la interf\u00edcie d'usuari \u00e9s clara i proporciona indicacions visuals dels moviments i torns dels jugadors.</li> </ul>"},{"location":"1val.html#rubrica-davaluacio","title":"R\u00fabrica d'Avaluaci\u00f3","text":"Criteri Excel\u00b7lent (4) B\u00e9 (3) Adequat (2) Insuficient (1) Funcionalitat del Joc El joc est\u00e0 completament funcional i sense errors. El joc est\u00e0 majorit\u00e0riament funcional amb errors m\u00ednims. El joc \u00e9s funcional, per\u00f2 cont\u00e9 errors significatius. El joc no \u00e9s funcional o est\u00e0 incomplet. \u00das de Sessions Sessions ben implementades per a mantenir l'estat del joc. Sessions utilitzades correctament amb alguns problemes menors. Sessions utilitzades, per\u00f2 amb defici\u00e8ncies importants. No s'han utilitzat sessions o s\u00f3n incorrectes. \u00das de Cookies Cookies ben utilitzades per a recordar els jugadors. Cookies utilitzades adequadament amb algunes millores possibles. Cookies utilitzades amb limitacions evidents. No s'han utilitzat cookies o s\u00f3n incorrectes. Autenticaci\u00f3 d'Usuaris Autenticaci\u00f3 segura i efectiva implementada. Autenticaci\u00f3 implementada amb alguns problemes. Autenticaci\u00f3 present per\u00f2 amb defici\u00e8ncies notables. No s'ha implementat autenticaci\u00f3 o \u00e9s incorrecta. Interf\u00edcie d'Usuari Interf\u00edcie atractiva i f\u00e0cil d'utilitzar. Interf\u00edcie clara amb algunes millores possibles. Interf\u00edcie funcional per\u00f2 poc intu\u00eftiva. Interf\u00edcie confusa i dif\u00edcil d'utilitzar. Seguretat Totes les mesures de seguretat implementades correctament. Seguretat adequada amb algunes millores possibles. Mesures de seguretat b\u00e0siques implementades. No s'han tingut en compte mesures de seguretat. Comentaris i Codi Codi ben comentat i f\u00e0cilment llegible. Codi clar amb comentaris adequats. Codi llegible per\u00f2 amb pocs comentaris. Codi desordenat i sense comentaris. Innovaci\u00f3 i Creativitat El projecte mostra innovaci\u00f3 significativa. Algunes idees creatives han estat implementades. Alguna creativitat present, per\u00f2 limitada. Cap creativitat o innovaci\u00f3 en el projecte. Punts addicionals 1 punt per cadasc\u00fana aconseguida."},{"location":"1val.html#explicacio-dels-criteris","title":"Explicaci\u00f3 dels Criteris","text":""},{"location":"1val.html#funcionalitat-del-joc","title":"Funcionalitat del Joc","text":"<ul> <li> <p>Excel\u00b7lent (4): El joc funciona completament segons les especificacions, amb totes les funcionalitats implementades i sense errors. Els jugadors poden interaccionar amb el joc tal com s'esperava i totes les accions es realitzen correctament.</p> </li> <li> <p>Insuficient (1): El joc no \u00e9s funcional, falten parts importants del codi o el joc no es pot jugar correctament.</p> </li> </ul>"},{"location":"1val.html#us-de-sessions","title":"\u00das de Sessions","text":"<ul> <li> <p>Excel\u00b7lent (4): Les sessions s'utilitzen efica\u00e7ment per a mantenir l'estat del joc i de l'usuari entre sol\u00b7licituds. Les dades de la sessi\u00f3 es gestionen de manera adequada per a preservar l'experi\u00e8ncia de l'usuari.</p> </li> <li> <p>Insuficient (1): No s'han utilitzat sessions o la seva implementaci\u00f3 \u00e9s incorrecta, la qual cosa afecta negativament l'experi\u00e8ncia de l'usuari.</p> </li> </ul>"},{"location":"1val.html#us-de-cookies","title":"\u00das de Cookies","text":"<ul> <li> <p>Excel\u00b7lent (4): Les cookies s'utilitzen de manera efectiva per a recordar els jugadors entre sessions, amb la configuraci\u00f3 adequada d'atributs de seguretat (<code>HttpOnly</code>, <code>Secure</code>, <code>SameSite</code>).</p> </li> <li> <p>Insuficient (1): No s'han utilitzat cookies o la seva implementaci\u00f3 \u00e9s incorrecta, amb una configuraci\u00f3 de seguretat deficient.</p> </li> </ul>"},{"location":"1val.html#autenticacio-dusuaris","title":"Autenticaci\u00f3 d'Usuaris","text":"<ul> <li> <p>Excel\u00b7lent (4): L'autenticaci\u00f3 dels usuaris \u00e9s segura i eficient, amb mecanismes adequats per a validar les credencials i protegir la informaci\u00f3 dels usuaris.</p> </li> <li> <p>Insuficient (1): No s'ha implementat un sistema d'autenticaci\u00f3 o el sistema present \u00e9s insegur i defectu\u00f3s.</p> </li> </ul>"},{"location":"1val.html#interficie-dusuari","title":"Interf\u00edcie d'Usuari","text":"<ul> <li> <p>Excel\u00b7lent (4): La interf\u00edcie d'usuari \u00e9s atractiva, clara i f\u00e0cil de navegar, proporcionant una experi\u00e8ncia d'usuari \u00f2ptima.</p> </li> <li> <p>Insuficient (1): La interf\u00edcie \u00e9s confusa, dif\u00edcil d'utilitzar o inacabada.</p> </li> </ul>"},{"location":"1val.html#seguretat","title":"Seguretat","text":"<ul> <li> <p>Excel\u00b7lent (4): Totes les mesures de seguretat necess\u00e0ries han estat implementades, incloent-hi la validaci\u00f3 de dades d'entrada, protecci\u00f3 CSRF i altres pr\u00e0ctiques de seguretat recomanades.</p> </li> <li> <p>Insuficient (1): No s'han tingut en compte mesures de seguretat, deixant el projecte vulnerable a possibles atacs.</p> </li> </ul>"},{"location":"1val.html#comentaris-i-codi","title":"Comentaris i Codi","text":"<ul> <li> <p>Excel\u00b7lent (4): El codi est\u00e0 ben comentat, \u00e9s llegible i segueix bones pr\u00e0ctiques de programaci\u00f3.</p> </li> <li> <p>Insuficient (1): El codi est\u00e0 desordenat, dif\u00edcil de llegir i manca de comentaris explicatius.</p> </li> </ul>"},{"location":"1val.html#innovacio-i-creativitat","title":"Innovaci\u00f3 i Creativitat","text":"<ul> <li> <p>Excel\u00b7lent (4): El projecte mostra un alt grau d'innovaci\u00f3 i creativitat, oferint caracter\u00edstiques o enfocaments \u00fanics que milloren el joc.</p> </li> <li> <p>Insuficient (1): El projecte manca de creativitat o innovaci\u00f3, seguint \u00fanicament les instruccions b\u00e0siques sense cap valor afegit.</p> </li> </ul>"},{"location":"1val.html#notes-addicionals","title":"Notes Addicionals","text":"<ul> <li>Consist\u00e8ncia del Codi: S'espera que el codi sigui consistent, utilitzant convencions de noms adequades i estructures de codi clares.</li> <li>Adaptaci\u00f3 de les Necessitats: Els criteris poden ser adaptats segons les necessitats espec\u00edfiques del curs o dels projectes individuals.</li> </ul>"},{"location":"1val.html#7-autoavaluacio-gestio-de-sessions-i-cookies","title":"7. Autoavaluaci\u00f3: Gesti\u00f3 de Sessions i Cookies","text":""},{"location":"1val.html#exercici-1-funcions-de-les-cookies","title":"Exercici 1: Funcions de les Cookies","text":""},{"location":"1val.html#pregunta_7","title":"Pregunta:","text":"<p>Quina \u00e9s la funci\u00f3 principal de les cookies en el context del desenvolupament web?</p>"},{"location":"1val.html#opcions_7","title":"Opcions:","text":"a) Guardar els fitxers de l'usuari al servidor. b) Emmagatzemar informaci\u00f3 del client per personalitzar l'experi\u00e8ncia d'usuari. c) Executar codi al servidor. d) Controlar la velocitat de la connexi\u00f3 a Internet."},{"location":"1val.html#exercici-2-seguretat-de-les-cookies","title":"Exercici 2: Seguretat de les Cookies","text":""},{"location":"1val.html#pregunta_8","title":"Pregunta:","text":"<p>Quins atributs de seguretat haurien de tindre les cookies per protegir-les contra atacs?</p>"},{"location":"1val.html#opcions_8","title":"Opcions:","text":"a) Secure b) HttpOnly c) SameSite d) CrossSite"},{"location":"1val.html#exercici-3-creacio-de-sessions-en-php","title":"Exercici 3: Creaci\u00f3 de Sessions en PHP","text":""},{"location":"1val.html#pregunta_9","title":"Pregunta:","text":"<p>Quin dels seg\u00fcents passos \u00e9s necessari per iniciar una sessi\u00f3 en PHP?</p>"},{"location":"1val.html#opcions_9","title":"Opcions:","text":"a) Cridar a la funci\u00f3 session_start(). b) Utilitzar la funci\u00f3 session_open(). c) Assignar un valor a la variable $_SESSION. d) No es necessita cap funci\u00f3 especial."},{"location":"1val.html#exercici-4-manteniment-dinformacio-en-sessions","title":"Exercici 4: Manteniment d'Informaci\u00f3 en Sessions","text":""},{"location":"1val.html#pregunta_10","title":"Pregunta:","text":"<p>Com es pot mantindre la informaci\u00f3 d'un usuari durant la sessi\u00f3 d'una aplicaci\u00f3 web?</p>"},{"location":"1val.html#opcions_10","title":"Opcions:","text":"a) Utilitzant la variable global $GLOBALS. b) Utilitzant la variable $_SESSION. c) Utilitzant la variable $_COOKIE. d) Utilitzant arxius temporals al servidor."},{"location":"1val.html#exercici-5-funcions-de-php-per-a-sessions","title":"Exercici 5: Funcions de PHP per a Sessions","text":""},{"location":"1val.html#pregunta_11","title":"Pregunta:","text":"<p>Quina funci\u00f3 de PHP es fa servir per destruir una sessi\u00f3?</p>"},{"location":"1val.html#opcions_11","title":"Opcions:","text":"a) session_destroy() b) session_unset() c) session_delete() d) session_end()"},{"location":"1val.html#exercici-6-avantatges-de-les-sessions","title":"Exercici 6: Avantatges de les Sessions","text":""},{"location":"1val.html#pregunta_12","title":"Pregunta:","text":"<p>Quins s\u00f3n els avantatges d'utilitzar sessions en lloc de cookies per a mantenir l'estat de l'usuari?</p>"},{"location":"1val.html#opcions_12","title":"Opcions:","text":"a) Les sessions poden emmagatzemar m\u00e9s informaci\u00f3 perqu\u00e8 es guarden al servidor. b) Les sessions s\u00f3n m\u00e9s segures perqu\u00e8 no s'envien al client. c) Les sessions redueixen la c\u00e0rrega del servidor. d) Les sessions no necessiten ser configurades amb atributs de seguretat."},{"location":"1val.html#exercici-7-autenticacio-dusuaris","title":"Exercici 7: Autenticaci\u00f3 d'Usuaris","text":""},{"location":"1val.html#pregunta_13","title":"Pregunta:","text":"<p>Quina \u00e9s la pr\u00e0ctica recomanada per assegurar la identitat d'un usuari en una aplicaci\u00f3 web?</p>"},{"location":"1val.html#opcions_13","title":"Opcions:","text":"a) Utilitzar noms d'usuari i contrasenyes emmagatzemades com a cookies. b) Utilitzar sessions per mantenir l'estat d'autenticaci\u00f3 despr\u00e9s d'iniciar sessi\u00f3. c) Emmagatzemar la contrasenya de l'usuari a la URL. d) No utilitzar cap forma d'autenticaci\u00f3."},{"location":"1val.html#desenvolupament-daplicacions-web-poo-separacio-de-logica-i-presentacio-gestio-derrors-i-proves","title":"Desenvolupament d'Aplicacions Web: POO, Separaci\u00f3 de L\u00f2gica i Presentaci\u00f3, Gesti\u00f3 d'Errors i Proves","text":"Duraci\u00f3 i criteris d'avaluaci\u00f3 <p>Duraci\u00f3 estimada: 20 hores</p> Resultat d'aprenentatge Criteris d'avaluaci\u00f3 5. Desenvolupa aplicacions Web identificant i aplicant mecanismes per a separar el codi de presentaci\u00f3 de la l\u00f2gica de negoci. a) S'han identificat els avantatges de separar la l\u00f2gica de negoci dels aspectes de presentaci\u00f3 de l'aplicaci\u00f3.  b) S'han analitzat tecnologies i mecanismes que permeten realitzar aquesta separaci\u00f3 i les seues caracter\u00edstiques principals.  c) S'han utilitzat objectes i controls en el servidor per a generar l'aspecte visual de l'aplicaci\u00f3 Web en el client.  d) S\u2019han utilitzat formularis generats de forma din\u00e0mica per a respondre als esdeveniments de l'aplicaci\u00f3 Web.  e) S'han identificat i aplicat els par\u00e0metres relatius a la configuraci\u00f3 de l'aplicaci\u00f3 Web.  f) S'han escrit aplicacions Web amb manteniment d'estat i separaci\u00f3 de la l\u00f2gica de negoci.  g) S'han aplicat els principis de la programaci\u00f3 orientada a objectes.  g) S'ha provat i documentat el codi."},{"location":"1val.html#1-concepte-de-classes-i-objectes","title":"1. Concepte de classes i Objectes","text":"<p>PHP segueix un paradigma de programaci\u00f3 orientada a objectes (POO) basada en classes.</p> <p>Un classe \u00e9s un plantilla que defineix les propietats i m\u00e8todes per a poder crear objectes. D'aquest manera, un objecte \u00e9s una inst\u00e0ncia d'una classe.</p> <p>Tant les propietats com els m\u00e8todes es defineixen amb una visibilitat (qui pot accedir)</p> <ul> <li>Privat - <code>private</code>: Nom\u00e9s pot accedir la pr\u00f2pia classe.</li> <li>Protegit - <code>protected</code>: Nom\u00e9s pot accedir la pr\u00f2pia classe o els seus descendents.</li> <li>P\u00fablico - <code>public</code>: Pot accedir qualsevol altra classe.</li> </ul> <p>Per a declarar una classe, s'utilitza la paraula clau <code>class</code> seguit del nom de la classe. Per a instanciar un objecte a partir de la classe, s'utilitza <code>new</code>:</p> <pre><code>&lt;?php\nclass NomClase {\n// propiedades\n// y m\u00e9todos\n}\n\n$ob = new NomClase();\n</code></pre> <p>Classes amb maj\u00fascula</p> <p>Totes les classes comencen per lletra maj\u00fascula.</p> <p>Quan un projecte creix, \u00e9s normal modelar les classes mitjan\u00e7ant UML (recordeu Entorns de Desenvolupament?). La classes es representen mitjan\u00e7ant un quadrat, separant el nom, de les propietats i els m\u00e8todes:</p> <p></p> <p>Una vegada que hem creat un objecte, s'utilitza l'operador <code>-&gt;</code> per a accedir a una propietat o un m\u00e8tode:</p> <pre><code>$objeto-&gt;propiedad;\n$objeto-&gt;m\u00e9todo(par\u00e1metros);\n</code></pre> <p>Si des de dins de la classe, volem accedir a una propietat o m\u00e8tode de la mateixa classe, utilitzarem la refer\u00e8ncia <code>$this</code>;</p> <pre><code>$this-&gt;propiedad;\n$this-&gt;m\u00e9todo(par\u00e1metros);  \n</code></pre> <p>Aix\u00ed doncs, com a exemple, codificar\u00edem una persona en el fitxer <code>Persona.php</code> com:</p> <pre><code>&lt;?php\nclass\u00a0Persona\u00a0{\n    private\u00a0string $nombre;\n\n    public\u00a0function\u00a0setNombre(string $nom)\u00a0{\n        $this-&gt;nombre=$nom;\n    }\n\n    public\u00a0function\u00a0imprimir(){\n        echo\u00a0$this-&gt;nombre;\n        echo\u00a0'&lt;br&gt;';\n    }\n}\n\n$bruno\u00a0=\u00a0new\u00a0Persona(); // creamos un objeto\n$bruno-&gt;setNombre(\"Bruno\u00a0D\u00edaz\");\n$bruno-&gt;imprimir();\n</code></pre> <p>Encara que es poden declarar diverses classes en el mateix arxiu, \u00e9s una mala pr\u00e0ctica. Aix\u00ed doncs, cada fitxer contedr\u00e1 una sola classe, i es nomenar\u00e0 amb el nom de la classe.</p>"},{"location":"1val.html#2-principis-de-la-poo","title":"2. Principis de la POO","text":""},{"location":"1val.html#encapsulacio","title":"Encapsulaci\u00f3","text":"<p>Les propietats es defineixen privades o protegides (si volem que les classes heretades puguen accedir).</p> <p>Per a cada propietat, s'afigen m\u00e8todes p\u00fablics (getter/setter):</p> <pre><code>public setPropiedad(tipo $param)\npublic getPropiedad() : tipo\n</code></pre> <p>Les constants es defineixen p\u00fabliques perqu\u00e8 siguen accessibles per tots els recursos.</p> <pre><code>&lt;?php\nclass\u00a0MayorMenor\u00a0{\n    private\u00a0int $mayor;\n    private\u00a0int $menor;\n\n    public\u00a0function\u00a0setMayor(int\u00a0$may)\u00a0{\n        $this-&gt;mayor\u00a0=\u00a0$may;\n    }\n\n    public\u00a0function\u00a0setMenor(int\u00a0$men)\u00a0{\n        $this-&gt;menor\u00a0=\u00a0$men;\n    }\n\n    public\u00a0function\u00a0getMayor()\u00a0:\u00a0int\u00a0{\n        return\u00a0$this-&gt;mayor;\n    }\n\n    public\u00a0function\u00a0getMenor()\u00a0:\u00a0int\u00a0{\n        return\u00a0$this-&gt;menor;\n    }\n}\n</code></pre>"},{"location":"1val.html#rebent-i-enviant-objectes","title":"Rebent i enviant objectes","text":"<p>\u00c9s recomanable indicar-ho en la mena de par\u00e0metres. Si l'objecte pot retornar nuls es posa <code>?</code> davant del nom de la classe.</p> <p>Objectes per refer\u00e8ncia</p> <p>Els objectes que s'envien i reben com a par\u00e0metres sempre es passen per refer\u00e8ncia.</p> <pre><code>&lt;?php\nfunction\u00a0maymen(array\u00a0$numeros)\u00a0:\u00a0?MayorMenor\u00a0{\n    $a\u00a0=\u00a0max($numeros);\n    $b\u00a0=\u00a0min($numeros);\n\n    $result\u00a0=\u00a0new\u00a0MayorMenor();\n    $result-&gt;setMayor($a);\n    $result-&gt;setMenor($b);\n\n    return\u00a0$result;\n}\n\n$resultado\u00a0=\u00a0\u00a0maymen([1,76,9,388,41,39,25,97,22]);\necho\u00a0\"&lt;br&gt;Mayor:\u00a0\".$resultado-&gt;getMayor();\necho\u00a0\"&lt;br&gt;Menor:\u00a0\".$resultado-&gt;getMenor();\n</code></pre>"},{"location":"1val.html#constructor","title":"Constructor","text":"<p>El constructor dels objectes es defineix mitjan\u00e7ant el m\u00e8tode m\u00e0gic <code>__construct</code>. Pot o no tindre par\u00e0metres, per\u00f2 nom\u00e9s pot haver-hi un \u00fanic constructor.</p> <pre><code>&lt;?php\nclass\u00a0Persona\u00a0{\n    private\u00a0string $nombre;\n\n    public\u00a0function\u00a0__construct(string $nom)\u00a0{\n        $this-&gt;nombre = $nom;\n    }\n\n    public\u00a0function\u00a0imprimir(){\n    \u00a0\u00a0echo\u00a0$this-&gt;nombre;\n    \u00a0\u00a0echo\u00a0'&lt;br&gt;';\n    }\n}\n\n$bruno\u00a0=\u00a0new\u00a0Persona(\"Bruno\u00a0D\u00edaz\");\n$bruno-&gt;imprimir();\n</code></pre>"},{"location":"1val.html#constructors-en-php-8","title":"Constructors en PHP 8","text":"<p>Una de les grans novetats que ofereix PHP 8 \u00e9s la simplificaci\u00f3 dels constructors amb par\u00e0metres, la qual cosa es coneix com a promoci\u00f3 de les propietats del constructor*.</p> <p>Per a aix\u00f2, en comptes d'haver de declarar les propietats com a privades o protegides, i despr\u00e9s dins del constructor haver d'assignar els par\u00e0metres a est\u00e0s propietats, el propi constructor promociona les propietats.</p> <p>Vegem-ho millor amb un exemple. Imaginem una classe <code>Punt</code> on vulguem emmagatzemar les seues coordenades:</p> <pre><code>&lt;?php\nclass Punto {\n    protected float $x;\n    protected float $y;\n    protected float $z;\n\n    public function __construct(\n        float $x = 0.0,\n        float $y = 0.0,\n        float $z = 0.0\n    ) {\n        $this-&gt;x = $x;\n        $this-&gt;y = $y;\n        $this-&gt;z = $z;\n    }\n}\n</code></pre> <p>En PHP 8, quedaria de la seg\u00fcent manera (molt m\u00e9s curt, la qual cosa facilita la seua llegibilitat):</p> <pre><code>&lt;?php\nclass Punto {\n    public function __construct(\n        protected float $x = 0.0,\n        protected float $y = 0.0,\n        protected float $z = 0.0,\n    ) {}\n}\n</code></pre> <p>L'ordre importa</p> <p>A l'hora de codificar l'ordre dels elements ha de ser:</p> <pre><code>&lt;?php\ndeclare(strict_types=1);\n\nclass NombreClase {\n    // propiedades\n\n    // constructor\n\n    // getters - setters\n\n    // resto de m\u00e9todos\n}\n?&gt;\n</code></pre>"},{"location":"1val.html#classes-estatiques","title":"Classes est\u00e0tiques","text":"<p>S\u00f3n aquelles que tenen propietats i/o m\u00e8todes est\u00e0tics (tamb\u00e9 es coneixen com de classe, perqu\u00e8 el seu valor es comparteix entre totes les inst\u00e0ncies de la mateixa classe).</p> <p>Es declaren amb <code>static</code> i es referencien amb <code>::</code>.</p> <ul> <li>Si volem accedir a un m\u00e8tode est\u00e0tic, s'anteposa el nom de la classe: <code>Producte::nuevoProducto()</code>.</li> <li>Si des d'un m\u00e8tode volem accedir a una propietat est\u00e0tica de la mateixa classe, s'utilitza la refer\u00e8ncia <code>self</code>: <code>self::$numProductos</code></li> </ul> <pre><code>&lt;?php\nclass Producto {\n    const IVA = 0.23;\n    private static $numProductos = 0; \n\n    public static function nuevoProducto() {\n        self::$numProductos++;\n    }\n}\n\nProducto::nuevoProducto();\n$impuesto = Producto::IVA;\n</code></pre> <p>Tamb\u00e9 podem tindre classes normals que tinguen alguna propietat est\u00e0tica:</p> <pre><code>&lt;?php\nclass\u00a0Producto\u00a0{\n    const\u00a0IVA\u00a0=\u00a00.23;\n    private\u00a0static\u00a0$numProductos\u00a0=\u00a00;\u00a0\n    private\u00a0$codigo;\n\n    public\u00a0function\u00a0__construct(string\u00a0$cod)\u00a0{\n        self::$numProductos++;\n        $this-&gt;codigo\u00a0=\u00a0$cod;\n    }\n\n    public\u00a0function\u00a0mostrarResumen()\u00a0:\u00a0string\u00a0{\n        return\u00a0\"El\u00a0producto\u00a0\".$this-&gt;codigo.\" es\u00a0el\u00a0n\u00famero\u00a0\".self::$numProductos;\n    }\n}\n\n$prod1\u00a0=\u00a0new\u00a0Producto(\"PS5\");\n$prod2\u00a0=\u00a0new\u00a0Producto(\"XBOX\u00a0Series\u00a0X\");\n$prod3\u00a0=\u00a0new\u00a0Producto(\"Nintendo\u00a0Switch\");\necho\u00a0$prod3-&gt;mostrarResumen();\n</code></pre>"},{"location":"1val.html#introspeccio","title":"Introspecci\u00f3","text":"<p>En treballar amb classes i objectes, existeixen un conjunt de funcions ja definides pel llenguatge que permeten obtindre informaci\u00f3 sobre els objectes:</p> <ul> <li><code>instanceof</code>: permet comprovar si un objecte \u00e9s d'una determinada classe</li> <li><code>get_class</code>: retorna el nom de la classe</li> <li><code>get_declared_class</code>: retorna un array amb els noms de les classes definides</li> <li><code>class_\u00e0lies</code>: crea un \u00e0lies</li> <li><code>class_exists</code> / <code>method_exists</code> / <code>property_exists</code>: <code>true</code> si la classe / m\u00e8tode / propietat est\u00e0 definida</li> <li><code>get_class_methods</code> / <code>get_class_vars</code> / <code>get_object_vars</code>: Retorna un array amb els noms dels m\u00e8todes / propietats d'una classe / propietats d'un objecte que s\u00f3n accessibles des d'on es fa la crida.</li> </ul> <p>Un exemple d'aquestes funcions pot ser el seg\u00fcent:</p> <pre><code>&lt;?php\n$p\u00a0=\u00a0new\u00a0Producto(\"PS5\");\nif\u00a0($p\u00a0instanceof\u00a0Producto)\u00a0{\n    echo\u00a0\"Es\u00a0un\u00a0producto\";\n    echo\u00a0\"La\u00a0clase\u00a0es\u00a0\".get_class($p);\n\n    class_alias(\"Producto\",\u00a0\"Articulo\");\n    $c\u00a0=\u00a0new\u00a0Articulo(\"Nintendo\u00a0Switch\");\n    echo\u00a0\"Un\u00a0articulo\u00a0es\u00a0un\u00a0\".get_class($c);\n\n    print_r(get_class_methods(\"Producto\"));\n    print_r(get_class_vars(\"Producto\"));\n    print_r(get_object_vars($p));\n\n    if\u00a0(method_exists($p,\u00a0\"mostrarResumen\"))\u00a0{\n        $p-&gt;mostrarResumen();\n    }\n}\n</code></pre> <p>Clonat</p> <p>En assignar dos objectes no es copien, es crea una nova refer\u00e8ncia. Si volem una c\u00f2pia, cal clonar-ho mitjan\u00e7ant el m\u00e8tode <code>clone(object) : object</code></p> <p>Si volem modificar el clonat per defecte, cal definir el m\u00e8tode m\u00e0gic <code>__clone()</code> que es dir\u00e0 despr\u00e9s de copiar totes les propietats.</p> <p>M\u00e9s informaci\u00f3 en https://www.php.net/manual/es/language.oop5.cloning.php</p>"},{"location":"1val.html#herencia","title":"Her\u00e8ncia","text":"<p>PHP suporta her\u00e8ncia simple, de manera que una classe nom\u00e9s pot heretar d'una altra, no de dues classes alhora. Per a aix\u00f2 s'utilitza la paraula clau <code>extends</code>. Si volem que la classe A hereta de la classe B farem:</p> <pre><code>class A extends B\n</code></pre> <p>El fill hereta els atributs i m\u00e8todes p\u00fablics i protegits.</p> <p>Cada classe en un arxiu</p> <p>Com ja hem comentat, haur\u00edem de col\u00b7locar cada classe en un arxiu diferent per a posteriorment utilitzar-lo mitjan\u00e7ant <code>include</code>. En els seg\u00fcent exemple els hem col\u00b7locats junt per a facilitar la seua llegibilitat.</p> <p>Per exemple, tenim una classe <code>Producte</code> i una <code>Tv</code> que hereta de <code>Producte</code>:</p> <pre><code>&lt;?php\nclass Producto {\n    public $codigo;\n    public $nombre;\n    public $nombreCorto;\n    public $PVP;\n\n    public function mostrarResumen() {\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codigo.\"&lt;/p&gt;\";\n    }\n}\n\nclass Tv extends Producto {\n    public $pulgadas;\n    public $tecnologia;\n}\n</code></pre> <p>Podemos utilizar las siguientes funciones para averiguar si hay relaci\u00f3n entre dos clases:</p> <ul> <li><code>get_parent_class(object): string</code></li> <li><code>is_subclass_of(object, string): bool</code></li> </ul> <pre><code>&lt;?php\n$t = new Tv();\n$t-&gt;codigo = 33;\nif ($t instanceof Producto) {\n    echo $t-&gt;mostrarResumen();\n}\n\n$padre = get_parent_class($t);\necho \"&lt;br&gt;La clase padre es: \" . $padre;\n$objetoPadre = new $padre;\necho $objetoPadre-&gt;mostrarResumen();\n\nif (is_subclass_of($t, 'Producto')) {\n    echo \"&lt;br&gt;Soy un hijo de Producto\";\n}\n</code></pre>"},{"location":"1val.html#polimorfisme","title":"Polimorfisme","text":"<p>Podem crear m\u00e8todes en els fills amb el mateix nom que el pare, canviant el seu comportament. Per a invocar als m\u00e8todes del pare -&gt; <code>parent::nombreMetodo()</code></p> <pre><code>&lt;?php\nclass Tv extends Producto {\n   public $pulgadas;\n   public $tecnologia;\n\n   public function mostrarResumen() {\n      parent::mostrarResumen();\n      echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n   }\n}\n</code></pre>"},{"location":"1val.html#constructor-en-fills","title":"Constructor en fills","text":"<p>En els fills no es crea cap constructor de manera autom\u00e0tica. Pel que si no n'hi ha, s'invoca autom\u00e0ticament al del pare. En canvi, si el definim en el fill, hem d'invocar al del pare de manera expl\u00edcita.</p> PHP7PHP8 <pre><code>&lt;?php\nclass Producto {\n    public string $codigo;\n\n    public\u00a0function\u00a0__construct(string $codigo) {\n        $this-&gt;codigo =\u00a0$codigo;\n    }\n\n    public function mostrarResumen() {\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codigo.\"&lt;/p&gt;\";\n    }\n}\n\nclass Tv extends Producto {\n    public $pulgadas;\n    public $tecnologia;\n\n    public\u00a0function\u00a0__construct(string\u00a0$codigo,\u00a0int\u00a0$pulgadas,\u00a0string\u00a0$tecnologia)\u00a0{\n        parent::__construct($codigo);\n        $this-&gt;pulgadas\u00a0=\u00a0$pulgadas;\n        $this-&gt;tecnologia\u00a0=\u00a0$tecnologia;\n    }\n\n    public function mostrarResumen() {\n        parent::mostrarResumen();\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n    }\n}\n</code></pre> <pre><code>&lt;?php\nclass Producto {\n    public\u00a0function\u00a0__construct(private string $codigo) { }\n\n    public function mostrarResumen() {\n        echo \"&lt;p&gt;Prod:\".$this-&gt;codigo.\"&lt;/p&gt;\";\n    }        \n}\n\nclass Tv extends Producto {\n\n    public\u00a0function\u00a0__construct(\n        string\u00a0$codigo,\n        private int\u00a0$pulgadas,\n        private string\u00a0$tecnologia)\n    {\n        parent::__construct($codigo);\n    }\n\n    public function mostrarResumen() {\n        parent::mostrarResumen();\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n    }\n}\n</code></pre>"},{"location":"1val.html#abstraccio","title":"Abstracci\u00f3","text":"<p>Les classes abstractes obliguen a heretar d'una classe, ja que no es permet la seua instanciaci\u00f3n. Es defineix mitjan\u00e7ant <code>abstract class NombreClase {</code>. Una classe abstracta pot contindre propietats i m\u00e8todes no-abstractes, i/o m\u00e8todes abstractes.</p> <pre><code>&lt;?php\n//\u00a0Clase\u00a0abstracta\nabstract\u00a0class\u00a0Producto\u00a0{\n    private\u00a0$codigo;\n    public\u00a0function\u00a0getCodigo()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;codigo;\n    }\n    //\u00a0M\u00e9todo\u00a0abstracto\n    abstract\u00a0public\u00a0function\u00a0mostrarResumen();\n}\n</code></pre> <p>Quan una classe hereta d'una classe abstracta, obligat\u00f2riament ha d'implementar els m\u00e8todes que t\u00e9 el pare marcats com a abstractes.</p> <pre><code>&lt;?php\nclass Tv extends Producto {\n    public $pulgadas;\n    public $tecnologia;\n\n    public function mostrarResumen() { //obligado a implementarlo\n        echo \"&lt;p&gt;C\u00f3digo \".$this-&gt;getCodigo().\"&lt;/p&gt;\";\n        echo \"&lt;p&gt;TV \".$this-&gt;tecnologia.\" de \".$this-&gt;pulgadas.\"&lt;/p&gt;\";\n    }\n}\n\n$t = new Tv();\necho $t-&gt;getCodigo();\n</code></pre>"},{"location":"1val.html#classes-finals","title":"Classes finals","text":"<p>S\u00f3n classes oposades a abstractes, ja que eviten que es puga heretar una classe o m\u00e8tode per a sobreescriure-ho.</p> <pre><code>&lt;?php\nclass\u00a0Producto\u00a0{\n    private\u00a0$codigo;\n\n    public\u00a0function\u00a0getCodigo()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;codigo;\n    }\n\n    final\u00a0public\u00a0function\u00a0mostrarResumen()\u00a0:\u00a0string\u00a0{\n        return\u00a0\"Producto\u00a0\".$this-&gt;codigo;\n    }\n}\n\n// No podremos heredar de Microondas\nfinal\u00a0class\u00a0Microondas\u00a0extends\u00a0Producto\u00a0{\n    private\u00a0$potencia;\n\n    public\u00a0function\u00a0getPotencia()\u00a0:\u00a0int\u00a0{\n        return\u00a0$this-&gt;potencia;\n    }\n\n    // No podemos implementar mostrarResumen()\n}\n</code></pre>"},{"location":"1val.html#interficies","title":"Interf\u00edcies","text":"<p>Permet definir un contracte amb les signatures dels m\u00e8todes a complir. Aix\u00ed doncs, nom\u00e9s cont\u00e9 declaracions de funcions i totes han de ser p\u00fabliques.</p> <p>Es declaren amb la paraula clau <code>interface</code> i despr\u00e9s les classes que complisquen el contracte el realitzen mitjan\u00e7ant la paraula clau <code>implements</code>.</p> <pre><code>&lt;?php\ninterface Nombreable {\n// declaraci\u00f3n de funciones\n}\nclass NombreClase implements NombreInterfaz {\n// c\u00f3digo de la clase\n</code></pre> <p>Es permet l'her\u00e8ncia d'interf\u00edcies. A m\u00e9s, una classe pot implementar diverses interf\u00edcies (en aquest cas, s\u00ed que suporta l'her\u00e8ncia m\u00faltiple, per\u00f2 nom\u00e9s d'interf\u00edcies).</p> <pre><code>&lt;?php\ninterface\u00a0Mostrable\u00a0{\n    public\u00a0function\u00a0mostrarResumen()\u00a0:\u00a0string;\n}\n\ninterface\u00a0MostrableTodo\u00a0extends\u00a0Mostrable\u00a0{\n    public\u00a0function\u00a0mostrarTodo()\u00a0:\u00a0string;\n}\n\ninterface\u00a0Facturable\u00a0{\n    public\u00a0function\u00a0generarFactura()\u00a0:\u00a0string;\n}\n\nclass\u00a0Producto\u00a0implements\u00a0MostrableTodo,\u00a0Facturable\u00a0{\n    //\u00a0Implementaciones\u00a0de\u00a0los\u00a0m\u00e9todos\n    // Obligatoriamente deber\u00e1 implementar public\u00a0function\u00a0mostrarResumen, mostrarTodo y generarFactura\n}\n</code></pre>"},{"location":"1val.html#metodes-encadenats","title":"M\u00e8todes encadenats","text":"<p>Segueix el plantejament de la programaci\u00f3 funcional, i tamb\u00e9 es coneix com method chaining. Planteja que sobre un objecte es realitzen diverses crides.</p> <pre><code>&lt;?php\n$p1\u00a0=\u00a0new\u00a0Libro();\n$p1-&gt;setNombre(\"Harry\u00a0Potter\");\n$p1-&gt;setAutor(\"JK\u00a0Rowling\");\necho\u00a0$p1;\n\n// Method chaining\n$p2\u00a0=\u00a0new\u00a0Libro();\n$p2-&gt;setNombre(\"Patria\")-&gt;setAutor(\"Aramburu\");\necho\u00a0$p2;\n</code></pre> <p>Per a facilitar-ho, modificarem tots els seus m\u00e8todes mutants (que modifiquen dades, setters*, ...) perqu\u00e8 retornen una refer\u00e8ncia a <code>$this</code>:</p> <pre><code>&lt;?php\nclass\u00a0Libro\u00a0{\n    private\u00a0string\u00a0$nombre;\n    private\u00a0string\u00a0$autor;\n\n    public\u00a0function\u00a0getNombre()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;nombre;\n    }\n    public\u00a0function\u00a0setNombre(string\u00a0$nombre)\u00a0:\u00a0Libro\u00a0{\u00a0\n        $this-&gt;nombre\u00a0=\u00a0$nombre;\n        return\u00a0$this;\n    }\n\n    public\u00a0function\u00a0getAutor()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;autor;\n    }\n    public\u00a0function\u00a0setAutor(string\u00a0$autor)\u00a0:\u00a0Libro\u00a0{\n        $this-&gt;autor\u00a0=\u00a0$autor;\n        return\u00a0$this;\n    }\n\n    public\u00a0function\u00a0__toString()\u00a0:\u00a0string\u00a0{\n        return\u00a0$this-&gt;nombre.\"\u00a0de\u00a0\".$this-&gt;autor;\n    }\n}\n</code></pre>"},{"location":"1val.html#metodes-magics","title":"M\u00e8todes m\u00e0gics","text":"<p>Totes les classes PHP ofereixen un conjunt de m\u00e8todes, tamb\u00e9 coneguts com magic methods que es poden sobreescriure per a substituir el seu comportament. Alguns d'ells ja els hem utilitzats.</p> <p>Davant qualsevol dubte, \u00e9s convenient consultar la documentaci\u00f3 oficial.</p> <p>Els m\u00e9s destacables s\u00f3n:</p> <ul> <li><code>__construct()</code></li> <li><code>__destruct()</code> \u2192 s'invoca en perdre la refer\u00e8ncia. S'utilitza per a tancar una connexi\u00f3 a la BD, tancar un fitxer, ...</li> <li><code>__toString()</code> \u2192 representaci\u00f3 de l'objecte com a cadena. \u00c9s a dir, quan fem <code>echo $objecte</code> s'executa autom\u00e0ticament aquest m\u00e8tode.</li> <li><code>__get(propietat)</code>, <code>__set(propietat, valor)</code> \u2192 Permetria accedir a les propietat privades, encara que sempre \u00e9s m\u00e9s llegible/mantenible codificar els getter/setter.</li> <li><code>__isset(propietat)</code>, <code>__unset(propietat)</code> \u2192 Permet esbrinar o llevar el valor a una propietat.</li> <li><code>__sleep()</code>, <code>__wakeup()</code> \u2192 S'executen en recuperar (unserialize^) o emmagatzemar un objecte que se serialitza (serialize), i s'utilitzen per a permet definir quines propietats se serialitzen.</li> <li><code>__call()</code>, <code>__callStatic()</code> \u2192 S'executen en cridar a un m\u00e8tode que no \u00e9s p\u00fablic. Permeten sobrecarreguen m\u00e8todes.</li> </ul>"},{"location":"1val.html#3-espai-de-noms","title":"3. Espai de noms","text":"<p>Des de PHP 5.3 i tamb\u00e9 coneguts com Namespaces, permeten organitzar les classes/interf\u00edcies, funcions i/o constants de manera similar als paquets a Java.</p> <p>Recomanaci\u00f3</p> <p>Un nom\u00e9s namespace per arxiu i crear una estructura de carpetes respectant els nivells/subnivells (igual que es fa a Java)</p> <p>Es declaren en la primera l\u00ednia mitjan\u00e7ant la paraula clau <code>namespace</code> seguida del nom de l'espai de noms assignat (cada subnivell se separa amb la barra invertida <code>\\</code>):</p> <p>Per exemple, per a col\u00b7locar la classe <code>Producte</code> dins del namespace <code>Dwes\\Exemples</code> ho far\u00edem aix\u00ed:</p> <pre><code>&lt;?php\nnamespace\u00a0Dwes\\Exemples;\n\nconst\u00a0IVA\u00a0=\u00a00.21;\n\nclass\u00a0Producte\u00a0{\n    public\u00a0$nombre;\n    \u00a0\u00a0\n    public\u00a0function\u00a0muestra()\u00a0:\u00a0void\u00a0{\n        echo\"&lt;p&gt;Prod:\"\u00a0.\u00a0$this-&gt;nombre\u00a0.\u00a0\"&lt;/p&gt;\";\n    }\n}\n</code></pre>"},{"location":"1val.html#acces","title":"Acc\u00e9s","text":"<p>Per a referenciar a un recurs que cont\u00e9 un namespace, primer hem de tindre'l disponible fent \u00fas de <code>include</code> o <code>require</code>. Si el recurs est\u00e0 en el mateix namespace, es realitza un acc\u00e9s directe (es coneix com a acc\u00e9s sense qualificar).</p> <p>Realment hi ha tres tipus d'acc\u00e9s:</p> <ul> <li>sense qualificar: <code>recurs</code></li> <li>qualificat: <code>rutaRelativa\\recurs</code> \u2192 no fa falta posar el namespace complet</li> <li>totalment qualificat: <code>\\rutaAbsoluta\\recurs</code></li> </ul> <pre><code>&lt;?php\nnamespace\u00a0Dwes\\Ejemplos;\n\ninclude_once(\"Producto.php\");\n\necho\u00a0IVA;\u00a0//\u00a0sin\u00a0cualificar\necho\u00a0Utilidades\\IVA;\u00a0// acceso cualificado. Dar\u00eda error, no existe \\Dwes\\Ejemplos\\Utilidades\\IVA\necho\u00a0\\Dwes\\Ejemplos\\IVA;\u00a0//\u00a0totalmente\u00a0cualificado\n\n$p1\u00a0=\u00a0new\u00a0Producto();\u00a0//\u00a0lo busca en el mismo namespace y encuentra \\Dwes\\Ejemplos\\Producto\n$p2\u00a0=\u00a0new\u00a0Model\\Producto(); // dar\u00eda error, no existe el namespace Model. Est\u00e1 buscando \\Dwes\\Ejemplos\\Model\\Producto\n$p3\u00a0=\u00a0new\u00a0\\Dwes\\Ejemplos\\Producto(); //\u00a0\\Dwes\\Ejemplos\\Producto\n</code></pre>"},{"location":"1val.html#acces_1","title":"Acc\u00e9s","text":"<p>Per a evitar la refer\u00e8ncia qualificada podem declarar l'\u00fas mitjan\u00e7ant <code>use</code> (similar a fer <code>import</code> a Java). Es fa en la cap\u00e7alera, despr\u00e9s del <code>namespace</code>:</p> <p>Els tipus Posibles s\u00f3n:</p> <ul> <li><code>use const nombreCualificadoConstante</code></li> <li><code>use function nombreCualificadoFuncion</code></li> <li><code>use nombreCualificadoClase</code></li> <li><code>use nombreCualificadoClase as NuevoNombre</code> // per a canviar de nom elements</li> </ul> <p>Per exemple, si volem utilitzar la classe <code>\\Dwes\\Exemples\\Producte</code> des d'un recurs que es troba en l'arrel, per exemple en <code>inici.php</code>, far\u00edem:</p> <pre><code>&lt;?php\ninclude_once(\"Dwes\\Exemples\\Producte.php\");\n\nuse\u00a0const\u00a0Dwes\\Exemples\\IVA;\nuse\u00a0\\Dwes\\Exemples\\Producte;\n\necho\u00a0IVA;\n$p1\u00a0=\u00a0new\u00a0Producte();\n</code></pre> <p>To <code>use</code> or not to <code>use</code></p> <p>En resum, <code>use</code> permet accedir sense qualificar a recursos que estan en un altre namespace. Si estem en el mateix espai de nom, no necessitem <code>use</code>.</p>"},{"location":"1val.html#organitzacio","title":"Organitzaci\u00f3","text":"<p>Tot projecte, conforme creix, necessita organitzar el seu codi font. Es planteja una organitzaci\u00f3 en la qual els arxius que interactuan amb el navegador es col\u00b7loquen en l'arrel, i les classes que definim van dins d'un namespace (i dins de la seua pr\u00f2pia carpeta <code>src</code> o <code>app</code>).</p> Organitzaci\u00f3 del codi font <p>Organitzaci\u00f3, includes i usos</p> <ul> <li>Col\u00b7locarem cada recurs en un fitxer a part.</li> <li>En la primera l\u00ednia indicarem la seua namespace (si no est\u00e0 en l'arrel).</li> <li>Si utilitzem altres recursos, farem un <code>include_once</code> d'aqueixos recursos (classes, interf\u00edcies, etc...).</li> <li>Cada recurs ha d'incloure tots els altres recursos que referencie: la classe de la qual hereta, interf\u00edcies que implementa, classes utilitzades/rebudes com a par\u00e0metres, etc...</li> <li>Si els recursos estan en un espai de noms diferent al que estem, emprarem <code>use</code> amb la ruta completa per a despr\u00e9s utilitzar refer\u00e8ncies sense qualificar.</li> </ul>"},{"location":"1val.html#autoload","title":"Autoload","text":"<p>No \u00e9s tedi\u00f3s haver de fer el <code>include</code> de les classes? El autoload ve al rescat.</p> <p>Aix\u00ed doncs, permet carregar les classes (no les constants ni les funcions) que s'utilitzaran i evitar haver de fer el <code>include_once</code> de cadascuna d'elles. Per a aix\u00f2, es pot utilitzar el composer.</p>"},{"location":"1val.html#4-composer","title":"4. Composer","text":"Logo Composer <p>Eina per excel\u00b7l\u00e8ncia en PHP per a la gesti\u00f3 de llibreries i depend\u00e8ncies, de manera que instal\u00b7la i les actualitza assegurant que tot l'equip de desenvolupament t\u00e9 el mateix entorn i versions. A m\u00e9s, ofereix autoloading del nostre codi, de manera que no h\u00e0gem de fer-lo nosaltres \"a m\u00e0\".</p> <p>Est\u00e0 escrit en PHP, i podeu consultar tota la seua documentaci\u00f3 en https://getcomposer.org/.</p> <p>Utilitza Packagist com a repositori de llibreries.</p> <p>Funcionalment, \u00e9s similar a Maven (Java) / npm (JS).</p>"},{"location":"1val.html#installacio","title":"Instal\u00b7laci\u00f3","text":"<p>Si estem usant XAMPP, hem d'instal\u00b7lar Composer en el propi sistema operatiu. Es recomana seguir les instruccions oficials segons el sistema operatiu a emprar.</p> <p>En canvi, si usem Docker, necessitem modificar la configuraci\u00f3 del nostre contenidor. En el nostre cas, hem decidit modificar l'arxiu <code>Dockerfile</code> i afegir el seg\u00fcent comando:</p> <pre><code>COPY --from=composer:2.0 /usr/bin/composer /usr/local/bin/composer\n</code></pre> <p>\u00c9s important que dins del contenidor comprovem que tenim la v2:</p> <pre><code>composer -V\n</code></pre>"},{"location":"1val.html#primers-passos","title":"Primers passos","text":"<p>Quan creem un projecte per primera vegada, hem d'inicialitzar el repositori. Per a aix\u00f2, executarem el comando <code>composer init</code> on:</p> <ul> <li>Configurem el nom del paquet, descripci\u00f3, autor (nom ), tipus de paquet (project), etc... <li>Definim les depend\u00e8ncies del projecte (<code>require</code>) i les de desenvolupament (<code>require-dev</code>) de manera interactiva.</li> <li>En les de desenvolupament s'indica aquelles que no s'instal\u00b7laran a l'entorn de producci\u00f3, per exemple, les llibreries de proves.</li> <p>Despr\u00e9s de la seua configuraci\u00f3, es crear\u00e0 autom\u00e0ticament l'arxiu <code>composer.json</code> amb les dades introdu\u00efdes i desc\u00e0rrega les llibreries en la carpeta <code>vendor</code>. La instal\u00b7laci\u00f3 de les llibreries sempre es realitza de manera local per a cada projecte.</p> <pre><code>{\n    \"name\": \"dwes/log\",\n    \"description\": \"Pruebas con Monolog\",\n    \"type\": \"project\",\n    \"require\": {\n        \"monolog/monolog\": \"^2.1\"\n    },\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Aitor Medrano\",\n            \"email\": \"a.medrano@edu.gva.es\"\n        }\n    ]\n}\n</code></pre> <p>A l'hora d'indicar cada llibreria introduirem:</p> <ul> <li>el nom de la llibreria, composta tant pel creador o \"vendor\", com pel nom del projecte. Exemples: <code>monolog/monolog</code> o <code>laravel/installer</code>.</li> <li> <p>la versi\u00f3 de cada llibreria. Tenim diverses opcions per a indicar-la:</p> <ul> <li>Directament: 1.4.2</li> <li>Amb comodins: 1.</li> <li>A partir de: &gt;= 2.0.3</li> <li>Sense trencament de canvis: ^1.3.2 // &gt;=1.3.2 &lt;2.0.0</li> </ul> </li> </ul>"},{"location":"1val.html#actualitzar-llibreries","title":"Actualitzar llibreries","text":"<p>Podem definir les depend\u00e8ncies via l'arxiu <code>composer.json</code> o mitjan\u00e7ant comandos amb el format <code>composer require vendor/package:version</code>. Per exemple, si volem afegir phpUnit com a llibreria de desenvolupament, farem:</p> <pre><code>composer require phpunit/phpunit \u2013dev\n</code></pre> <p>Despr\u00e9s d'afegir noves llibreries, hem d'actualitzar el nostre projecte:</p> <pre><code>composer update\n</code></pre> <p>Si creem l'arxiu <code>composer.json</code> nosaltres directament sense inicialitzar el repositori, hem d'instal\u00b7lar les depend\u00e8ncies:</p> <pre><code>composer install\n</code></pre> <p>En fer aquest pas (tant instal\u00b7lar com actualitzar), com ja hem comentat, es descarreguen les llibreries en dins de la carpeta <code>vendor</code>. \u00c9s molt important afegir aquesta carpeta a l'arxiu <code>.gitignore</code> per a no pujar-les a GitHub.</p> <p>A m\u00e9s es crea l'arxiu <code>composer.lock</code>, que emmagatzema la versi\u00f3 exacta que s'ha instal\u00b7lat de cada llibreria (aquest arxiu no es toca).</p>"},{"location":"1val.html#autoloadphp","title":"<code>autoload.php</code>","text":"<p>Composer crea de manera autom\u00e0tica en <code>vendor/autoload.php</code> el codi per a incloure de manera autom\u00e0tica totes les llibreries que tinguem configurades en <code>composer.json</code>.</p> <p>Per a utilitzar-ho, en la cap\u00e7alera del nostre arxius posarem:</p> <pre><code>&lt;?php\nrequire 'vendor/autoload.php';\n</code></pre> <p>En el nostre cas, de moment nom\u00e9s el podrem en els arxius on provem les classes</p> <p>Si volem que Composer tamb\u00e9 s'encarregue de carregar de manera autom\u00e0tica les nostres classes de domini, dins de l'arxiu <code>composer.json</code>, definirem la propietat <code>autoload</code>:</p> <pre><code>\"autoload\": {\n    \"psr-4\": {\"Dwes\\\\\": \"app/Dwes\"}\n},\n</code></pre> <p>Posteriorment, hem de tornar a generar el autoload de Composer mitjan\u00e7ant l'opci\u00f3 <code>dump-autoload</code> (o <code>du</code>):</p> <pre><code>composer dump-autoload\n</code></pre>"},{"location":"1val.html#5-logger-amb-monolog","title":"5. Logger amb Monolog","text":"<p>Provarem Composer afegint la llibreria de Monolog al nostre projecte. Es tracta d'un llibreria per a la gesti\u00f3 de logs de les nostres aplicacions, suportant diferents nivells (info, warning, etc...), eixides (fitxers, sockets, BBDD, Web Services, email, etc) i formats (text pla, HTML, JSON, etc...).</p> <p>Per a aix\u00f2, inclourem la llibreria en el nostre projecte amb:</p> <pre><code>composer require monolog/monolog\n</code></pre> <p>Monolog 2 requereix almenys PHP 7.2, compleix amb el estandar de logging PSR-3, i \u00e9s la llibreria emprada per Laravel i Symfony per a la gesti\u00f3 de logs.</p> <p>Quan utilitzar un log</p> <ul> <li>Seguir les acciones/moviments dels usuaris</li> <li>Registrar les transaccions</li> <li>Rastrejar els errors d'usuari</li> <li>Fallades/avisos a nivell de sistema</li> <li>Interpretar i col\u00b7leccionar dades per a posterior investigaci\u00f3 de patrons</li> </ul>"},{"location":"1val.html#nivells","title":"Nivells","text":"<p>A continuaci\u00f3 vam mostrar els diferents nivells de menys a m\u00e9s restrictiu:</p> <pre><code>* debug -100: Informaci\u00f3 detallada amb prop\u00f2sits de debug. No usar en entorns de producci\u00f3.\n* info - 200: Esdeveniments interessants com l'inici de sessi\u00f3 d'usuaris.\n* notice - 250: Esdeveniments normals per\u00f2 significatius.\n* warning - 300: Ocurr\u00e8ncies excepcionals que no arriben a ser error.\n* error - 400: Errors d'execuci\u00f3 que permeten continuar amb l'execuci\u00f3 de l'aplicaci\u00f3 per\u00f2 que han de ser monitorats.\n* critical - 500: Situacions importants on es generen excepcions no esperades o no hi ha disponible un component.\n* alert - 550: S'han de prendre mesures immediatament.\n  Caiguda completa de la web, base de dades no disponible, etc... A m\u00e9s, se solen enviar missatges per email.\n* emergency - 600: \u00c9s l'error m\u00e9s greu i indica que tot el sistema est\u00e0 inutilitzable.\n</code></pre>"},{"location":"1val.html#hola-monolog","title":"Hola Monolog","text":"<p>Per exemple, en l'arxiu <code>pruebaLog.php</code> que col\u00b7locar\u00edem en l'arrel, primer incloem el autoload, importem els classes a utilitzar per a finalment usar els m\u00e8todes de Monolog:</p> <pre><code>&lt;?php\ninclude __DIR__ .\"/vendor/autoload.php\";\n\nuse Monolog\\Level;\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\n\n$log = new Logger(\"MiLogger\");\n$log-&gt;pushHandler(new StreamHandler(\"logs/milog.log\", Level::Debug));\n\n$log-&gt;debug(\"Esto es un mensaje de DEBUG\");\n$log-&gt;info(\"Esto es un mensaje de INFO\");\n$log-&gt;warning(\"Esto es un mensaje de WARNING\");\n$log-&gt;error(\"Esto es un mensaje de ERROR\");\n$log-&gt;critical(\"Esto es un mensaje de CRITICAL\");\n$log-&gt;alert(\"Esto es un mensaje de ALERT\");\n</code></pre> <p>En tots els m\u00e8todes de registre de missatges (<code>debug</code>, <code>info</code>, ...), a m\u00e9s del propi missatge, li podem passar informaci\u00f3 com el contingut d'alguna variable, usuari de l'aplicaci\u00f3, etc.. com a segon par\u00e0metre dins d'un array, el qual es coneix com array de contexte. \u00c9s convenient fer-ho mitjan\u00e7ant un array associatiu per a facilitar la lectura del log.</p> <pre><code>&lt;?php\n$log-&gt;warning(\"Producto no encontrado\", [$producto]);\n$log-&gt;warning(\"Producto no encontrado\", [\"datos\" =&gt; $producto]);\n</code></pre>"},{"location":"1val.html#funcionament","title":"Funcionament","text":"<p>Cada inst\u00e0ncia <code>Logger</code> t\u00e9 un nom de canal i una pila de manejadores (handler). Cada missatge que manem al log travessa la pila de manejadores, i cadascun decideix si ha de registrar la informaci\u00f3, i si es dona el cas, finalitzar la propagaci\u00f3. Per exemple, un <code>StreamHandler</code> en el fons de la pila que ho escriga tot en disc, i en el topall afig un <code>MailHandler</code> que envie un mail nom\u00e9s quan hi haja un error.</p> <p>Els manejadores m\u00e9s utilitzats s\u00f3n:</p> <ul> <li><code>StreamHandler(ruta, nivel)</code></li> <li><code>RotatingFileHandler(ruta, maxFiles, nivel)</code></li> <li><code>NativeMailerHandler(para, asunto, desde, nivel)</code></li> <li><code>FirePHPHandler(nivel)</code></li> </ul> <p>Per exemple: Si volem que els missatges de l'aplicaci\u00f3 isquen pel log del servidor, en el nostre cas l'arxiu <code>error.log</code> de Apatxe utilitzarem com a ruta l'eixida d'error:</p> <pre><code>&lt;?php\n// error.log\n$log-&gt;pushHandler(new StreamHandler(\"php://stderr\", Level::Debug));\n</code></pre> <p>FirePHP</p> <p>Per exemple, mitjan\u00e7ant <code>FirePHPHandler</code>, podem utilitzar <code>FirePHP</code>, la qual \u00e9s una eina per a fer debug en la consola de Firefox. Despr\u00e9s d'instal\u00b7lar l'extensi\u00f3 en Firefox, habilitar les opcions i configurar el Handler*, podem veure els missatges acolorits amb les seues dades:</p> <pre><code>&lt;?php\n$log = new Logger(\"MiFirePHPLogger\");\n$log-&gt;pushHandler(new FirePHPHandler(Level::INFO));\n\n$datos = [\"real\" =&gt; \"Bruce Wayne\", \"personaje\" =&gt; \"Batman\"];\n$log-&gt;debug(\"Esto es un mensaje de DEBUG\", $datos);\n$log-&gt;info(\"Esto es un mensaje de INFO\", $datos);\n$log-&gt;warning(\"Esto es un mensaje de WARNING\", $datos);\n// ...\n</code></pre> <p> Ejemplo de uso de FirePHP </p>"},{"location":"1val.html#manejadors","title":"Manejadors","text":"<p>Si no s'indica cap, se li assigna un per defecte. L'\u00faltim manejador inserit ser\u00e0 el primer a executar-se. Despr\u00e9s es van executant conforme a la pila.</p>"},{"location":"1val.html#processadors","title":"Processadors","text":"<p>Els processadors permeten afegir informaci\u00f3 als missatges. Per a aix\u00f2, s'apilen despr\u00e9s de cada manejador mitjan\u00e7ant el m\u00e8tode <code>pushProcessor($processador)</code>.</p> <p>Alguns processadors coneguts s\u00f3n <code>IntrospectionProcessor</code> (mostren la l\u00ednia, fitxer, classe i metodo des del qual s'invoca el log), <code>WebProcessor</code> (afig la URI, m\u00e8tode i IP) o <code>GitProcessor</code> (afig la branca i el commit).</p> PHPConsola en format text <pre><code>&lt;?php\n$log = new Logger(\"MiLogger\");\n$log-&gt;pushHandler(new RotatingFileHandler(\"logs/milog.log\", 0, Level::DEBUG));\n$log-&gt;pushProcessor(new IntrospectionProcessor());\n$log-&gt;pushHandler(new StreamHandler(\"php://stderr\", Level::WARNING));\n// no usa Introspection pq lo hemos apilado despu\u00e9s, le asigno otro\n$log-&gt;pushProcessor(new WebProcessor());\n</code></pre> <pre><code>[2020-11-26T13:35:31.076138+01:00] MiLogger.DEBUG: Esto es un mensaje de DEBUG [] {\"file\":\"C:\\\\xampp\\\\htdocs\\\\log\\\\procesador.php\",\"line\":12,\"class\":null,\"function\":null}\n[2020-11-26T13:35:31.078344+01:00] MiLogger.INFO: Esto es un mensaje de INFO [] {\"file\":\"C:\\\\xampp\\\\htdocs\\\\log\\\\procesador.php\",\"line\":13,\"class\":null,\"function\":null}\n</code></pre>"},{"location":"1val.html#formatadors","title":"Formatadors","text":"<p>S'associen als manejadores amb <code>setFormatter</code>. Els formateadores m\u00e9s utilitzats s\u00f3n <code>LineFormatter</code>, <code>HtmlFormatter</code> o <code>JsonFormatter</code>.</p> PHPConsola en JSON <pre><code>&lt;?php\n$log = new Logger(\"MiLogger\");\n$rfh = new RotatingFileHandler(\"logs/milog.log\", Level::Debug);\n$rfh-&gt;setFormatter(new JsonFormatter());\n$log-&gt;pushHandler($rfh);\n</code></pre> <pre><code>{\"message\":\"Esto es un mensaje de DEBUG\",\"context\":{},\"level\":100,\"level_name\":\"DEBUG\",\"channel\":\"MiLogger\",\"datetime\":\"2020-11-27T15:36:52.747211+01:00\",\"extra\":{}}\n{\"message\":\"Esto es un mensaje de INFO\",\"context\":{},\"level\":200,\"level_name\":\"INFO\",\"channel\":\"MiLogger\",\"datetime\":\"2020-11-27T15:36:52.747538+01:00\",\"extra\":{}}\n</code></pre> <p>M\u00e9s informaci\u00f3</p> <p>M\u00e9s informaci\u00f3 sobre manejadores, formateadores i processadors en https://github.com/Seldaek/monolog/blob/master/doc/02-handlers-formatters-processors.md</p>"},{"location":"1val.html#6-generacio-de-pdf-amb-dompdf","title":"6.  Generaci\u00f3 de PDF amb DOMPDF","text":"<p>Amb PHP podem manejar tot tipus d'arxius com ja hem vist per\u00f2, qu\u00e8 passa si volem generar fitxers PDF amb dades tretes d'una base de dades?</p> <p>Gr\u00e0cies a una classe escrita en PHP, podem generar arxius PDF sense necessitat d'instal\u00b7lar llibreries addicionals en el nostre servidor. Per\u00f2 anem a utilitzar una llibreria que permet transformar codi html en pdf.</p>"},{"location":"1val.html#dompdf","title":"DOMPDF","text":"<p>Afegirem la llibreria de DOMPDF al nostre projecte. Per a aix\u00f2, inclourem la llibreria en el nostre projecte amb:</p> <p><pre><code>composer require dompdf/dompdf\n</code></pre> Una vegada que DOMPDF est\u00e0 instal\u00b7lat, el proc\u00e9s per generar PDFs des de HTML \u00e9s bastant directe. Els passos b\u00e0sics s\u00f3n:</p> <p>Pas 1: Incloent DOMPDF Primer, necessitarem incloure DOMPDF en el script PHP. Si estem utilitzant Composer, aix\u00f2 es fa autom\u00e0ticament a trav\u00e9s de l'auto-c\u00e0rrega de Composer. Nom\u00e9s cal afegir la seg\u00fcent l\u00ednia al principi del'script:</p> <pre><code>require 'vendor/autoload.php';\n</code></pre> <p>Pas 2: Creaci\u00f3 d'una Inst\u00e0ncia de DOMPDF A continuaci\u00f3, creem una nova inst\u00e0ncia de la classe DOMPDF:</p> <pre><code>use Dompdf\\Dompdf;\n\n$dompdf = new Dompdf();\n</code></pre> <p>Pas 3: Carregar HTML Despr\u00e9s, carregem l'HTML en l'objecte DOMPDF. Aix\u00f2 es pot fer directament com una cadena o carregant un fitxer HTML:</p> <pre><code>$html = \"&lt;html&gt;&lt;body&gt;Hola, aix\u00f2 \u00e9s una prova.&lt;/body&gt;&lt;/html&gt;\";\n$dompdf-&gt;loadHtml($html);\n</code></pre> <p>O b\u00e9 carregar un fitxer HTML:</p> <pre><code>$dompdf-&gt;loadHtml(file_get_contents('path/to/your/file.html'));\n</code></pre> <p>Pas 4: Configuraci\u00f3 de la Mida del Paper i l'Orientaci\u00f3 Podem configurar la mida del paper i l'orientaci\u00f3 si \u00e9s necessari:</p> <pre><code>$dompdf-&gt;setPaper('A4', 'portrait'); // o 'landscape'\n</code></pre> <p>Pas 5: Renderitzaci\u00f3 del PDF Ara, demanem a DOMPDF que renderitze el PDF:</p> <pre><code>$dompdf-&gt;render();\n</code></pre> <p>Pas 6: Eixida del PDF Finalment, podem enviar el PDF al navegador, guardar-lo en un fitxer o fer amb ell el que necessitem:</p> <p>Per mostrar-lo al navegador:</p> <pre><code>$dompdf-&gt;stream(\"document.pdf\", array(\"Attachment\" =&gt; false));\n</code></pre> <p>Per desar-lo en un fitxer:</p> <pre><code>$output = $dompdf-&gt;output();\nfile_put_contents('path/to/save/document.pdf', $output);\n</code></pre>"},{"location":"1val.html#consells-addicionals","title":"Consells Addicionals","text":"<p>Cal assegurar-se que l'HTML \u00e9s v\u00e0lid i ben format. DOMPDF intenta ser tolerant amb l'HTML, per\u00f2 l'HTML mal format pot causar problemes. El CSS que s'utilitze pot afectar significativament com es veu el PDF. DOMPDF suporta una bona part de CSS 2.1, per\u00f2 no tot. Si necessitem incloure imatges, cal assegurar-se que les rutes s\u00f3n absolutes i accessibles des del servidor on s'executa DOMPDF. Aquesta \u00e9s una guia b\u00e0sica per comen\u00e7ar amb DOMPDF. Per a casos d'\u00fas m\u00e9s avan\u00e7ats i opcions de configuraci\u00f3, cal consultar la documentaci\u00f3 oficial de DOMPDF.</p>"},{"location":"1val.html#7-documentacion-con-phpdocumentor","title":"7. Documentaci\u00f3n con phpDocumentor","text":"<p>phpDocumentor \u00e9s l'eina per a documentar el codi PHP. \u00c9s similar en prop\u00f2sit i funcionament a Javadoc.</p> <p>Aix\u00ed doncs, \u00e9s un eina que facilita la documentaci\u00f3 del codi PHP, creant un lloc web amb l'API de l'aplicaci\u00f3.</p> <p>Es basa en l'\u00fas d'anotacions sobre els docblocks. Per a posar-ho en marxa, en el nostre cas ens decantarem per utilitzar la imatge que ja existeix de Docker.</p>"},{"location":"1val.html#installacio_1","title":"Instal\u00b7laci\u00f3","text":""},{"location":"1val.html#pas-1-installacio-amb-docker","title":"Pas 1: Instal\u00b7laci\u00f3 amb Docker","text":"<p>Primer, cal assegurar-se tenir Docker instal\u00b7lat i funcionant al  sistema. Despr\u00e9s, s'ha de descarregar i executar el contenidor de phpDocumentor utilitzant la seg\u00fcent comanda:</p> <pre><code>docker pull phpdoc/phpdoc\n</code></pre>"},{"location":"1val.html#pas-2-generacio-de-documentacio","title":"Pas 2: Generaci\u00f3 de Documentaci\u00f3","text":"<p>Un cop tinguem la imatge, podem utilitzar-la per generar la documentaci\u00f3. El proc\u00e9s b\u00e0sic implica muntar els fitxers de codi dins del contenidor Docker i executar phpDocumentor sobre aquests fitxers.</p> <p>Ac\u00ed hi ha un exemple de com fer-ho:</p> <p>En el cas d'usar Docker, usarem el seg\u00fcent comando per a executar-lo (crea el contenidor, executa el comando que li demanem, i autom\u00e0ticament l'esborra):</p> <p><pre><code>docker run --rm -v $(pwd):/data phpdoc/phpdoc:latest run -d /data/src -t /data/src/docs\n</code></pre> Aquesta comanda fa el seg\u00fcent:</p> <pre><code>    * -rm: Aix\u00f2 elimina el contenidor despr\u00e9s d'executar-lo, aix\u00ed no es queden contenidors inactius.\n    * -v $(pwd):/data: Munta el directori actual del teu sistema ($(pwd)) al directori /data dins del contenidor. Haur\u00e0s de reempla\u00e7ar $(pwd) amb el cam\u00ed on est\u00e0 el teu codi font si no est\u00e0s executant aquesta comanda des del directori del teu projecte.\n    * -d /data/src: Especifica el directori dins del contenidor on es troba el teu codi font. Reempla\u00e7a /data/src amb el cam\u00ed corresponent dins del contenidor si \u00e9s diferent.\n    * -t /data/src/docs: Especifica on vols que es generi la documentaci\u00f3 dins del contenidor. En aquest cas, es generar\u00e0 dins de /data/docs.\n</code></pre>"},{"location":"1val.html#pas-3-acces-a-la-documentacio-generada","title":"Pas 3: Acc\u00e9s a la Documentaci\u00f3 Generada","text":"<p>Una vegada generada, la documentaci\u00f3 estar\u00e0 dins del directori que especificat (en aquest cas, <code>docs</code> dins del directori docs de projecte). Pots obrir els fitxers HTML amb qualsevol navegador per veure la documentaci\u00f3.</p>"},{"location":"1val.html#docblock","title":"DocBlock","text":"<p>Un docblock \u00e9s el bloc de codi que es col\u00b7loca damunt d'un recurs. El seu format \u00e9s:</p> <pre><code>&lt;?php\n/**\n* Sumari*, una sola l\u00ednia\n\n* Descripci\u00f3* que pot utilitzar diverses l\u00ednies\n* i que ofereix detalls de l'element o refer\u00e8ncies\n* per a ampliar la informaci\u00f3\n\n* @param string $miArgumento amb una descripci\u00f3* de l'argument\n* que pot usar diverses l\u00ednies.\n\n* @return void\n*/\nfunction miFuncion(tipo $miArgumento)\n{\n}\n</code></pre> <p>Visual Studio Code</p> <p>Per tal que us ajude a documentar podeu utilitzar l'extensi\u00f3  PHP DocBlocker.</p>"},{"location":"1val.html#documentant-el-codi","title":"Documentant el codi","text":"<p>En tots els elements, ademas del sumari i/o descripci\u00f3, posarem:</p> <ul> <li>En les classes:<ul> <li><code>@author</code> nom  <li><code>@package</code> ruta del namespace</li> <li>En les propietats:<ul> <li><code>@var</code> tipus descripci\u00f3</li> </ul> </li> <li>En els m\u00e8todes:<ul> <li><code>@param</code> tipus $nomene descripci\u00f3</li> <li><code>@throws</code> ClaseException descripci\u00f3</li> <li><code>@return</code> tipus descripci\u00f3</li> </ul> </li> <p>Vegem-ho amb un exemple. Suposem que tenim una classe que representa un client:</p> <pre><code>&lt;?php\n/**\n* Classe que representa un client\n* \n* El client s'encarrega d'emmagatzemar els suports que t\u00e9 llogat,\n* de manera que podem llogar i retornar productes mitjan\u00e7ant les operacions\n* hom\u00f2nimes.\n* \n* @package Dwes\\Videoclub\\Model\n* @author Aitor Medrano &lt;a.medrano@edu.gva.es&gt;\n*/\nclass Cliente {\n\n    public string $nombre; \n    private string $numero;\n\n    /**\n    * Colecci\u00f3 de soports alquilats\n    * @var array&lt;Soporte&gt; \n    */\n    private $soportesAlquilados[];\n\n    /*\n    * Comprova si el suport rebut ja el t\u00e9 llogat el client\n    * @param Suport $suporte Suport a comprovar\n    * @return bool true si ho t\u00e9 llogat\n    /\n    public function tieneAlquilado(Soporte $soporte) : bool { \n        // ...\n    }\n</code></pre> <p>Si generem la documentaci\u00f3 i obrim amb un navegador l'arxiu <code>docs/api/index.html</code> podrem navegar fins a la classe `Client:</p> phpDocumentor de Cliente"},{"location":"1val.html#8-separar-la-logica-de-negoci-dels-aspectes-de-presentacio-de-laplicacio","title":"8. Separar la l\u00f2gica de negoci dels aspectes de presentaci\u00f3 de l'aplicaci\u00f3","text":""},{"location":"1val.html#logica-de-negoci","title":"L\u00f2gica de Negoci","text":"<ul> <li>Regles i procediments que defineixen el funcionament de l'aplicaci\u00f3.</li> <li>Inclou processament de dades, c\u00e0lculs, interaccions amb la base de dades, etc.</li> </ul>"},{"location":"1val.html#aspectes-de-presentacio","title":"Aspectes de Presentaci\u00f3","text":"<ul> <li>Manera en qu\u00e8 es mostra la informaci\u00f3 a l'usuari.</li> <li>Inclou la interf\u00edcie d'usuari, disseny, navegaci\u00f3, etc.</li> </ul>"},{"location":"1val.html#avantatges_1","title":"Avantatges","text":"<ol> <li> <p>Mantenibilitat</p> <ul> <li>Facilita la modificaci\u00f3 de la l\u00f2gica de negoci sense afectar la presentaci\u00f3.</li> <li>Permet actualitzar la interf\u00edcie d'usuari sense modificar la l\u00f2gica subjacent.</li> </ul> </li> <li> <p>Reutilitzaci\u00f3</p> <ul> <li>La l\u00f2gica de negoci pot ser reutilitzada en diferents aplicacions amb interf\u00edcies variades.</li> <li>Els components de presentaci\u00f3 poden ser reutilitzats amb diferents l\u00f2giques de negoci.</li> </ul> </li> <li> <p>Escalabilitat</p> <ul> <li>Ajuda a escalar l'aplicaci\u00f3 separant les preocupacions, permetent millorar una part sense impactar l'altra.</li> </ul> </li> <li> <p>Prova i Depuraci\u00f3</p> <ul> <li>Facilita les proves unit\u00e0ries i la depuraci\u00f3 en permetre provar la l\u00f2gica de negoci per separat de la interf\u00edcie.</li> </ul> </li> <li> <p>Col\u00b7laboraci\u00f3</p> <ul> <li>Permet que desenvolupadors de backend i frontend treballen de manera independent en les seues \u00e0rees respectives.</li> </ul> </li> </ol>"},{"location":"1val.html#tecnologies-i-mecanismes-per-a-la-separacio","title":"Tecnologies i Mecanismes per a la Separaci\u00f3","text":"<p>A continuaci\u00f3 es presenten diverses tecnologies i mecanismes que faciliten la separaci\u00f3 de la l\u00f2gica de negoci i la presentaci\u00f3 en una aplicaci\u00f3 web:</p>"},{"location":"1val.html#frameworks-php","title":"Frameworks PHP:","text":"<p>Laravel: Framework que segueix el patr\u00f3 MVC (Model-View-Controller). Laravel facilita la creaci\u00f3 de codi net i ben organitzat, separant clarament la l\u00f2gica de negoci de la presentaci\u00f3. Symfony: Altres frameworks populars que tamb\u00e9 segueixen el patr\u00f3 MVC i ofereixen eines per a la separaci\u00f3 de la l\u00f2gica i la presentaci\u00f3.</p>"},{"location":"1val.html#patro-mvc","title":"Patr\u00f3 MVC:","text":"<p>Model-View-Controller: Patr\u00f3 de disseny que divideix una aplicaci\u00f3 en tres components interconnectats: Model: Gestiona la l\u00f2gica de negoci i les dades. Vista: Gestiona la presentaci\u00f3 de la informaci\u00f3. Controlador: Gestiona la comunicaci\u00f3 entre el Model i la Vista.</p>"},{"location":"1val.html#plantilles","title":"Plantilles:","text":"<p>Blade (Laravel): Motor de plantilles que permet separar el codi HTML de la l\u00f2gica de negoci. Twig (Symfony): Motor de plantilles similar a Blade, utilitzat per separar la l\u00f2gica de negoci del codi de presentaci\u00f3.</p>"},{"location":"1val.html#api-rest","title":"API REST:","text":"<p>Permet crear serveis web que exposen funcionalitats i dades a trav\u00e9s de punts finals d'API, mantenint la l\u00f2gica de negoci separada de la presentaci\u00f3.</p>"},{"location":"1val.html#exemple-mvc","title":"Exemple MVC","text":"<p><pre><code>// Model: Product.php\nclass Product {\n    private string $name;\n    private float $price;\n\n    public function __construct(string $name, float $price) {\n        $this-&gt;name = $name;\n        $this-&gt;price = $price;\n    }\n\n    public function getName(): string {\n        return $this-&gt;name;\n    }\n\n    public function getPrice(): float {\n        return $this-&gt;price;\n    }\n}\n\n// Controller: ProductController.php\nclass ProductController {\n    public function showProduct() {\n        $product = new Product(\"Laptop\", 1200.00);\n        include 'views/productView.php';\n    }\n}\n\n// View: productView.php\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Product Information&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Product: &lt;?php echo htmlspecialchars($product-&gt;getName()); ?&gt;&lt;/h1&gt;\n    &lt;p&gt;Price: $&lt;?php echo htmlspecialchars($product-&gt;getPrice()); ?&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> La separaci\u00f3 de la l\u00f2gica de negoci dels aspectes de presentaci\u00f3 \u00e9s crucial per al desenvolupament d'aplicacions web eficients, mantenibles i escalables.</p>"},{"location":"1val.html#9-gestio-dexempcions","title":"9. Gesti\u00f3 d'Exempcions","text":"<p>La gesti\u00f3 d'excepcions forma part des de PHP 5. El seu funcionament \u00e9s similar a Java*, fent \u00fas d'un bloc <code>try / catch / finally</code>. Si detectem una situaci\u00f3 an\u00f2mala i volem llan\u00e7ar una excepci\u00f3, haurem de realitzar <code>throw new Exception</code> (adjuntant el missatge que l'ha provocat).</p> <pre><code>&lt;?php\ntry\u00a0{\n    if\u00a0($divisor\u00a0==\u00a00) {\n        throw\u00a0new\u00a0Exception(\"Divisi\u00f3n\u00a0por\u00a0cero.\");\n    }\n    $resultado\u00a0=\u00a0$dividendo\u00a0/\u00a0$divisor;\n}\u00a0catch\u00a0(Exception\u00a0$e)\u00a0{\n    echo\u00a0\"Se\u00a0ha\u00a0producido\u00a0el\u00a0siguiente\u00a0error:\u00a0\".$e-&gt;getMessage();\n}\n</code></pre> <p>La classe <code>Exception</code> \u00e9s la classe pare de totes les excepcions. El seu constructor rep <code>missatge[,codigoError][,excepcionPrevia]</code>.</p> <p>A partir d'un objecte <code>Exception</code>, podem accedir als m\u00e8todes <code>getMessage()</code>i <code>getCode()</code> per a obtindre el missatge i el codi d'error de l'excepci\u00f3 capturada.</p> <p>El propi llenguatge ofereix un conjunt d'excepcions ja definides, les quals podem capturar (i llan\u00e7ar des de PHP 7). Es recomana la seua consulta en la documentaci\u00f3 oficial.</p>"},{"location":"1val.html#creant-exempcions","title":"Creant exempcions","text":"<p>Per a crear una excepci\u00f3, la forma m\u00e9s curta \u00e9s crear una classe que \u00fanicament herete de <code>Exception</code>.</p> <pre><code>&lt;?php\nclass\u00a0HolaExcepcion\u00a0extends\u00a0Exception\u00a0{}\n</code></pre> <p>Si volem, i \u00e9s recomanable depenent dels requisits, podem sobrecarregar els m\u00e8todes m\u00e0gics, per exemple, sobrecarregant el constructor i cridant al constructor del pare, o reescriure el m\u00e8tode <code>__toString</code> per a canviar el seu missatge:</p> <pre><code>&lt;?php\nclass\u00a0MiExcepcion\u00a0extends\u00a0Exception\u00a0{\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0__construct($msj,\u00a0$codigo\u00a0=\u00a00,\u00a0Exception\u00a0$previa\u00a0=\u00a0null)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0c\u00f3digo\u00a0propio\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0parent::__construct($msj,\u00a0$codigo,\u00a0$previa);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0__toString()\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0__CLASS__\u00a0.\u00a0\":\u00a0[{$this-&gt;code}]:\u00a0{$this-&gt;message}\\n\";\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0public\u00a0function\u00a0miFuncion()\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Una\u00a0funci\u00f3n\u00a0personalizada\u00a0para\u00a0este\u00a0tipo\u00a0de\u00a0excepci\u00f3n\\n\";\n\u00a0\u00a0\u00a0\u00a0}\n}\n</code></pre> <p>Si definim una excepci\u00f3 d'aplicaci\u00f3 dins d'un namespace, quan referenciem a <code>Exception</code>, haurem de referenciar-la mitjan\u00e7ant el seu nom totalment qualificat (<code>\\Exception</code>), o utilitzant <code>use</code>:</p> Mitjan\u00e7ant nom totalment qualificatMitjan\u00e7ant <code>use</code> <pre><code>&lt;?php\nnamespace \\Dwes\\Ejemplos;\n\nclass\u00a0AppExcepcion\u00a0extends\u00a0\\Exception\u00a0{}\n</code></pre> <pre><code>&lt;?php\nnamespace \\Dwes\\Ejemplos;\n\nuse Exception;\n\nclass\u00a0AppExcepcion\u00a0extends\u00a0Exception\u00a0{}\n</code></pre>"},{"location":"1val.html#exempcions-multiples","title":"Exempcions m\u00faltiples","text":"<p>Es poden usar excepcions m\u00faltiples per a comprovar diferents condicions. A l'hora de capturar-les, es fa de m\u00e9s espec\u00edfica a m\u00e9s general.</p> <pre><code>&lt;?php\n$email\u00a0=\u00a0\"ejemplo@ejemplo.com\";\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0Comprueba\u00a0si\u00a0el\u00a0email\u00a0es\u00a0v\u00e1lido\n\u00a0\u00a0\u00a0\u00a0if(filter_var($email,\u00a0FILTER_VALIDATE_EMAIL)\u00a0===\u00a0FALSE)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0MiExcepcion($email);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0//\u00a0Comprueba\u00a0la\u00a0palabra\u00a0ejemplo\u00a0en\u00a0la\u00a0direcci\u00f3n\u00a0email\n\u00a0\u00a0\u00a0\u00a0if(strpos($email,\u00a0\"ejemplo\")\u00a0!==\u00a0FALSE)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0Exception(\"$email\u00a0es\u00a0un\u00a0email\u00a0de\u00a0ejemplo no v\u00e1lido\");\n\u00a0\u00a0\u00a0\u00a0}\n}\u00a0catch\u00a0(MiExcepcion\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0$e-&gt;miFuncion();\n}\u00a0catch(Exception\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0$e-&gt;getMessage();\n}\n</code></pre> <p>Autoevaluaci\u00f3n</p> <p>\u00bfQu\u00e9 pasar\u00eda al ejectuar el siguiente c\u00f3digo? <pre><code>&lt;?php\nclass\u00a0MainException\u00a0extends\u00a0Exception\u00a0{}\nclass\u00a0SubException\u00a0extends\u00a0MainException\u00a0{}\n\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0SubException(\"Lanzada\u00a0SubException\");\n}\u00a0catch\u00a0(MainException\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0MainException\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n}\u00a0catch\u00a0(SubException\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0SubException\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n}\u00a0catch\u00a0(Exception\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0Exception\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n}\n</code></pre></p> <p>Si en el mateix <code>catch</code> volem capturar diverses excepcions, hem d'utilitzar l'operador <code>|</code>:</p> <pre><code>&lt;?php\nclass\u00a0MainException\u00a0extends\u00a0Exception\u00a0{}\nclass\u00a0SubException\u00a0extends\u00a0MainException\u00a0{}\n\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0SubException(\"Lanzada\u00a0SubException\");\n}\u00a0catch\u00a0(MainException\u00a0|\u00a0SubException\u00a0$e\u00a0)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Capturada\u00a0Exception\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n}\n</code></pre> <p>Des de PHP 7, existeix el tipus <code>Throwable</code>, el qual \u00e9s una interf\u00edcie que implementen tant els errors com les excepcions, i ens permet capturar els dos tipus alhora:</p> <pre><code>&lt;?php\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0tu\u00a0codigo\n}\u00a0catch\u00a0(Throwable\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0'Forma\u00a0de\u00a0capturar\u00a0errores\u00a0y\u00a0excepciones\u00a0a\u00a0la\u00a0vez';\n}\n</code></pre> <p>Si nom\u00e9s volem capturar els errors fatals, podem fer \u00fas de la classe <code>Error</code>:</p> <pre><code>&lt;?php\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0Genera\u00a0una\u00a0notificaci\u00f3n\u00a0que\u00a0no\u00a0se\u00a0captura\n\u00a0\u00a0\u00a0\u00a0echo\u00a0$variableNoAsignada;\n\u00a0\u00a0\u00a0\u00a0//\u00a0Error\u00a0fatal\u00a0que\u00a0se\u00a0captura\n\u00a0\u00a0\u00a0\u00a0funcionQueNoExiste();\n}\u00a0catch\u00a0(Error\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0echo\u00a0\"Error\u00a0capturado:\u00a0\"\u00a0.\u00a0$e-&gt;getMessage();\n}\n</code></pre>"},{"location":"1val.html#rellancar-exempcions","title":"Rellan\u00e7ar exempcions","text":"<p>En les aplicacions reals, \u00e9s molt comuna capturar una excepci\u00f3 de sistema i llan\u00e7ar una d'aplicaci\u00f3 que hem definit nostros. Tamb\u00e9 podem llan\u00e7ar les excepcions sense necessitat d'estar dins d'un <code>try/catch</code>.</p> <pre><code>&lt;?php\nclass\u00a0AppException\u00a0extends\u00a0Exception\u00a0{}\n\ntry\u00a0{\n\u00a0\u00a0\u00a0\u00a0//\u00a0C\u00f3digo\u00a0de\u00a0negocio\u00a0que\u00a0falla\n}\u00a0catch\u00a0(Exception\u00a0$e)\u00a0{\n\u00a0\u00a0\u00a0\u00a0throw\u00a0new\u00a0AppException(\"AppException:\u00a0\".$e-&gt;getMessage(), $e-&gt;getCode(),\u00a0$e);\n}\n</code></pre>"},{"location":"1val.html#10-proves-amb-phpunit","title":"10. Proves amb PHPUNIT","text":"<p>El curs passat, dins del m\u00f2dul de Entorns de Desenvolupament, estudiarieu la import\u00e0ncia de la realitzaci\u00f3 de proves, aix\u00ed com les proves unit\u00e0ries mitjan\u00e7ant JUnit.</p> Test Driven Development <p>Hui dia \u00e9s de gran import\u00e0ncia seguir una bona metodologia de proves, sent el desenvolupament dirigit per les proves (Test Driven Development / TDD) un dels enfocaments m\u00e9s emprats, el qual consisteix en:</p> <ol> <li>Escriure el test, i com no hi ha codi implementat, la prova falle (roig).</li> <li>Escriure el codi d'aplicaci\u00f3 perqu\u00e8 la prova funcione (verda).</li> <li>refactoritzar el codi de l'aplicaci\u00f3 amb l'ajuda de la prova per a comprovar que no trenquem res (refactor).</li> </ol> <p>En el cas de PHP, l'eina que s'utilitza \u00e9s PHPUnit (https://phpunit.de/), que com el seu nom indica, est\u00e0 basada en JUnit. La versi\u00f3 actual \u00e9s la 11.</p>"},{"location":"1val.html#introduccio-a-phpunit","title":"Introducci\u00f3 a PHPUnit","text":"<p>PHPUnit \u00e9s un framework de proves popular per a PHP que suporta tant proves unit\u00e0ries com proves d'integraci\u00f3. \u00c9s \u00e0mpliament utilitzat en la comunitat PHP per la seua simplicitat i efic\u00e0cia. Les proves unit\u00e0ries es centren en provar components o m\u00e8todes individuals, mentre que les proves d'integraci\u00f3 asseguren que les diferents parts del sistema funcionen conjuntament com s'espera.</p>"},{"location":"1val.html#installacio_2","title":"Instal\u00b7laci\u00f3","text":"<p>Per comen\u00e7ar a utilitzar PHPUnit, cal instal\u00b7lar-lo. La manera recomanada \u00e9s a trav\u00e9s de Composer. Executa la seg\u00fcent comanda en el terminal:</p> <pre><code>composer require --dev phpunit/phpunit\n</code></pre> <p>Aquesta comanda afegir\u00e0 PHPUnit com a depend\u00e8ncia de desenvolupament en el teu projecte.</p> <p>Llibreries de desenvolupament</p> <p>Les llibreries que es col\u00b7loquen en <code>require-dev</code> s\u00f3n les de desenvolupament i testing, de manera que no s'instal\u00b7laran en un entorn de producci\u00f3.</p> <p>Una vegada instal\u00b7lat, podem configurar PHPUnit creant un fitxer phpunit.xml en l'arrel del projecte per especificar la configuraci\u00f3 de les proves:</p> <pre><code>&lt;phpunit bootstrap=\"vendor/autoload.php\"&gt;\n    &lt;testsuites&gt;\n        &lt;testsuite name=\"Application Test Suite\"&gt;\n            &lt;directory&gt;tests&lt;/directory&gt;\n        &lt;/testsuite&gt;\n    &lt;/testsuites&gt;\n&lt;/phpunit&gt;\n</code></pre>"},{"location":"1val.html#estructura-dun-test","title":"Estructura d\u2019un test","text":"<p>Els tests en PHPUnit s\u00f3n classes PHP que hereten de PHPUnit\\Framework\\TestCase. Cada m\u00e8tode dins d'aquestes classes que comence amb test ser\u00e0 executat com una prova.</p> <pre><code>use PHPUnit\\Framework\\TestCase;\nuse App\\Models\\Empleado;\n\n\nclass EmpleadoTest extends TestCase {\n    private $empleado;\n\n    protected function setUp(): void {\n        $this-&gt;empleado = new Empleado('John', 'Doe', 4000, 30);\n    }\n\n    public function testGetSou() {\n        $this-&gt;assertEquals(4000, $this-&gt;empleado-&gt;getSou());\n    }\n\n    public function testSetSou() {\n        $this-&gt;empleado-&gt;setSou(4500);\n        $this-&gt;assertEquals(4500, $this-&gt;empleado-&gt;getSou());\n    }\n\n    public function testGetTelefonos() {\n        $this-&gt;assertIsArray($this-&gt;empleado-&gt;getTelefonos());\n        $this-&gt;assertEmpty($this-&gt;empleado-&gt;getTelefonos());\n    }\n\n    public function testSetTelefono() {\n        $this-&gt;empleado-&gt;setTelefono('123456789');\n        $this-&gt;assertCount(1, $this-&gt;empleado-&gt;getTelefonos());\n        $this-&gt;assertEquals('123456789', $this-&gt;empleado-&gt;getTelefonos()[0]);\n    }\n\n    public function testListarTelefonos() {\n        $this-&gt;empleado-&gt;setTelefono('123456789');\n        $this-&gt;empleado-&gt;setTelefono('987654321');\n        $this-&gt;assertEquals('123456789, 987654321', $this-&gt;empleado-&gt;listarTelefonos());\n    }\n\n    public function testVaciarTelefonos() {\n        $this-&gt;empleado-&gt;setTelefono('123456789');\n        $this-&gt;empleado-&gt;vaciarTelefonos();\n        $this-&gt;assertEmpty($this-&gt;empleado-&gt;getTelefonos());\n    }\n\n    public function testDebePagarImpuestos() {\n        $this-&gt;assertTrue($this-&gt;empleado-&gt;debePagarImpuestos());\n        $this-&gt;empleado-&gt;setSou(3000);\n        $this-&gt;assertFalse($this-&gt;empleado-&gt;debePagarImpuestos());\n    }\n}\n</code></pre>"},{"location":"1val.html#execucio-de-proves","title":"Execuci\u00f3 de Proves","text":"<p>Per executar les proves, podem utilitzar la seg\u00fcent comanda:</p> <p>vendor/bin/phpunit</p> <p>Aquesta comanda cercar\u00e0 els arxius de prova en el directori especificat (per defecte tests) i executar\u00e0 totes les proves.</p>"},{"location":"1val.html#tipus-de-proves","title":"Tipus de  proves","text":"<p>Amb PHPUnit, podem realitzar diversos tipus de proves, entre elles:</p> <ul> <li>Proves Unit\u00e0ries : Verifiquen el funcionament d'una unitat de codi individual, com una funci\u00f3 o m\u00e8tode.</li> <li>Proves Funcionals: Verifiquen que un conjunt de m\u00f2duls funciona correctament conjuntament. Aquestes proves poden simular interaccions de l'usuari en un sistema web, encara que aix\u00f2 es fa millor amb frameworks especialitzats per a proves funcionals.</li> <li>Proves d'Integraci\u00f3: Comproven que diferents m\u00f2duls o serveis funcionen correctament quan es combinen.</li> </ul> <p>Exemple de prova unit\u00e0ria:</p> <pre><code>public function testResta() {\n    $calculadora = new Calculadora();\n    $resultat = $calculadora-&gt;resta(5, 3);\n    $this-&gt;assertEquals(2, $resultat);\n}\n</code></pre>"},{"location":"1val.html#assercions","title":"Assercions","text":"<p>Les assercions permeten comprovar el resultat dels m\u00e8todes que volem provar. Les assercions esperen que el predicat sempre siga vertader.</p> <p>PHPUnit ofereix les seg\u00fcent assercions:</p> <ul> <li><code>assertTrue</code> / <code>assertFalse</code>: Comprova que la condici\u00f3 donada siga avaluada com true / false</li> <li><code>assertEquals</code> / <code>assertSame</code>: Comprova que dues variables siguen iguals</li> <li><code>assertNotEquals</code> / <code>assertNotSame</code>: Comprova que dues variables NO siguen iguals</li> <li><code>assertNull</code>: Comprova que un valor \u00e9s null.</li> <li><code>Same</code> \u2192 comprova els tipus. Si no coincideixen els tipus i els valors, l'asserci\u00f3 fallar\u00e0</li> <li><code>Equals</code> \u2192 sense comprovaci\u00f3 estricta</li> <li><code>assertArrayHasKey</code> / <code>assertArrayNotHasKey</code>: Comprova que un array posse\u00efsca un key determinat / o NO ho posse\u00efsca</li> <li><code>assertArraySubset</code>: Comprova que un array posse\u00efsca un altre array com subset del mateix</li> <li><code>assertAttributeContains</code> / <code>assertAttributeNotContains</code>: Comprova que un atribut d'una classe continga una variable determinada / o NO continga una variable determinada</li> <li><code>assertAttributeEquals</code>: Comprova que un atribut d'una classe siga igual a una variable determinada.</li> </ul>"},{"location":"1val.html#proves-amb-dades","title":"Proves amb dades","text":"<p>Les proves en PHPUnit poden utilitzar data providers per executar el mateix test amb diferents dades:</p> <pre><code>/**\n * @dataProvider proveidorDeDades\n */\npublic function testMultiplica($a, $b, $esperat) {\n    $calculadora = new Calculadora();\n    $this-&gt;assertEquals($esperat, $calculadora-&gt;multiplica($a, $b));\n}\n\npublic function proveidorDeDades() {\n    return [\n        [2, 3, 6],\n        [0, 5, 0],\n        [-1, 5, -5],\n    ];\n}\n</code></pre>"},{"location":"1val.html#mocks","title":"Mocks","text":"<p>Un mock \u00e9s un objecte simulat que imita el comportament d'un objecte real en un entorn de proves. S'utilitza per simular la funcionalitat de certs components o depend\u00e8ncies d'una classe, sense necessitat d'executar el codi real d'aquests components. Aix\u00f2 permet provar una classe de manera a\u00efllada i controlar el comportament de les seves depend\u00e8ncies.</p> <p>Els mocks s\u00f3n \u00fatils quan:</p> <ul> <li>No volem o no podem dependre del comportament real d'un component extern, com una connexi\u00f3 a una base de dades o una API.</li> <li>Necessitem verificar la interacci\u00f3 entre la classe provada i una depend\u00e8ncia externa (per exemple, comprovar que un m\u00e8tode s'ha cridat amb uns certs arguments).</li> <li>Volem millorar la velocitat i la fiabilitat de les proves en eliminar la depend\u00e8ncia de sistemes externs.</li> </ul> <p>Com funciona un mock</p> <p>Quan utilitzem un mock, en lloc de cridar el m\u00e8tode real d'una depend\u00e8ncia, definim el comportament esperat manualment. Tamb\u00e9 podem verificar que certs m\u00e8todes del mock s'hagin cridat, amb certs arguments, un nombre determinat de vegades, etc.</p> <p>Exemple senzill de mock amb PHPUnit</p> <p>Suposem que tenim una classe UserService que dep\u00e8n d'una classe EmailService per enviar correus electr\u00f2nics quan es crea un nou usuari. No volem enviar correus electr\u00f2nics durant les proves, per\u00f2 s\u00ed que volem assegurar-nos que el m\u00e8tode d'enviament de correus es crida quan es crea un usuari nou.</p> <pre><code>&lt;?php\n\nclass EmailService\n{\n    public function sendEmail($to, $subject, $message)\n    {\n        // L\u00f2gica per enviar un correu electr\u00f2nic\n    }\n}\n\nclass UserService\n{\n    private $emailService;\n\n    public function __construct(EmailService $emailService)\n    {\n        $this-&gt;emailService = $emailService;\n    }\n\n    public function createUser($user)\n    {\n        // Crear usuari...\n\n        // Enviar un correu electr\u00f2nic al nou usuari\n        $this-&gt;emailService-&gt;sendEmail($user-&gt;email, 'Welcome!', 'Benvingut a la nostra plataforma!');\n    }\n}\n</code></pre> <pre><code>&lt;?php\n\nuse PHPUnit\\Framework\\TestCase;\n\nclass UserServiceTest extends TestCase\n{\n    public function testCreateUserSendsEmail()\n    {\n        // Creem un mock de la classe EmailService\n        $emailServiceMock = $this-&gt;createMock(EmailService::class);\n\n        // Definim l'expectativa: esperem que el m\u00e8tode sendEmail sigui cridat una vegada\n        // amb els arguments concrets que especifiquem.\n        $emailServiceMock-&gt;expects($this-&gt;once())\n                         -&gt;method('sendEmail')\n                         -&gt;with(\n                             $this-&gt;equalTo('test@example.com'),\n                             $this-&gt;equalTo('Welcome!'),\n                             $this-&gt;stringContains('Benvingut a la nostra plataforma!')\n                         );\n\n        // Creem una inst\u00e0ncia de UserService passant el mock d'EmailService\n        $userService = new UserService($emailServiceMock);\n\n        // Simulem la creaci\u00f3 d'un nou usuari\n        $user = new stdClass();\n        $user-&gt;email = 'test@example.com';\n        $userService-&gt;createUser($user);\n\n        // El m\u00e8tode sendEmail del mock hauria de ser cridat una vegada amb els par\u00e0metres especificats\n    }\n}\n</code></pre>"},{"location":"1val.html#provant-excepcions","title":"Provant excepcions","text":"<p>Les proves a m\u00e9s de comprovar que les classes funcionen com s'espera, han de cobrir tots els casos possibles. Aix\u00ed doncs, hem de poder fer proves que esperen que es llance una exempci\u00f3 (i que el missatge continga una certa informaci\u00f3):</p> <p>Per a aix\u00f2, s'utilitzen les seg\u00fcent expectatives:</p> <ul> <li><code>expectException(Excepcion::class)</code></li> <li><code>expectExceptionCode(codigoExcepcion)</code></li> <li><code>expectExceptionMessage(missatge)</code></li> </ul> <p>De la mateixa manera que abans, primer es posa l'expectativa, i despr\u00e9s es provoca que es llance l'exempci\u00f3:</p> <pre><code>&lt;?php\npublic function testExcepcio() {\n    $this-&gt;expectException(InvalidArgumentException::class);\n\n    $calculadora = new Calculadora();\n    $calculadora-&gt;divideix(5, 0);\n}\n</code></pre>"},{"location":"1val.html#conclusio_1","title":"Conclusi\u00f3","text":"<p>Les proves s\u00f3n crucials per a assegurar que el nostre codi PHP \u00e9s fiable i mant\u00e9 la seua funcionalitat al llarg del temps. Utilitzar PHPUnit ens proporciona les eines necess\u00e0ries per a escriure proves eficaces i mantenir el nostre projecte en un estat saludable.</p>"},{"location":"1val.html#12-referencies-bibliografiques","title":"12. Refer\u00e8ncies Bibliogr\u00e0fiques","text":""},{"location":"1val.html#programacio-orientada-a-objectes-en-php","title":"Programaci\u00f3 Orientada a Objectes en PHP","text":"<ul> <li> <p>\"PHP Objects, Patterns, and Practice\"   per M. Zandstra. Apress, 2017. ISBN: 978-1-4842-1361-3. Aquest llibre \u00e9s un recurs essencial per entendre els fonaments de la programaci\u00f3 orientada a objectes en PHP, aix\u00ed com patrons de disseny.</p> </li> <li> <p>\"Learning PHP, MySQL &amp; JavaScript: With jQuery, CSS &amp; HTML5\"   per Robin Nixon. O'Reilly Media, 2018. ISBN: 978-1-4919-2070-2. Ofereix una introducci\u00f3 completa a la programaci\u00f3 amb PHP, incloent-hi el model d'objectes de PHP.</p> </li> </ul>"},{"location":"1val.html#constructors-i-destructors","title":"Constructors i Destructors","text":"<ul> <li>PHP Manual: Constructors and Destructors   Documentaci\u00f3 oficial de PHP sobre constructors i destructors en la programaci\u00f3 orientada a objectes. Disponible a https://www.php.net/manual/en/language.oop5.decon.php.</li> </ul>"},{"location":"1val.html#encapsulacio-i-visibilitat","title":"Encapsulaci\u00f3 i Visibilitat","text":"<ul> <li>PHP Manual: Visibility   Secci\u00f3 del manual oficial de PHP que explica les paraules clau <code>public</code>, <code>protected</code>, i <code>private</code>, aix\u00ed com el concepte d'encapsulaci\u00f3. Accessible a https://www.php.net/manual/en/language.oop5.visibility.php.</li> </ul>"},{"location":"1val.html#herencia-i-polimorfisme","title":"Her\u00e8ncia i Polimorfisme","text":"<ul> <li> <p>\"Programming PHP\"   per Kevin Tatroe, Peter MacIntyre, i Rasmus Lerdorf. O'Reilly Media, 2013. ISBN: 978-1-4493-5053-6. Aquest llibre cobreix \u00e0mpliament els conceptes d'her\u00e8ncia i polimorfisme en PHP, proporcionant exemples pr\u00e0ctics.</p> </li> <li> <p>PHP Manual: Inheritance   Documentaci\u00f3 oficial de PHP que tracta sobre l'her\u00e8ncia en classes, incloent el polimorfisme. Disponible a https://www.php.net/manual/en/language.oop5.inheritance.php.</p> </li> </ul>"},{"location":"1val.html#classes-abstractes-i-interficies","title":"Classes Abstractes i Interf\u00edcies","text":"<ul> <li>PHP Manual: Interfaces and Abstract Classes   Explicaci\u00f3 oficial de les classes abstractes i les interf\u00edcies en PHP. Disponible a https://www.php.net/manual/en/language.oop5.interfaces.php.</li> </ul>"},{"location":"1val.html#nombres-magics-i-metodes-magics","title":"Nombres m\u00e0gics i Metodes m\u00e0gics","text":"<ul> <li>PHP Manual: Magic Methods   Guia completa sobre els m\u00e8todes m\u00e0gics en PHP, com <code>__construct()</code>, <code>__destruct()</code>, <code>__get()</code>, <code>__set()</code>, entre altres. Disponible a https://www.php.net/manual/en/language.oop5.magic.php.</li> </ul>"},{"location":"1val.html#trait-en-php","title":"Trait en PHP","text":"<ul> <li>PHP Manual: Traits   Documentaci\u00f3 sobre traits en PHP, que permeten reutilitzar codi entre diferents classes. Disponible a https://www.php.net/manual/en/language.oop5.traits.php.</li> </ul>"},{"location":"1val.html#excepcions-en-php","title":"Excepcions en PHP","text":"<ul> <li> <p>\"The Pragmatic Programmer: Your Journey to Mastery\"   per David Thomas i Andrew Hunt. Addison-Wesley Professional, 2019. ISBN: 978-0-1359-5202-8. Inclou bones pr\u00e0ctiques per a la gesti\u00f3 d'excepcions, aplicables tamb\u00e9 a PHP.</p> </li> <li> <p>PHP Manual: Exceptions   Secci\u00f3 del manual de PHP dedicada a les excepcions, explicant com llen\u00e7ar i capturar excepcions en PHP. Accessible a https://www.php.net/manual/en/language.exceptions.php.</p> </li> </ul>"},{"location":"1val.html#proves-amb-phpunit","title":"Proves amb PHPUnit","text":"<ul> <li> <p>\"Modern PHP: New Features and Good Practices\"   per Josh Lockhart. O'Reilly Media, 2015. ISBN: 978-1-4919-2904-0. Aquest llibre inclou una secci\u00f3 sobre proves amb PHPUnit.</p> </li> <li> <p>PHPUnit Documentation   Documentaci\u00f3 oficial de PHPUnit, que cobreix com escriure i executar proves unit\u00e0ries en PHP. Accessible a https://phpunit.de/documentation.html.</p> </li> </ul>"},{"location":"1val.html#eines-de-desenvolupament-i-autocarrega","title":"Eines de Desenvolupament i Autoc\u00e0rrega","text":"<ul> <li> <p>Composer Documentation   Accessible des de https://getcomposer.org/doc/. Composer \u00e9s l'eina est\u00e0ndard per a la gesti\u00f3 de depend\u00e8ncies en PHP, i inclou suport per a l'autoc\u00e0rrega de classes.</p> </li> <li> <p>PHP Manual: Autoloading Classes   Guia sobre el mecanisme d'autoc\u00e0rrega en PHP, que facilita la inclusi\u00f3 autom\u00e0tica de classes en els teus projectes. Disponible a https://www.php.net/manual/en/language.oop5.autoload.php.</p> </li> </ul>"},{"location":"1val.html#poo-avancada-patrons-de-disseny","title":"POO Avan\u00e7ada: Patrons de Disseny","text":"<ul> <li> <p>\"Head First Design Patterns\"   per Eric Freeman i Elisabeth Robson. O'Reilly Media, 2020. ISBN: 978-1-4919-7175-9. Un recurs excel\u00b7lent per aprendre patrons de disseny aplicables a PHP.</p> </li> <li> <p>\"PHP Design Patterns\"   per Stephan Schmidt. Publicat per Packt Publishing, 2008. ISBN: 978-1-84719-255-3. Aquest llibre explora com aplicar patrons de disseny en projectes PHP.</p> </li> </ul>"},{"location":"1val.html#webs-de-referencia-addicionals","title":"Webs de Refer\u00e8ncia Addicionals","text":"<ul> <li> <p>PHP: The Right Way https://phptherightway.com/. Una guia per a desenvolupar aplicacions PHP seguint les millors pr\u00e0ctiques de la ind\u00fastria.</p> </li> <li> <p>Stack Overflow https://stackoverflow.com/questions/tagged/php. Una font d'informaci\u00f3 valuosa per resoldre problemes espec\u00edfics de PHP i discutir amb altres desenvolupadors.</p> </li> </ul>"},{"location":"1val.html#13-exercicis","title":"13. Exercicis","text":""},{"location":"1val.html#bateria-dexercicis-solucionats-per-a-la-unitat-de-programacio-orientada-a-objectes","title":"Bateria d'Exercicis Solucionats per a la Unitat de Programaci\u00f3 Orientada a Objectes","text":""},{"location":"1val.html#exercici-1-crear-una-classe-basica","title":"Exercici 1: Crear una Classe B\u00e0sica","text":"<ol> <li>Crea una classe <code>Cotxe</code> que tinga les propietats <code>marca</code> i <code>model</code>. Afegeix un m\u00e8tode <code>mostraInformacio</code> que retorne un string amb la marca i el model del cotxe.</li> <li>Crea una inst\u00e0ncia de la classe <code>Cotxe</code>, assigna-li una marca i un model, i mostra la informaci\u00f3 utilitzant el m\u00e8tode <code>mostraInformacio</code>.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nclass Cotxe {\n    public $marca;\n    public $model;\n\n    public function mostraInformacio() {\n        return \"Marca: \" . $this-&gt;marca . \", Model: \" . $this-&gt;model;\n    }\n}\n\n$cotxe = new Cotxe();\n$cotxe-&gt;marca = \"Toyota\";\n$cotxe-&gt;model = \"Corolla\";\necho $cotxe-&gt;mostraInformacio(); // Output: Marca: Toyota, Model: Corolla\n</code></pre>"},{"location":"1val.html#exercici-2-afegir-un-constructor-i-destructor","title":"Exercici 2. Afegir un Constructor i destructor","text":"<ol> <li>Modifica la classe <code>Cotxe</code> per afegir un constructor que prenga com a par\u00e0metres la <code>marca</code> i el <code>model</code>, i que establisca aquestes propietats autom\u00e0ticament.</li> <li>Afegeix un destructor a la classe <code>Cotxe</code> que mostre un missatge quan l'objecte \u00e9s destru\u00eft. Crea un objecte i permet que es destru\u00efsca al final del programa.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nclass Cotxe {\n    public $marca;\n    public $model;\n\n    public function __construct($marca, $model) {\n        $this-&gt;marca = $marca;\n        $this-&gt;model = $model;\n    }\n    public function __destruct() {\n        echo \"L'objecte Cotxe ha estat destru\u00eft.\\n\";\n    }\n\n    public function mostraInformacio() {\n        return \"Marca: \" . $this-&gt;marca . \", Model: \" . $this-&gt;model;\n    }\n}\n</code></pre>"},{"location":"1val.html#exercici-3-encapsulacio-de-propietats","title":"Exercici 3. Encapsulaci\u00f3 de Propietats","text":"<ol> <li>Modifica la classe <code>Cotxe</code> per a que les propietats <code>marca</code> i <code>model</code> siguen privades. Afegeix m\u00e8todes p\u00fablics <code>getMarca</code>, <code>setMarca</code>, <code>getModel</code>, i <code>setModel</code> per accedir i modificar aquestes propietats.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nclass Cotxe {\n    private $marca;\n    private $model;\n\n    public function __construct($marca, $model) {\n        $this-&gt;marca = $marca;\n        $this-&gt;model = $model;\n    }\n\n    public function getMarca() {\n        return $this-&gt;marca;\n    }\n\n    public function setMarca($marca) {\n        $this-&gt;marca = $marca;\n    }\n\n    public function getModel() {\n        return $this-&gt;model;\n    }\n\n    public function setModel($model) {\n        $this-&gt;model = $model;\n    }\n\n    public function mostraInformacio() {\n        return \"Marca: \" . $this-&gt;getMarca() . \", Model: \" . $this-&gt;getModel();\n    }\n}\n\n$cotxe = new Cotxe(\"Ford\", \"Fiesta\");\necho $cotxe-&gt;mostraInformacio(); // Output: Marca: Ford, Model: Fiesta\n</code></pre>"},{"location":"1val.html#exercici-4-herencia-i-polimorfisme","title":"Exercici 4. Her\u00e8ncia i Polimorfisme","text":"<ol> <li>Crea una classe <code>Vehicle</code> amb una propietat <code>tipus</code>. A continuaci\u00f3, crea una classe <code>Motocicleta</code> que herete de <code>Vehicle</code> i tinga una propietat <code>cilindrada</code>. Afegeix un m\u00e8tode a <code>Motocicleta</code> que retorne el tipus i la cilindrada.</li> <li>Crea una funci\u00f3 <code>mostraDetallsVehicle</code> que accepte un objecte de tipus <code>Vehicle</code> i mostre les seues propietats. Prova aquesta funci\u00f3 amb objectes de <code>Cotxe</code> i <code>Motocicleta</code>.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nclass Vehicle {\n    protected $tipus;\n\n    public function __construct($tipus) {\n        $this-&gt;tipus = $tipus;\n    }\n\n    public function mostraDetalls() {\n        return \"Tipus: \" . $this-&gt;tipus;\n    }\n}\n\nclass Cotxe extends Vehicle {\n    private $marca;\n    private $model;\n\n    public function __construct($marca, $model) {\n        parent::__construct(\"Cotxe\");\n        $this-&gt;marca = $marca;\n        $this-&gt;model = $model;\n    }\n\n    public function mostraDetalls() {\n        return parent::mostraDetalls() . \", Marca: \" . $this-&gt;marca . \", Model: \" . $this-&gt;model;\n    }\n}\n\nclass Motocicleta extends Vehicle {\n    private $cilindrada;\n\n    public function __construct($cilindrada) {\n        parent::__construct(\"Motocicleta\");\n        $this-&gt;cilindrada = $cilindrada;\n    }\n\n    public function mostraDetalls() {\n        return parent::mostraDetalls() . \", Cilindrada: \" . $this-&gt;cilindrada;\n    }\n}\n\nfunction mostraDetallsVehicle(Vehicle $vehicle) {\n    echo $vehicle-&gt;mostraDetalls() . \"\\n\";\n}\n\n$cotxe = new Cotxe(\"Toyota\", \"Corolla\");\n$moto = new Motocicleta(600);\n\nmostraDetallsVehicle($cotxe); // Output: Tipus: Cotxe, Marca: Toyota, Model: Corolla\nmostraDetallsVehicle($moto);  // Output: Tipus: Motocicleta, Cilindrada: 600\n</code></pre>"},{"location":"1val.html#exercici-5-implementacio-del-patro-mvc-amb-vehicles","title":"Exercici 5. Implementaci\u00f3 del Patr\u00f3 MVC amb Vehicles","text":"<p>Continuant amb l'exercici anterior on has creat les classes <code>Vehicle</code>, <code>Cotxe</code>, i <code>Motocicleta</code>, ara refactoritzar\u00e0s el codi per seguir el patr\u00f3 Model-Vista-Controlador (MVC). El teu objectiu \u00e9s separar la l\u00f2gica de negoci (models) de la presentaci\u00f3 (vistes) i gestionar la interacci\u00f3 entre aquestes capes mitjan\u00e7ant un controlador.</p> <ol> <li> <p>Crear el Model:</p> <ul> <li>Refactoritza les classes <code>Vehicle</code>, <code>Cotxe</code>, i <code>Motocicleta</code> perqu\u00e8 representen el model de negoci i nom\u00e9s contenen la l\u00f2gica relacionada amb la gesti\u00f3 de vehicles.</li> <li>Assegura't que els models no contenen cap codi de presentaci\u00f3.</li> </ul> </li> <li> <p>Crear les Vistes:</p> <ul> <li>Crea vistes separades per mostrar els detalls dels vehicles:<ul> <li>Una vista HTML que mostre la informaci\u00f3 dels vehicles en format HTML.</li> <li>Una vista en text simple que mostre els detalls dels vehicles en un format de text senzill.</li> </ul> </li> </ul> </li> <li> <p>Crear el Controlador:</p> <ul> <li>Implementa un controlador que gestione la interacci\u00f3 entre els models i les vistes.</li> <li>El controlador ha de ser capa\u00e7 de rebre una sol\u00b7licitud per mostrar un vehicle i triar la vista adequada per mostrar-ne els detalls.</li> </ul> </li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Models\n\nclass Vehicle {\n    protected $tipus;\n\n    public function __construct($tipus) {\n        $this-&gt;tipus = $tipus;\n    }\n\n    public function getTipus() {\n        return $this-&gt;tipus;\n    }\n}\n\nclass Cotxe extends Vehicle {\n    private $marca;\n    private $model;\n\n    public function __construct($marca, $model) {\n        parent::__construct(\"Cotxe\");\n        $this-&gt;marca = $marca;\n        $this-&gt;model = $model;\n    }\n\n    public function getMarca() {\n        return $this-&gt;marca;\n    }\n\n    public function getModel() {\n        return $this-&gt;model;\n    }\n}\n\nclass Motocicleta extends Vehicle {\n    private $cilindrada;\n\n    public function __construct($cilindrada) {\n        parent::__construct(\"Motocicleta\");\n        $this-&gt;cilindrada = $cilindrada;\n    }\n\n    public function getCilindrada() {\n        return $this-&gt;cilindrada;\n    }\n}\n\n// Vistes\n\nclass VehicleView {\n    public function renderHtml(Vehicle $vehicle) {\n        $output = \"&lt;p&gt;Tipus: \" . $vehicle-&gt;getTipus() . \"&lt;/p&gt;\";\n        if ($vehicle instanceof Cotxe) {\n            $output .= \"&lt;p&gt;Marca: \" . $vehicle-&gt;getMarca() . \"&lt;/p&gt;\";\n            $output .= \"&lt;p&gt;Model: \" . $vehicle-&gt;getModel() . \"&lt;/p&gt;\";\n        } elseif ($vehicle instanceof Motocicleta) {\n            $output .= \"&lt;p&gt;Cilindrada: \" . $vehicle-&gt;getCilindrada() . \" cc&lt;/p&gt;\";\n        }\n        return $output;\n    }\n\n    public function renderText(Vehicle $vehicle) {\n        $output = \"Tipus: \" . $vehicle-&gt;getTipus() . \"\\n\";\n        if ($vehicle instanceof Cotxe) {\n            $output .= \"Marca: \" . $vehicle-&gt;getMarca() . \"\\n\";\n            $output .= \"Model: \" . $vehicle-&gt;getModel() . \"\\n\";\n        } elseif ($vehicle instanceof Motocicleta) {\n            $output .= \"Cilindrada: \" . $vehicle-&gt;getCilindrada() . \" cc\\n\";\n        }\n        return $output;\n    }\n}\n\n// Controlador\n\nclass VehicleController {\n    private $view;\n\n    public function __construct(VehicleView $view) {\n        $this-&gt;view = $view;\n    }\n\n    public function mostrarVehicle(Vehicle $vehicle, $format = 'html') {\n        if ($format === 'html') {\n            echo $this-&gt;view-&gt;renderHtml($vehicle);\n        } else {\n            echo $this-&gt;view-&gt;renderText($vehicle);\n        }\n    }\n}\n\n// Exemple d'\u00fas\n\n$view = new VehicleView();\n$controller = new VehicleController($view);\n\n$cotxe = new Cotxe(\"Toyota\", \"Corolla\");\n$moto = new Motocicleta(600);\n\n// Mostrar en HTML\n$controller-&gt;mostrarVehicle($cotxe, 'html');\n$controller-&gt;mostrarVehicle($moto, 'html');\n\n// Mostrar en Text\n$controller-&gt;mostrarVehicle($cotxe, 'text');\n$controller-&gt;mostrarVehicle($moto, 'text');\n</code></pre>"},{"location":"1val.html#exercici-5-classes-abstractes-i-interficies","title":"Exercici 5. Classes Abstractes i Interf\u00edcies","text":"<ol> <li>Crea una classe abstracta <code>Figura</code> amb un m\u00e8tode abstracte <code>calculaArea</code>. Despr\u00e9s, crea classes <code>Cercle</code> i <code>Rectangle</code> que estiguen basades en <code>Figura</code> i implementen el m\u00e8tode <code>calculaArea</code>.</li> <li>Defineix una interf\u00edcie <code>OperacionsB\u00e0siques</code> amb els m\u00e8todes <code>suma</code> i <code>resta</code>. Implementa aquesta interf\u00edcie en una classe <code>CalculadoraSimple</code>.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nabstract class Figura {\n    abstract public function calculaArea();\n}\n\nclass Cercle extends Figura {\n    private $radi;\n\n    public function __construct($radi) {\n        $this-&gt;radi = $radi;\n    }\n\n    public function calculaArea() {\n        return pi() * $this-&gt;radi * $this-&gt;radi;\n    }\n}\n\nclass Rectangle extends Figura {\n    private $ample;\n    private $llarg;\n\n    public function __construct($ample, $llarg) {\n        $this-&gt;ample = $ample;\n        $this-&gt;llarg = $llarg;\n    }\n\n    public function calculaArea() {\n        return $this-&gt;ample * $this-&gt;llarg;\n    }\n}\n\n$cercle = new Cercle(5);\n$rectangle = new Rectangle(4, 6);\n\necho \"\u00c0rea del cercle: \" . $cercle-&gt;calculaArea() . \"\\n\"; // Output: \u00c0rea del cercle: 78.5398\necho \"\u00c0rea del rectangle: \" . $rectangle-&gt;calculaArea() . \"\\n\"; // Output: \u00c0rea del rectangle: 24\n</code></pre> <pre><code>&lt;?php\ninterface OperacionsB\u00e0siques {\n    public function suma($a, $b);\n    public function resta($a, $b);\n}\n\nclass CalculadoraSimple implements OperacionsB\u00e0siques {\n    public function suma($a, $b) {\n        return $a + $b;\n    }\n\n    public function resta($a, $b) {\n        return $a - $b;\n    }\n}\n\n$calculadora = new CalculadoraSimple();\necho \"Suma: \" . $calculadora-&gt;suma(5, 3) . \"\\n\"; // Output: Suma: 8\necho \"Resta: \" . $calculadora-&gt;resta(5, 3) . \"\\n\"; // Output: Resta: 2\n</code></pre>"},{"location":"1val.html#exercici-6-utilitzar-traits","title":"Exercici 6.  Utilitzar Traits","text":"<ol> <li>Crea un trait <code>Informacio</code> amb un m\u00e8tode <code>mostraInformacio</code>. Inclou aquest trait en les classes <code>Cotxe</code> i <code>Motocicleta</code>, i utilitza'l per mostrar informaci\u00f3 addicional.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\ntrait Informacio {\n    public function mostraInformacio() {\n        return \"Aquest \u00e9s un objecte de tipus \" . get_class($this);\n    }\n}\n\nclass Cotxe {\n    use Informacio;\n}\n\nclass Motocicleta {\n    use Informacio;\n}\n\n$cotxe = new Cotxe();\n$moto = new Motocicleta();\n\necho $cotxe-&gt;mostraInformacio() . \"\\n\"; // Output: Aquest \u00e9s un objecte de tipus Cotxe\necho $moto-&gt;mostraInformacio() . \"\\n\"; // Output: Aquest \u00e9s un objecte de tipus Motocicleta\n</code></pre>"},{"location":"1val.html#exercici-7-gestionar-excepcions","title":"Exercici 7.  Gestionar Excepcions","text":"<ol> <li>Escriu una funci\u00f3 <code>divideix</code> que prenga dos nombres com a par\u00e0metres i retorne el resultat de la divisi\u00f3. Si el segon nombre \u00e9s zero, llen\u00e7a una excepci\u00f3 amb un missatge adequat. Captura aquesta excepci\u00f3 quan crides a la funci\u00f3 i mostra un missatge d'error.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nfunction divideix($a, $b) {\n    if ($b == 0) {\n        throw new Exception(\"No es pot dividir per zero.\");\n    }\n    return $a / $b;\n}\n\ntry {\n    echo divideix(10, 2) . \"\\n\"; // Output: 5\n    echo divideix(10, 0) . \"\\n\"; // Aquesta l\u00ednia llan\u00e7ar\u00e0 una excepci\u00f3\n} catch (Exception $e) {\n    echo \"Error: \" . $e-&gt;getMessage() . \"\\n\"; // Output: Error: No es pot dividir per zero.\n}\n</code></pre>"},{"location":"1val.html#exercici-8-proves-amb-phpunit","title":"Exercici 8. Proves amb PHPUnit","text":"<ol> <li>Crea una classe <code>Calculadora</code> amb els m\u00e8todes <code>suma</code> i <code>resta</code>. Escriu una prova unit\u00e0ria amb PHPUnit per verificar que aquests m\u00e8todes funcionen correctament.</li> <li>Afegeix un m\u00e8tode <code>divideix</code> a la classe <code>Calculadora</code> que llance una excepci\u00f3 quan es divideix per zero. Escriu una prova unit\u00e0ria que assegure que aquesta excepci\u00f3 es llan\u00e7a correctament.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Arxiu: tests/CalculadoraTest.php\nuse PHPUnit\\Framework\\TestCase;\n\nclass Calculadora {\n    public function suma($a, $b) {\n        return $a + $b;\n    }\n\n    public function resta($a, $b) {\n        return $a - $b;\n    }\n}\n\nclass CalculadoraTest extends TestCase {\n    public function testSuma() {\n        $calculadora = new Calculadora();\n        $resultat = $calculadora-&gt;suma(2, 3);\n        $this-&gt;assertEquals(5, $resultat);\n    }\n\n    public function testResta() {\n        $calculadora = new Calculadora();\n        $resultat = $calculadora-&gt;resta(5, 3);\n        $this-&gt;assertEquals(2, $resultat);\n    }\n}\n</code></pre> <pre><code>// Arxiu: tests/CalculadoraTest.php\nuse PHPUnit\\Framework\\TestCase;\n\nclass Calculadora {\n    public function divideix($a, $b) {\n        if ($b == 0) {\n            throw new InvalidArgumentException(\"No es pot dividir per zero.\");\n        }\n        return $a / $b;\n    }\n}\n\nclass CalculadoraTest extends TestCase {\n    public function testDivideix() {\n        $this-&gt;expectException(InvalidArgumentException::class);\n\n        $calculadora = new Calculadora();\n        $calculadora-&gt;divideix(5, 0);\n    }\n}\n</code></pre>"},{"location":"1val.html#exercici-9-espais-de-noms-namespaces","title":"Exercici 9. Espais de Noms (Namespaces)","text":"<ol> <li>Crea un espai de noms <code>App\\Models</code> i defineix una classe <code>Usuari</code> dins d'aquest espai de noms. Afegeix un m\u00e8tode <code>getNomComplet</code> que retorne el nom complet de l'usuari.</li> <li>En un fitxer separat, importa la classe <code>Usuari</code> de l'espai de noms <code>App\\Models</code> i crea una inst\u00e0ncia d'aquesta classe. Utilitza el m\u00e8tode <code>getNomComplet</code> per mostrar el nom complet d'un usuari.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n// Arxiu: src/Models/Usuari.php\nnamespace App\\Models;\n\nclass Usuari {\n    private $nom;\n    private $cognom;\n\n    public function __construct($nom, $cognom) {\n        $this-&gt;nom = $nom;\n        $this-&gt;cognom = $cognom;\n    }\n\n    public function getNomComplet() {\n        return $this-&gt;nom . \" \" . $this-&gt;cognom;\n    }\n}\n</code></pre> <pre><code>// Arxiu: index.php\nrequire 'vendor/autoload.php';\n\nuse App\\Models\\Usuari;\n\n$usuari = new Usuari(\"Joan\", \"Garcia\");\necho $usuari-&gt;getNomComplet(); // Output: Joan Garcia\n</code></pre>"},{"location":"1val.html#exercici-10-autoloading-i-composer","title":"Exercici 10. Autoloading i Composer","text":"<ol> <li>Configura un projecte PHP amb Composer que utilitze l'autoloading PSR-4. Crea l'estructura de directoris <code>src/Models</code> i col\u00b7loca una classe <code>Producte</code> dins de <code>src/Models</code>. Verifica que l'autoloading funcione correctament instanciant la classe <code>Producte</code> en un fitxer separat.</li> <li>Afegeix la llibreria <code>monolog/monolog</code> al projecte utilitzant Composer. Crea una inst\u00e0ncia de <code>Logger</code> i afegeix una entrada al registre de logs.</li> </ol> Soluci\u00f3  1. Crea l'estructura de directoris src/Models i col\u00b7loca el seg\u00fcent codi a src/Models/Producte.php:  <pre><code>&lt;?php\nnamespace App\\Models;\n\nclass Producte {\n    private $nom;\n\n    public function __construct($nom) {\n        $this-&gt;nom = $nom;\n    }\n\n    public function getNom() {\n        return $this-&gt;nom;\n    }\n}\n</code></pre>  2. Configura l'autoloading en composer.json:  <pre><code>{\n    \"autoload\": {\n        \"psr-4\": {\n            \"App\\\\\": \"src/\"\n        }\n    }\n}\n</code></pre>  3. Executa composer dump-autoload per generar els fitxers d'autoload. 4. Utilitza la classe producte:  <pre><code>&lt;?php\n// Arxiu: index.php\nrequire 'vendor/autoload.php';\n\nuse App\\Models\\Producte;\n\n$producte = new Producte(\"Ordinador\");\necho $producte-&gt;getNom(); // Output: Ordinador\n</code></pre> 5. Afegeix Monolog a composer.json:  <pre><code>composer require monolog/monolog\n</code></pre> 6. Utilitza Monolog per crear un logger:  <pre><code>&lt;?php\nrequire 'vendor/autoload.php';\n\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\n\n$log = new Logger('nom_aplicacio');\n$log-&gt;pushHandler(new StreamHandler('app.log', Logger::WARNING));\n\n// Afegeix una entrada al log\n$log-&gt;warning('Aquesta \u00e9s una entrada d'advert\u00e8ncia');\n$log-&gt;error('Aquesta \u00e9s una entrada d'error');\n</code></pre>"},{"location":"1val.html#exercici-11-logger","title":"Exercici 11. Logger","text":"<ol> <li>Utilitzant la llibreria <code>Monolog</code>, crea un logger que escriga missatges a un fitxer <code>app.log</code>. Configura el logger per registrar missatges d'informaci\u00f3 i d'error.</li> <li>Configura un logger que escriga missatges de registre tant a un fitxer com a la consola. Prova el logger registrant missatges d'error.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nrequire 'vendor/autoload.php';\n\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\n\n$log = new Logger('nom_aplicacio');\n$log-&gt;pushHandler(new StreamHandler('app.log', Logger::INFO));\n$log-&gt;pushHandler(new StreamHandler('app.log', Logger::ERROR));\n\n// Registra missatges d'informaci\u00f3 i d'error\n$log-&gt;info('Aquesta \u00e9s una entrada d\u2019informaci\u00f3');\n$log-&gt;error('Aquesta \u00e9s una entrada d\u2019error');\n</code></pre> <pre><code>&lt;?php\nrequire 'vendor/autoload.php';\n\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\nuse Monolog\\Handler\\ErrorLogHandler;\n\n$log = new Logger('nom_aplicacio');\n$log-&gt;pushHandler(new StreamHandler('app.log', Logger::WARNING));\n$log-&gt;pushHandler(new ErrorLogHandler());\n\n// Registra missatges d\u2019error al fitxer i a la consola\n$log-&gt;error('Aquesta \u00e9s una entrada d\u2019error');\n</code></pre>"},{"location":"1val.html#exercici-12-documentacio","title":"Exercici 12. Documentaci\u00f3","text":"<ol> <li>Documenta la classe <code>Producte</code> creada en l'exercici anterior utilitzant comentaris PHPDoc. Assegura't d'incloure la descripci\u00f3 de la classe, les propietats, i els m\u00e8todes.</li> <li>Utilitza una eina com <code>phpDocumentor</code> per generar la documentaci\u00f3 autom\u00e0tica del codi PHP del projecte, incloent-hi la classe <code>Producte</code>.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nnamespace App\\Models;\n\n/**\n * Classe Producte\n *\n * Representa un producte amb un nom.\n */\nclass Producte {\n    /**\n     * @var string El nom del producte\n     */\n    private $nom;\n\n    /**\n     * Constructor de la classe Producte\n     *\n     * @param string $nom El nom del producte\n     */\n    public function __construct($nom) {\n        $this-&gt;nom = $nom;\n    }\n\n    /**\n     * Obt\u00e9 el nom del producte\n     *\n     * @return string El nom del producte\n     */\n    public function getNom() {\n        return $this-&gt;nom;\n    }\n}\n</code></pre>  1. Instal\u00b7la phpDocumentor globalment o com a depend\u00e8ncia de desenvolupament:  <pre><code>composer require --dev phpdocumentor/phpdocumentor\n</code></pre>  2. Genera la documentaci\u00f3:  <pre><code>vendor/bin/phpdoc -d src -t docs\n</code></pre>  Aquest comandament generar\u00e0 la documentaci\u00f3 a la carpeta docs."},{"location":"1val.html#exercici-13-generacio-de-pdfs-amb-dompdf","title":"Exercici 13. Generaci\u00f3 de PDFs amb DomPDF","text":"<ol> <li>Instal\u00b7la la llibreria <code>dompdf/dompdf</code> amb Composer. Crea un script PHP que genere un PDF senzill amb un t\u00edtol i un par\u00e0graf de text.</li> <li>Crea un PDF utilitzant DomPDF que incloga una taula amb dades i una imatge. Assegura't que el PDF es renderitze correctament i que la imatge s'incloga en el document.</li> </ol> Soluci\u00f3  1. Instal\u00b7la DomPDF amb Composer:  <pre><code>composer require dompdf/dompdf\n</code></pre>  2. Crea un script PHP que generi un PDF senzill:  <pre><code>&lt;?php\nrequire 'vendor/autoload.php';\n\nuse Dompdf\\Dompdf;\n\n$dompdf = new Dompdf();\n$html = '&lt;h1&gt;Informe de Vendes&lt;/h1&gt;&lt;p&gt;Aquest \u00e9s un informe de les vendes.&lt;/p&gt;';\n\n$dompdf-&gt;loadHtml($html);\n$dompdf-&gt;setPaper('A4', 'landscape');\n$dompdf-&gt;render();\n$dompdf-&gt;stream('informe.pdf');\n</code></pre>  3. Crea un PDF amb una taula i una imatge:  <pre><code>&lt;?php\nrequire 'vendor/autoload.php';\n\nuse Dompdf\\Dompdf;\n\n$dompdf = new Dompdf();\n$html = '\n    &lt;h1&gt;Informe de Productes&lt;/h1&gt;\n    &lt;table border=\"1\" cellpadding=\"10\"&gt;\n        &lt;thead&gt;\n            &lt;tr&gt;\n                &lt;th&gt;Producte&lt;/th&gt;\n                &lt;th&gt;Preu&lt;/th&gt;\n            &lt;/tr&gt;\n        &lt;/thead&gt;\n        &lt;tbody&gt;\n            &lt;tr&gt;\n                &lt;td&gt;Ordinador&lt;/td&gt;\n                &lt;td&gt;500\u20ac&lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td&gt;Teclat&lt;/td&gt;\n                &lt;td&gt;20\u20ac&lt;/td&gt;\n            &lt;/tr&gt;\n        &lt;/tbody&gt;\n    &lt;/table&gt;\n    &lt;img src=\"https://example.com/imatge.png\" alt=\"Imatge de Producte\" /&gt;\n';\n\n$dompdf-&gt;loadHtml($html);\n$dompdf-&gt;setPaper('A4', 'portrait');\n$dompdf-&gt;render();\n$dompdf-&gt;stream(\"informe_productes.pdf\");\n</code></pre>"},{"location":"1val.html#exercicis-proposats_2","title":"Exercicis proposats","text":""},{"location":"1val.html#exercici-1-creacio-de-la-classe-basica-i-gestio-de-propietats","title":"Exercici 1. Creaci\u00f3 de la Classe B\u00e0sica i Gesti\u00f3 de Propietats","text":"<ul> <li> <p>Crea una classe <code>Persona</code> amb les propietats privades <code>nom</code>, <code>cognoms</code>, i <code>edat</code>. Encapsula aquestes propietats mitjan\u00e7ant getters i setters. Afig els seg\u00fcents m\u00e8todes:</p> <ul> <li><code>getNomComplet(): string</code> \u2013 Retorna el nom complet de la persona.</li> <li><code>estaJubilat(): bool</code> \u2013 Retorna <code>true</code> si l'edat \u00e9s major o igual a 65, <code>false</code> en cas contrari.</li> </ul> </li> <li> <p>Modifica la classe <code>Persona</code> afegint un constructor que assigna nom i cognoms. Si es proporciona un tercer par\u00e0metre, assigna l'edat; en cas contrari, assigna una edat per defecte de 25 anys.</p> </li> <li> <p>Modifica la classe <code>Persona</code> per utilitzar una constant <code>LIMITE_EDAT</code> amb el valor de 66 anys i utilitza-la en el m\u00e8tode <code>estaJubilat</code>.</p> </li> </ul>"},{"location":"1val.html#exercici-2-herencia-i-polimorfisme","title":"Exercici 2. Her\u00e8ncia i Polimorfisme","text":"<ul> <li> <p>Crea una classe <code>Empleado</code> que herete de <code>Persona</code>. Afig les seg\u00fcents propietats i m\u00e8todes:</p> <ul> <li><code>private float $sou</code></li> <li><code>private array $telefons</code></li> <li><code>anyadirTelefono(int $telefon): void</code> \u2013 Afig un n\u00famero de tel\u00e8fon a l'array.</li> <li><code>listarTelefonos(): string</code> \u2013 Retorna els n\u00fameros de tel\u00e8fon separats per comes.</li> <li><code>vaciarTelefonos(): void</code> \u2013 Buida l'array de tel\u00e8fons.</li> <li><code>debePagarImpuestos(): bool</code> \u2013 Retorna <code>true</code> si el sou \u00e9s superior a 3333\u20ac, <code>false</code> en cas contrari.</li> </ul> </li> <li> <p>Afig un m\u00e8tode est\u00e0tic <code>toHtml(Empleado $emp): string</code> que genere un codi HTML que mostre el nom complet de l'empleat dins d'un par\u00e0graf i els seus tel\u00e8fons dins d'una llista ordenada.</p> </li> <li>Afig un m\u00e8tode est\u00e0tic <code>toHtml(Persona $p)</code> a la classe Persona que mostre el nom complet de la persona dins d'un par\u00e0graf. Modifica el m\u00e8tode <code>toHtml</code> de <code>Empleado</code> per rebre una <code>Persona</code> com a par\u00e0metre i comprovar si es tracta d'un <code>Empleado</code> amb <code>instanceof</code>.</li> <li>Transforma <code>Persona</code> en una classe abstracta. Redefineix el m\u00e8tode est\u00e0tic <code>toHtml(Persona $p)</code> en totes les seues subclasses. </li> </ul>"},{"location":"1val.html#exercici-3-integracio-despais-de-noms-autoloading-i-composer","title":"Exercici 3. Integraci\u00f3 d'Espais de Noms, Autoloading, i Composer","text":"<ul> <li> <p>Crea una classe <code>Empresa</code> que incloga una propietat amb un array de <code>Empleados</code> . Implementa:</p> <ul> <li><code>public function addWorker(Empleado $t)</code></li> <li><code>public function listWorkersHtml(): string</code> \u2013 Genera la llista de treballadors en format HTML.</li> <li><code>public function getCosteNominas(): float</code> \u2013 Calcula el cost total de les n\u00f2mines.</li> </ul> </li> <li> <p>Configura el projecte PHP amb Composer que utilitze l'autoloading PSR-4.  </p> </li> </ul>"},{"location":"1val.html#exercici-4-logger-i-documentacio","title":"Exercici 4. Logger i Documentaci\u00f3","text":"<ul> <li> <p>Utilitza la llibreria <code>Monolog</code> per configurar un logger que escriga missatges a un fitxer <code>app.log</code>. Afig funcionalitat perqu\u00e8 el logger registre missatges d'informaci\u00f3 i d'error en diferents arxius segons la gravetat.</p> </li> <li> <p>Configura un logger que escriga missatges de registre tant a un fitxer com a la consola. Prova el logger registrant missatges d'error i advert\u00e8ncia.</p> </li> <li> <p>Documenta la classe <code>Empleado</code> creada en exercicis anteriors utilitzant comentaris PHPDoc. Inclou la descripci\u00f3 de la classe, les propietats, i els m\u00e8todes. Utilitza una eina com <code>phpDocumentor</code> per generar documentaci\u00f3 autom\u00e0tica.</p> </li> <li> <p>Escriu proves unit\u00e0ries per als m\u00e8todes de les classes <code>Persona</code>, <code>Empleado</code>, i <code>Empresa</code> utilitzant PHPUnit. Prova els m\u00e8todes <code>getNomComplet</code>, <code>estaJubilat</code>, <code>addWorker</code>, i <code>getCosteNominas</code>. Assegura't que les proves cobreixen diferents escenaris, incloent errors potencials.</p> </li> <li> <p>Escriu una prova unit\u00e0ria que comprove que el logger est\u00e0 registrant correctament els missatges d'error a l'arxiu corresponent. Utilitza un mock per assegurar-te que el logger funciona sense necessitat d'escriure en un fitxer real durant la prova.</p> </li> </ul>"},{"location":"1val.html#exercici-5-generacio-de-pdfs-amb-dompdf","title":"Exercici 5. Generaci\u00f3 de PDFs amb DomPDF","text":"<ul> <li> <p>Instal\u00b7la la llibreria <code>dompdf/dompdf</code> amb Composer. Crea un script PHP que genere un PDF senzill amb un t\u00edtol i un par\u00e0graf de text.</p> </li> <li> <p>Crea un PDF utilitzant DomPDF que incloga una taula amb dades i una imatge. Assegura't que el PDF es renderitze correctament i que la imatge s'incloga en el document.</p> </li> <li> <p>Utilitzant la classe <code>Empresa</code> i <code>Empleado</code>, genera un informe en PDF amb la llista de treballadors i el seu sou. Utilitza DomPDF per generar aquest informe.</p> </li> </ul>"},{"location":"1val.html#exercici-6-serialitzacio-i-json","title":"Exercici 6. Serialitzaci\u00f3 i JSON","text":"<ul> <li> <p>Crea una interf\u00edcie <code>JSerializable</code> que incloga els m\u00e8todes:</p> <ul> <li><code>toJSON(): string</code> \u2013 Converteix l'objecte a un JSON utilitzant <code>json_encode()</code>.</li> <li><code>toSerialize(): string</code> \u2013 Serialitza l'objecte utilitzant <code>serialize()</code>.</li> </ul> </li> <li> <p>Modifica les classes <code>Persona</code>, <code>Empleado</code>, i <code>Empresa</code> per implementar aquesta interf\u00edcie. Assegura't que les propietats privades es puguen serialitzar correctament.</p> </li> <li> <p>Escriu m\u00e8todes per deserialitzar un objecte a partir d'una cadena JSON o d'una cadena serialitzada. Prova aquests m\u00e8todes amb PHPUnit per assegurar-te que la deserialitzaci\u00f3 funciona correctament.</p> </li> </ul>"},{"location":"1val.html#exercici-7-separacio-del-model-de-negoci-i-la-presentacio-mvc","title":"Exercici 7. Separaci\u00f3 del Model de Negoci i la Presentaci\u00f3 (MVC)","text":"<p>Fins ara, has creat diverses classes que gestionen la l\u00f2gica del joc i les dades (models), com <code>Persona</code>, <code>Empleado</code>, i <code>Empresa</code>, i has generat sortides HTML i PDFs amb DomPDF. Ara \u00e9s el moment de refactoritzar la teua aplicaci\u00f3 per assegurar una separaci\u00f3 clara entre la l\u00f2gica del negoci i la presentaci\u00f3, seguint el patr\u00f3 Model-Vista-Controlador (MVC).</p> <ul> <li> <p>Crear el Model:</p> <ul> <li>Refactoritza les classes <code>Persona</code>, <code>Empleado</code>, i <code>Empresa</code> per assegurar que nom\u00e9s gestionen la l\u00f2gica de negoci (per exemple, c\u00e0lcul de n\u00f2mines, gesti\u00f3 d'empleats, etc.).</li> <li>Assegura't que aquestes classes no contenen codi relacionat amb la presentaci\u00f3 (HTML o PDF).</li> </ul> </li> <li> <p>Crear les Vistes:</p> <ul> <li>Crea vistes separades per presentar la informaci\u00f3 als usuaris:<ul> <li>Una vista HTML per mostrar la informaci\u00f3 de <code>Empleado</code> i <code>Empresa</code> com a llistats.</li> <li>Una vista PDF per generar informes amb DomPDF, basant-se en les dades proporcionades pel model.</li> </ul> </li> </ul> </li> <li> <p>Crear el Controlador:</p> <ul> <li>Implementa un controlador que reba les sol\u00b7licituds dels usuaris, interactue amb el model (<code>Persona</code>, <code>Empleado</code>, <code>Empresa</code>), i tria la vista adequada per mostrar els resultats (HTML o PDF).</li> <li>El controlador ha d'encapsular tota la l\u00f2gica necess\u00e0ria per a gestionar la interacci\u00f3 entre la vista i el model, assegurant que el model no estiga lligat a la capa de presentaci\u00f3.</li> </ul> </li> </ul>"},{"location":"1val.html#exercici-8-creacio-de-proves-unitaries-per-al-patro-mvc","title":"Exercici 8. Creaci\u00f3 de Proves Unit\u00e0ries per al Patr\u00f3 MVC","text":"<p>Despr\u00e9s de refactoritzar l'aplicaci\u00f3 per separar la l\u00f2gica del negoci de la presentaci\u00f3 seguint el patr\u00f3 Model-Vista-Controlador (MVC), \u00e9s fonamental assegurar-se que tots els components funcionen correctament i que la interacci\u00f3 entre ells es realitza tal com s'espera. Per aix\u00f2, has de crear una s\u00e8rie de proves unit\u00e0ries utilitzant PHPUnit per verificar el funcionament del model, les vistes i els controladors.</p> <ul> <li> <p>Proves del Model:</p> <ul> <li>Escriu proves unit\u00e0ries per verificar el funcionament dels m\u00e8todes de les classes <code>Persona</code>, <code>Empleado</code>, i <code>Empresa</code>.</li> <li>Assegura't que els m\u00e8todes funcionen correctament, com ara:<ul> <li><code>getNomComplet()</code></li> <li><code>debePagarImpuestos()</code></li> <li><code>addWorker()</code> i <code>getCosteNominas()</code></li> </ul> </li> <li>Prova que els c\u00e0lculs es realitzen correctament i que les dades es gestionen segons el que s'espera.</li> </ul> </li> <li> <p>Proves del Controlador:</p> <ul> <li>Escriu proves unit\u00e0ries per assegurar-te que els controladors interactuen correctament amb els models i que seleccionen la vista adequada per a cada situaci\u00f3.</li> <li>Prova que les dades es passen correctament del model a la vista a trav\u00e9s del controlador.</li> <li>Implementa proves per verificar que el controlador respon correctament a diferents sol\u00b7licituds de l'usuari, per exemple:<ul> <li>Mostrar una llista d'empleats en HTML.</li> <li>Generar un informe en PDF utilitzant DomPDF.</li> </ul> </li> </ul> </li> <li> <p>Proves de les Vistes:</p> <ul> <li>Escriu proves unit\u00e0ries per comprovar que les vistes reben i mostren correctament la informaci\u00f3 proporcionada pel controlador.</li> <li>Prova que la generaci\u00f3 de contingut HTML o PDF es realitza correctament a partir de les dades proporcionades pel model.</li> </ul> </li> </ul>"},{"location":"1val.html#14-enunciat-dels-projectes","title":"14. Enunciat dels projectes","text":""},{"location":"1val.html#projecte-4-en-ratlla_2","title":"Projecte \"4 en Ratlla\"","text":""},{"location":"1val.html#1-crear-lentorn-del-4-en-ratlla","title":"1. Crear l'entorn del 4 en ratlla","text":"<ul> <li>Dins de php crear les carpetes App,Views i Helpers.</li> <li>Dins de la carpeta App crea les carpetes Models, Controllers , Services i Exceptions. </li> <li>Dins de la carpeta src tindrem el index.php i el css.</li> </ul>"},{"location":"1val.html#2-integracio-de-composer-i-autoloading","title":"2. Integraci\u00f3 de Composer i Autoloading","text":"<ul> <li>Configuraci\u00f3 de Composer: Defineix un <code>composer.json</code> per al projecte, configurant l'autoloading PSR-4 per carregar autom\u00e0ticament les classes de <code>Joc4enRatlla</code>.</li> <li>Estructura del Projecte:<ul> <li>Organitza el codi en directoris com <code>App/Models</code> per a les classes del joc i <code>App/Controllers</code> per a la gesti\u00f3 del flux del joc.</li> <li>Configura Composer per gestionar les depend\u00e8ncies del projecte.</li> </ul> </li> </ul>"},{"location":"1val.html#3-refactoritzacio-amb-programacio-orientada-a-objectes-poo-i-amb-mvc","title":"3. Refactoritzaci\u00f3 amb Programaci\u00f3 Orientada a Objectes (POO) i amb MVC","text":""},{"location":"1val.html#models","title":"Models","text":"<ul> <li> <p>Dins de la carpeta Models:</p> </li> <li> <p>Classe <code>Board</code>: Crea una classe <code>Board</code> per representar la graella del joc. Aquesta classe ha de gestionar la configuraci\u00f3 inicial de la graella, els moviments dels jugadors, i la comprovaci\u00f3 de si hi ha un guanyador.</p> </li> </ul> <pre><code>namespace Joc4enRatlla\\Models;\n\nclass Board\n{\n    public const FILES = 6;\n    public const COLUMNS = 7;\n    public const DIRECTIONS = [\n        [0, 1],   // Horizontal derecha\n        [1, 0],   // Vertical abajo\n        [1, 1],   // Diagonal abajo-derecha\n        [1, -1]   // Diagonal abajo-izquierda\n    ];\n\n    private array $slots; // graella\n\n    public function __construct(){\n      // TODO: Ha d'inicializar $slots\n    }\n\n    // TODO: Getters i Setters \n\n    private static function initializeBoard(): array{\n        // TODO: Inicialitza la graella amb valors buits\n    }\n    public function setMovementOnBoard(int $column, int $player): array {\n        // TODO: Realitza un moviment en la graella\n    }\n    public function checkWin(array $coord): bool {\n        // TODO: Comprova si hi ha un guanyador\n    }\n    public function isValidMove(int $column): bool {\n        // TODO: Comprova si el moviment \u00e9s v\u00e0lid\n    }\n\n    public function isFull(): bool {\n        // TODO: El tauler est\u00e0 ple?\n    }\n\n\n\n}\n</code></pre> <ul> <li>Classe  <code>Jugador</code>: Crea una classe <code>Player</code> per representar els jugadors del joc, amb propietats com el <code>name</code>, el <code>color</code> de les fitxes, forma de jugar <code>isAutomatic</code>.</li> </ul> <pre><code>namespace Joc4enRatlla\\Models;\n\n\nclass Player {\n    private $name;      // Nom del jugador\n    private $color;     // Color de les fitxes\n    private $isAutomatic; // Forma de jugar (autom\u00e0tica/manual)\n\n    public function __construct( $name, $color, $isAutomatic = false) {\n        // TODO: Inicialitzar variables \n    }\n\n    // TODO: Getters i Setters \n\n}\n</code></pre> <ul> <li>Classe <code>Game</code>: Refactoritza la l\u00f2gica del joc en una classe <code>Game</code> que gestione la graella, el torn del jugador, i la l\u00f2gica per determinar el guanyador, la puntuaci\u00f3.</li> </ul> <p><pre><code>namespace Joc4enRatlla\\Models;\n\nuse Joc4enRatlla\\Models\\Board;\nuse Joc4enRatlla\\Models\\Player;\n\nclass Game\n{\n    private Board $board;\n    private int $nextPlayer;\n    private array $players;\n    private ?Player $winner;\n    private array $scores = [1 =&gt; 0, 2 =&gt; 0];\n\n    public function __construct( Player $jugador1, Player $jugador2){\n        // TODO: S'han d'inicialitzar les variables tenint en compte que el array de jugador ha de comen\u00e7ar amb l'index 1 \n    }\n\n    // TODO: getters i setters\n\n    public function reset(): void{\n        // TODO: Reinicia el joc\n    }\n    public function play($columna){\n        // TODO: Realitza un moviment\n    }\n    /**\n    * Realitza moviment autom\u00e0tic\n    * @return void\n    */                                          \n    public function playAutomatic(){\n        $opponent = $this-&gt;nextPlayer === 1 ? 2 : 1;\n\n        for ($col = 1; $col &lt;= Board::COLUMNS; $col++) {\n            if ($this-&gt;board-&gt;isValidMove($col)) {\n                $tempBoard = clone($this-&gt;board);\n                $coord = $tempBoard-&gt;setMovementOnBoard($col, $this-&gt;nextPlayer);\n\n                if ($tempBoard-&gt;checkWin($coord)) {\n                    $this-&gt;play($col);\n                    return;\n                }\n            }\n        }\n\n        for ($col = 1; $col &lt;= Board::COLUMNS; $col++) {\n            if ($this-&gt;board-&gt;isValidMove($col)) {\n                $tempBoard = clone($this-&gt;board);\n                $coord = $tempBoard-&gt;setMovementOnBoard($col, $opponent);\n                if ($tempBoard-&gt;checkWin($coord )) {\n                    $this-&gt;play($col);\n                    return;\n                }\n            }\n        }\n\n        $possibles = array();\n        for ($col = 1; $col &lt;= Board::COLUMNS; $col++) {\n            if ($this-&gt;board-&gt;isValidMove($col)) {\n                $possibles[] = $col;\n            }\n        }\n        if (count($possibles)&gt;2) {\n            $random = rand(-1,1);\n        }\n        $middle = (int) (count($possibles) / 2)+$random;\n        $inthemiddle = $possibles[$middle];\n        $this-&gt;play($inthemiddle);\n    }\n    public function save(){\n        // TODO: Guarda l'estat del joc a les sessions\n    }\n    public static function restore(){\n        // TODO: Restaura l'estat del joc de les sessions\n    }\n\n}\n</code></pre>   - Documentaci\u00f3:     - Totes les classes i m\u00e8todes han d'estar documentats amb comentaris PHPDoc.</p>"},{"location":"1val.html#controladors","title":"Controladors","text":"<ul> <li> <p>Dins de la carpeta Controllers:</p> <ul> <li>Classe <code>JocController</code>: Crea un controlador <code>JocController</code> que gestione el  joc. Aquest controlador ha de permetre als jugadors realitzar moviments, comprovar l'estat del joc, i gestionar les vistes.</li> </ul> </li> </ul> <p>```php   namespace Joc4enRatlla\\Controllers;</p> <pre><code>use Joc4enRatlla\\Models\\Player;\nuse Joc4enRatlla\\Models\\Game;\n\n\nclass GameController\n{\nprivate Game $game;\n\n// Request \u00e9s l'array $_POST\n\npublic function __construct($request=null)\n{\n    // TODO: Inicialitzaci\u00f3 del joc.Ha d'inicializar el Game si \u00e9s la primera vegada o agafar les dades de la sessi\u00f3 si ja ha estat inicialitzada\n\n    $this-&gt;play($request);\n\n}\n\npublic function play(Array $request)  \n{\n    // TODO : Gesti\u00f3 del joc. Ac\u00ed es on s'ha de vore si hi ha guanyador, si el que juga es autom\u00e0tic  o manual, s'ha polsat reiniciar...\n\n\n\n    $board = $this-&gt;game-&gt;getBoard();\n    $players = $this-&gt;game-&gt;getPlayers();\n    $winner = $this-&gt;game-&gt;getWinner();\n    $scores = $this-&gt;game-&gt;getScores();\n\n    loadView('index',compact('board','players','winner','scores'));\n }\n</code></pre> <p>} ``` </p>"},{"location":"1val.html#serveis-i-funcions","title":"Serveis i funcions","text":"<ul> <li>Dins de la carpeta Services: <ul> <li>Funci\u00f3 <code>loadView</code>: Crea una funci\u00f3 <code>loadView</code> que carregue les vistes del joc. Aquesta funci\u00f3 ha de rebre el nom de la vista i les dades a passar a la vista, i ha de mostrar la vista amb les dades proporcionades.  <code>php &lt;?php  namespace Joc4enRatlla\\Services;  class Service { public static function loadView($view, $data = []) {     $viewPath = str_replace('.', '/', $view);     extract($data);      include  $_SERVER['DOCUMENT_ROOT'] . \"/../Views/$viewPath.view.php\";  } }</code></li> </ul> </li> </ul> <p>i la funci\u00f3 <code>loadView</code> en un fitxer de funcions</p> <pre><code>  function loadView($view, $data = [])\n    {\n       Joc4enRatlla\\Services\\Service::loadView($view, $data);\n    }\n\n    function dd(...$data )\n    {\n        echo \"&lt;pre&gt;\";\n        foreach ($data as $d) {\n            var_dump($d);\n        }\n\n        echo \"&lt;/pre&gt;\";\n        die();\n    }\n</code></pre>"},{"location":"1val.html#vistes","title":"Vistes","text":"<ul> <li> <p>Dins de la carpeta Views:</p> <ul> <li>Vista <code>index.php</code>: Crea una vista <code>index.php</code> que mostre la graella del joc, el torn actual del jugador, i els resultats finals (guanyador o empat). Aquesta vista ha de permetre als jugadors realitzar moviments en la graella.</li> </ul> </li> </ul> <pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;link rel=\"stylesheet\" href=\"4ratlla.css?v=&lt;?php echo time(); ?&gt;\"&gt;\n    &lt;title&gt;4 en ratlla&lt;/title&gt;\n    &lt;style&gt;\n        .player1 {\n            background-color: &lt;?= $players[1]-&gt;getColor() ?&gt; ; /* Color   per un dels jugadors */\n        }\n\n        .player2 {\n            background-color:  &lt;?= $players[2]-&gt;getColor() ?&gt;; /* Color   per l'altre jugador */\n        }\n\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;?php include_once $_SERVER['DOCUMENT_ROOT'].'/../Views/partials/error.view.php'  ?&gt;\n &lt;form action=\"&lt;?php echo htmlspecialchars($_SERVER[\"PHP_SELF\"]); ?&gt;\" method=\"post\"&gt;\n    &lt;?php include_once $_SERVER['DOCUMENT_ROOT'].'/../Views/partials/board.view.php'  ?&gt;\n     &lt;input type=\"submit\" name=\"reset\" value=\"Reiniciar joc\"&gt;\n     &lt;input type=\"submit\" name=\"exit\" value=\"Acabar joc\"&gt;\n&lt;/form&gt;\n &lt;?php include_once $_SERVER['DOCUMENT_ROOT'].'/../Views/partials/panel.view.php'  ?&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>board.view.php</p> <pre><code>&lt;div class=\"board\"&gt;\n    &lt;table&gt;\n     &lt;tr&gt;\n       &lt;?php if (!$winner ):\n        for ($j=1;$j&lt;= $board::COLUMNS ;$j++): ?&gt;\n         &lt;td&gt;&lt;input type='submit' name='columna' value='&lt;?=$j ?&gt;' /&gt;&lt;/td&gt;\";\n      &lt;?php endfor ; else: ?&gt;\n        &lt;h1&gt;El guanyador es el jugador &lt;?=  $winner -&gt;getName() ?&gt;&lt;/h1&gt;\n      &lt;?php endif ?&gt;\n     &lt;/tr&gt;\n      &lt;?php for ($i=1;$i&lt;= $board::FILES ;$i++):  ?&gt;\n          &lt;tr&gt;\n         &lt;?php for ($j=1;$j&lt;= $board::COLUMNS ;$j++):  ?&gt;\n             &lt;?php echo match ($board-&gt;getSlots()[$i][$j]){\n                0 =&gt; '&lt;td class=\"buid\"&gt;&lt;/td&gt;',\n                1 =&gt; '&lt;td class=\"player1\"&gt;&lt;/td&gt;',\n                2 =&gt; '&lt;td class=\"player2\"&gt;&lt;/td&gt;'};\n                endfor ;\n            endfor   ?&gt;\n         &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"1val.html#spa","title":"SPA","text":"<p>Creen la p\u00e0gina index.php que carregar\u00e0 el joc 4 en ratlla.</p> <pre><code>&lt;?php\nsession_start();\nrequire_once $_SERVER['DOCUMENT_ROOT'] . '/../vendor/autoload.php';\nrequire_once $_SERVER['DOCUMENT_ROOT'] . '/../Helpers/functions.php';\nuse Joc4enRatlla\\Controllers\\GameController;\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    $gameController = new GameController($_POST); \n} else {\n    loadView('jugador');\n}\n</code></pre>"},{"location":"1val.html#4-proves-amb-phpunit","title":"4. Proves amb PHPUnit","text":"<ul> <li>Escriu Proves Unit\u00e0ries: Crea proves unit\u00e0ries per a la classe <code>Joc4enRatlla</code> utilitzant PHPUnit. Les proves poden incloure:<ul> <li>Verificaci\u00f3 de la configuraci\u00f3 inicial de la graella.</li> <li>Proves per assegurar que un moviment s'aplica correctament a la graella.</li> <li>Proves per assegurar que el joc detecta correctament un guanyador o un empat.</li> </ul> </li> <li>Proves de Gesti\u00f3 de Sessions: Afig proves per assegurar que l'estat del joc i el torn del jugador es mantenen correctament a trav\u00e9s de les sessions.</li> </ul>"},{"location":"1val.html#5-logger-amb-monolog_1","title":"5. Logger amb Monolog","text":"<ul> <li>Configuraci\u00f3 de Logger: Utilitza <code>Monolog</code> per registrar esdeveniments importants del joc, com quan un jugador fa un moviment, quan s'inicia una nova partida, o quan es produeixen errors.</li> <li>Diversos Handlers:<ul> <li>Registra els moviments dels jugadors i els resultats del joc en un fitxer <code>game.log</code>.</li> <li>Registra errors greus o problemes amb les sessions en un fitxer d'errors separat.</li> </ul> </li> </ul>"},{"location":"1val.html#consideracions-addicionals-pel-projecte","title":"Consideracions Addicionals pel  Projecte","text":""},{"location":"1val.html#1-documentacio-amb-phpdoc","title":"1. Documentaci\u00f3 amb PHPDoc","text":"<ul> <li>Documentaci\u00f3 Completa: Documenta totes les classes i m\u00e8todes amb comentaris PHPDoc. Aix\u00f2 inclou les descripcions dels par\u00e0metres i els valors de retorn per a cada m\u00e8tode.</li> <li>Generaci\u00f3 Autom\u00e0tica: Utilitza <code>phpDocumentor</code> o una eina similar per generar la documentaci\u00f3 autom\u00e0ticament. Afig la documentaci\u00f3 generada al projecte per facilitar el manteniment i la comprensi\u00f3 del codi.</li> </ul>"},{"location":"1val.html#2-implementacio-dinterficies","title":"2. Implementaci\u00f3 d'Interf\u00edcies","text":"<ul> <li>Interf\u00edcie <code>JocInterface</code>: Crea una interf\u00edcie que definisca els m\u00e8todes b\u00e0sics que qualsevol joc  ha de tindre (<code>iniciarJoc</code>, <code>ferMoviment</code>, <code>comprovaGuanyador</code>, etc.). Assegura't que la  <code>Joc4enRatlla</code> implemente  aquesta interf\u00edcie.</li> </ul>"},{"location":"1val.html#3-serialitzacio-i-persistencia","title":"3. Serialitzaci\u00f3 i Persist\u00e8ncia","text":"<ul> <li>Serialitzaci\u00f3 de l'Estat del Joc: Implementa funcionalitats per serialitzar l'estat del joc (usant JSON o <code>serialize()</code>) i deserialitzar-lo per mantenir la persist\u00e8ncia entre sessions o guardar l'estat per a reprendre la partida posteriorment.</li> </ul>"},{"location":"1val.html#4-exempcions","title":"4. Exempcions","text":"<ul> <li>Gesti\u00f3 d'Excepcions: Utilitza excepcions per gestionar el que un jugador jugue una columna que ja estiga plena. Afig el missatge  d'error al jocs.</li> </ul>"},{"location":"1val.html#5-fes-que-el-jugador-puga-triar-nom-i-color","title":"5. Fes que el jugador puga triar nom i color","text":"<ul> <li>Triar Nom i Color: Permet als jugadors triar el seu nom i el color de les fitxes al comen\u00e7ar una partida. Aquesta informaci\u00f3 ha de ser guardada en les sessions i mostrada en la vista del joc.</li> </ul>"},{"location":"1val.html#rubrica-de-lavaluacio","title":"R\u00fabrica de l'Avaluaci\u00f3","text":""},{"location":"1val.html#funcionalitat-del-joc_1","title":"Funcionalitat del Joc","text":"Punts Descripci\u00f3 0 El joc no \u00e9s funcional o est\u00e0 incomplet. 1 El joc \u00e9s funcional, per\u00f2 cont\u00e9 errors significatius. 2 El joc est\u00e0 majorit\u00e0riament funcional amb errors m\u00ednims. 3 El joc est\u00e0 completament funcional i sense errors."},{"location":"1val.html#implementacio-de-programacio-orientada-a-objectes-poo","title":"Implementaci\u00f3 de Programaci\u00f3 Orientada a Objectes (POO)","text":"Punts Descripci\u00f3 0 No s'han utilitzat classes o s'ha fet de forma poc coherent. 1 Tots els models tenen la seua classe i \u00e9s operativa. 2 L'aplicatiu funciona amb classes."},{"location":"1val.html#separacio-del-model-de-negoci-de-la-presentacio-mvc","title":"Separaci\u00f3 del Model de Negoci de la Presentaci\u00f3 (MVC)","text":"Punts Descripci\u00f3 0 No s'ha implementat la separaci\u00f3 de model i presentaci\u00f3; el codi de l\u00f2gica i presentaci\u00f3 est\u00e0 mesclat. 1 Hi ha una separaci\u00f3 parcial, per\u00f2 algunes parts de la l\u00f2gica del negoci es barregen amb la presentaci\u00f3 o a l'inrev\u00e9s. 2 La separaci\u00f3 entre model, vista i controlador est\u00e0 ben implementada, per\u00f2 podria millorar en alguns aspectes. 3 Excel\u00b7lent separaci\u00f3 entre el model, vista i controlador, seguint els principis del patr\u00f3 MVC i mantenint un codi net."},{"location":"1val.html#integracio-de-composer-i-autoloading","title":"Integraci\u00f3 de Composer i Autoloading","text":"Punts Descripci\u00f3 0 No. 1 S\u00ed."},{"location":"1val.html#implementacio-de-proves-amb-phpunit","title":"Implementaci\u00f3 de Proves amb PHPUnit","text":"Punts Descripci\u00f3 0 No s'han creat proves, o les proves creades s\u00f3n m\u00ednimes i no adequades per a verificar la funcionalitat. 1 Es presenten proves b\u00e0siques amb PHPUnit, per\u00f2 cobreixen parcialment les funcionalitats requerides. 2 Proves unit\u00e0ries completes que cobreixen la majoria dels casos, incloent proves de gesti\u00f3 de sessions i l\u00f2gica de joc. 3 Proves exhaustives que cobreixen totes les funcionalitats i consideren casos l\u00edmit, amb \u00fas de mocks quan necessari."},{"location":"1val.html#us-de-logger-amb-monolog","title":"\u00das de Logger amb Monolog","text":"Punts Descripci\u00f3 0 No s'ha implementat el logger o no s'utilitza de manera efectiva per registrar esdeveniments importants. 1 Logger implementat, per\u00f2 amb \u00fas limitat o incorrecte en la registraci\u00f3 d'esdeveniments i errors. 2 Logger ben implementat, amb esdeveniments i errors registrats adequadament en diferents fitxers o canals."},{"location":"1val.html#documentacio-amb-phpdoc","title":"Documentaci\u00f3 amb PHPDoc","text":"Punts Descripci\u00f3 0 Falta documentaci\u00f3 o \u00e9s insuficient per comprendre les classes i m\u00e8todes del projecte. 1 Documentaci\u00f3 b\u00e0sica amb PHPDoc, per\u00f2 amb omisions o descripcions poc clares. 2 Documentaci\u00f3 completa amb PHPDoc per a totes les classes i m\u00e8todes, amb descripcions clares i detallades."},{"location":"1val.html#exempcions","title":"Exempcions","text":"Punts Descripci\u00f3 0 No hi ha. 1 Si hi ha per\u00f2 no es mostra missatge d'error. 2 Es tracta perfectament i hi ha missatge d'error."},{"location":"1val.html#interficie","title":"Interf\u00edcie","text":"Punts Descripci\u00f3 0 No hi ha. 1 Implementada."},{"location":"1val.html#eleccio-color-jugador-i-panell-de-resultats","title":"Elecci\u00f3 color Jugador i panell de resultats","text":"Punts Descripci\u00f3 0 No. 1 Un dels dos. 2 Els dos."},{"location":"1val.html#qualitat-del-codi-i-bones-practiques","title":"Qualitat del Codi i Bones Pr\u00e0ctiques","text":"Punts Descripci\u00f3 0 Codi desordenat i sense comentaris. 1 Codi desorganitzat, amb molts errors de sintaxi, mala nomenclatura, o sense bones pr\u00e0ctiques de codi. 2 Codi ben escrit, seguint les convencions de nomenclatura i bones pr\u00e0ctiques de desenvolupament."},{"location":"1val.html#innovacio-i-creativitat_1","title":"Innovaci\u00f3 i Creativitat","text":"Punts Descripci\u00f3 0 Cap creativitat o innovaci\u00f3 en el projecte. 1 Algunes idees creatives han estat implementades. 2 El projecte mostra innovaci\u00f3 significativa."},{"location":"1val.html#15-autoavaluacio-programacio-orientada-a-objectes-en-php","title":"15. Autoavaluaci\u00f3: Programaci\u00f3 Orientada a Objectes en PHP","text":""},{"location":"1val.html#exercici-1-constructors-en-php","title":"Exercici 1: Constructors en PHP","text":""},{"location":"1val.html#pregunta_14","title":"Pregunta:","text":"<p>Quina \u00e9s la funci\u00f3 principal d'un constructor en una classe PHP?</p>"},{"location":"1val.html#opcions_14","title":"Opcions:","text":"a) Destruir els objectes de la classe quan ja no s\u00f3n necessaris. b) Inicialitzar les propietats de l'objecte quan es crea. c) Executar una funci\u00f3 arbitr\u00e0ria abans de cada m\u00e8tode. d) Crear m\u00e8todes m\u00e0gics autom\u00e0ticament."},{"location":"1val.html#exercici-2-herencia-en-php","title":"Exercici 2: Her\u00e8ncia en PHP","text":""},{"location":"1val.html#pregunta_15","title":"Pregunta:","text":"<p>Quina \u00e9s l'avantatge principal de l'her\u00e8ncia en la programaci\u00f3 orientada a objectes?</p>"},{"location":"1val.html#opcions_15","title":"Opcions:","text":"a) Permet reutilitzar codi definint classes noves basades en classes existents. b) Permet ocultar totes les propietats i m\u00e8todes de la classe. c) Permet definir funcions globals sense necessitat de classes. d) Permet cridar a funcions de JavaScript des de PHP."},{"location":"1val.html#exercici-3-polimorfisme","title":"Exercici 3: Polimorfisme","text":""},{"location":"1val.html#pregunta_16","title":"Pregunta:","text":"<p>Qu\u00e8 permet el polimorfisme en el context de la POO?</p>"},{"location":"1val.html#opcions_16","title":"Opcions:","text":"a) Permet que una funci\u00f3 tinga m\u00faltiples implementacions depenent de l'objecte que la cride. b) Permet la creaci\u00f3 d'objectes a partir de funcions an\u00f2nimes. c) Permet la connexi\u00f3 entre PHP i bases de dades relacionals. d) Permet executar m\u00faltiples scripts PHP alhora."},{"location":"1val.html#exercici-4-espais-de-noms","title":"Exercici 4: Espais de Noms","text":""},{"location":"1val.html#pregunta_17","title":"Pregunta:","text":"<p>Per a qu\u00e8 s'utilitzen els espais de noms (namespaces) en PHP?</p>"},{"location":"1val.html#opcions_17","title":"Opcions:","text":"a) Per executar codi PHP de forma asincr\u00f2nica. b) Per evitar conflictes entre noms de classes, funcions o constants en diferents parts del codi. c) Per definir variables globals accessibles des de qualsevol punt del codi. d) Per importar codi d'altres llenguatges de programaci\u00f3 com JavaScript."},{"location":"1val.html#exercici-5-traits-en-php","title":"Exercici 5: Traits en PHP","text":""},{"location":"1val.html#pregunta_18","title":"Pregunta:","text":"<p>Quin avantatge ofereixen els traits en PHP?</p>"},{"location":"1val.html#opcions_18","title":"Opcions:","text":"a) Permet escriure codi reutilitzable que es pot incloure en m\u00faltiples classes, independentment de la jerarquia d'her\u00e8ncia. b) Permet la creaci\u00f3 de funcions globals en PHP. c) Permet la comunicaci\u00f3 entre diferents servidors web. d) Permet executar codi PHP dins de plantilles HTML."},{"location":"1val.html#exercici-6-excepcions-en-php","title":"Exercici 6: Excepcions en PHP","text":""},{"location":"1val.html#pregunta_19","title":"Pregunta:","text":"<p>Quina \u00e9s la finalitat d'utilitzar excepcions en PHP?</p>"},{"location":"1val.html#opcions_19","title":"Opcions:","text":"a) Evitar l'execuci\u00f3 de codi mal format. b) Gestionar errors i condicions excepcionals de manera controlada dins d'una aplicaci\u00f3. c) Declarar funcions dins d'una classe. d) Garantir que totes les variables estiguen inicialitzades abans del seu \u00fas."},{"location":"1val.html#exercici-7-autoloading-en-php","title":"Exercici 7: Autoloading en PHP","text":""},{"location":"1val.html#pregunta_20","title":"Pregunta:","text":"<p>Quin avantatge ofereix l'autoloading en PHP?</p>"},{"location":"1val.html#opcions_20","title":"Opcions:","text":"a) Permet que les classes es carreguen autom\u00e0ticament quan s'utilitzen, sense necessitat de fer incloure manualment cada fitxer. b) Permet l'execuci\u00f3 de m\u00faltiples scripts alhora. c) Permet la manipulaci\u00f3 de fitxers en el servidor. d) Permet la connexi\u00f3 amb bases de dades."},{"location":"1val.html#desenvolupament-daplicacions-web-acces-a-dades","title":"Desenvolupament d'aplicacions web: Acc\u00e9s a Dades.","text":"Duraci\u00f3 i criteris d'avaluaci\u00f3 <p>Duraci\u00f3 estimada: 10 hores</p> Resultat d'aprenentatge Criteris d'avaluaci\u00f3 6. Desenvolupa aplicacions web d'acc\u00e9s a magatzems de dades, aplicant mesures per a mantindre la seguretat i la integritat de la informaci\u00f3. a) S'han analitzat les tecnologies que permeten l'acc\u00e9s mitjan\u00e7ant programaci\u00f3 a la informaci\u00f3 disponible en magatzems de dades.  b) S'han creat aplicacions que establisquen connexions amb bases de dades.  c) S'ha recuperat informaci\u00f3 emmagatzemada en bases de dades.  d) S'ha publicat en aplicacions web la informaci\u00f3 recuperada.  e) S'han utilitzat conjunts de dades per a emmagatzemar la informaci\u00f3.  f) S'han creat aplicacions web que permeten l'actualitzaci\u00f3 i l'eliminaci\u00f3  d'informaci\u00f3 disponible en una base de dades. g) S'han provat i documentat les aplicacions web. <p>En aquesta unitat aprendrem a accedir a dades que es troben en un servidor; recuperant, editant i creant aquestes dades a trav\u00e9s d'una base de dades.</p> <p>A trav\u00e9s de les diferents capes o nivells, de les quals 2 d'elles ja coneixem (Nginx, PHP) i MySQL la que estudiarem en aquest tema.</p>"},{"location":"1val.html#1-introduccio-a-les-tecnologies-per-accedir-a-dades","title":"1. Introducci\u00f3 a les tecnologies per accedir a dades","text":""},{"location":"1val.html#bases-de-dades-relacionals-sql","title":"Bases de dades relacionals (SQL)","text":"<p>Les bases de dades relacionals utilitzen llenguatge SQL per emmagatzemar i recuperar dades de taules relacionades. En PHP, les tecnologies m\u00e9s utilitzades per accedir-hi s\u00f3n PDO i MySQLi. PDO suporta m\u00faltiples sistemes de bases de dades (MySQL, PostgreSQL, etc.), mentre que MySQLi est\u00e0 dissenyat espec\u00edficament per a MySQL.</p>"},{"location":"1val.html#bases-de-dades-nosql","title":"Bases de dades NoSQL","text":"<p>Les bases de dades NoSQL, com MongoDB o Firebase, emmagatzemen dades en formats no estructurats, com JSON. Aquestes s\u00f3n ideals per a aplicacions que gestionen grans volums de dades o dades no estructurades. MongoDB \u00e9s un sistema orientat a documents, mentre que Firebase \u00e9s conegut per les seves capacitats en temps real.</p>"},{"location":"1val.html#acces-a-apis","title":"Acc\u00e9s a APIs","text":"<p>Les APIs REST permeten accedir a dades de serveis web externs utilitzant sol\u00b7licituds HTTP i respostes en formats com JSON o XML. GraphQL \u00e9s una alternativa moderna que permet sol\u00b7licituds m\u00e9s espec\u00edfiques, nom\u00e9s retornant les dades necess\u00e0ries, en contrast amb les sol\u00b7licituds REST, que poden ser m\u00e9s generals.</p>"},{"location":"1val.html#web-scraping","title":"Web Scraping","text":"<p>El web scraping \u00e9s el proc\u00e9s d'extracci\u00f3 autom\u00e0tica de dades de p\u00e0gines web. Aquesta t\u00e8cnica es pot utilitzar per recuperar informaci\u00f3 d'una p\u00e0gina web quan no hi ha una API disponible. En PHP, es poden utilitzar diverses biblioteques per descarregar i analitzar contingut HTML, com ara cURL i DOMDocument.</p>"},{"location":"1val.html#consideracions-de-seguretat_1","title":"Consideracions de seguretat","text":"<p>\u00c9s fonamental garantir la seguretat quan es treballa amb l'acc\u00e9s a dades. Aix\u00f2 inclou protegir les aplicacions contra vulnerabilitats comunes, com les injeccions SQL, i assegurar les connexions utilitzant SSL/TLS quan es comuniqui amb bases de dades remotes o APIs externes.</p>"},{"location":"1val.html#2-bases-de-dades-relacionals-sql","title":"2. Bases de dades relacionals (SQL)","text":""},{"location":"1val.html#installacio_3","title":"Instal\u00b7laci\u00f3","text":"<p>A trav\u00e9s de XAMPP \u00e9s molt senzill, simplement ens descarregar\u00edem el programa i l'activar\u00edem. Per a descarregar XAMPP prem ac\u00ed.</p> <p>Amb Docker utilitzarem un altre  repositori que inclou el mysql i el phpMyAdmin i llancem <pre><code>docker-compose up -d\n</code></pre></p> <p>Si tot ha eixit b\u00e9 i el contenidor est\u00e0 en marxa, podrem visitar la p\u00e0gina de phpMyAdmin de la seg\u00fcent manera <pre><code>http://localhost:8000\n</code></pre></p> <p>Per a accedir hem d'utilitzar les seg\u00fcents credencials que venen configurades en el arxiu <code>docker-compose.yml</code></p> <pre><code>usuario: root\ncontrase\u00f1a: 1234\n</code></pre>"},{"location":"1val.html#estructura-duna-base-de-dades","title":"Estructura d'una base de dades","text":"<p>Sabem que una base de dades t\u00e9 molts camps amb els seus noms i valors, per\u00f2 a m\u00e9s sabem que la base de dades ha de tindre un nom. per tant tindr\u00edem la seg\u00fcent estructura per a una base de dades:</p> <pre><code>NombreBaseDeDatos\n    |__Tabla-#1\n    |       |__DatosTabla-#1\n    |\n    |__Tabla-#2\n    |       |__DatosTabla-#2\n    |\n    |__Tabla-#3\n    |       |__DatosTabla-#3\n    [...]\n</code></pre> <p>Vegem-ho en un exemple real</p> <pre><code>Ryanair\n    |__pasajero\n    |    |__id[*]\n    |    |__nombre\n    |    |__apellidos\n    |    |__edad\n    |    |__id_vuelo[^]\n    |\n    |__vuelo\n    |    |__id[*]\n    |    |__n_plazas\n    |    |__disponible\n    |    |__id_pais[^]\n    |\n    |__pais\n         |__id[*]\n         |__nombre\n</code></pre>      [*] Clau prim\u00e0ria [^] Clave For\u00e0nia"},{"location":"1val.html#sql","title":"SQL","text":"<p>Aquest llenguatge de consulta estructurada (Structured Query Language) \u00e9s el que utilitzarem per a realitzar les consultes a les nostres bases de dades per a mostrar el contingut en les diferents interf\u00edcies web que creem al llarg de la unitat. Si vols saber m\u00e9s detalls visita Wiki SQL</p> <p>Exemple d'una sent\u00e8ncia SQL on seleccionem totes les files i columnes de la nostra taula anomenada 'pais'</p> <pre><code>SELECT * FROM pais\n</code></pre> <p>Estas sentencias pueden invocarse desde la consola de comandos mediante el int\u00e9rprete mysql (previamente instalado en el sistema) o a trav\u00e9s de la herramienta phpMyAdmin.</p> <p>Las sentencias SQL tambi\u00e9n las podemos usar dentro de nuestro c\u00f3digo php, de tal manera que cuando se cargue nuestra interfaz web, lance una sentecia SQL para mostrar los datos que queramos.</p> <pre><code>&lt;?php\n    // Llistat de clients, adre\u00e7ats per DNI de manera ASCendent\n    $clientesOrdenadosPorDNI = \"SELECT * FROM `pasajero` ORDER BY `dni`\" ASC;\n?&gt;\n</code></pre>"},{"location":"1val.html#phpmyadmin","title":"phpMyAdmin","text":"<p>Aquest programari funciona sota Ngingx i PHP i \u00e9s m\u00e9s que res una interf\u00edcie web per a gestionar les bases de dades que tinguem disponibles en el nostre servidor local. Molts *hostings ofereixen aquesta eina per defecte per a poder gestionar les BBDD que tinguem configurades sota el nostre compte.</p>"},{"location":"1val.html#creant-una-base-de-dades-dins-de-phpmyadmin","title":"Creant una base de dades dins de phpMyAdmin","text":"<ol> <li> <p>Per a crear una nova base de dades hem d'entrar en phpMyAdmin com a usuari root i punxar en l'opci\u00f3 Nova del men\u00fa de l'esquerra.</p> </li> <li> <p>En la nova finestra de creaci\u00f3 posarem un nom a nostra bbdd.</p> </li> <li> <p>Tamb\u00e9 establirem el cotejamiento utf8m4_unicode_ci perqu\u00e8 nostra bbdd suporte tot tipus de car\u00e0cters (com els asi\u00e0tics) i fins i tot emojis ;)</p> </li> <li> <p>Li donem al bot\u00f3 de Crear per a crear la bbdd i comen\u00e7ar a escriure les diferents taules que anem a introduir en ella.</p> </li> </ol> <p>El sistema generar\u00e0 el codi SQL per a crear tot el que li hem posat i crear\u00e0 la base de dades amb les taules que li h\u00e0gem ficat. <pre><code>CREATE TABLE `persona`. ( `id` INT NOT NULL AUTO_INCREMENT , `nombre` TINYTEXT NOT NULL , `apellidos` TEXT NOT NULL , `telefono` TINYTEXT NOT NULL , PRIMARY KEY (`id`)) ENGINE = InnoDB;\n</code></pre></p>"},{"location":"1val.html#opcions-en-phpmyadmin","title":"Opcions en phpMyAdmin","text":"<p>Quan seleccionem una base de dades de la llista, el sistema ens mostra diverses pestanyes amb les quals interactuar amb la base de dades en q\u00fcesti\u00f3:</p> <ul> <li> <p><code>Estructura</code>: Podem veure les diferents taules que consoliden la nostra base de dades</p> </li> <li> <p><code>SQL</code>: Per si volem injectar codi SQL perqu\u00e8 el sistema l'interprete</p> </li> <li> <p><code>Buscar</code>: Serveix per a buscar per termes, en la nostra base de dades, aplicant diferents filtres de cerca</p> </li> <li> <p><code>Generar consulta</code>: semblan\u00e7a a SQL per\u00f2 d'una manera m\u00e9s gr\u00e0fica, sense haver de saber res del llenguatge</p> </li> <li> <p><code>Exportar i importar</code>: Com el seu nom indica, per a fer qualsevol de les 2 operacions sobre la base de dades</p> </li> <li> <p><code>Operacions</code>: Diferents opcions avan\u00e7ades per a realitzar en la nostra base de dades, de la qual destacarem l'opci\u00f3 Cotejamiento on podrem canviar el cotejamiento de la nostra taula per\u00f2 ULL AMB AC\u00d4 perqu\u00e8 podem eliminar dades sense voler, ja que en canviar el cotejamiento podem suprimir car\u00e0cters no suportats pel nou cotejamiento</p> </li> </ul> <p>No aprofundirem en la resta d'opcions per\u00f2, en la pestanya M\u00e9s existeix l'opci\u00f3 Dissenyador per a poder editar les relacions entre taules d'una manera gr\u00e0fica (punxant i arrossegant) que veurem m\u00e9s endavant.</p>"},{"location":"1val.html#3-php-data-objects-pdo","title":"3. PHP Data Objects :: PDO","text":"<p>La classe PDO de PHP s'utilitza per connectar-se a una base de dades i executar consultes SQL de manera segura. Quan construeixes una inst\u00e0ncia de PDO, pots passar-li diferents atributs en el constructor i opcions per configurar el comportament de la connexi\u00f3. Aqu\u00ed tens els atributs principals i el seu prop\u00f2sit:</p>"},{"location":"1val.html#constructor-de-la-classe-pdo","title":"Constructor de la classe PDO","text":"<p>El constructor de la classe PDO accepta tres par\u00e0metres obligatoris i un opcional:</p> <pre><code>&lt;?php\n    $pdo = new PDO(string $dsn, string $username, string $password, array $options);\n</code></pre> <ul> <li>$dsn (Data Source Name): \u00c9s una cadena que especifica el tipus de base de dades i la informaci\u00f3 necess\u00e0ria per connectar-s'hi.</li> <li>Format per tipus de base de dades i configuraci\u00f3, per exemple:<ul> <li>Mysql:host=localhost;dbname=testdb (per a MySQL).</li> <li>pgsql:host=localhost;port=5432;dbname=testdb (per a PostgreSQL).</li> <li>sqlite:/path/to/database.db (per a SQLite).</li> </ul> </li> <li>$username: El nom d'usuari per a la connexi\u00f3 a la base de dades.</li> <li>$password: La contrasenya associada al nom d'usuari.</li> <li>$options (Opcional): Un array d'opcions per definir el comportament de la connexi\u00f3. Aquests s\u00f3n alguns dels valors m\u00e9s comuns que es poden definir en aquest array:<ul> <li>PDO::ATTR_ERRMODE: Controla com es gestionen els errors. Alguns valors comuns s\u00f3n:</li> <li>PDO::ERRMODE_SILENT: Els errors no generen cap missatge.</li> <li>PDO::ERRMODE_WARNING: Els errors generen un av\u00eds.</li> <li>PDO::ERRMODE_EXCEPTION: Els errors generen una excepci\u00f3, que \u00e9s el m\u00e9s recomanable per controlar errors.</li> <li>PDO::ATTR_DEFAULT_FETCH_MODE: Defineix el mode de recuperaci\u00f3 de dades per defecte, com ara:</li> <li>PDO::FETCH_ASSOC: Retorna les dades com un array associatiu.</li> <li>PDO::FETCH_OBJ: Retorna les dades com un objecte.</li> <li>PDO::FETCH_BOTH: Retorna les dades com un array associatiu i num\u00e8ric.</li> <li>PDO::ATTR_PERSISTENT: Habilita connexions persistents. Una connexi\u00f3 persistent pot millorar el rendiment mantenint la connexi\u00f3 activa per m\u00faltiples peticions en lloc de crear-ne una nova cada vegada.</li> <li>PDO::ATTR_TIMEOUT: Defineix un temps l\u00edmit per a la connexi\u00f3 en segons.</li> </ul> </li> </ul>"},{"location":"1val.html#exemple-de-connexio-amb-pdo","title":"Exemple de connexi\u00f3 amb PDO","text":"<pre><code>$dsn = \"mysql:host=localhost;dbname=testdb\";\n$username = \"usuari\";\n$password = \"contrasenya\";\n$options = [\n    PDO::ATTR_ERRMODE =&gt; PDO::ERRMODE_EXCEPTION,\n    PDO::ATTR_DEFAULT_FETCH_MODE =&gt; PDO::FETCH_ASSOC,\n    PDO::ATTR_PERSISTENT =&gt; true,\n    PDO::MYSQL_ATTR_INIT_COMMAND =&gt; \"SET NAMES utf8\"\n];\n\ntry {\n    $pdo = new PDO($dsn, $username, $password, $options);\n    echo \"Connexi\u00f3 establerta amb \u00e8xit!\";\n} catch (PDOException $e) {\n    echo \"Error de connexi\u00f3: \" . $e-&gt;getMessage();\n}\n</code></pre> <p>Aquest codi estableix una connexi\u00f3 a una base de dades MySQL amb un joc de car\u00e0cters utf8, una connexi\u00f3 persistent, i llan\u00e7a excepcions en cas d'errors.</p> <p>Qualsevol error que es llance a trav\u00e9s de PDO, el sistema llan\u00e7ar\u00e0 una  PDOException .</p>"},{"location":"1val.html#fitxer-de-configuracio-de-la-bd","title":"Fitxer de configuraci\u00f3 de la BD","text":"<p>De la mateixa manera que podem tenir el nostre arxiu de funcions <code>funciones.php</code> i alberguem totes les funcions que s'usen de manera global en l'aplicaci\u00f3, podem establir un arxiu de constants on definim els par\u00e0metres de connexi\u00f3 amb la base de dades. <pre><code>&lt;?php\n\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 conexion.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    constDSN = \"mysql:host=localhost;dbname=dwes\";\n    constUSUARIO = \"dwes\";\n    constPASSWORD = \"abc123\";\n\n    /*  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n        \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 NO SUBAS ESTE ARCHIVO A git \u2592\u2592\u2592\u2592\u2592\n\n        \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 */\n</code></pre></p> <p>Aquest arxiu cont\u00e9 informaci\u00f3 molt sensible aix\u00ed que no \u00e9s recomanable que puges aquest arxiu a git.</p>"},{"location":"1val.html#sentencies-preparades","title":"Sent\u00e8ncies preparades","text":"<p>Es tracta de sent\u00e8ncies que s'estableixen com si foren plantilles de la SQL que llan\u00e7arem, acceptant par\u00e0metres que s\u00f3n establits a posteriori de la declaraci\u00f3 de la sent\u00e8ncia preparada.</p> <p>Les sent\u00e8ncies preparades eviten la injecci\u00f3 de SQL (SQL Injection) i milloren el rendiment de nostres aplicacions o p\u00e0gines web.</p> <pre><code>&lt;?php\n    $sql = \"INSERT INTO Clientes VALUES (?, ?, ?, ?)\";\n</code></pre> <p>Cada interrogant \u00e9s un par\u00e0metre que establirem despr\u00e9s, unes quantes l\u00ednies m\u00e9s a baix.</p> <p>Una vegada tenim la plantilla de la nostra consulta, hem de seguir amb la preparaci\u00f3 juntament amb 3 m\u00e8todes m\u00e9s de PHP per a la seua completa execuci\u00f3:</p> <ul> <li><code>prepare:</code> prepara la sentencia abans de ser executada.</li> <li><code>bind</code>: el tipus d'uni\u00f3 (*bind^) de dada que pot ser mitjan\u00e7ant ' ? ' o ' :parametre '</li> <li><code>execute</code> s'executa la consulta unint la plantilla amb les variables o par\u00e0metres que hem establit.</li> </ul>"},{"location":"1val.html#exemple-parametros","title":"Exemple par\u00e0metros","text":"<pre><code>&lt;?php\n\n\n    include \"config/database.inc.php\";\n\n    $conexion = null;\n\n    try { \n        $cantidad = $_GET[\"cantidad\"];\n\n        $conexion = new PDO(DSN, USUARIO, PASSWORD);\n        $conexion -&gt; setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        $sql = \"DELETE FROM stock WHERE unidades = ?\";\n        $sentencia = $conexion -&gt; prepare($sql);\n\n        $isOk = $sentencia -&gt; execute([$cantidad]);\n        $cantidadAfectada = $sentencia -&gt; rowCount();\n\n        echo $cantidadAfectada;\n    } catch (PDOException $e) {\n        echo $e -&gt; getMessage();\n    }\n\n    $conexion = null\n</code></pre>"},{"location":"1val.html#exemple-bindparam","title":"Exemple bindParam","text":"<p>Molt semblant a utilitzar par\u00e0metres per\u00f2 aquesta vegada la variable est\u00e0 dins de la sent\u00e8ncia SQL, en aquest cas l'hem anomenada <code>:cant</code></p> <pre><code>&lt;?php\n    include \"config/database.inc.php\";\n\n    $conexion=null;\n\n    try {\n        $cantidad = $_GET[\"cantidad\"] ?? 0;\n\n        $conexion = new PDO(DSN, USUARIO, PASSWORD);\n        $conexion -&gt; setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        $sql = \"DELETE FROM stock WHERE unidades = :cant\";\n\n        $sentencia = $conexion -&gt; prepare($sql);\n        $sentencia -&gt; bindParam(\":cant\", $cantidad);\n\n        $isOk = $sentencia -&gt; execute();\n\n        $cantidadAfectada = $sentencia -&gt; rowCount();\n\n        echo $cantidadAfectada;\n    } catch (PDOException $e) {\n        echo $e -&gt; getMessage();\n    }\n\n    $conexion = null;\n</code></pre>"},{"location":"1val.html#bindparam-vs-bindvalue","title":"bindParam VS bindValue","text":"<p>Utilitzarem <code>bindValue()</code> quan h\u00e0gem d'inserir dades nom\u00e9s una vegada, en canvi, haurem d'usar <code>bindParam()</code> quan h\u00e0gem de passar dades m\u00faltiples, com per exemple, un array.</p> <pre><code>&lt;?php\n    // se asignan nombre a los par\u00e1metros\n    $sql = \"DELETE FROM stock WHERE unidades = :cant\";\n    $sentencia = $conexion -&gt; prepare($sql);\n\n    // bindParam enlaza por referencia\n    $cantidad = 0;\n\n    $sentencia -&gt; bindParam(\":cant\", $cantidad);\n    $cantidad = 1;\n\n    // se eliminan con cant = 1\n    $isOk = $sentencia -&gt; execute();\n\n    // bindValue enlaza por valor\n    $cantidad = 0;\n\n    $sentencia -&gt; bindValue(\":cant\", $cantidad);\n    $cantidad = 1;\n\n    // se eliminan con cant = 0\n    $isOk = $sentencia-&gt;execute();\n</code></pre> <p>Per a m\u00e9s informaci\u00f3 i \u00fas de les variables PDO consulta el manual de PHP.</p>"},{"location":"1val.html#inserint-registres","title":"Inserint registres","text":"<p>A l'hora d'inserir registres en una base de dades, hem de tindre en compte que en la taula pot haver-hi valors autoincrementats. Per a salvaguardar a\u00e7\u00f2, el que hem de fer \u00e9s deixar aqueix camp autoincrementat buit, per\u00f2 a l'hora de fer la connexi\u00f3, hem de recuperar-ho amb el m\u00e8tode <code>lastInsertId()</code>.</p> <pre><code>&lt;?php\n    $nombre = $_GET[\"nombre\"] ?? \"SUCURSAL X\";\n    $telefono = $_GET[\"telefono\"] ?? \"636123456\";\n\n    $sql=\"INSERT INTO tienda(nombre, tlf) VALUES (:nombre, :telefono)\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; bindParam(\":nombre\", $nombre);\n    $sentencia -&gt; bindParam(\":telefono\", $telefono);\n\n    $isOk = $sentencia -&gt; execute();\n    $idGenerado = $conexion -&gt; lastInsertId();\n\n    echo $idGenerado;\n</code></pre>"},{"location":"1val.html#consultant-registres","title":"Consultant registres","text":"<p>A l'hora de recuperar els resultats d'una consulta, bastar\u00e0 amb invocar al m\u00e8tode <code>PDOStatement::fetch</code> per a llistar les files generades per la consulta.</p> <p>Per\u00f2 hem de triar el tipus de dada que volem rebre entre els 3 que hi ha disponibles:</p> <ul> <li><code>PDO::FETCH_ASSOC:</code> array indexat que els seus keys s\u00f3n el nom de les columnes.</li> <li><code>PDO::FETCH_NUM:</code> array indexat que els seus keys s\u00f3n n\u00fameros.</li> <li><code>PDO::FETCH_BOTH:</code> valor per defecte. Retorna un array indexat que els seus keys s\u00f3n tant el nom de les columnes com n\u00fameros.</li> </ul> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 consulta con array asociativo.php \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    include \"config/database.inc.php\";\n\n    $conexion = null;\n\n    try{\n        $conexion = new PDO(DSN, USUARIO, PASSWORD);\n        $conexion -&gt; setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n\n        $sql = \"select * from tienda\";\n\n        $sentencia = $conexion -&gt; prepare($sql);\n        $sentencia -&gt; setFetchMode(PDO::FETCH_ASSOC);\n        $sentencia -&gt; execute();\n\n        while($fila = $sentencia -&gt; fetch()){\n            echo \"Codigo:\" . $fila[\"cod\"] . \"&lt;br /&gt;\";\n            echo \"Nombre:\" . $fila[\"nombre\"] . \"&lt;br /&gt;\";\n            echo \"Tel\u00e9fono:\" . $fila[\"tlf\"] . \"&lt;br /&gt;\";\n        }\n\n    }catch(PDOException $e) {\n        echo $e -&gt; getMessage();\n    }\n\n    $conexion = null;\n</code></pre> <p>Recuperant dades amb una matriu com a resultat de la nostra consulta</p> <p><pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 consulta con array asociativo \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql=\"SELECT * FROM tienda\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_ASSOC);\n    $sentencia -&gt; execute();\n\n    $tiendas = $sentencia -&gt; fetchAll();\n\n    foreach($tiendasas$tienda) {\n        echo\"Codigo:\" . $tienda[\"cod\"] . \"&lt;br /&gt;\";\n        echo\"Nombre:\" . $tienda[\"nombre\"] . \"&lt;br /&gt;\";\n    }\n</code></pre> Per\u00f2 si el que volem \u00e9s llegir dades amb forma d'objecte utilitzant <code>PDO::FETCH_OBJ</code>, hem de crear un objecte amb propietats p\u00fabliques amb el mateix nom que les columnes de la taula que anem a consultar.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 consulta con formato de objeto \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql=\"SELECT * FROM tienda\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_OBJ);\n    $sentencia -&gt; execute();\n\n    while($t = $sentencia -&gt; fetch()) {\n        echo\"Codigo:\" . $t -&gt; cod . \"&lt;br /&gt;\";\n        echo\"Nombre:\" . $t -&gt; nombre . \"&lt;br /&gt;\";\n        echo\"Tel\u00e9fono:\" . $t -&gt; tlf . \"&lt;br /&gt;\";\n    }\n</code></pre>"},{"location":"1val.html#consultes-amb-models","title":"Consultes amb models","text":"<p>Portem temps creant classes en PHP i les consultes tamb\u00e9 admeten aquest tipus de dades mitjan\u00e7ant l'\u00fas de <code>PDO::FETCH_CLASS</code></p> <p>Si usem aquest m\u00e8tode, hem de tindre en compte que els noms dels atributs privats han de coincidir amb els noms de les columnes de la taula que anem a manejar.</p> <p>Aix\u00ed doncs, si pel que siga canviem l'estructura de la taula HEM DE CANVIAR la nostra classe perqu\u00e8 tot continue funcionant.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 clase Tienda \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    classTienda {\n        private int $cod;\n        private string $nombre;\n        private ? string $tlf;\n\n        public function getCodigo() : int {\n            return $this -&gt; cod;\n        }\n\n        public function getNombre() : string {\n            return $this -&gt; nombre;\n        }\n\n        public function getTelefono() : ?string {\n            return $this -&gt; tlf;\n        }\n    }\n</code></pre> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Consultando a trav\u00e9s de la clase Tienda \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql = \"SELECT * FROM tienda\";\n    $sentencia = $conexion -&gt; prepare($sql);\n\n    // Aqu\u00ed 'Tienda' es el nombre de nuestra clase\n    $sentencia -&gt; setFetchMode(PDO::FETCH_CLASS, Tienda::class);\n    $sentencia -&gt; execute();\n\n    while($t = $sentencia -&gt; fetch()) {\n        echo \"Codigo: \" . $t -&gt; getCodigo() . \"&lt;br /&gt;\";\n        echo \"Nombre: \" . $t -&gt; getNombre() . \"&lt;br /&gt;\";\n        echo \"Tel\u00e9fono: \" . $t -&gt; getTelefono() . \"&lt;br /&gt;\";\n\n        var_dump($t);\n    }\n</code></pre> <p>Per\u00f2 qu\u00e8 passa si les nostres classes tenen constructor? doncs que hem d'indicar-li, al m\u00e8tode FECTH, que emplene les propietats despr\u00e9s de cridar al constructor i per a aix\u00f2 fem \u00fas de <code>PDO::FETCH_PROPS_LATE</code>. <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Consulta para una clase con constructor \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql = \"SELECT * FROM tienda\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_CLASS | PDO::FETCH_PROPS_LATE, Tienda::class);\n    $sentencia -&gt; execute();\n\n    $tiendas = $sentencia -&gt; fetchAll();\n</code></pre></p>"},{"location":"1val.html#consultes-amb-like","title":"Consultes amb LIKE","text":"<p>Per a utilitzar el comod\u00ed LIKE o altres comodins, hem d'associar-lo a la dada i MAI en la pr\u00f2pia consulta.</p> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Utilizando comodines :: LIKE \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $sql = \"SELECT * FROM tienda where nombre like :nombre or tlf like :tlf\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; setFetchMode(PDO::FETCH_CLASS | PDO::FETCH_PROPS_LATE, Tienda::class);\n\n    $cadBuscar = \"%\" . $busqueda . \"%\";\n\n    $sentencia -&gt; execute([\"nombre\" =&gt; $cadBuscar,\"tlf\" =&gt; $cadBuscar]);\n\n    $result = $sentencia -&gt; fetchAll();\n</code></pre> <p>Teniu una llista d'exemples molt completa en la documentaci\u00f3 oficial.</p>"},{"location":"1val.html#4-login-password","title":"4. Login &amp; Password","text":"<p>Per a manejar un sistema complet de login i password amb contrasenyes xifrades, necessitem un m\u00e8tode que xifre aqueixos strings que l'usuari introdueix com a contrasenya; tant en el formulari de registre com en el del login, ja que en codificar una contrasenya, despr\u00e9s hem de descodificar-la per a comprovar que totes dues *contrasenyes (la que introdueix l'usuari en el login i la que tenim en la base de dades) coincidisquen.</p> <p>Necessitem doncs:</p> <ul> <li><code>password_hash()</code> per a emmagatzemar la contrasenya en la base de dades a l'hora de fer el INSERT</li> <li> <p><code>PASSWORD_DEFAULT</code> emmagatzemem la contrasenya usant el m\u00e8tode d'encriptaci\u00f3 bcrypt</p> </li> <li> <p><code>PASSWORD_BCRYPT</code> emmagatzemem la contrasenya usant l'algorisme CRYPT_BLOWFISH compatible amb crypt()</p> </li> <li> <p><code>password_verify()</code> per a verificar l'usuari i la contrasenya</p> </li> </ul> <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Almacenando usuario y password en BD \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $usu = $_POST[\"usuario\"];\n    $pas = $_POST[\"password\"];\n\n    $sql = \"INSERT INTO usuarios(usuario, password) VALUES (:usuario, :password)\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n\n    $isOk = $sentencia -&gt; execute([\n        \"usuario\" =&gt; $usu,\n        \"password\" =&gt; password_hash($pas,PASSWORD_DEFAULT)\n    ]);\n</code></pre> <p>Ara que tenim l'usuari codificat i guardat en la base de dades, el recuperarem per a poder loguejar-lo correctament. <pre><code>&lt;?php\n    //  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Recuperando usuario y password en BD \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n    $usu = $_POST[\"login\"] ?? \"\";\n\n    $sql = \"select * from usuarios where usuario = ?\";\n\n    $sentencia = $conexion -&gt; prepare($sql);\n    $sentencia -&gt; execute([$usu]);\n\n    $usuario = $sentencia -&gt; fetch();\n\n    if($usuario &amp;&amp; password_verify($_POST['pass'], $usuario['password'])) {\n        echo\"OK!\";\n    } else {\n        echo\"KO\";\n    }\n</code></pre></p>"},{"location":"1val.html#5-querybuilder","title":"5. QueryBuilder","text":"<p>Un Query Builder (Constructor de Consultes) \u00e9s una eina o classe que facilita la creaci\u00f3, execuci\u00f3 i manipulaci\u00f3 de consultes SQL en un programa. L'objectiu principal \u00e9s proporcionar una interf\u00edcie m\u00e9s intu\u00eftiva i segura per interactuar amb bases de dades, sense haver d'escriure consultes SQL en brut.</p> <p>A continuaci\u00f3, detallo algunes de les principals avantatges i caracter\u00edstiques d'un Query Builder com el que has compartit anteriorment:</p> <ul> <li> <ol> <li>Abstracci\u00f3 de la Base de Dades:</li> </ol> </li> <li> <p>El Query Builder proporciona una capa d'abstracci\u00f3 que permet interactuar amb diferents tipus de bases de dades (MySQL, PostgreSQL, SQLite, etc.) sense canviar el codi de la teva aplicaci\u00f3. Aix\u00f2 facilita la portabilitat i l'escalabilitat del codi.</p> </li> <li> <ol> <li>Seguretat:</li> </ol> </li> <li> <p>Prev\u00e9 injeccions SQL: Gr\u00e0cies a l'\u00fas de sent\u00e8ncies preparades i enlla\u00e7ament de par\u00e0metres, el Query Builder ajuda a prevenir atacs d'injecci\u00f3 SQL, una de les amenaces m\u00e9s comunes en desenvolupament web.</p> </li> <li> <ol> <li>Sintaxi M\u00e9s Neta i M\u00e9s F\u00e0cil:</li> </ol> </li> <li> <p>Els Query Builders solen proporcionar una sintaxi m\u00e9s neta i f\u00e0cil d'entendre que les cadenes SQL pures. Aix\u00f2 fa que el codi sigui m\u00e9s llegible i f\u00e0cil de mantenir.</p> </li> <li> <ol> <li>Reutilitzaci\u00f3 de Codi:</li> </ol> </li> <li> <p>Les funcions del Query Builder es poden reutilitzar a tot el projecte, reduint la duplicaci\u00f3 de codi i facilitant el manteniment.</p> </li> <li> <ol> <li>Flexibilitat:</li> </ol> </li> <li> <p>Permet realitzar consultes complexes amb una sintaxi simplificada, facilitant l'adaptaci\u00f3 del codi a canvis en els requeriments de l'aplicaci\u00f3.</p> </li> <li> <ol> <li>Desenvolupament M\u00e9s R\u00e0pid:</li> </ol> </li> <li> <p>Ajuda a accelerar el proc\u00e9s de desenvolupament, ja que els desenvolupadors no necessiten recordar la sintaxi SQL exacta per a cada tipus de base de dades.</p> </li> <li> <ol> <li>F\u00e0cil de Depurar:</li> </ol> </li> <li> <p>El codi generat pel Query Builder \u00e9s m\u00e9s f\u00e0cil de depurar en comparaci\u00f3 amb les llargues cadenes SQL.</p> </li> <li> <ol> <li>Suport per a Operacions CRUD:</li> </ol> </li> <li>Els Query Builders solen incloure suport integrat per a operacions CRUD (Crear, Llegir, Actualitzar, Esborrar), fent m\u00e9s f\u00e0cil la manipulaci\u00f3 de dades.</li> </ul> <p>En resum, un Query Builder serveix per simplificar la interacci\u00f3 amb bases de dades, proporcionant una interf\u00edcie m\u00e9s segura, neta i f\u00e0cil d'utilitzar que les cadenes SQL pures. Ajuda a accelerar el desenvolupament, facilita el manteniment i millora la seguretat de l'aplicaci\u00f3. Ac\u00ed en tenim un exemple de construcci\u00f3 casera:</p> <pre><code>&lt;?php\n\nnamespace BatBook;\n\nuse PDO;\n\nclass QueryBuilder\n{\n    // Aquesta funci\u00f3 serveix per a construir i executar consultes SQL de tipus SELECT.\n    // Es pot filtrar per valors, limitar la quantitat de resultats i establir un offset.\n    public static function sql($class, $values=null, $limit = null, $offset = null)\n    {\n        // Obt\u00e9 el nom de la taula a partir de la propietat est\u00e0tica $nameTable de la classe passada com argument.\n        $table = $class::$nameTable;\n\n        // Obt\u00e9 una connexi\u00f3 a la base de dades.\n        $conn = Connection::get();\n\n        // Construeix la consulta SQL b\u00e0sica.\n        $sql = \"SELECT * FROM $table\";\n\n        // Afegeix condicions WHERE si es proporcionen valors per a filtrar.\n        if ($values) {\n            $sql .= \" WHERE \";\n            foreach (array_keys($values) as $key =&gt; $id) {\n                if ($key != 0) {\n                    $sql .= \" AND $id=:$id\";\n                } else {\n                    $sql .= \"$id=:$id\";\n                }\n            }\n        }\n\n        // Afegeix les cl\u00e0usules LIMIT i OFFSET si s\u00f3n necess\u00e0ries.\n        if (isset($limit) &amp;&amp; isset($offset)) {\n            $sql .= \" LIMIT $limit OFFSET $offset\";\n        }\n\n        // Prepara la sent\u00e8ncia SQL.\n        $sentence = $conn-&gt;prepare($sql);\n\n        // Enlla\u00e7a els valors a la sent\u00e8ncia.\n        foreach ($values??[] as $key =&gt; $value) {\n            $sentence-&gt;bindValue(\":$key\", $value);\n        }\n\n        // Estableix el mode de recuperaci\u00f3 a objectes de la classe especificada.\n        $sentence -&gt; setFetchMode(PDO::FETCH_CLASS | PDO::FETCH_PROPS_LATE , $class);\n\n        // Executa la consulta.\n        $sentence -&gt; execute();\n\n        // Retorna tots els resultats obtinguts.\n        return  $sentence-&gt;fetchAll();\n    }\n\n    // Aquesta funci\u00f3 serveix per a trobar una fila en una taula basant-se en el seu ID.\n    public static function find($class, $id)\n    {\n        //TODO\n    }\n\n    // Aquesta funci\u00f3 serveix per a insertar una fila en una taula.\n    public static function insert($class, $values)\n    {\n        $table = $class::$nameTable;\n        $conn = Connection::get();\n        $sql = \"INSERT INTO $table (\";\n        foreach (array_keys($values) as $key =&gt; $id) {\n            if ($key != 0) {\n                $sql .= ','.$id;\n            } else {\n                $sql .= $id;\n            }\n        }\n        $sql .= \") VALUES (\";\n        foreach (array_keys($values) as $key =&gt; $id) {\n            if ($key != 0) {\n                $sql .= ',:'.$id;\n            } else {\n                $sql .= ':'.$id;\n            }\n        }\n        $sql .= \")\";\n        $sentence = $conn-&gt;prepare($sql);\n        foreach ($values as $key =&gt; $value) {\n            $sentence-&gt;bindValue(\":$key\", $value);\n        }\n        $sentence -&gt; execute();\n        return $conn-&gt;lastInsertId();\n    }\n\n    // Aquesta funci\u00f3 serveix per a actualitzar una fila en una taula.\n    public static function update($class, $values, $id)\n    {\n        $table = $class::$nameTable;\n        $conn = Connection::get();\n        $sql = \"UPDATE $table SET \";\n        foreach (array_keys($values) as $key =&gt; $value) {\n            if ($key != 0) {\n                $sql .= ','.$value.'=:'.$value;\n            } else {\n                $sql .= $value.'=:'.$value;\n            }\n        }\n        $sql .= \" WHERE id=:id\";\n        $sentence = $conn-&gt;prepare($sql);\n        foreach ($values as $key =&gt; $value) {\n            $sentence-&gt;bindValue(\":$key\", $value);\n        }\n        $sentence-&gt;bindValue(\":id\", $id);  \n        $sentence -&gt; execute();\n        return $id;\n    }\n\n    // Aquesta funci\u00f3 serveix per a eliminar una fila en una taula basant-se en el seu ID.\n    public static function delete($class, $id)\n    {\n        //TODO\n    }\n}\n</code></pre> <p>En resum, aquesta classe proporciona funcions est\u00e0tiques per a la construcci\u00f3 i execuci\u00f3 de consultes SQL b\u00e0siques com SELECT, INSERT, UPDATE, i DELETE. Utilitza l'extensi\u00f3 PDO per a la connexi\u00f3 a bases de dades i la preparaci\u00f3 de sent\u00e8ncies SQL, la qual cosa ajuda a prevenir injeccions SQL. Tamb\u00e9 permet la manipulaci\u00f3 f\u00e0cil de files en bases de dades, tot retornant objectes de la classe especificada.</p>"},{"location":"1val.html#respotes-derror","title":"Respotes d'error","text":"<p>Quan no trebem un recurs en al nostra web, podem mostrar a l'usuari una p\u00e0gina espec\u00edfica d'error utilitzant la funci\u00f3 header. Una t\u00edpica seria:</p> <pre><code>&lt;!-- not-found.php --&gt;\n&lt;?php http_response_code(404); ?&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;No trobat&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;404 - P\u00e0gina no trobada&lt;/h1&gt;\n    &lt;p&gt;Ho sentim, la p\u00e0gina que est\u00e0s buscant no s'ha pogut trobar.&lt;/p&gt;\n    &lt;a href=\"index.php\"&gt;Torna a l'inici&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>I per a utilitzar-la:</p> <pre><code>&lt;?php\nheader(\"Location: not-found.php\");\nexit;\n?&gt;\n</code></pre>"},{"location":"1val.html#6-acces-a-fitxers","title":"6. Acc\u00e8s a fitxers","text":"<p>Gr\u00e0cies a la funci\u00f3 fopen() des de PHP podem obrir arxius que es troben en els nostres servidor o una URL.</p> <p>A aquesta funci\u00f3 cal passar-li 2 par\u00e0metres; el nom de l'arxiu que volem obrir i la manera en qu\u00e8 s'obrir\u00e0</p> <pre><code>$fp = fopen(\"miarchivo.txt\", \"r\");\n</code></pre> <p>Moltes vegades no podem obrir l'arxiu perqu\u00e8 aquest no es troba o no tenim acc\u00e9s a ell, per aix\u00f2 \u00e9s recomanable comprovar que podem fer-ho</p> <pre><code>if (!$fp = fopen(\"miarchivo.txt\", \"r\")){\n    echo \"No se ha podido abrir el archivo\";\n}\n</code></pre>"},{"location":"1val.html#maneres-dobertura-de-fitxers","title":"Maneres d'obertura de fitxers","text":"<ul> <li><code>r</code>: Manera lectura. Punter al principi de l'arxiu.</li> <li><code>r+</code>: Obertura per a lectura i escriptura. Punter al principi de l'arxiu</li> <li><code>w</code>: Obertura per a escriptura. Punter al principi de l'arxiu i el sobreescriu. Si no existeix s'intenta crear.</li> <li><code>w+</code>: Obertura per a lectura i escriptura. Punter al principi de l'arxiu i el sobreescriu. Si no existeix s'intenta crear.</li> <li><code>a</code>: Obertura per a escriptura. Punter al final de l'arxiu. Si no existeix s'intenta crear.</li> <li><code>a+</code>: Obertura per a lectura i escriptura. Punter al final de l'arxiu. Si no existeix s'intenta crear.</li> <li><code>x</code>: Creaci\u00f3 i obertura per a nom\u00e9s escriptura. Punter al principi de l'arxiu. Si l'arxiu ja existeix donar\u00e0 error E_*WARNING. Si no existeix s'intenta crear.</li> <li><code>x+</code>: Creaci\u00f3 i obertura per a lectura i escriptura. Mateix comportament que x.</li> <li><code>c</code>: Obertura per a escriptura. Si no existeix es crea. Si existeix no se sobreescriu ni dona cap error. Punter al principi de l'arxiu.</li> <li><code>c+</code>: Obertura per a lectura i escriptura. Mateix comportament que C.</li> <li><code>b</code>: Quan es treballa amb arxius binaris com jpg, pdf, png i altres. Se sol col\u00b7locar al final de la manera, \u00e9s a dir rb, r+b, x+b, wb...</li> </ul>"},{"location":"1val.html#operacions-amb-arxius","title":"Operacions amb arxius","text":"<p>Per a poder llegir un arxiu necessitem usar la funci\u00f3 fread() de PHP</p> <pre><code>//  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Abriendo un archivo y leyendo su contenido \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n$file = \"miarchivo.txt\";\n$fp = fopen($file, \"r\");\n\n// filesize() nos devuelve el tama\u00f1o del archivo en cuesti\u00f3n\n$contents = fread($fp, filesize($file));\n\n// Cerramos la conexi\u00f3n con el archivo\nfclose();\n</code></pre> <p>Si el que volem \u00e9s escriure en un arxiu, haurem de fer \u00fas de la funci\u00f3 fwrite()</p> <pre><code>//  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Escribiendo en un archivo \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n$file = \"miarchivo.txt\";\n$texto = \"Hola que tal\";\n\n$fp = fopen($file, \"w\");\n\nfwrite($fp, $texto);\nfclose($fp);\n</code></pre>"},{"location":"1val.html#informacio-dun-fitxer","title":"Informaci\u00f3 d'un fitxer","text":"<p>Amb PHP i el seu m\u00e8tode stat() podem obtindre informaci\u00f3 sobre els arxius que li indiquem. Aquest m\u00e8tode retorna fins a un total de 12 elements amb informaci\u00f3 sobre el nostre arxiu.</p> <p>0   dev    n\u00famero de dispositiu 1   ino    n\u00famero d'i-node 2   mode   manera de protecci\u00f3 de l'i-node 3   nlink  nombre d'enlla\u00e7os 4   uid    ID d'usuari del propietari 5   gid    ID de grup del propietari 6   rdev   tipus de dispositiu, si \u00e9s un dispositiu i-node 7   size   grand\u00e0ria en bytes 8   atime  moment de l'\u00faltim acc\u00e9s (temps Unix) 9   mtime  moment de l'\u00faltima modificaci\u00f3 (temps Unix) 10  ctime  moment de l'\u00faltima modificaci\u00f3 de l'i-node (temps Unix) 11  blksize    grand\u00e0ria del bloc E/S del sistema de fitxers 12  blocks     nombre de blocs de 512 bytes assignats</p> <p>Uns exemples...</p> <pre><code>&lt;?php\n\n//  \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592 Informaci\u00f3n del archivo \u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\n\n$file = \"miarchivo.txt\";\n$texto = \"Todos somos muy ignorantes, lo que ocurre es que no todos ignoramos las mismas cosas.\";\n\n$fp = fopen($file, \"w\");\nfwrite($fp, $texto);\n\n$datos = stat($file);\n\necho $datos[3] . \"&lt;br&gt;\"; // N\u00famero de enlaces, 1\necho $datos[7] . \"&lt;br&gt;\"; // Tama\u00f1o en bytes, 85\necho $datos[8] . \"&lt;br&gt;\"; // Momento de \u00faltimo acceso, 1444138104\necho $datos[9] . \"&lt;br&gt;\"; // Momento de \u00faltima modificaci\u00f3n, 1444138251\n\n?&gt;\n</code></pre> <p>Dona una ullada a les funcions de directoris que t\u00e9 PHP, \u00e9s molt interessant.</p>"},{"location":"1val.html#7-web-scraping","title":"7. Web Scraping","text":"<p>Consisteix a navegar a una p\u00e0gina web i extraure informaci\u00f3 autom\u00e0ticament, a partir del codi HTML generat, i organitzar la informaci\u00f3 p\u00fablica disponible en Internet. Aquesta pr\u00e0ctica requereix l'\u00fas d'una llibreria que facilite la desc\u00e0rrega de la informaci\u00f3 desitjada imitant la interacci\u00f3 d'un navegador web. Aquest \"robot\" pot accedir a diverses p\u00e0gines simult\u00e0niament.</p> <p>\u00bf\u00c9s legal?</p> <p>Si el lloc web indica que t\u00e9 el contingut protegit per drets d'autor o en les normes d'acc\u00e9s via usuari/contrasenya ens avisa de la seua prohibici\u00f3, estar\u00edem incorrent en un delicte. \u00c9s recomanable estudiar l'arxiu <code>robots.txt</code> que es troba en l'arrel de cada lloc web. M\u00e9s informaci\u00f3 en l'article El manual complet per al web scraping legal i \u00e8tic en 2021</p>"},{"location":"1val.html#goutte","title":"Goutte","text":"<p>Goutte \u00e9s un senzill client HTTP per a PHP creat espec\u00edficament per a fer web scraping. Ho va desenvolupar el mateix autor del framework Symfony i ofereix un API senzilla per a extraure dades de les respostes HTML/XML dels llocs web.</p> <p>Els components principals que abstrau Goutte sobre Symfony s\u00f3n:</p> <ul> <li><code>BrowserKit</code>: simula el comportament d'un navegador web.</li> <li><code>CssSelector</code>: tradueix consultes CSS en consultes XPath.</li> <li><code>DomCrawler</code>: facilita l'\u00fas del DOM i XPath.</li> </ul> <p>Per a poder utilitzar Goutte en el nostre projecte, executarem el seg\u00fcent comando en el terminal:</p> <pre><code>composer require fabpot/goutte\n</code></pre>"},{"location":"1val.html#goutte-con-selectores-css","title":"Goutte con selectores CSS","text":"<p>A continuaci\u00f3 farem un exemple molt senzill utilitzant els selectors CSS, extraient informaci\u00f3 de la web <code>https://books.toscrape.com/</code>, la qual \u00e9s una p\u00e0gina per a proves que no rebutjar\u00e0 les nostres peticions.</p> <p>Despr\u00e9s de crear un client amb Goutte, hem de realitzar un petici\u00f3 a una URL. Amb la resposta obtinguda, podem utilitzar el m\u00e8tode <code>filter</code> per a indicar-li la ruta CSS que volem rec\u00f3rrer i iterar sobre els resultats mitjan\u00e7ant una funci\u00f3 an\u00f2nima. Una vegada estem dins d'un determinat node, el m\u00e8tode <code>text()</code> ens retornar\u00e0 el contingut del propi node.</p> <p>En concret, ficarem en un array associatiu el t\u00edtol i el preu de tots els llibres de la categoria Classics.</p> <pre><code>&lt;?php\nrequire '../vendor/autoload.php';\n\n$httpClient = new \\Goutte\\Client();\n$response = $httpClient-&gt;request('GET', 'https://books.toscrape.com/catalogue/category/books/classics_6/index.html');\n// colocamos los precios en un array\n$precios = [];\n$response-&gt;filter('.row li article div.product_price p.price_color')-&gt;each(\n    // le pasamos $precios por referencia para poder editarla dentro del closure\n    function ($node) use (&amp;$precios) {\n        $precios[] = $node-&gt;text();\n    }\n);\n\n// colocamos el nombre y el precio en un array asociativo\n$contadorPrecios = 0;\n$libros = [];\n$response-&gt;filter('.row li article h3 a')-&gt;each(\n    function ($node) use ($precios, &amp;$contadorPrecios, &amp;$libros) {\n        $libros[$node-&gt;text()] = $precios[$contadorPrecios];\n        $contadorPrecios++;\n    }\n);\n</code></pre>"},{"location":"1val.html#crawler","title":"Crawler","text":"<p>Un cas molt com\u00fa \u00e9s obtindre la informaci\u00f3 d'una p\u00e0gina que t\u00e9 els resultats paginados, de manera que anem recorrent els enlla\u00e7os i accedint a cadascun dels resultats.</p> <p>En aquest cas agafarem tots els preus dels llibres de fantasia, i els sumarem:</p> <pre><code>&lt;?php\nrequire '../vendor/autoload.php';\n\nuse Goutte\\Client;\nuse Symfony\\Component\\HttpClient\\HttpClient;\n\n$client = new Client(HttpClient::create(['timeout' =&gt; 60]));\n$crawler = $client-&gt;request('GET', 'https://books.toscrape.com/catalogue/category/books/fantasy_19/index.html');\n\n$salir = false;\n\n$precios = [];\nwhile (!$salir) {\n    $crawler-&gt;filter('.row li article div.product_price p.price_color')-&gt;each(\n        function ($node) use (&amp;$precios) {\n            $texto = $node-&gt;text();\n            $cantidad = substr($texto, 2); // Le quitamos las libras \u00bf2 posiciones?\n            $precios[] = floatval($cantidad);\n        }\n    );\n\n    $enlace = $crawler-&gt;selectLink('next');\n    if ($enlace-&gt;count() != 0) {\n        // el enlace next existe\n        $sigPag = $crawler-&gt;selectLink('next')-&gt;link();\n        $crawler = $client-&gt;click($sigPag); // hacemos click\n    } else {\n        // ya no hay enlace next\n        $salir = true;\n    }\n}\n\n$precioTotal = array_sum($precios);\necho $precioTotal;\n</code></pre>"},{"location":"1val.html#8-exercisis","title":"8. Exercisis","text":""},{"location":"1val.html#bateria-dexercicis-solucionats","title":"Bateria d'exercicis solucionats","text":""},{"location":"1val.html#exercici-1-connexio-basica","title":"Exercici 1. Connexi\u00f3 b\u00e0sica","text":"<ol> <li>Crea un fitxer PHP que fa\u00e7a una connexi\u00f3 a una base de dades MySQL utilitzant PDO.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\ntry {\n    $dsn = 'mysql:host=db;dbname=pruebadb';\n    $usuari = 'root';\n    $contrasenya = '1234';\n    $pdo = new PDO($dsn, $usuari, $contrasenya);\n    echo \"Connexi\u00f3 establerta!\";\n} catch (PDOException $e) {\n    echo \"Error de connexi\u00f3: \" . $e-&gt;getMessage();\n}\n</code></pre>"},{"location":"1val.html#exercici-2-inserir-un-registre","title":"Exercici 2. Inserir un registre","text":"<ol> <li>Escriu una funci\u00f3 que insereixi un nou usuari a la taula <code>users</code> amb el nom i correu electr\u00f2nic passats per par\u00e0metre.</li> </ol> Soluci\u00f3 <pre><code>function inserirUsuari($nom, $correu) {\n    global $pdo;\n    $sql = \"INSERT INTO users (nom, correu) VALUES (:nom, :correu)\";\n    $stmt = $pdo-&gt;prepare($sql);\n    $stmt-&gt;bindParam(':nom', $nom);\n    $stmt-&gt;bindParam(':correu', $correu);\n    $stmt-&gt;execute();\n    echo \"Usuari inserit!\";\n}\n</code></pre>"},{"location":"1val.html#exericici-3-recuperar-dades","title":"Exericici 3. Recuperar dades","text":"<ol> <li>Fes una consulta SQL que mostri tots els usuaris registrats a la taula <code>users</code> i mostra'ls en una taula HTML.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nfunction mostrarUsuaris() {\n    global $pdo;\n    $sql = \"SELECT * FROM users\";\n    $stmt = $pdo-&gt;query($sql);\n    echo \"&lt;table&gt;\";\n    while ($fila = $stmt-&gt;fetch(PDO::FETCH_ASSOC)) {\n        echo \"&lt;tr&gt;&lt;td&gt;{$fila['nom']}&lt;/td&gt;&lt;td&gt;{$fila['correu']}&lt;/td&gt;&lt;/tr&gt;\";\n    }\n    echo \"&lt;/table&gt;\";\n}\n</code></pre>"},{"location":"1val.html#exercici-4-actualitzar-dades","title":"Exercici 4. Actualitzar dades","text":"<ol> <li>Escriu una funci\u00f3 que actualitzi el correu electr\u00f2nic d'un usuari segons el seu identificador (<code>id</code>).</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nfunction actualitzarCorreu($id, $nouCorreu) {\n    global $pdo;\n    $sql = \"UPDATE users SET correu = :correu WHERE id = :id\";\n    $stmt = $pdo-&gt;prepare($sql);\n    $stmt-&gt;execute([':correu' =&gt; $nouCorreu, ':id' =&gt; $id]);\n    echo \"Correu actualitzat!\";\n}\n</code></pre>"},{"location":"1val.html#exercici-5-eliminar-un-registre","title":"Exercici 5. Eliminar un registre","text":"<ol> <li>Implementa un script que esborri un usuari per identificador (<code>id</code>).</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\nfunction eliminarUsuari($id) {\n    global $pdo;\n    $sql = \"DELETE FROM users WHERE id = :id\";\n    $stmt = $pdo-&gt;prepare($sql);\n    $stmt-&gt;execute([':id' =&gt; $id]);\n    echo \"Usuari eliminat!\";\n}\n</code></pre>"},{"location":"1val.html#exercici-6-tractament-derrors","title":"Exercici 6. Tractament d'errors","text":"<ol> <li>Modifica el codi anterior per gestionar els errors amb <code>try-catch</code> i mostrar missatges d'error clars.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n try {\n    actualitzarCorreu(5, 'noucorreu@example.com');\n} catch (PDOException $e) {\n    echo \"Error en actualitzar: \" . $e-&gt;getMessage();\n}\n</code></pre>"},{"location":"1val.html#exercici-7-us-de-query-builder","title":"Exercici 7. \u00das de Query Builder","text":"<ol> <li>Utilitza un Query Builder per fer consultes a la base de dades de manera m\u00e9s f\u00e0cil i segura sense escriure SQL expl\u00edcitament.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n#  \u00das de Query Builder (amb Laravel com a exemple)\nuse Illuminate\\Support\\Facades\\DB;\n\nfunction obtenirUsuaris() {\n    $usuaris = DB::table('users')-&gt;get();\n    foreach ($usuaris as $usuari) {\n        echo $usuari-&gt;nom . ' - ' . $usuari-&gt;correu . \"&lt;br&gt;\";\n    }\n}\n</code></pre>"},{"location":"1val.html#exercici-8-tractament-de-fitxers","title":"Exercici 8. Tractament de fitxers","text":"<ol> <li>Crea un script que llegeixi un fitxer CSV i insereixi les dades en una taula de la base de dades.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n\nfunction llegirCSV($fitxerCSV) {\n    global $pdo;\n    if (($gestor = fopen($fitxerCSV, \"r\")) !== FALSE) {\n        while (($dades = fgetcsv($gestor, 1000, \",\")) !== FALSE) {\n            $sql = \"INSERT INTO users (nom, correu) VALUES (:nom, :correu)\";\n            $stmt = $pdo-&gt;prepare($sql);\n            $stmt-&gt;execute([':nom' =&gt; $dades[0], ':correu' =&gt; $dades[1]]);\n        }\n        fclose($gestor);\n        echo \"Dades inserides des del CSV!\";\n    }\n}\n</code></pre>"},{"location":"1val.html#exercici-9-web-scraping","title":"Exercici 9. Web Scraping","text":"<ol> <li>Utilitza Goutte per a fer web scraping a la p\u00e0gina <code>https://books.toscrape.com/</code> i extreu el t\u00edtol i preu de tots els llibres de la categoria <code>Classics</code>.</li> <li>Mostra els resultats en una taula HTML.</li> <li>Suma tots els preus i mostra el preu total.</li> <li>Modifica el codi per a rec\u00f3rrer totes les p\u00e0gines de resultats.</li> </ol> Soluci\u00f3 <pre><code>&lt;?php\n     require '../vendor/autoload.php';\n\n\n     use Goutte\\Client;\n     use Symfony\\Component\\HttpClient\\HttpClient;\n\n     $client = new Client(HttpClient::create(['timeout' =&gt; 60]));\n     $crawler = $client-&gt;request('GET', 'https://books.toscrape.com/catalogue/category/books/classics_6/index.html');\n\n     $salir = false;\n\n     $precios = [];\n     while (!$salir) {\n         $crawler-&gt;filter('.row li article div.product_price p.price_color')-&gt;each(\n             function ($node) use (&amp;$precios) {\n                 $texto = $node-&gt;text();\n                 $cantidad = substr($texto, 2); // Le quitamos las libras \u00bf2 posiciones?\n                 $precios[] = floatval($cantidad);\n             }\n         );\n\n         $enlace = $crawler-&gt;selectLink('next');\n         if ($enlace-&gt;count() != 0) {\n             // el enlace next existe\n             $sigPag = $crawler-&gt;selectLink('next')-&gt;link();\n             $crawler = $client-&gt;click($sigPag); // hacemos click\n         } else {\n             // ya no hay enlace next\n             $salir = true;\n         }\n     }    \n\n     $precioTotal = array_sum($precios);\n     echo $precioTotal;\n</code></pre>"},{"location":"1val.html#exercicis-proposats_3","title":"Exercicis proposats","text":""},{"location":"1val.html#exercici-1-creacio-duna-base-de-dades","title":"Exercici 1: Creaci\u00f3 d'una base de dades","text":"<ol> <li> <p>Descripci\u00f3:    Crea una base de dades amb una taula <code>empleats</code> que tinga els camps <code>id</code>, <code>nom</code>, <code>cognom</code> i <code>sou</code>.</p> </li> <li> <p>Requisits:</p> <ul> <li>Crear la base de dades i la taula.</li> <li>Definir els tipus de dades adequats per als camps.</li> </ul> </li> </ol>"},{"location":"1val.html#exercici-2-llistat-dempleats","title":"Exercici 2: Llistat d'empleats","text":"<ol> <li> <p>Descripci\u00f3:    Crea un script PHP que mostre tots els empleats de la taula <code>empleats</code> en una taula HTML.</p> </li> <li> <p>Requisits:</p> <ul> <li>Connectar-se a la base de dades.</li> <li>Recuperar els empleats i mostrar-los en una taula HTML.</li> </ul> </li> </ol>"},{"location":"1val.html#exercici-3-formulari-per-a-afegir-empleats","title":"Exercici 3: Formulari per a afegir empleats","text":"<ol> <li> <p>Descripci\u00f3:    Afegeix un formulari HTML que permeta afegir nous empleats a la taula <code>empleats</code>.</p> </li> <li> <p>Requisits:</p> <ul> <li>Crear un formulari per a introduir el <code>nom</code>, <code>cognom</code> i <code>sou</code> de l'empleat.</li> <li>Crear un script PHP per a gestionar la inserci\u00f3 de nous empleats en la taula.</li> </ul> </li> </ol>"},{"location":"1val.html#exercici-4-formulari-per-a-actualitzar-el-sou-dun-empleat","title":"Exercici 4: Formulari per a actualitzar el sou d'un empleat","text":"<ol> <li> <p>Descripci\u00f3:    Afegeix un formulari per a modificar el sou d'un empleat existent.</p> </li> <li> <p>Requisits:</p> <ul> <li>Crear un formulari per a seleccionar l'empleat i introduir el nou sou.</li> <li>Escriure un script PHP per a actualitzar el sou en la base de dades.</li> </ul> </li> </ol>"},{"location":"1val.html#exercici-5-formulari-per-a-eliminar-un-empleat","title":"Exercici 5: Formulari per a eliminar un empleat","text":"<ol> <li> <p>Descripci\u00f3:    Afegeix un formulari per a eliminar un empleat de la taula <code>empleats</code>.</p> </li> <li> <p>Requisits:</p> <ul> <li>Crear un formulari per a seleccionar l'empleat a eliminar.</li> <li>Escriure un script PHP per a eliminar l'empleat de la base de dades.</li> </ul> </li> </ol>"},{"location":"1val.html#exercici-6-creacio-de-la-classe-empleat","title":"Exercici 6: Creaci\u00f3 de la classe <code>Empleat</code>","text":"<ol> <li> <p>Descripci\u00f3:    Crea una classe <code>Empleat</code> en PHP amb els atributs <code>id</code>, <code>nom</code>, <code>cognom</code> i <code>sou</code> i utilitza-la per a representar els empleats.</p> </li> <li> <p>Requisits:</p> <ul> <li>Definir la classe <code>Empleat</code> amb els seus atributs.</li> <li>Modificar els exercicis anteriors per a utilitzar aquesta classe en lloc de variables simples.</li> </ul> </li> </ol>"},{"location":"1val.html#exercici-7completa-el-query-builder-seleccionat","title":"Exercici 7:Completa el Query Builder seleccionat","text":"<ol> <li> <p>Descripci\u00f3:    Completa el QueryBuilder seleccionat.</p> </li> <li> <p>Requisits:    - Implementar el Query Builder en les operacions de consulta,   i eliminaci\u00f3.</p> </li> </ol>"},{"location":"1val.html#exercici-8-us-dun-query-builder","title":"Exercici 8: \u00das d'un Query Builder","text":"<ol> <li> <p>Descripci\u00f3:    Modifica els exercicis anteriors per a utilitzar un Query Builder per a fer les consultes a la base de dades.</p> </li> <li> <p>Requisits:</p> <ul> <li>Implementar el Query Builder en les operacions de consulta, inserci\u00f3, actualitzaci\u00f3 i eliminaci\u00f3.</li> </ul> </li> </ol>"},{"location":"1val.html#exercici-9-poblar-la-taula-amb-dades-de-webscraping","title":"Exercici 9: Poblar la taula amb dades de webscraping","text":"<ol> <li> <p>Descripci\u00f3:    Modifica l'exercici de webscraping per a poblar una taula de la base de dades amb els llibres de la categoria <code>Classics</code> de la p\u00e0gina <code>https://books.toscrape.com/</code>.</p> </li> <li> <p>Requisits:</p> <ul> <li>Realitzar el webscraping de la p\u00e0gina esmentada.</li> <li>Inserir els llibres en una taula de la base de dades.</li> </ul> </li> </ol>"},{"location":"1val.html#9-enunciat-dels-projectes","title":"9. Enunciat dels projectes","text":""},{"location":"1val.html#projecte-4-en-ratlla_3","title":"Projecte  \"4 en Ratlla\"","text":""},{"location":"1val.html#1-autenticacio-dusuaris-i-gestio-de-partides-guardades","title":"1. Autenticaci\u00f3 d'Usuaris i Gesti\u00f3 de Partides Guardades","text":"<ol> <li> <p>Registre d'Usuari:    - Crea un formulari de login perqu\u00e8 el usuaris s'hagen de validar .    - Si l'usuari no est\u00e0 registrat es donar\u00e0 d'alta autom\u00e0ticament i se li permetr\u00e0 entrar.    - Despr\u00e9s de validar-se o registrar-se es mostrar\u00e0 la pantalla de triar nom i color.</p> </li> <li> <p>Opcions noves </p> </li> </ol> <ul> <li>Guardar Partida: Es guardar\u00e0 l'estat actual de la partida en la BBDD (nom\u00e9s una per usuari, la darrera). Si guardem un altra substituir\u00e0 a l'anterior. </li> <li>Carregar Partida: Es carregar\u00e0 l'estat de la partida guardada per a l'usuari.</li> <li>Tancar sessi\u00f3: Afig una opci\u00f3 perqu\u00e8 l\u2019usuari puga tancar sessi\u00f3 i finalitzar la seua sessi\u00f3 activa.</li> </ul>"},{"location":"1val.html#3-consideracions-addicionals","title":"3. Consideracions Addicionals","text":"<ol> <li> <p>Seguretat:    - Utilitza hashing de contrasenyes amb <code>password_hash()</code> per emmagatzemar-les de forma segura.</p> </li> <li> <p>Millores de la Interf\u00edcie d'Usuari:    - Proporciona missatges clars d'error en cas de contrasenyes incorrectes o usuaris inexistents.    - Implementa una navegaci\u00f3 senzilla per iniciar una nova partida o continuar una partida guardada.</p> </li> <li> <p>Proves:    - Realitza proves per assegurar que l\u2019autenticaci\u00f3 d\u2019usuaris funciona correctament.    - Verifica que les partides es guarden i es recuperen adequadament.</p> </li> </ol>"},{"location":"1val.html#exemple-destructura-de-la-base-de-dades","title":"Exemple d'Estructura de la Base de Dades:","text":"<pre><code>CREATE TABLE `partides` (\n                           `usuari_id` int NOT NULL,\n                           `game` text CHARACTER  \n);\n\nCREATE TABLE `usuaris` (\n                          `id` int NOT NULL,\n                          `nom_usuari` varchar(50) NOT NULL,\n                          `contrasenya` varchar(255) NOT NULL\n);\n\nALTER TABLE `partides`\n   ADD PRIMARY KEY (`usuari_id`);\n\nALTER TABLE `usuaris`\n   ADD PRIMARY KEY (`id`),\n  ADD UNIQUE KEY `nom_usuari` (`nom_usuari`);\n\nALTER TABLE `usuaris`\n   MODIFY `id` int NOT NULL AUTO_INCREMENT;\n\nALTER TABLE `partides`\n   ADD CONSTRAINT `partides_ibfk_1` FOREIGN KEY (`usuari_id`) REFERENCES `usuaris` (`id`) ON DELETE CASCADE;\nCOMMIT;\n</code></pre>"},{"location":"1val.html#projecte-integrador-bloc-1","title":"Projecte Integrador Bloc 1.","text":"Duraci\u00f3 i criteris d'avaluaci\u00f3 <p>Duraci\u00f3 estimada: 16 hores</p> Resultat d'aprenentatge Criteris d'avaluaci\u00f3 3. Escriu blocs de sent\u00e8ncies embeguts en llenguatges de marques, seleccionant i utilitzant les estructures de programaci\u00f3. 4. Desenvolupa aplicacions web embegudes en llenguatges de marques analitzant i incorporant funcionalitats segons especificacions. 5. Desenvolupa aplicacions web identificant i aplicant mecanismes per a separar el codi de presentaci\u00f3 de la l\u00f2gica de negoci. 6. Desenvolupa aplicacions web d'acc\u00e9s a magatzems de dades, aplicant mesures per a mantindre la seguretat i la integritat de la informaci\u00f3"},{"location":"1val.html#enunciat-del-projecte-backend-de-batoibooks","title":"Enunciat del Projecte: Backend de BatoiBooks","text":""},{"location":"1val.html#objectiu-del-projecte","title":"Objectiu del Projecte","text":"<p>Desenvolupar el backend per a l\u2019aplicaci\u00f3 BatoiBooks en PHP, proporcionant:</p> <ul> <li>Autenticaci\u00f3 per token JWT.</li> <li>Interf\u00edcie d\u2019administraci\u00f3 amb funcionalitats avan\u00e7ades, com la generaci\u00f3 de factures en PDF.</li> </ul>"},{"location":"1val.html#funcionalitats-del-backend","title":"Funcionalitats del Backend","text":""},{"location":"1val.html#1-bbdd","title":"1. BBDD","text":"<p>Crear la BBDD i les taules utilitzant el seg\u00fcent sql </p>"},{"location":"1val.html#2-autenticacio-per-al-frontend","title":"2. Autenticaci\u00f3 per al frontEnd","text":"<ol> <li> <p>Registre: Endpoint per registrar nous usuaris. Rebr\u00e0 dades com <code>email</code>, <code>nick</code> i <code>password</code>, i retornar\u00e0 un token JWT per a la sessi\u00f3 de l\u2019usuari.</p> </li> <li> <p>Login: Endpoint per a l'inici de sessi\u00f3, on es validar\u00e0 <code>email</code> i <code>password</code>. En cas d'\u00e8xit, es generar\u00e0 un token JWT amb la informaci\u00f3 d'identificaci\u00f3 de l'usuari.</p> </li> <li> <p>Validaci\u00f3 de Token: Cada controlador (excepte el de <code>login</code> i <code>register</code>) requerir\u00e0 un token JWT v\u00e0lid per accedir a qualsevol dada, la qual cosa permetr\u00e0 una gesti\u00f3 segura de la sessi\u00f3.</p> </li> </ol>"},{"location":"1val.html#3-api-rest","title":"3. API REST","text":"<p>Es crear\u00e0 un fitxer PHP espec\u00edfic per a cada entitat, que atendr\u00e0 les operacions CRUD b\u00e0siques. Les taules que es gestionaran s\u00f3n:</p> <ul> <li>Books</li> <li>Users</li> <li>Modules</li> <li>Courses</li> </ul> <p>Per a cada taula es permetran operacions:</p> <ul> <li>GET: Per obtenir dades (llistat o element per ID).</li> <li>POST: Per inserir nous elements.</li> <li>PUT: Per modificar elements existents.</li> <li>DELETE: Per eliminar elements.</li> </ul> <p>Cada operaci\u00f3 validar\u00e0 les dades abans de ser processades i respondr\u00e0 amb els estats corresponents.</p>"},{"location":"1val.html#exemples-de-peticions","title":"Exemples de peticions","text":"<ul> <li>Tornar un llibre</li> </ul> <pre><code>GET /api/books.php?id=2\n</code></pre> <ul> <li>Tornar tots els llibres</li> </ul> <pre><code>GET /api/books.php\n</code></pre> <ul> <li>Afegir un llibre</li> </ul> <pre><code>POST /api/books.php\nContingut JSON: {\n\"userId\": 2,\n\"moduleCode\": \"0011\",\n\"publisher\": \"Apunts\",\n\"price\": 15.00,\n\"pages\": 100,\n\"status\": \"new\",\n\"photo\": \"ruta_foto.jpg\",\n\"comments\": \"En bon estat\"\n}\n</code></pre>"},{"location":"1val.html#4-interficie-dadministrador","title":"4. Interf\u00edcie d\u2019Administrador","text":"<ol> <li>Autenticaci\u00f3 de l'usuari: L'usuari s'autenticar\u00e0 amb un usuari i es comprovar\u00e0 que \u00e9s l'administrador.</li> <li>Acc\u00e9s al CRUD de M\u00f2duls i Cursos: L\u2019usuari administrador podr\u00e0 gestionar completament les taules <code>modules</code> i <code>courses</code>.</li> <li>Generaci\u00f3 de Factures en PDF:<ul> <li>Permetre la selecci\u00f3 de dates i usuaris.</li> <li>Calcular un 10% de l\u2019import total de les vendes per generar la factura.</li> <li>Incloure el logotip de l'aplicaci\u00f3, data de generaci\u00f3, import total i desglossament de vendes.</li> </ul> </li> </ol>"},{"location":"1val.html#exigencies-tecniques","title":"Exig\u00e8ncies T\u00e8cniques","text":"<ul> <li>Utilitzar PHP com a llenguatge del servidor.</li> <li>Estructurar el projecte amb fitxers separats per a cada entitat dins de la carpeta <code>api/</code> i <code>backend</code></li> <li>Utilitzar el format JSON per a la comunicaci\u00f3 entre el client i el servidor.</li> <li>Garantir la seguretat en les peticions autenticades mitjan\u00e7ant el token JWT.</li> <li>Utilitzar en la mesura de lo possible el MVC en el backend i els control\u00b7ladors per a respondre a les peticions de l'API.</li> <li>Cal fer test de la l\u00f2gica de la factura.</li> <li>Cal guardar en un fitxer de log les peticions que es fan a l'api en forma de: Usuari, IP client i M\u00e8tode utilitzat.   </li> <li>Utilitzar, en la mesura de lo possible, exempcions per al maneig d'errors de l'usuari.</li> </ul>"},{"location":"1val.html#exemples-de-resposta","title":"Exemples de resposta","text":"<p>Estos exemples es poden agafar com a refer\u00e8ncia per a la implementaci\u00f3 de l'API. Per\u00f2 nom\u00e9s s\u00f3n la base sobre la que construir una soluci\u00f3 pr\u00f2pia que puga incorporar l'har\u00e8ncia de classes per fer mes eficient i reutilitzable el codi.</p>"},{"location":"1val.html#estructura-de-directoris","title":"Estructura de directoris","text":"<pre><code>App\n\u251c\u2500\u2500 Controllers\n\u2502   \u251c\u2500\u2500 Api\n\u2502   \u2502   \u251c\u2500\u2500 ApiController.php \n\u2502   \u2502   \u251c\u2500\u2500 BookController.php\n\u2502   \u2502   \u251c\u2500\u2500 CourseController.php\n\u2502   \u2502   \u251c\u2500\u2500 ModuleController.php\n\u2502   \u2502   \u2514\u2500\u2500 AuthController.php\n\u2502   \u251c\u2500\u2500 ModuleController.php\n\u2502   \u251c\u2500\u2500 CourseController.php\n\u2502   \u2514\u2500\u2500 AuthController.php\n\u251c\u2500\u2500 Helpers      \n\u251c\u2500\u2500 Exceptions       \n\u251c\u2500\u2500 Models\n\u2502   \u251c\u2500\u2500 Book.php\n\u2502   \u251c\u2500\u2500 Course.php\n\u2502   \u251c\u2500\u2500 Module.php\n\u2502   \u2514\u2500\u2500 User.php\n\u251c\u2500\u2500 Services\n\u2502   \u251c\u2500\u2500 DBService.php\n\u2502   \u2514\u2500\u2500 AuthService.php\n\u251c\u2500\u2500 Views\n\u251c\u2500\u2500 logs \n\u251c\u2500\u2500 tests\n\u251c\u2500\u2500 config\n\u2502   \u2514\u2500\u2500 connection.php\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 api\n\u2502   \u2502   \u251c\u2500\u2500 books.php\n\u2502   \u2502   \u251c\u2500\u2500 courses.php\n\u2502   \u2502   \u251c\u2500\u2500 modules.php\n\u2502   \u2502   \u251c\u2500\u2500 register.php\n\u2502   \u2502   \u2514\u2500\u2500 login.php\n\u2502   \u251c\u2500\u2500 backend\n\u2502   \u2502   \u251c\u2500\u2500 login.php\n\u2502   \u2502   \u251c\u2500\u2500 generateInvoice.php\n\u2502   \u2502   \u251c\u2500\u2500 modules.php\n\u2502   \u2502   \u2514\u2500\u2500 courses.php  \n\u2514\u2500\u2500 \u2514\u2500\u2500 index.php\n</code></pre>"},{"location":"1val.html#api","title":"API","text":""},{"location":"1val.html#postman","title":"POSTMAN","text":"<p>Ac\u00ed tens una col.lecci\u00f3 del POSTMAN per realitzar les peticions i provar-les.</p>"},{"location":"1val.html#dbservicephp","title":"DBService.php","text":"<pre><code>namespace BatoiBook\\Services;\n\nclass DBService\n{\n    public static function connect(): \\PDO\n    {\n        $dbConfig =  require  $_SERVER['DOCUMENT_ROOT'] . '/../config/connection.php';\n\n        try {\n            $dsn = \"mysql:host=\" . $dbConfig['host'] . \";dbname=\" . $dbConfig['dbname'];\n            $db = new \\PDO($dsn, $dbConfig['username'], $dbConfig['password']);\n            $db-&gt;setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);\n        } catch (\\PDOException $e) {\n            die(\"Error de connexi\u00f3: \" . $e-&gt;getMessage());\n        }\n\n        return $db;\n\n    }\n}\n</code></pre>"},{"location":"1val.html#model","title":"Model","text":"<pre><code>namespace BatoiBook\\Models;\n\nclass Course\n{\n   public function __construct(\n   public int $id = 0,\n   public string $course = '',\n   public int $familyId = 0,\n   public string $vliteral = '',\n   public string $cliteral = '' ) \n   {}\n}\n</code></pre>"},{"location":"1val.html#controlador","title":"Controlador","text":"<p>En el ApiController.php es troben les funcions comunes a tots els controladors, com el jsonResponse i errorResponse.  </p> <pre><code>namespace BatoiBook\\Controllers\\Api;\nuse \\PDO;\nuse \\PDOException;\n\nclass CourseController extends ApiController\n{\n    protected PDO $db;\n    public function __construct()\n    {\n        $this-&gt;db = DBService::connect();\n    }\n\n    public function getAll(): void\n    {\n        $stmt = $this-&gt;db-&gt;prepare(\"SELECT * FROM courses\");\n        $stmt-&gt;execute();\n        $stmt-&gt;setFetchMode(PDO::FETCH_CLASS | PDO::FETCH_PROPS_LATE, Course::class);\n\n        $this-&gt;jsonResponse($stmt-&gt;fetchAll());\n    }\n\n    public function getOne(int $id): void\n    {\n        //TODO: Implementar consulta \n        $record = $stmt-&gt;fetch();\n\n        if ($record) {\n            $this-&gt;jsonResponse($record);\n        } else {\n            $this-&gt;errorResponse(\"Record not found\", 404);\n        }\n    }\n\n    public function create(array $data): int\n    {\n        try {\n            //TODO: Implementar inserci\u00f3\n            return $this-&gt;db-&gt;lastInsertId();\n         } catch (PDOException $e) {\n            $this-&gt;errorResponse(\"Failed to create record: \" . $e-&gt;getMessage());\n        }\n    }\n\n    public function update(int $id, array $data): void\n    {\n        try {\n            //TODO: Implementar actualitzaci\u00f3\n\n            $stmt-&gt;execute();\n            if ($stmt-&gt;rowCount() &gt; 0) {\n                $this-&gt;jsonResponse([\"message\" =&gt; \"Record updated successfully\"]);\n            } else {\n                $this-&gt;errorResponse(\"Record not found\", 404);\n            }\n        } catch (PDOException $e) {\n            $this-&gt;errorResponse(\"Failed to update record: \" . $e-&gt;getMessage());\n        }\n    }\n\n    public function delete(int $id): void\n    {\n        //TODO: Implementar eliminaci\u00f3\n        if ($stmt-&gt;rowCount() &gt; 0) {\n            $this-&gt;jsonResponse([\"message\" =&gt; \"Record deleted successfully\"]);\n        } else {\n            $this-&gt;errorResponse(\"Record not found\", 404);\n        }\n    }\n}\n</code></pre>"},{"location":"1val.html#coursesphp","title":"courses.php","text":"<pre><code>require_once $_SERVER['DOCUMENT_ROOT'] . '/../vendor/autoload.php';\nrequire_once $_SERVER['DOCUMENT_ROOT'] . '/../Helpers/functions.php';\n\nuse BatoiBook\\Controllers\\Api\\CourseController;\n\nheader(\"Content-Type: application/json\");\n\n$controller = new CourseController();\n$method = $_SERVER['REQUEST_METHOD'];\n$id = isset($_GET['id']) ? (int)$_GET['id'] : null;\n\nswitch ($method) {\n    case 'GET':\n        if (isset($id)) {\n            $controller-&gt;getOne($id);\n        } else {\n            $controller-&gt;getAll ();\n       }\n        break;\n    case 'POST':\n        $data = json_decode(file_get_contents('php://input'), true);\n\n        if ($data) {\n            $controller-&gt;create($data);\n        } else {\n            echo json_encode([\"error\" =&gt; \"Invalid data\"]);\n        }\n        break;\n    case 'PUT':\n        $data = json_decode(file_get_contents('php://input'), true);\n\n        if (isset($_GET['id']) &amp;&amp; $data) {\n            $success = $controller-&gt;update ($id, $data);\n            echo json_encode([\"message\" =&gt; $success ? \"Field updated successfully\" : \"Book not found\"]);\n        } else {\n            echo json_encode([\"error\" =&gt; \"Invalid data or ID\"]);\n        }\n        break;\n    case 'DELETE':\n        if (isset($_GET['id'])) {\n            $controller-&gt;delete ($id);\n        } else {\n            echo json_encode([\"error\" =&gt; \"ID not provided\"]);\n        }\n        break;\n    default:\n        echo json_encode([\"error\" =&gt; \"Invalid request method\"]);\n        break;\n}\n</code></pre>"},{"location":"1val.html#autentificacio","title":"Autentificaci\u00f3","text":""},{"location":"1val.html#requeriments-previs","title":"Requeriments previs","text":"<p>Cal instal\u00b7lar la llibreria <code>firebase/php-jwt</code> per a poder generar i validar els tokens JWT.</p> <pre><code>composer require firebase/php-jwt\n</code></pre>"},{"location":"1val.html#loginphp","title":"login.php","text":"<pre><code>   require_once $_SERVER['DOCUMENT_ROOT'] . '/../vendor/autoload.php';\n\n   use Firebase\\JWT\\JWT;\n   use Firebase\\JWT\\Key;\n   use BatoiBook\\Services\\DBService;\n\n   // Clau secreta per generar el token (\u00e9s important mantenir-la segura)\n   $secretKey = 'clau_secreta';\n   header('Content-Type: application/json');\n   // Llegeix les dades de la petici\u00f3\n   $data = json_decode(file_get_contents(\"php://input\"));\n\n   if (!empty($data-&gt;email) &amp;&amp; !empty($data-&gt;password)) {\n\n        $db = DBService::connect();  \n        //TODO: Implementar consulta per recuperar l'usuari\n        $user = $stmt-&gt;fetch();\n        if ($user) {\n            if (password_verify($data-&gt;password,$user-&gt;password)) {\n                $payload = [\n                     \"iss\" =&gt; \"http://localhost\", // Issuer\n                     \"aud\" =&gt; \"http://localhost\", // Audience\n                     \"iat\" =&gt; time(),             // Issued at\n                     \"exp\" =&gt; time() + 3600,      // Expira en una hora\n                     \"userId\" =&gt; $userId\n                 ];\n                $jwt = JWT::encode($payload, $secretKey, 'HS256');    \n                echo json_encode([\"success\" =&gt; true, \"token\" =&gt; $jwt]);\n            } else {\n                echo json_encode([\"success\" =&gt; false, \"message\" =&gt; \"Contrasenya incorrecta\"]);\n            }\n        } else {\n            echo json_encode([\"success\" =&gt; false, \"message\" =&gt; \"Usuari no trobat\"]);\n        }\n\n   } else {\n       echo json_encode([\"success\" =&gt; false, \"message\" =&gt; \"Falten dades\"]);\n   }\n</code></pre>"},{"location":"1val.html#registerphp","title":"register.php","text":"<pre><code>//TODO: Implementar registre d'usuari\n</code></pre>"},{"location":"1val.html#validatephp","title":"validate.php","text":"<p>per a validar que qualsevol petici\u00f3 a l'API siga autenticada. <pre><code>if (!isset($_SERVER['HTTP_AUTHORIZATION'])) {\n      throw new UnAuthoritzedException(\"Token no proporcionat\");\n}\n$authHeader = $_SERVER['HTTP_AUTHORIZATION'];\n[$type, $token] = explode(\" \", $authHeader);\nif ($type !== 'Bearer') {\n    throw new UnAuthoritzedException(\"Tipus de token no v\u00e0lid\");\n}\ntry {\n    $jwt = JWT::decode($token, new Key(SELF::SECRET_KEY, 'HS256'));\n    $userId = $jwt-&gt;userId;\n} catch (Exception $e) {\n    throw new UnAuthoritzedException(\"Token no v\u00e0lid o expirat\");\n}\n</code></pre></p>"},{"location":"examen_php.html","title":"Examen php","text":""},{"location":"examen_php.html#examen-php","title":"Examen PHP","text":"<ul> <li>Heu de fer una rama que es diga examen_php.</li> <li>Cal modificar la taula sales perque agafe data per defecte i status per defecte.</li> <li>Els exercicis es fan en la carpeta src i les classes en la carpeta que utilitzeu per a les clases.</li> <li>Els exercicis s'han de poder enlla\u00e7ar des de la p\u00e0gina principal (index.php) del BatoiBook.</li> <li>El lloc addient per fer-ho seria des de la cap\u00e7alera del BatoiBook, tenint en compte que:</li> </ul> <p>recursos </p>"},{"location":"examen_php.html#rama-part1","title":"RAMA Part1","text":""},{"location":"examen_php.html#exercici-ra2","title":"Exercici RA2","text":"<ol> <li>Modifica el codi de la p\u00e0gina <code>salutacions.php</code> per a que mostre el nom complet de la persona que ha accedit a la p\u00e0gina (situada en <code>config/nom.php</code>) i la data, amb la salutaci\u00f3 de Bon dia o Bona nit (en compte de Hola) depenent de l'hora del dia.</li> </ol>"},{"location":"examen_php.html#limitacions","title":"Limitacions","text":"<ul> <li>No es poden utilitzar funcions de php per a imprimir en pantalla com echo o print.</li> </ul> <pre><code> $today = date(\"H:i:s\");                         // 17:16:18\n</code></pre>"},{"location":"examen_php.html#exercici-ra3","title":"Exercici RA3","text":"<ul> <li>Modifica  la p\u00e0gina <code>matriu.php</code> de forma que a partir del n\u00famero introdu\u00eft pel usuari:</li> <li>Genera una matriu de n\u00fameros aleatoris <code>rand(int $min, int $max): int</code> entre 1 i 500 de 10xnumero i mostra-los en una taula, afegint una columna al final de cada fila on es mostre la suma de la fila.</li> <li>S'ha de comprovar que el n\u00famero estiga entre 1 i 10, en cas contrari s'ha de tornar al formulari amb les dades introdu\u00efdes i amb un missatge d'error.</li> <li>Els n\u00fameros par estaran en blau i els senars en vermell.</li> <li>Calen, al meyns, les seg\u00fcents funcions: <code>generaMatriu(int $n,int $m): array</code> i <code>printCela(int $num): void</code>.</li> <li>L'estructura del html ha de ser completa. </li> <li>Tot el codi ha d'estar en un \u00fanic fitxer.</li> </ul>"},{"location":"examen_php.html#exercici-ra4","title":"Exercici RA4","text":"<p>Crea una petita aplicaci\u00f3 web amb les seg\u00fcents funcionalitats:</p> <ol> <li> <p>Sessi\u00f3 per Mantenir l\u2019Estat de l'Usuari:   - Implementa una p\u00e0gina <code>welcome.php</code> que nom\u00e9s siga accessible per a usuaris autenticats.   - Desa l\u2019estat d\u2019autenticaci\u00f3 en una sessi\u00f3 i assegura\u2019t que l\u2019usuari siga redirigit a una p\u00e0gina d'inici de sessi\u00f3 si no ha iniciat sessi\u00f3 <code>inici.php</code>.</p> </li> <li> <p>Prefer\u00e8ncia d'Idioma amb Cookies:   - A la p\u00e0gina d'inici de sessi\u00f3, permet a l'usuari seleccionar una prefer\u00e8ncia d'idioma  des de l'array que hi ha.   - Desa la prefer\u00e8ncia en una cookie i mostra un missatge de benvinguda a <code>welcome.php</code> en l'idioma seleccionat.</p> </li> <li> <p>Prova del Codi amb Eines de Depuraci\u00f3:   - Afegeix una l\u00ednia de <code>var_dump</code> o <code>error_log</code> per verificar l'estat de la sessi\u00f3 i de la cookie.   - Deixa un comentari en el codi explicant com aquesta l\u00ednia t\u2019ajuda a comprovar el correcte funcionament del codi.</p> </li> </ol>"},{"location":"examen_php.html#detalls-addicionals","title":"Detalls Addicionals","text":"<ul> <li>En aquesta activitat, no cal fer una p\u00e0gina d'inici de sessi\u00f3 completa; simplement pots simular que l'usuari s'ha autenticat desant una variable en la sessi\u00f3.</li> <li>El codi PHP pot ser m\u00ednim; l'important \u00e9s que s'incloguin les sessions, la cookie per l'idioma, i una l\u00ednia per a depuraci\u00f3.</li> </ul>"},{"location":"examen_php.html#rama-part2-ra5-i-ra6","title":"RAMA Part2 (RA5 i RA6)","text":"<p>Crea una aplicaci\u00f3 web per gestionar una llista de productes. Aquesta aplicaci\u00f3 ha de permetre les operacions b\u00e0siques de CRUD (creaci\u00f3, lectura, actualitzaci\u00f3, eliminaci\u00f3) sobre una base de dades. Completa les seg\u00fcents funcionalitats:</p>"},{"location":"examen_php.html#1-connexio-amb-la-base-de-dades","title":"1. Connexi\u00f3 amb la Base de Dades","text":"<ul> <li>Crea una classe <code>Database</code> que s'encarregui de la connexi\u00f3 amb la base de dades. Assegura't que la connexi\u00f3 es gestioni correctament amb principis d'OOP .</li> </ul>"},{"location":"examen_php.html#2-recuperacio-i-visualitzacio-de-productes","title":"2. Recuperaci\u00f3 i Visualitzaci\u00f3 de Productes","text":"<ul> <li>Implementa un controlador <code>ProductController</code> i una classe <code>Product</code> en la carpeta Models que s\u2019encarreguin de recuperar els productes de la base de dades i passar-los a la vista.</li> <li>Adapta la vista <code>products.view.php</code> per tal que mostre la llista de productes en una taula amb les opcions d'editar i eliminar cada producte.</li> </ul>"},{"location":"examen_php.html#3-afegir-nous-productes","title":"3. Afegir nous Productes","text":"<ul> <li>Implementa una funcionalitat que permeta afegir nous productes a la base de dades mitjan\u00e7ant el formulari de la vista <code>create_product.view.php</code>.</li> </ul>"},{"location":"examen_php.html#4-actualitzacio-de-productes-existents","title":"4. Actualitzaci\u00f3 de Productes Existents","text":"<ul> <li>Adapta la vista <code>update_product.php</code> per tal d'actualitzar el nom i el preu del producte seleccionat.</li> </ul>"},{"location":"examen_php.html#5-eliminacio-de-productes","title":"5. Eliminaci\u00f3 de Productes","text":"<ul> <li>Implementa una funcionalitat que permeta eliminar productes de la base de dades directament des de la vista <code>products.view.php</code>.</li> </ul>"},{"location":"examen_php.html#6-prova-i-documentacio-del-codi","title":"6. Prova i Documentaci\u00f3 del Codi","text":"<ul> <li>Documenta el codi amb comentaris explicant les parts principals.</li> </ul>"},{"location":"examen_php.html#7-tria-una-de-les-seguents-opcions","title":"7. Tria una de les seg\u00fcents opcions:","text":"<ul> <li>Prova amb phpunit que les operacions de creaci\u00f3, actualitzaci\u00f3 i eliminaci\u00f3 funcionen correctament.</li> <li>Crea un registre de log per a les operacions de creaci\u00f3, actualitzaci\u00f3 i eliminaci\u00f3.</li> <li>Imprimeix en pdf la llista de productes.</li> </ul>"},{"location":"examen_php.html#estructura-i-configuracio-del-projecte","title":"Estructura i Configuraci\u00f3 del Projecte","text":"<ul> <li>Configura una base de dades amb una taula <code>productes</code> que contingui els camps seg\u00fcents:</li> <li><code>id</code>: Enter, clau prim\u00e0ria, autoincremental.</li> <li><code>nom</code>: Text, no pot ser nul.</li> <li> <p><code>preu</code>: Decimal, no pot ser nul.</p> </li> <li> <p>Organitza el projecte seguint el patr\u00f3 Model-Vista-Controlador (MVC), utilitzant les carpetes:</p> </li> <li><code>Models</code>: Inclou la classe <code>Product.php</code> que representa els productes.</li> <li><code>Controllers</code>: Inclou <code>ProductController.php</code> per gestionar les operacions.</li> <li><code>Views</code>: Inclou les vistes <code>products.php</code>, <code>create_product.php</code>, i <code>update_product.php</code>.</li> </ul>"},{"location":"examen_php.html#detalls-addicionals_1","title":"Detalls Addicionals","text":"<ul> <li>Exempcions: Implementa un sistema d'excepcions per a gestionar errors en les operacions a la base de dades. </li> </ul> <pre><code>/php\n\u251c\u2500\u2500 config\n\u2502   \u251c\u2500\u2500 db.php                    // Connexi\u00f3 a la base de dades \n\u251c\u2500\u2500 src                           // Directori p\u00fablic principal (com un directori public)\n\u2502   \u251c\u2500\u2500 index.php                 // Punt d'entrada principal \n\u251c\u2500\u2500 App                           // Directori principal de l'aplicaci\u00f3 (l\u00f2gica de negoci)\n\u2502   \u251c\u2500\u2500 Controllers               // Directori per als controladors \n\u2502   \u2502   \u2514\u2500\u2500 ProductController.php // Controlador per a operacions CRUD\n\u2502   \u2514\u2500\u2500 Models                    // Directori per als models  \n\u2502   \u2502   \u251c\u2500\u2500 Product.php           // Model de producte\n\u2502   \u2514\u2500\u2500 Services                  // Directori per als serveis\n\u2502       \u2514\u2500\u2500 Database.php          // Classe de connexi\u00f3 a la base de dades\n\u2514\u2500\u2500 views                         // Directori per a les vistes\n    \u251c\u2500\u2500 products.view.php         // Vista per mostrar la llista de productes\n    \u251c\u2500\u2500 create_product.view.php   // Vista per afegir un nou producte\n    \u2514\u2500\u2500 update_product.view.php   // Vista per editar un producte existent \n</code></pre>"},{"location":"planning.html","title":"Planificaci\u00f3","text":""},{"location":"planning.html#1-arquitectures-web-6h","title":"1.- Arquitectures Web (6h)","text":"<ul> <li> 1.- (Dl 15S) Exposici\u00f3 te\u00f2rica i exercici comparativa entre arquitectures</li> <li> 2.- (Dj 18S) Test coneixements i instal\u00b7laci\u00f3 entorn desenvolupament</li> </ul>"},{"location":"planning.html#2-desenvolupament-amb-php-i-projectes-51h","title":"2.- Desenvolupament amb PHP i Projectes (51h)","text":"<ul> <li> 1.- (Dl 22S) Introducci\u00f3 a PHP. Condicions, bucles i arrays. Exercicis 1 - 6</li> <li> 2.- (Dj 25S) Variables de servidor i introducci\u00f3 a formularis. Exercicis 7 - 10</li> <li> 3.- (Dl 29S) Sessions i cookies. Exercicis 11 - 13, 15 - 16</li> <li> 4.- (Dj 02O) Autenticaci\u00f3 d'usuaris i fitxers. Exercicis 14 i 17</li> <li> 5.- (Dl 06O) Programaci\u00f3 orientada a objectes. Exercicis 18 - 20</li> <li> 6.- (Dl 13O) Exempcions i composer. Exercicis 21 - 24</li> <li> 7.- (Dj 16O) Projecte intermodular</li> <li> 8.- (Dl 20O) Projecte \"El penjat\"</li> <li> 9.- (Dj 23O) Projecte \"El penjat\"</li> <li> 10.- (Dl 27O) Projecte \"El penjat\"</li> <li> 11.- (Dj 30O) Projecte \"El penjat\"</li> <li> 12.- (Dl 03N) Examen PHP</li> </ul>"},{"location":"planning.html#5-acces-a-dades-16h","title":"5.- Acc\u00e8s a Dades (16h)","text":"<ul> <li> 1.- (L 30O) SQL. Activitats 601 - 605 - 3</li> <li> 2.- (M 31O) SQL. Activitats 606-608 - 6</li> <li> 3.- (J 2N) Projecte BatoiBook. Activitats 609 - 611 -8</li> <li> 4.- (L 6N) Projecte BatoiBook. Activitats 615-618 - 11</li> <li> 5.- (M 7N) Projecte BatoiBook. Activitats 615-618 - 14</li> <li> 6.- (J 9N)  Projecte BatoiBook. Activitats 615-618 -16</li> </ul>"},{"location":"planning.html#6-ferramentes-web-16h","title":"6.- Ferramentes Web (16h)","text":"<ul> <li> 1.- (L 13N) Composer. Introducci\u00f3 Monolog.  Manejadors. Us de logs amb Monolog. Activitats 501 - 503 - 3</li> <li> 2.- (M 14N) Documentaci\u00f3 amb phpDocumentor. Activitats 521 - 522.- 6</li> <li> 3.- (J 16N) Webscrapping. Activitats 531 - 533. -8</li> <li> 4.- (L 20N) Projecte BatoiBook. Activitats 541 - 543 - 11</li> <li> 5.- (M 21N) Prova escrita - 14</li> <li> 6.- (J 23N) Correcci\u00f3 prova - 16</li> </ul>"},{"location":"planning.html#7-frameworks-php-29h","title":"7.- Frameworks PHP (29h)","text":"<ul> <li> 1.- (L 27N) Introducci\u00f3 e Instal\u00b7laci\u00f3 de Laravel - 3 </li> <li> 2.- (M 28N) Rutes i vistes. Activitats 701-703 - 6</li> <li> 3.- (J 30N) Controladors. Activitats 704-705 - 8</li> <li> 4.- (L 4D) Migraciones. Activitats 711-714 - 11</li> <li> 5.- (M 5G) Models.Eloquent. Activitat 715 - 14 </li> <li> 6.- (L 11D) Formularis, validacions i emmagetzenament. Activitat 721 - 23 - 16 </li> <li> 7.- (M 12D) Autenticaci\u00f3 i autoritzaci\u00f3. Activitat 724- 25 - 19  </li> <li> 8.- (J 14D) Notificacions, correu i cues - 21 </li> <li> 9.- (L 18D) Tasques , events i websockets - 24</li> <li> 10.- (M 19D) Projecte Batoi Book - 27</li> <li> 11.- (J 21D) Projecte Batoi Book - 29</li> </ul>"},{"location":"planning.html#8-serveis-web-16h","title":"8.- Serveis web  (16h)","text":"<ul> <li> 1.- (L 8G) Tecnologies i protocols. Estandars i arquitectuures. Formats. Generacio d'un servei  GET  - 3</li> <li> 2.- (M 9G) Obtindre dades de fonts p\u00fabliques utilitzant curl.  - 6</li> <li> 3.- (J 11G) Generaci\u00f3 de serveis POST i PUT. POSTMAN - 8</li> <li> 4.- (L 15G) Autenticaci\u00f3 - 11</li> <li>[No] 5.- (M 16G) Documentaci\u00f3. OPEN API. Swagger per a Laravel - 14</li> <li> 6.- (J 18G) Projecte Batoi Book - 16</li> </ul>"},{"location":"planning.html#9-webs-hibrides-16-h","title":"9.- Webs hibrides (16 h)","text":"<ul> <li> 1.- (L 22G) Reutilizaci\u00f3 de codi e informaci\u00f3. Caracter\u00edstiques. Utilitzaci\u00f3 de repositoris - 13</li> <li> 2.- (M 23G) OAuth2.0. - 6</li> <li> 3.- (J 25G) Creaci\u00f3 d'apliacions hibrides - 8</li> <li> 4.- (L 29G) Creaci\u00f3 d'apliacions h\u00edbrides - 11</li> <li> 5.- (M 30G) Prova escrita - 14</li> <li> 6.- (J 1F) Correcci\u00f3 prova - 16</li> </ul>"},{"location":"planning.html#projecte-integrador-24h","title":"Projecte Integrador (24h)","text":"<p>Del 5 de Gener al 26 de Febrer.</p> <p>Total = 136h de sesiones lectivas + 24h de Projectes innova = 160h reales.</p>"},{"location":"recursos/07provisional.html","title":"07provisional","text":""},{"location":"recursos/07provisional.html#installacio-des-de-repositori-github","title":"Instal\u00b7laci\u00f3 des de repositori github","text":"<p>Seguiu aquests passos per a un repositori de Laravel amb Sail despr\u00e9s de clonar des de Github. Aquest \u00e9s un exemple</p> <ol> <li>Clona el repositori, exemple:</li> </ol> <p>$ git clone https://github.com/example/laravel-backend-api.git</p> <ol> <li>Canvia el directori a l'aplicaci\u00f3/projecte de nova creaci\u00f3.</li> </ol> <p>$ cd laravel-backend-api</p> <ol> <li>Copia el fitxer .env</li> </ol> <p>$ cp .env.example .env</p> <ol> <li>Obre .env per a coincidir la configuraci\u00f3 amb les l\u00ednies seg\u00fcents:</li> </ol> <p>```php  DB_CONNECTION=mysql  DB_HOST=mysql  DB_PORT=3306  DB_DATABASE=batoiBook  DB_USERNAME=root  DB_PASSWORD=1234</p> <ol> <li>** Afegix el phpmyadmin a docker-compose.yml**</li> </ol> <pre><code>myadmin:\nimage: 'phpmyadmin:latest'\nports:\n- 8080:80\nenvironment:\nMYSQL\\_ROOT\\_PASSWORD: '${DB\\_PASSWORD}'\nlinks:\n- \"mysql:db\"\ndepends\\_on:\n- mysql\nnetworks:\n- sail\n</code></pre> <ol> <li>Instal\u00b7la totes les depend\u00e8ncies requerides</li> </ol> <p>$ docker run --rm -v $(pwd):/opt -w /opt laravelsail/php83-composer:latest composer install</p> <p>NOTA: Aix\u00f2 pot trigar una estona si aquesta \u00e9s la primera vegada que s'instal\u00b7la com a contenidor.</p> <ol> <li>Executa els servidors amb Sail</li> </ol> <p>$ vendor/bin/sail up -d</p> <ol> <li> <p>Entra en el phpmyadmin (localhost:8080) i crea la base de dades batoiBook.</p> </li> <li> <p>Inicia el terminal del contenidor</p> </li> </ol> <p>$ vendor/bin/sail bash</p> <ol> <li>Genera la clau APP.KEY.</li> </ol> <p>$ php artisan key:generate</p> <ol> <li>Construeix la llavor.</li> </ol> <p>$ php artisan migrate:fresh --seed</p> <ol> <li>Genera els node_modules</li> </ol> <p>$ npm install</p> <p>$ npm run build</p> <p>Ara podeu obrir la vostra aplicaci\u00f3 amb el vostre navegador: http://localhost</p> <p>Ara que ja tenim tot el sistema preparat per a desenvolupar projectes Laravel, vegem els primers passos que hem de donar per a crear aquests projectes.</p>"},{"location":"recursos/07provisional.html#contenidor-de-serveis-de-laravel","title":"Contenidor de Serveis de Laravel","text":"<p>El Contenidor de Serveis de Laravel \u00e9s una eina poderosa per gestionar les depend\u00e8ncies de classes i realitzar la injecci\u00f3 de depend\u00e8ncies. Aquesta funcionalitat permet que les depend\u00e8ncies es \"injecten\" a les classes a trav\u00e9s del constructor o, en alguns casos, mitjan\u00e7ant m\u00e8todes \"setter\".</p>"},{"location":"recursos/07provisional.html#resolucio-automatica-sense-configuracio","title":"Resoluci\u00f3 Autom\u00e0tica Sense Configuraci\u00f3","text":"<p>Si una classe no t\u00e9 depend\u00e8ncies o nom\u00e9s dep\u00e8n d'altres classes concretes (no interf\u00edcies), el contenidor pot resoldre-la autom\u00e0ticament sense configuraci\u00f3 pr\u00e8via. Per exemple, si tens una classe <code>Service</code>, pots injectar-la directament en una ruta:</p> <p><pre><code>use App\\Services\\Service;\n\nRoute::get('/', function (Service $service) {\n    // \u00das del servei\n});\n</code></pre> En aquest cas, Laravel resoldr\u00e0 autom\u00e0ticament la inst\u00e0ncia de Service i la injectar\u00e0 a la funci\u00f3 de la ruta.</p>"},{"location":"recursos/07provisional.html#quan-utilitzar-el-contenidor","title":"Quan Utilitzar el Contenidor","text":"<p>Tot i que moltes depend\u00e8ncies es poden injectar autom\u00e0ticament, hi ha situacions on \u00e9s necessari interactuar manualment amb el contenidor:</p> <ul> <li>Quan una classe dep\u00e8n d'una interf\u00edcie i cal indicar al contenidor quina implementaci\u00f3 ha de proporcionar.</li> <li>Quan es desenvolupa un paquet que s'integrar\u00e0 amb Laravel i cal registrar serveis espec\u00edfics.</li> </ul>"},{"location":"recursos/07provisional.html#enllacos-al-contenidor","title":"Enlla\u00e7os al Contenidor","text":"<p>Per registrar una classe o interf\u00edcie al contenidor, es pot utilitzar el m\u00e8tode bind:</p> <p><pre><code>use App\\Services\\Transistor;\nuse App\\Services\\PodcastParser;\nuse Illuminate\\Contracts\\Foundation\\Application;\n\n$this-&gt;app-&gt;bind(Transistor::class, function (Application $app) {\nreturn new Transistor($app-&gt;make(PodcastParser::class));\n});\n</code></pre> En aquest exemple, es registra la classe Transistor al contenidor, especificant com s'ha de crear la seva inst\u00e0ncia.</p>"},{"location":"recursos/07provisional.html#resolucio-de-dependencies","title":"Resoluci\u00f3 de Depend\u00e8ncies","text":"<p>Per obtenir una inst\u00e0ncia d'una classe registrada al contenidor, es pot utilitzar el m\u00e8tode make:</p> <p><pre><code>use App\\Services\\Transistor;\n\n$transistor = $this-&gt;app-&gt;make(Transistor::class);\n</code></pre> Aix\u00f2 crear\u00e0 una nova inst\u00e0ncia de Transistor amb totes les seves depend\u00e8ncies resoltes.</p>"},{"location":"recursos/07provisional.html#proveidors-de-serveis-en-laravel","title":"Prove\u00efdors de Serveis en Laravel","text":"<p>Els prove\u00efdors de serveis s\u00f3n el punt central de l'arrencada de qualsevol aplicaci\u00f3 Laravel. Tant la teva aplicaci\u00f3 com els serveis interns de Laravel es configuren i inicialitzen a trav\u00e9s d'aquests prove\u00efdors.</p>"},{"location":"recursos/07provisional.html#funcions-principals","title":"Funcions Principals","text":"<ul> <li>Registre de serveis: Defineixen com es registren els serveis al contenidor de serveis de Laravel.</li> <li>Inicialitzaci\u00f3: Configuren serveis, escoltadors d'esdeveniments, middleware i rutes.</li> </ul>"},{"location":"recursos/07provisional.html#estructura-dun-proveidor-de-serveis","title":"Estructura d'un Prove\u00efdor de Serveis","text":"<p>Un prove\u00efdor de serveis t\u00edpic estendr\u00e0 la classe <code>Illuminate\\Support\\ServiceProvider</code> i inclour\u00e0 dos m\u00e8todes principals:</p> <ul> <li><code>register</code>: Aqu\u00ed es vinculen serveis al contenidor. No s'ha d'executar cap acci\u00f3 que depengui d'altres serveis.</li> <li><code>boot</code>: S'executa despr\u00e9s de registrar tots els prove\u00efdors, permetent accedir a tots els serveis registrats.</li> </ul> <pre><code>&lt;?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Support\\ServiceProvider;\n\nclass ExampleServiceProvider extends ServiceProvider\n{\n    public function register()\n    {\n        // Registre de serveis\n    }\n\n    public function boot()\n    {\n        // Inicialitzaci\u00f3 de serveis\n    }\n}\n</code></pre>"},{"location":"recursos/07provisional.html#registre-de-proveidors","title":"Registre de Prove\u00efdors","text":"<p>Els prove\u00efdors de serveis es registren al fitxer bootstrap/providers.php. Quan crees un nou prove\u00efdor amb Artisan, Laravel l'afegir\u00e0 autom\u00e0ticament a aquest fitxer.</p> <pre><code>php artisan make:provider ExampleServiceProvider\n</code></pre>"},{"location":"recursos/07provisional.html#proveidors-deferits","title":"Prove\u00efdors Deferits","text":"<p>Per millorar el rendiment, alguns prove\u00efdors es carreguen nom\u00e9s quan s\u00f3n necessaris. Aquests es coneixen com a prove\u00efdors deferits. Per definir un prove\u00efdor com a deferit, implementa el m\u00e8tode provides que retorna els serveis que ofereix.</p> <pre><code>public function provides()\n{\nreturn [Service::class];\n}\n</code></pre>"},{"location":"recursos/diapositives/tema1.html","title":"Diapositiva 1: Qu\u00e8 \u00e9s una Arquitectura Web?","text":"<ul> <li>Definici\u00f3: Estructura d'un sistema dissenyada per a servir aplicacions web.</li> <li>Components clau:</li> <li>Client: Dispositiu de l'usuari final (navegador).</li> <li>Servidor: Processa les dades i envia respostes al client.</li> <li>Base de dades: Emmagatzema informaci\u00f3 rellevant.</li> </ul>"},{"location":"recursos/diapositives/tema1.html#diapositiva-2-diferencies-entre-client-i-servidor","title":"Diapositiva 2: Difer\u00e8ncies entre Client i Servidor","text":"<ul> <li>Execuci\u00f3 del codi:</li> <li>Client: HTML, CSS, JavaScript executats en el navegador.</li> <li>Servidor: PHP, Python, Node.js executats en el servidor.</li> <li>Funcions del client:</li> <li>Mostrar contingut, interactivitat amb l'usuari.</li> <li>Funcions del servidor:</li> <li>Processar sol\u00b7licituds, gestionar dades.</li> </ul>"},{"location":"recursos/diapositives/tema1.html#diapositiva-3-model-de-pagines-estatiques-vs-dinamiques","title":"Diapositiva 3: Model de P\u00e0gines Est\u00e0tiques vs Din\u00e0miques","text":"<ul> <li>P\u00e0gines est\u00e0tiques:</li> <li>Serveixen fitxers HTML fixes.</li> <li>Cada usuari veu el mateix contingut.</li> <li>P\u00e0gines din\u00e0miques:</li> <li>El contingut es genera al moment basant-se en la sol\u00b7licitud.</li> <li>Pot canviar segons l'usuari o l'estat de l'aplicaci\u00f3.</li> </ul>"},{"location":"recursos/diapositives/tema1.html#diapositiva-4-tipus-de-processament-servidor-vs-client","title":"Diapositiva 4: Tipus de Processament: Servidor vs Client","text":"<ul> <li>Processament en el servidor:</li> <li>El servidor gestiona totes les sol\u00b7licituds i retorna p\u00e0gines HTML al client.</li> <li>Avantatges: Millor control de la l\u00f2gica de negoci i seguretat.</li> <li>Processament en el client:</li> <li>El client executa part de la l\u00f2gica utilitzant JavaScript.</li> <li>Avantatges: Respostes m\u00e9s r\u00e0pides i menor c\u00e0rrega al servidor.</li> </ul>"},{"location":"recursos/diapositives/tema1.html#diapositiva-5-arquitectura-de-2-capes","title":"Diapositiva 5: Arquitectura de 2 Capes","text":"<ul> <li>Definici\u00f3: Model b\u00e0sic on el client i el servidor interactuen directament.</li> <li>Components:</li> <li>Client: Navegador que fa sol\u00b7licituds HTTP.</li> <li>Servidor: Processa les sol\u00b7licituds i retorna p\u00e0gines HTML o dades JSON.</li> <li>Limitacions: Escalabilitat limitada, depend\u00e8ncia directa de la capacitat del servidor.</li> </ul>"},{"location":"recursos/diapositives/tema1.html#diapositiva-6-arquitectura-de-3-capes","title":"Diapositiva 6: Arquitectura de 3 Capes","text":"<ul> <li>Cap de presentaci\u00f3: Navegador o client que interactua amb l'usuari.</li> <li>Cap de l\u00f2gica de negoci: Processa les regles de negoci (servidor d'aplicacions).</li> <li>Cap de dades: Emmagatzema i gestiona les dades (bases de dades).</li> <li>Avantatges:</li> <li>Millor separaci\u00f3 de responsabilitats.</li> <li>Major escalabilitat i flexibilitat.</li> </ul>"},{"location":"recursos/diapositives/tema1.html#diapositiva-7-arquitectura-de-microserveis","title":"Diapositiva 7: Arquitectura de Microserveis","text":"<ul> <li>Definici\u00f3: Arquitectura composta de m\u00faltiples serveis petits i independents.</li> <li>Cada servei:</li> <li>Realitza una funci\u00f3 espec\u00edfica (ex. gesti\u00f3 de pagaments, clients, etc.).</li> <li>\u00c9s aut\u00f2nom i pot ser desenvolupat i desplegat de forma independent.</li> <li>Avantatges:</li> <li>Facilitat d'escalabilitat.</li> <li>Millor manteniment i desplegament independent de components.</li> </ul>"},{"location":"recursos/diapositives/tema1.html#diapositiva-8-tecnologies-per-a-la-programacio-web-en-entorn-servidor","title":"Diapositiva 8: Tecnologies per a la Programaci\u00f3 Web en Entorn Servidor","text":"<ul> <li>Llenguatges comuns:</li> <li>PHP: Utilitzat en WordPress, Laravel.</li> <li>Node.js: As\u00edncron, ideal per a aplicacions en temps real.</li> <li>Python: Frameworks com Django i Flask.</li> <li>Java: Utilitzat en entorns empresarials amb frameworks com Spring.</li> <li>Funcions b\u00e0siques:</li> <li>Processament de sol\u00b7licituds HTTP.</li> <li>Interacci\u00f3 amb bases de dades.</li> <li>Generaci\u00f3 de contingut din\u00e0mic.</li> </ul>"},{"location":"recursos/diapositives/tema1.html#diapositiva-9-frameworks-per-a-servidors-web","title":"Diapositiva 9: Frameworks per a Servidors Web","text":"<ul> <li>Laravel (PHP):</li> <li>MVC, eina robusta per al desenvolupament web.</li> <li>Express.js (Node.js):</li> <li>Minimalista, lleuger, per a aplicacions web i APIs.</li> <li>Django (Python):</li> <li>Eina completa i segura per a aplicacions de gran escala.</li> <li>Spring Boot (Java):</li> <li>Utilitzat per a aplicacions empresarials.</li> </ul>"},{"location":"recursos/diapositives/tema1.html#diapositiva-10-integracio-html-amb-llenguatges-de-programacio-en-servidor","title":"Diapositiva 10: Integraci\u00f3 HTML amb Llenguatges de Programaci\u00f3 en Servidor","text":"<ul> <li>Llenguatges de marques (HTML):</li> <li>Generen la presentaci\u00f3 de les p\u00e0gines.</li> <li>Integraci\u00f3 amb llenguatges de servidor per incloure contingut din\u00e0mic.</li> <li>Motors de plantilles:</li> <li>Blade (Laravel), Jinja (Django) per separar l\u00f2gica de negoci i presentaci\u00f3.</li> </ul>"},{"location":"recursos/diapositives/tema1.html#diapositiva-11-avantatges-dels-frameworks-de-programacio","title":"Diapositiva 11: Avantatges dels Frameworks de Programaci\u00f3","text":"<ul> <li>Organitzaci\u00f3 del codi:</li> <li>Millor separaci\u00f3 de responsabilitats (MVC).</li> <li>Facilita el manteniment i l'escalabilitat.</li> <li>Funcionalitats comunes:</li> <li>Gesti\u00f3 d'autenticaci\u00f3, validaci\u00f3 de formularis, interacci\u00f3 amb bases de dades.</li> <li>Exemple de frameworks:</li> <li>Laravel (PHP): Facilitat d'\u00fas, estructura clara.</li> <li>Django (Python): Seguretat i integraci\u00f3 r\u00e0pida de funcionalitats.</li> </ul>"},{"location":"recursos/examens/07_frameworks_examen.html","title":"Q\u00fcestionari Avaluable","text":""},{"location":"recursos/examens/07_frameworks_examen.html#seccio-1-preguntes-tancades-teoria","title":"Secci\u00f3 1: Preguntes tancades (Teoria)","text":"<ol> <li> <p>Qu\u00e8 \u00e9s un framework i per qu\u00e8 \u00e9s \u00fatil en el desenvolupament d'aplicacions web?</p> <ul> <li>a) \u00c9s una eina que facilita la gesti\u00f3 de bases de dades.</li> <li>b) \u00c9s un conjunt d\u2019eines i regles que permeten estructurar aplicacions web de manera eficient.</li> <li>c) \u00c9s un llenguatge de programaci\u00f3 utilitzat per desenvolupar aplicacions web.</li> <li>d) \u00c9s un conjunt de llibreries per afegir funcionalitats a l'aplicaci\u00f3.</li> </ul> </li> <li> <p>Qu\u00e8 \u00e9s el patr\u00f3 MVC i quines capes defineix?</p> <ul> <li>a) \u00c9s un patr\u00f3 que separa la l\u00f2gica de negoci, la base de dades i les vistes.</li> <li>b) \u00c9s un patr\u00f3 que separa models, vistes i controladors.</li> <li>c) \u00c9s una estructura que defineix m\u00f2duls, variables i connexions.</li> <li>d) \u00c9s una configuraci\u00f3 de Laravel per gestionar les rutes.</li> </ul> </li> <li> <p>Quin \u00e9s l'objectiu principal de la capa de presentaci\u00f3 en MVC?</p> <ul> <li>a) Gestionar les dades d\u2019entrada i sortida.</li> <li>b) Connectar directament amb la base de dades.</li> <li>c) Mostrar el resultat de la l\u00f2gica de negoci a l\u2019usuari de manera visual.</li> <li>d) Validar els formularis de l'usuari.</li> </ul> </li> <li> <p>Qu\u00e8 fa la funci\u00f3 <code>@vite</code> en una vista Blade?</p> <ul> <li>a) Crea un formulari din\u00e0mic.</li> <li>b) Inclou fitxers CSS o JavaScript i activa Hot Module Replacement (HMR).</li> <li>c) Genera rutes autom\u00e0tiques.</li> <li>d) Valida dades dins del controlador.</li> </ul> </li> <li> <p>Per qu\u00e8 \u00e9s important utilitzar controladors en Laravel?</p> <ul> <li>a) Perqu\u00e8 Laravel obliga a utilitzar-los.</li> <li>b) Per gestionar la l\u00f2gica de negoci de manera separada de les rutes.</li> <li>c) Per emmagatzemar dades temporals.</li> <li>d) Per fer que les vistes siguin m\u00e9s eficients.</li> </ul> </li> <li> <p>Quina difer\u00e8ncia hi ha entre <code>view()</code> i <code>return</code> en Laravel?</p> <ul> <li>a) <code>return</code> sempre retorna dades JSON, mentre que <code>view()</code> mostra vistes HTML.</li> <li>b) <code>view()</code> s'utilitza per carregar vistes, mentre que <code>return</code> pot retornar qualsevol tipus de dades.</li> <li>c) <code>return</code> nom\u00e9s funciona amb rutes, i <code>view()</code> amb controladors.</li> <li>d) No hi ha cap difer\u00e8ncia funcional.</li> </ul> </li> <li> <p>Com es passa informaci\u00f3 del controlador a la vista en Laravel?</p> <ul> <li>a) Mitjan\u00e7ant un array o la funci\u00f3 <code>compact</code>.</li> <li>b) Amb variables globals.</li> <li>c) Utilitzant sessions.</li> <li>d) Directament amb JSON.</li> </ul> </li> <li> <p>Quina difer\u00e8ncia hi ha entre <code>Route::get()</code> i <code>Route::post()</code>?</p> <ul> <li>a) <code>Route::get()</code> \u00e9s per obtenir dades, mentre que <code>Route::post()</code> s'utilitza per enviar dades al servidor.</li> <li>b) No hi ha cap difer\u00e8ncia funcional.</li> <li>c) <code>Route::post()</code> nom\u00e9s funciona amb AJAX.</li> <li>d) <code>Route::get()</code> \u00e9s per formularis, i <code>Route::post()</code> per JSON.</li> </ul> </li> <li> <p>Com es defineixen rutes en Laravel?</p> <ul> <li>a) Mitjan\u00e7ant el fitxer <code>routes/web.php</code>.</li> <li>b) Des del controlador directament.</li> <li>c) Amb la funci\u00f3 <code>route()</code> dins d\u2019una vista Blade.</li> <li>d) No cal definir-les, Laravel les crea autom\u00e0ticament.</li> </ul> </li> <li> <p>Qu\u00e8 \u00e9s una vista Blade i quins avantatges ofereix?</p> <ul> <li>a) \u00c9s un tipus especial de controlador que cont\u00e9 codi HTML i PHP.</li> <li>b) \u00c9s una plantilla de presentaci\u00f3 que permet estructurar HTML amb codi Blade.</li> <li>c) \u00c9s un m\u00e8tode que genera autom\u00e0ticament formularis din\u00e0mics.</li> <li>d) \u00c9s un fitxer CSS que s\u2019inclou amb <code>@vite</code>.</li> </ul> </li> <li> <p>Quina difer\u00e8ncia hi ha entre utilitzar <code>Route::resource()</code> i definir rutes manualment?</p> <ul> <li>a) <code>Route::resource()</code> genera autom\u00e0ticament totes les rutes principals d'un controlador de recursos.</li> <li>b) No hi ha cap difer\u00e8ncia; totes dues fan el mateix.</li> <li>c) <code>Route::resource()</code> \u00e9s per a models, mentre que les rutes manuals s\u00f3n per a funcions est\u00e0tiques.</li> <li>d) Les rutes manuals s\u00f3n m\u00e9s r\u00e0pides d'executar que <code>Route::resource()</code>.</li> </ul> </li> <li> <p>Qu\u00e8 \u00e9s el m\u00e8tode <code>compact()</code> i per qu\u00e8 \u00e9s \u00fatil en Laravel?</p> <ul> <li>a) Crea un array associatiu a partir de variables existents amb el mateix nom.</li> <li>b) \u00c9s un m\u00e8tode que optimitza el rendiment de les vistes.</li> <li>c) Permet passar dades d'un controlador a un altre.</li> <li>d) Genera rutes din\u00e0micament.</li> </ul> </li> <li> <p>Com es pot reutilitzar codi a les vistes Blade?</p> <ul> <li>a) Utilitzant components Blade o plantilles amb <code>@include</code> i <code>@extends</code>.</li> <li>b) Definint variables globals accessibles des de totes les vistes.</li> <li>c) Emprant sessions per compartir informaci\u00f3 entre vistes.</li> <li>d) Copiant el codi en cada vista per assegurar que funcioni correctament.</li> </ul> </li> <li> <p>Qu\u00e8 \u00e9s una ruta amb nom (Named Route) a Laravel i quins avantatges ofereix?</p> <ul> <li>a) Una ruta amb nom \u00e9s una que utilitza la funci\u00f3 <code>name()</code> per assignar-li un identificador \u00fanic, facilitant-ne la reutilitzaci\u00f3 i manteniment.</li> <li>b) \u00c9s una ruta que nom\u00e9s es pot accedir si est\u00e0 associada a un middleware espec\u00edfic.</li> <li>c) \u00c9s una funcionalitat per generar rutes din\u00e0miques basades en controladors de recursos.</li> <li>d) Una ruta amb nom \u00e9s aquella que no requereix par\u00e0metres i retorna nom\u00e9s text est\u00e0tic.</li> </ul> </li> <li> <p>Quan \u00e9s recomanable utilitzar components Blade en comptes de vistes parcials a Laravel?</p> <ul> <li>a) Quan necessitem passar dades din\u00e0miques i encapsular la l\u00f2gica de presentaci\u00f3 en una estructura reutilitzable i clara.</li> <li>b) Quan la vista parcial \u00e9s molt complexa i cont\u00e9 m\u00faltiples depend\u00e8ncies externes.</li> <li>c) Quan volem crear m\u00e8todes d\u2019ajuda per a consultes SQL directament des de la vista.</li> <li>d) Quan necessitem incloure una vista dins d\u2019una altra sense passar-hi dades addicionals.</li> </ul> </li> </ol>"},{"location":"recursos/examens/07_frameworks_examen.html#seccio-2-preguntes-obertes-practica","title":"Secci\u00f3 2: Preguntes obertes (Pr\u00e0ctica)","text":"<ol> <li> <p>Explica breument com has creat el llistat d'estadis a l'exercici pr\u00e0ctic.</p> </li> <li> <p>Qu\u00e8 fa la ruta <code>/estadis/crear</code> en el projecte, i quina funcionalitat afegeix al llistat d'estadis?</p> </li> <li> <p>Com es pot incloure un fitxer CSS al projecte i fer que s\u2019aplique a una vista concreta?</p> </li> <li> <p>Qu\u00e8 \u00e9s la directiva @include a Blade, i com pots utilitzar-la per fer el teu codi m\u00e9s modular?</p> </li> <li> <p>Qu\u00e8 passa si a la vista Blade intentes accedir a una clau que no existeix en un array? Com pots evitar errors?</p> </li> <li> <p>Qu\u00e8 passa si una ruta definida en el fitxer web.php no troba una vista o controlador associat? Com pots evitar errors en aquests casos?</p> </li> </ol>"},{"location":"recursos/examens/08_dadesLaravel.html","title":"Preguntes Tipus Test - Laravel Dades","text":""},{"location":"recursos/examens/08_dadesLaravel.html#seccio-models-i-orm","title":"Secci\u00f3: Models i ORM","text":"<ol> <li> <p>Quina \u00e9s la relaci\u00f3 un a molts entre models en Laravel?</p> <ul> <li>A) <code>hasOne</code></li> <li>B) <code>hasMany</code></li> <li>C) <code>belongsTo</code></li> <li>D) <code>belongsToMany</code></li> </ul> </li> <li> <p>Com es desactiva l'\u00fas de timestamps en un model?</p> <ul> <li>A) <code>$timestamps = true;</code></li> <li>B) <code>$timestamps = false;</code></li> <li>C) <code>$timestamps = null;</code></li> <li>D) No es pot desactivar.</li> </ul> </li> <li> <p>Quina estructura cont\u00e9 una migraci\u00f3 per crear una taula?</p> <ul> <li>A) <code>up</code> i <code>rollback</code></li> <li>B) <code>start</code> i <code>stop</code></li> <li>C) <code>up</code> i <code>down</code></li> <li>D) <code>create</code> i <code>delete</code></li> </ul> </li> <li> <p>Com s'executen totes les migracions pendents?</p> <ul> <li>A) <code>php artisan migrate:run</code></li> <li>B) <code>php artisan migrate</code></li> <li>C) <code>php artisan migration:execute</code></li> <li>D) <code>php artisan db:migrate</code></li> </ul> </li> <li> <p>En quina carpeta es guarden els seeders?</p> <ul> <li>A) <code>database/migrations</code></li> <li>B) <code>app/Seeders</code></li> <li>C) <code>database/seeders</code></li> <li>D) <code>app/Database/Seeds</code></li> </ul> </li> <li> <p>Com s'executa un seeder espec\u00edfic?</p> <ul> <li>A) <code>php artisan db:seed --class=&lt;NomSeeder&gt;</code></li> <li>B) <code>php artisan db:seed &lt;NomSeeder&gt;</code></li> <li>C) <code>php artisan seed:run --class=&lt;NomSeeder&gt;</code></li> <li>D) <code>php artisan seed:execute &lt;NomSeeder&gt;</code></li> </ul> </li> <li> <p>Quina llibreria es fa servir per generar dades falses en els seeders?</p> <ul> <li>A) Faker</li> <li>B) MockData</li> <li>C) RandomData</li> <li>D) TestData</li> </ul> </li> <li> <p>Quin comandament crea un factory?</p> <ul> <li>A) <code>php artisan make:factory</code></li> <li>B) <code>php artisan create:factory</code></li> <li>C) <code>php artisan factory:make</code></li> <li>D) <code>php artisan generate:factory</code></li> </ul> </li> <li> <p>On es guarden els factories per defecte?</p> <ul> <li>A) <code>app/Factories</code></li> <li>B) <code>database/factories</code></li> <li>C) <code>resources/factories</code></li> <li>D) <code>database/seeders</code></li> </ul> </li> <li> <p>Qu\u00e8 fa el m\u00e8tode <code>definition</code> dins d'un factory?</p> <ul> <li>A) Defineix les relacions entre models.</li> <li>B) Defineix els valors aleatoris dels camps.</li> <li>C) Executa els seeders associats.</li> <li>D) Aplica les migracions pendents.</li> </ul> </li> <li> <p>Com es defineix una relaci\u00f3 molts a molts?</p> <ul> <li>A) <code>hasMany</code></li> <li>B) <code>hasOne</code></li> <li>C) <code>belongsTo</code></li> <li>D) <code>belongsToMany</code></li> </ul> </li> <li> <p>Com es pre-carreguen dades relacionades per evitar m\u00faltiples consultes?</p> <ul> <li>A) Amb el m\u00e8tode <code>load</code>.</li> <li>B) Amb el m\u00e8tode <code>with</code>.</li> <li>C) Amb el m\u00e8tode <code>join</code>.</li> <li>D) Amb el m\u00e8tode <code>preload</code>.</li> </ul> </li> <li> <p>Quina regla de validaci\u00f3 s\u2019utilitza per un camp obligatori?</p> <ul> <li>A) <code>filled</code></li> <li>B) <code>exists</code></li> <li>C) <code>required</code></li> <li>D) <code>nullable</code></li> </ul> </li> <li> <p>Quina regla de validaci\u00f3 comprova si un camp \u00e9s \u00fanic a la taula?</p> <ul> <li>A) <code>unique</code></li> <li>B) <code>distinct</code></li> <li>C) <code>exists</code></li> <li>D) <code>single</code></li> </ul> </li> <li> <p>Quina regla de validaci\u00f3 assegura que un valor \u00e9s un n\u00famero?</p> <ul> <li>A) <code>integer</code></li> <li>B) <code>digits</code></li> <li>C) <code>numeric</code></li> <li>D) <code>number</code></li> </ul> </li> </ol>"},{"location":"recursos/examens/08_dadesLaravel.html#preguntes-obertes","title":"Preguntes obertes","text":"<ul> <li> <ol> <li>Si els formularis permeten pujar una foto de la jugadora, com gestionaries les validacions per assegurar-te que nom\u00e9s s\u2019accepten imatges i que tenen una mida m\u00e0xima determinada?</li> </ol> </li> <li> <ol> <li>Com modularitzaries els components Blade per evitar repetir codi en els formularis de creaci\u00f3 i edici\u00f3? Posa exemples de components que podrien ser \u00fatils.</li> </ol> </li> <li> <ol> <li>Quins camps has validat en els formularis de creaci\u00f3 o edici\u00f3? Com has implementat aquestes validacions al controlador? </li> </ol> </li> <li> <ol> <li>Com has relacionat els camps equip_local i equip_visitant a la taula partits? Per qu\u00e8 has triat aquest disseny i com afecta les consultes?</li> </ol> </li> <li> <ol> <li>Com garantitzaries que les dades generades amb factories siguin realistes i coherents entre si, especialment per als partits? Per exemple, que el local i el visitant no siguin el mateix equip.</li> </ol> </li> </ul>"},{"location":"recursos/examens/08_laraveldades.html","title":"Preguntes Tipus Test - Laravel Dades","text":"<ol> <li> <p>Qu\u00e8 \u00e9s un model en Laravel?</p> <ul> <li>A) Una representaci\u00f3 d\u2019una taula de la base de dades.</li> <li>B) Una vista d'una base de dades.</li> <li>C) Un representaci\u00f3 de la base de dades.</li> <li>D) Una plantilla Blade.</li> </ul> </li> <li> <p>Quina propietat del model indica els camps que es poden omplir mitjan\u00e7ant assignaci\u00f3 massiva?</p> <ul> <li>A) <code>$guarded</code></li> <li>B) <code>$timestamps</code></li> <li>C) <code>$fillable</code></li> <li>D) <code>$fields</code></li> </ul> </li> <li> <p>Per defecte, com s\u2019anomena la propietat que refer\u00e8ncia la clau prim\u00e0ria en els models de Laravel?</p> <ul> <li>A) <code>id</code></li> <li>B) <code>primary</code></li> <li>C) <code>key</code></li> <li>D) <code>primaryKey</code></li> </ul> </li> <li> <p>Com s'executen totes les migracions pendents?</p> <ul> <li>A) <code>php artisan migrate:run</code></li> <li>B) <code>php artisan migrate</code></li> <li>C) <code>php artisan migration:execute</code></li> <li>D) <code>php artisan db:migrate</code></li> </ul> </li> <li> <p>Quin m\u00e8tode es fa servir per desfer els canvis d\u2019una migraci\u00f3?</p> <ul> <li>A) <code>rollback</code></li> <li>B) <code>reset</code></li> <li>C) <code>migrate:rollback</code></li> <li>D) <code>migrate:reset</code></li> </ul> </li> <li> <p>Qu\u00e8 fa el comandament <code>php artisan migrate:fresh</code>?</p> <ul> <li>A) Actualitza totes les migracions.</li> <li>B) Comprova l'estat de les migracions.</li> <li>C) Esborra nom\u00e9s les taules buides.</li> <li>D) Esborra totes les dades de la base de dades i torna a aplicar les migracions.</li> </ul> </li> <li> <p>Qu\u00e8 s\u00f3n els seeders en Laravel?</p> <ul> <li>A) Una eina per gestionar models.</li> <li>B) Scripts per modificar esquemes de la base de dades.</li> <li>C) Funcions per generar dades fict\u00edcies.</li> <li>D) Classes per generar dades inicials o de prova.</li> </ul> </li> <li> <p>Qu\u00e8 fa el comandament <code>php artisan db:seed</code>?</p> <ul> <li>A) Executa tots els seeders configurats a la classe DatabaseSeeder.</li> <li>B) Esborra totes les dades de la base de dades.</li> <li>C) Actualitza els models.</li> <li>D) Aplica nom\u00e9s els seeders pendents.</li> </ul> </li> <li> <p>Qu\u00e8 \u00e9s un factory en Laravel?</p> <ul> <li>A) Una classe per definir regles de validaci\u00f3.</li> <li>B) Una eina que defineix regles per a poder generar dades fict\u00edcies.</li> <li>C) Un component per gestionar vistes.</li> <li>D) Una classe per generar migracions.</li> </ul> </li> <li> <p>Com s\u2019utilitza un factory per crear 5 registres?</p> <ul> <li>A) <code>Model::factory(5)-&gt;create();</code></li> <li>B) <code>Model::factory()-&gt;create(5);</code></li> <li>C) <code>Model::factory()-&gt;count(5)-&gt;create();</code></li> <li>D) <code>Model::factory(5)-&gt;make();</code></li> </ul> </li> <li> <p>Quina relaci\u00f3 permet que un model tinga  molts altres models associats?</p> <ul> <li>A) <code>hasOne</code></li> <li>B) <code>hasMany</code></li> <li>C) <code>belongsTo</code></li> <li>D) <code>belongsToMany</code></li> </ul> </li> <li> <p>Quin m\u00e8tode es fa servir per definir una clau aliena en una relaci\u00f3?</p> <ul> <li>A) <code>foreign</code></li> <li>B) <code>hasForeign</code></li> <li>C) <code>belongsTo</code></li> <li>D) <code>references</code></li> </ul> </li> <li> <p>Quina estructura cont\u00e9 una migraci\u00f3 per crear una taula?</p> <ul> <li>A) <code>up</code> i <code>rollback</code></li> <li>B) <code>start</code> i <code>stop</code></li> <li>C) <code>up</code> i <code>down</code></li> <li>D) <code>create</code> i <code>delete</code></li> </ul> </li> <li> <p>Com s\u2019apliquen regles de validaci\u00f3 a un formulari?</p> <ul> <li>A) <code>$request-&gt;check();</code></li> <li>B) <code>$request-&gt;validate();</code></li> <li>C) <code>$request-&gt;apply();</code></li> <li>D) <code>$request-&gt;rules();</code></li> </ul> </li> <li> <p>Quin m\u00e8tode retorna tots els missatges d\u2019error despr\u00e9s de validar?</p> <ul> <li>A) <code>$errors-&gt;get()</code></li> <li>B) <code>$errors-&gt;messages()</code></li> <li>C) <code>$errors-&gt;all()</code></li> <li>D) <code>$errors-&gt;list()</code></li> </ul> </li> </ol> <p>Preguntes obertes :</p> <ol> <li> <p>Com modularitzaries els components Blade per evitar repetir codi en els formularis de creaci\u00f3 i edici\u00f3? Posa exemples de components que podrien ser \u00fatils.</p> </li> <li> <p>Com has utilitzat laravel per recuperar dades relacionades, com per exemple totes les jugadores d\u2019un equip? Mostra un fragment del teu codi que ho demostre.</p> </li> <li> <p>Has utilitzat alguna t\u00e8cnica o eina espec\u00edfica per assegurar-te que les migracions es creen en el mateix ordre que les relacions entre les taules? Explica-ho.</p> </li> <li> <p>Si afegim un nou camp edat a les jugadores, quins passos espec\u00edfics haurien de fer-se perqu\u00e8 el canvi es reflect\u00eds correctament a totes les parts de l'aplicaci\u00f3?</p> </li> <li> <p>Quines estrat\u00e8gies has utilitzat per mostrar errors als usuaris quan els formularis no s\u00f3n validats o les dades no s\u00f3n desades correctament?</p> </li> </ol>"},{"location":"recursos/examens/09_laravelAvan.html","title":"Examen - Funcionalitats Avan\u00e7ades de Laravel","text":""},{"location":"recursos/examens/09_laravelAvan.html#preguntes-tipus-test","title":"Preguntes Tipus Test","text":"<ol> <li> <p>Quin paquet de Laravel s'utilitza per implementar funcionalitats b\u00e0siques d'autenticaci\u00f3 de manera r\u00e0pida i senzilla? - A) Laravel Jetstream - B) Laravel Passport - C) Laravel Breeze - D) Laravel Sanctum</p> </li> <li> <p>Com es poden assignar rols als usuaris en una aplicaci\u00f3 Laravel? - A) Mitjan\u00e7ant middleware predeterminats - B) Afegint un camp 'rol' a la taula d'usuaris i gestionant la l\u00f2gica corresponent - C) Utilitzant el sistema de cues de Laravel - D) Configurant les rutes en el fitxer <code>web.php</code></p> </li> <li> <p>Quina \u00e9s la funci\u00f3 principal d'un middleware en Laravel? - A) Gestionar les migracions de la base de dades - B) Manipular les sol\u00b7licituds HTTP entrants abans d'arribar al controlador - C) Crear vistes Blade din\u00e0micament - D) Enviar correus electr\u00f2nics autom\u00e0ticament</p> </li> <li> <p>Com es poden mostrar les traduccions en una vista Blade de Laravel? - A) Utilitzant la funci\u00f3 <code>{{ trans('clau') }}</code> - B) Utilitzant la funci\u00f3 <code>{{ __('clau') }}</code> - C) Definint les traduccions directament en les vistes Blade. - D) Utilitzant la funci\u00f3 <code>{{ config('clau') }}</code></p> </li> <li> <p>Quina \u00e9s la finalitat d'un Form Request en Laravel? - A) Gestionar les dades dels formularis d'una vista Blade. - B) Validar i autoritzar les dades d'una sol\u00b7licitud HTTP abans de processar-les en el controlador. - C) Enviar respostes JSON als clients. - D) Crear components d'interf\u00edcie d'usuari reactius sense necessitat de JavaScript.</p> </li> <li> <p>Quin m\u00e8tode s'utilitza per enviar correus electr\u00f2nics en Laravel? - A) <code>Mail::dispatch()</code> - B) <code>Mail::mail()</code> - C) <code>Mail::queue()</code> - D) <code>Mail::send()</code></p> </li> <li> <p>En Laravel, quin \u00e9s el prop\u00f2sit principal d'utilitzar el trait <code>RefreshDatabase</code> en les proves? - A) Millorar el rendiment de les proves evitant l'\u00fas de la base de dades. - B) Automatitzar la creaci\u00f3 de f\u00e0briques de models per a les proves. - C) Restablir l'estat de la base de dades despr\u00e9s de cada prova per assegurar un entorn net. - D) Permetre l'acc\u00e9s a serveis externs durant les proves.</p> </li> <li> <p>Quina \u00e9s la funci\u00f3 de Laravel Livewire? - A) Gestionar les migracions de la base de dades - B) Crear components d'interf\u00edcie d'usuari reactius sense necessitat de JavaScript - C) Enviar correus electr\u00f2nics autom\u00e0ticament - D) Validar i autoritzar les dades d'una sol\u00b7licitud HTTP abans de processar-les en el controlador.</p> </li> <li> <p>Com es pot restringir l'acc\u00e9s a una ruta perqu\u00e8 nom\u00e9s certs usuaris autenticats hi puguen accedir? - A) Definint la restricci\u00f3 en les rutes en el fitxer <code>routes/web.php</code> - B) Implementant la l\u00f2gica de restricci\u00f3 directament en els controladors associats. - C) Utilitzant middleware que verifiquen els permisos de l'usuari. - D) Configurant les opcions de la base de dades</p> </li> <li> <p>Com es poden programar tasques peri\u00f2diques en Laravel, com l'enviament autom\u00e0tic de correus electr\u00f2nics? - A) Utilitzant el sistema de cues de Laravel - B) Configurant el fitxer <code>schedule.php</code> en la carpeta <code>config</code> - C) Definint tasques en el m\u00e8tode <code>schedule</code> de la classe <code>App\\Console\\Kernel</code> i utilitzant el planificador de tasques de Laravel - D) Creant un controlador espec\u00edfic per a tasques programades</p> </li> <li> <p>**En una classe de <code>Form Request</code> de Laravel, quin \u00e9s el prop\u00f2sit principal del m\u00e8tode <code>rules()</code>? - A) Definir les regles de validaci\u00f3 per als camps del formulari. - B) Personalitzar els missatges d'error de validaci\u00f3. - C) Autoritzar l'usuari per a realitzar la sol\u00b7licitud. - D) Establir valors per defecte per als camps del formulari.</p> </li> <li> <p>**En una classe de <code>Form Request</code> de Laravel, quin \u00e9s l'objectiu principal de sobrescriure el m\u00e8tode <code>messages()</code>? - A) Definir les regles de validaci\u00f3 per als camps del formulari. - B) Personalitzar els missatges d'error de validaci\u00f3. - C) Autoritzar l'usuari per a realitzar la sol\u00b7licitud. - D) Configurar els atributs HTML dels elements del formulari.</p> </li> <li> <p>Quin m\u00e8tode s'utilitza per verificar si un usuari est\u00e0 autoritzat a realitzar una acci\u00f3 definida en una pol\u00edtica? - A) <code>$user-&gt;check()</code> - B) <code>$user-&gt;authorize()</code> - C) <code>$user-&gt;can()</code> - D) <code>$user-&gt;validate()</code></p> </li> <li> <p>Quina \u00e9s la funci\u00f3 principal d'una pol\u00edtica (policy) en Laravel? - A) Manipular les sol\u00b7licituds HTTP entrants abans d'arribar al controlador - B) Programa tasques peri\u00f2diques en Laravel. - C) Enviar correus electr\u00f2nics autom\u00e0ticament. - D) Autoritzar accions dels usuaris sobre models espec\u00edfics.</p> </li> <li> <p>\u00bfQuina de les seg\u00fcents opcions \u00e9s correcta per a emmagatzemar un valor en la sessi\u00f3 en Laravel? - A) <code>Session::put('clau', 'valor');</code> - B) <code>session(['clau' =&gt; 'valor']);</code> - C) <code>$request-&gt;session()-&gt;put('clau', 'valor');</code> - D) Totes les anteriors</p> </li> </ol> <p>Preguntes obertes :</p> <ol> <li> <p>Has creat un component Livewire per a mostrar la classificaci\u00f3 dels equips. Descriu els passos seguits per a desenvolupar aquest component i com has gestionat la presentaci\u00f3 de les dades de manera din\u00e0mica.</p> </li> <li> <p>En les vistes, has restringit les operacions per als usuaris no autenticats utilitzant les directives <code>@auth</code> i <code>@endauth</code>. Explica com has aplicat aquestes directives per a ocultar o mostrar elements espec\u00edfics de la interf\u00edcie segons l'estat d'autenticaci\u00f3 de l'usuari.</p> </li> <li> <p>Per a assegurar que nom\u00e9s els usuaris amb rol d'\u00e0rbitre poden modificar els partits, has utilitzat el m\u00e8tode <code>authorize()</code> en el <code>Form Request</code> corresponent. Detalla com has implementat aquesta validaci\u00f3 i com has configurat el middleware de rol per a refor\u00e7ar aquesta restricci\u00f3.</p> </li> <li> <p>Has creat un correu electr\u00f2nic per a enviar a tots els \u00e0rbitres el seu calendari anual de partits. Descriu el proc\u00e9s seguit per a generar i enviar aquest correu, incloent-hi com has obtingut les dades necess\u00e0ries i com has assegurat que cada \u00e0rbitre reba la informaci\u00f3 correcta.</p> </li> <li> <p>En el component de jugadora, has implementat funcionalitats perqu\u00e8 els managers puguen crear, modificar o esborrar les seues jugadores, i que aquestes es mostren correctament en els equips. Explica com has gestionat aquestes operacions i com has assegurat que nom\u00e9s els managers puguen realitzar-les sobre les jugadores dels seus propis equips.</p> </li> </ol>"},{"location":"videos/1.1.html","title":"V\u00eddeo 1: Qu\u00e8 \u00e9s un entorn de desenvolupament web?","text":""},{"location":"videos/1.1.html#escena-1-introduccio","title":"\ud83c\udfac Escena 1: Introducci\u00f3","text":"<p>Visual: Logo del curs / fons modern de tecnologia Narraci\u00f3: Benvinguts al curs de Disseny d'Aplicacions Web en Entorn Servidor. Avui comen\u00e7arem pel principi: qu\u00e8 \u00e9s un entorn de desenvolupament?</p>"},{"location":"videos/1.1.html#escena-2-definicio","title":"\ud83d\udca1 Escena 2: Definici\u00f3","text":"<p>Visual: Icona de programador + ordinador + n\u00favol + s\u00edmbols de codi Text en pantalla: Entorn de desenvolupament = espai per provar i construir aplicacions abans de posar-les en producci\u00f3 Narraci\u00f3: Un entorn de desenvolupament \u00e9s el conjunt de ferramentes que utilitzem per programar, provar i millorar les nostres aplicacions abans que estiguen en l\u00ednia.</p>"},{"location":"videos/1.1.html#escena-3-comparativa-amb-produccio","title":"\ud83d\udd01 Escena 3: Comparativa amb Producci\u00f3","text":"<p>Visual: Dos ordinadors: un amb \u201cdev\u201d i un amb \u201cprod\u201d + icones de p\u00fablic i errors Narraci\u00f3: Treballar en desenvolupament ens permet cometre errors, fer proves i aprendre. A producci\u00f3, el codi ja el veuran els usuaris i ha d\u2019estar polit.</p>"},{"location":"videos/1.1.html#escena-4-eines-utilitzades","title":"\ud83d\udee0\ufe0f Escena 4: Eines utilitzades","text":"<p>Visual: Logos de Visual Studio Code, GitHub, Docker, navegador, terminal Narraci\u00f3: Les ferramentes m\u00e9s comunes s\u00f3n: Visual Studio Code, GitHub per compartir el codi, Docker per crear entorns virtuals, i un navegador per provar.</p>"},{"location":"videos/1.1.html#escena-5-exemple-real","title":"\ud83e\uddea Escena 5: Exemple real","text":"<p>Visual: Animaci\u00f3 de com executar <code>docker compose up</code> i obrir <code>http://localhost/phpinfo.php</code> Narraci\u00f3: Per exemple, esteu veient com engegarem el nostre projecte amb Docker i accedirem a la informaci\u00f3 del nostre servidor PHP.</p>"},{"location":"videos/1.1.html#escena-6-conclusio","title":"\u2705 Escena 6: Conclusi\u00f3","text":"<p>Visual: Icones de seguretat, rapidesa, efici\u00e8ncia Narraci\u00f3: Amb un bon entorn de desenvolupament, treballem m\u00e9s segurs, m\u00e9s r\u00e0pid i amb m\u00e9s organitzaci\u00f3.</p>"},{"location":"videos/1.1.html#escena-7-tancament","title":"\ud83d\udc4b Escena 7: Tancament","text":"<p>Visual: Logo del curs + text \u201cSegueix el v\u00eddeo\u00a02: Instal\u00b7laci\u00f3 de Docker\u201d Narraci\u00f3: Al proper v\u00eddeo, aprendrem a instal\u00b7lar Docker Desktop i posar-lo en marxa pas a pas.</p>"}]}